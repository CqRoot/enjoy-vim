!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
#	plugged/vim-polyglot/indent/dictconf.vim	/^inoremap <buffer> # X#$/;"	m
#	plugged/vim-polyglot/indent/dictdconf.vim	/^inoremap <buffer> # X#$/;"	m
#	plugged/vim-polyglot/indent/ps1.vim	/^inoremap <buffer> # X#$/;"	m
$PERL6_EXCEPTIONS_HANDLER	plugged/ale/ale_linters/perl6/perl6.vim	/^let $PERL6_EXCEPTIONS_HANDLER = 'JSON'$/;"	v
$PYTHONWARNINGS	plugged/vim-polyglot/compiler/python.vim	/^  let $PYTHONWARNINGS="ignore"$/;"	v
$RAKUDO_ERROR_COLOR	plugged/ale/ale_linters/perl6/perl6.vim	/^let $RAKUDO_ERROR_COLOR = 0$/;"	v
$TF_CLI_ARGS_fmt	plugged/vim-polyglot/autoload/terraform.vim	/^let $TF_CLI_ARGS_fmt=''$/;"	v
**`g:translator_default_engines`**	plugged/vim-translator/README.md	/^#### **`g:translator_default_engines`**$/;"	t
**`g:translator_history_enable`**	plugged/vim-translator/README.md	/^#### **`g:translator_history_enable`**$/;"	t
**`g:translator_proxy_url`**	plugged/vim-translator/README.md	/^#### **`g:translator_proxy_url`**$/;"	t
**`g:translator_source_lang`**	plugged/vim-translator/README.md	/^#### **`g:translator_source_lang`**$/;"	t
**`g:translator_target_lang`**	plugged/vim-translator/README.md	/^#### **`g:translator_target_lang`**$/;"	t
**`g:translator_window_borderchars`**	plugged/vim-translator/README.md	/^#### **`g:translator_window_borderchars`**$/;"	t
**`g:translator_window_max_height`**	plugged/vim-translator/README.md	/^#### **`g:translator_window_max_height`**$/;"	t
**`g:translator_window_max_width`**	plugged/vim-translator/README.md	/^#### **`g:translator_window_max_width`**$/;"	t
**`g:translator_window_type`**	plugged/vim-translator/README.md	/^#### **`g:translator_window_type`**$/;"	t
.gsub!(/\\s*?[|]{0,2}=\\s*?/,	plugged/vim-polyglot/autoload/rubycomplete.vim	/^                ln.gsub!(\/\\s*?[|]{0,2}=\\s*?\/, '||=')$/;"	m
0	plugged/onedark.vim/build/.eslintrc.json	/^            "error",$/;"	s	array:rules.indent
0	plugged/onedark.vim/build/.eslintrc.json	/^            "error",$/;"	s	array:rules.linebreak-style
0	plugged/onedark.vim/build/.eslintrc.json	/^            "error",$/;"	s	array:rules.quotes
0	plugged/onedark.vim/build/.eslintrc.json	/^            "error",$/;"	s	array:rules.semi
0	plugged/onedark.vim/build/.eslintrc.json	/^            "off"$/;"	s	array:rules.no-console
1	plugged/onedark.vim/build/.eslintrc.json	/^            "never"$/;"	s	array:rules.semi
1	plugged/onedark.vim/build/.eslintrc.json	/^            "single"$/;"	s	array:rules.quotes
1	plugged/onedark.vim/build/.eslintrc.json	/^            "tab"$/;"	s	array:rules.indent
1	plugged/onedark.vim/build/.eslintrc.json	/^            "unix"$/;"	s	array:rules.linebreak-style
1. Supported Languages and Tools	plugged/ale/README.md	/^## 1. Supported Languages and Tools$/;"	s
2. Usage	plugged/ale/README.md	/^## 2. Usage$/;"	s
2.1.17	plugged/nerdcommenter/CHANGELOG.md	/^### 2.1.17$/;"	S
2.1.18	plugged/nerdcommenter/CHANGELOG.md	/^### 2.1.18$/;"	S
2.2.0	plugged/nerdcommenter/CHANGELOG.md	/^### 2.2.0$/;"	S
2.2.1	plugged/nerdcommenter/CHANGELOG.md	/^### 2.2.1$/;"	S
2.2.2	plugged/nerdcommenter/CHANGELOG.md	/^### 2.2.2$/;"	S
2.3.0	plugged/nerdcommenter/CHANGELOG.md	/^### 2.3.0$/;"	S
2.4.0	plugged/nerdcommenter/CHANGELOG.md	/^### 2.4.0$/;"	S
2.5.0	plugged/nerdcommenter/CHANGELOG.md	/^### 2.5.0$/;"	S
2.5.1	plugged/nerdcommenter/CHANGELOG.md	/^### 2.5.1$/;"	S
2.5.2	plugged/nerdcommenter/CHANGELOG.md	/^### 2.5.2$/;"	S
2.i Linting	plugged/ale/README.md	/^### 2.i Linting$/;"	S
2.ii Fixing	plugged/ale/README.md	/^### 2.ii Fixing$/;"	S
2.iii Completion	plugged/ale/README.md	/^### 2.iii Completion$/;"	S
2.iv Go To Definition	plugged/ale/README.md	/^### 2.iv Go To Definition$/;"	S
2.v Find References	plugged/ale/README.md	/^### 2.v Find References$/;"	S
2.vi Hovering	plugged/ale/README.md	/^### 2.vi Hovering$/;"	S
2.vii Symbol Search	plugged/ale/README.md	/^### 2.vii Symbol Search$/;"	S
2.viii Refactoring: Rename, Actions	plugged/ale/README.md	/^### 2.viii Refactoring: Rename, Actions$/;"	S
3. Installation	plugged/ale/README.md	/^## 3. Installation$/;"	s
3.0.0	plugged/nerdtree/CHANGELOG.md	/^#### 3.0.0$/;"	t
3.0.1	plugged/nerdtree/CHANGELOG.md	/^#### 3.0.1$/;"	t
3.1.0	plugged/nerdtree/CHANGELOG.md	/^#### 3.1.0$/;"	t
3.1.1	plugged/nerdtree/CHANGELOG.md	/^#### 3.1.1$/;"	t
3.i. Installation with Vim package management	plugged/ale/README.md	/^### 3.i. Installation with Vim package management$/;"	S
3.ii. Installation with Pathogen	plugged/ale/README.md	/^### 3.ii. Installation with Pathogen$/;"	S
3.iii. Installation with Vundle	plugged/ale/README.md	/^### 3.iii. Installation with Vundle$/;"	S
3.iiii. Installation with Vim-Plug	plugged/ale/README.md	/^### 3.iiii. Installation with Vim-Plug$/;"	S
4. Contributing	plugged/ale/README.md	/^## 4. Contributing$/;"	s
4.0.0	plugged/nerdtree/CHANGELOG.md	/^#### 4.0.0$/;"	t
4.1.0	plugged/nerdtree/CHANGELOG.md	/^#### 4.1.0$/;"	t
4.2.0	plugged/nerdtree/CHANGELOG.md	/^#### 4.2.0$/;"	t
5. FAQ	plugged/ale/README.md	/^## 5. FAQ$/;"	s
5.0.0	plugged/nerdtree/CHANGELOG.md	/^#### 5.0.0$/;"	t
5.1	plugged/nerdtree/CHANGELOG.md	/^#### 5.1$/;"	t
5.2	plugged/nerdtree/CHANGELOG.md	/^#### 5.2$/;"	t
5.3	plugged/nerdtree/CHANGELOG.md	/^#### 5.3$/;"	t
5.i. How do I disable particular linters?	plugged/ale/README.md	/^### 5.i. How do I disable particular linters?$/;"	S
5.ii. How can I see what ALE has configured for the current file?	plugged/ale/README.md	/^### 5.ii. How can I see what ALE has configured for the current file?$/;"	S
5.iii. How can I use ALE and coc.nvim together?	plugged/ale/README.md	/^### 5.iii. How can I use ALE and coc.nvim together?$/;"	S
5.iv. How can I keep the sign gutter open?	plugged/ale/README.md	/^### 5.iv. How can I keep the sign gutter open?$/;"	S
5.ix. How can I change the format for echo messages?	plugged/ale/README.md	/^### 5.ix. How can I change the format for echo messages?$/;"	S
5.v. How can I change the signs ALE uses?	plugged/ale/README.md	/^### 5.v. How can I change the signs ALE uses?$/;"	S
5.vi. How can I change or disable the highlights ALE uses?	plugged/ale/README.md	/^### 5.vi. How can I change or disable the highlights ALE uses?$/;"	S
5.vii. How can I show errors or warnings in my statusline?	plugged/ale/README.md	/^### 5.vii. How can I show errors or warnings in my statusline?$/;"	S
5.viii. How can I show errors or warnings in my lightline?	plugged/ale/README.md	/^### 5.viii. How can I show errors or warnings in my lightline?$/;"	S
5.x. How can I execute some code when ALE starts or stops linting?	plugged/ale/README.md	/^### 5.x. How can I execute some code when ALE starts or stops linting?$/;"	S
5.xi. How can I navigate between errors quickly?	plugged/ale/README.md	/^### 5.xi. How can I navigate between errors quickly?$/;"	S
5.xii. How can I run linters only when I save files?	plugged/ale/README.md	/^### 5.xii. How can I run linters only when I save files?$/;"	S
5.xiii. How can I use the quickfix list instead of the loclist?	plugged/ale/README.md	/^### 5.xiii. How can I use the quickfix list instead of the loclist?$/;"	S
5.xiv. How can I check JSX files with both stylelint and eslint?	plugged/ale/README.md	/^### 5.xiv. How can I check JSX files with both stylelint and eslint?$/;"	S
5.xix. How can I configure the height of the list in which ALE displays errors?	plugged/ale/README.md	/^### 5.xix. How can I configure the height of the list in which ALE displays errors?$/;"	S
5.xv. How can I check Vue files with ESLint?	plugged/ale/README.md	/^### 5.xv. How can I check Vue files with ESLint?$/;"	S
5.xvi. Will this plugin eat all of my laptop battery power?	plugged/ale/README.md	/^### 5.xvi. Will this plugin eat all of my laptop battery power?$/;"	S
5.xvii. How can I configure my C or C++ project?	plugged/ale/README.md	/^### 5.xvii. How can I configure my C or C++ project?$/;"	S
5.xviii. How can I configure ALE differently for different buffers?	plugged/ale/README.md	/^### 5.xviii. How can I configure ALE differently for different buffers?$/;"	S
5.xx. How can I run linters or fixers via Docker or a VM?	plugged/ale/README.md	/^### 5.xx. How can I run linters or fixers via Docker or a VM?$/;"	S
6.0	plugged/nerdtree/CHANGELOG.md	/^#### 6.0$/;"	t
6.1	plugged/nerdtree/CHANGELOG.md	/^#### 6.1$/;"	t
6.2	plugged/nerdtree/CHANGELOG.md	/^#### 6.2$/;"	t
6.3	plugged/nerdtree/CHANGELOG.md	/^#### 6.3$/;"	t
6.4	plugged/nerdtree/CHANGELOG.md	/^#### 6.4$/;"	t
6.5	plugged/nerdtree/CHANGELOG.md	/^#### 6.5$/;"	t
6.6	plugged/nerdtree/CHANGELOG.md	/^#### 6.6$/;"	t
6.7	plugged/nerdtree/CHANGELOG.md	/^#### 6.7$/;"	t
6.8	plugged/nerdtree/CHANGELOG.md	/^#### 6.8$/;"	t
6.9	plugged/nerdtree/CHANGELOG.md	/^#### 6.9$/;"	t
:ALEInfo	plugged/ale/.github/ISSUE_TEMPLATE/report-a-bug.md	/^### :ALEInfo$/;"	S
<	plugged/vim-polyglot/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> < :set opfunc=<SID>DecreaseFunc<CR>g@$/;"	m
<	plugged/vim-polyglot/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> < :call CobolIndentBlock(-v:count1)<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py b:Lf_AnyExplManager."accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "bufTagExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "bufExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "colorschemeExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Command.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "commandExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "fileExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Filetype.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "filetypeExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "functionExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "gtagsExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "helpExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "lineExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "mruExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "qfloclistExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "rgExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Self.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "selfExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "tagExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/LeaderF/autoload/leaderf/Window.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse> :exec g:Lf_py "windowExplManager.accept()"<CR>$/;"	m
<2-LeftMouse>	plugged/tagbar/autoload/tagbar.vim	/^    inoremap <script> <silent> <buffer> <2-LeftMouse>$/;"	m
<2-LeftMouse>	plugged/tagbar/autoload/tagbar.vim	/^    nnoremap <script> <silent> <buffer> <2-LeftMouse>$/;"	m
<<	plugged/vim-polyglot/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> << :call CobolIndentBlock(-1)<CR>$/;"	m
<BS>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <BS> <c-g>"_c$/;"	m
<C-A>	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-A> :<C-U><C-R>=v:count1<CR>Cycle<CR>$/;"	m
<C-D>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-D> <C-R>=<SID>DecreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth/;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "bufTagExplManager._toDownInPopup()"</;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "bufExplManager._toDownInPopup()"<CR>$/;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/File.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "fileExplManager._toDownInPopup()"<CR/;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/Function.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "functionExplManager._toDownInPopup()/;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "gtagsExplManager._toDownInPopup()"<C/;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/Line.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "lineExplManager._toDownInPopup()"<CR/;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "mruExplManager._toDownInPopup()"<CR>$/;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "qfloclistExplManager._toDownInPopup(/;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "rgExplManager._toDownInPopup()"<CR>$/;"	m
<C-Down>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^        nnoremap <buffer> <silent> <C-Down>  :exec g:Lf_py "tagExplManager._toDownInPopup()"<CR>$/;"	m
<C-I>	plugged/LeaderF/autoload/leaderf/Command.vim	/^    nnoremap <buffer> <silent> <C-I>         :exec g:Lf_pI "commandExplManager.input()"<CR>$/;"	m
<C-I>	plugged/LeaderF/autoload/leaderf/History.vim	/^    nnoremap <buffer> <silent> <C-I>         :exec g:Lf_py "historyExplManager.input()"<CR>$/;"	m
<C-N>	plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> <C-N> :<C-U>execute <SID>NextItem(v:count1)<CR>$/;"	m
<C-N>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-N> <C-R>=ada#Completion("\\<lt>C-N>")<cr>$/;"	m
<C-P>	plugged/vim-fugitive/autoload/fugitive.vim	/^          nnoremap <buffer> <silent> <C-P> :<C-U>execute <SID>PreviousItem(v:count1)<CR>$/;"	m
<C-P>	plugged/vim-fugitive/autoload/fugitive.vim	/^          nnoremap <buffer> <silent> <C-P> :<C-U>execute line('.') == 1 ? 'CtrlP ' . fnameescape/;"	m
<C-P>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-P> <C-R>=ada#Completion("\\<lt>C-P>")<cr>$/;"	m
<C-T>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-T> <C-R>=<SID>IncreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth/;"	m
<C-T>	plugged/vim-polyglot/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-T> :if len(b:pdf_tagstack) > 0 <Bar> call setpos('.',remove(b:pdf_t/;"	m
<C-U>	plugged/vim-polyglot/plugin/polyglot.vim	/^    inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "bufTagExplManager._toUpInPopup()"<CR/;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "bufExplManager._toUpInPopup()"<CR>$/;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/File.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "fileExplManager._toUpInPopup()"<CR>$/;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/Function.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "functionExplManager._toUpInPopup()"</;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "gtagsExplManager._toUpInPopup()"<CR>$/;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/Line.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "lineExplManager._toUpInPopup()"<CR>$/;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "mruExplManager._toUpInPopup()"<CR>$/;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "qfloclistExplManager._toUpInPopup()"/;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "rgExplManager._toUpInPopup()"<CR>$/;"	m
<C-Up>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^        nnoremap <buffer> <silent> <C-Up>    :exec g:Lf_py "tagExplManager._toUpInPopup()"<CR>$/;"	m
<C-W>	plugged/vim-polyglot/plugin/polyglot.vim	/^    inoremap <C-W> <C-G>u<C-W>$/;"	m
<C-W><C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<SID>foldo/;"	m
<C-W>d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<SID>foldo/;"	m
<C-X>	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-X> :<C-U><C-R>=v:count1<CR>Cycle!<CR>$/;"	m
<C-X><C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-X><C-]> <C-R>=<SID>ada#Completion("\\<lt>C-X>\\<lt>C-]>")<cr/;"	m
<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#Jump_Tag ('', 'tjump')<cr>$/;"	m
<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#List_Tag ()<cr>$/;"	m
<C-]>	plugged/vim-polyglot/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-]> :call <SID>Tag()<CR>$/;"	m
<C-_>	settings/comment.vim	/^nmap <C-_> <plug>NERDCommenterToggle$/;"	m
<C-_>	settings/comment.vim	/^xmap <C-_> <plug>NERDCommenterToggle$/;"	m
<C-a>	keymap.vim	/^cnoremap <C-a> <Home>$/;"	m
<C-a>	keymap.vim	/^inoremap <C-a> <Home>$/;"	m
<C-b>	keymap.vim	/^cnoremap <C-b> <Left>$/;"	m
<C-b>	keymap.vim	/^inoremap <C-b> <Left>$/;"	m
<C-c>	settings/complete.vim	/^inoremap <C-c> <ESC>$/;"	m
<C-e>	keymap.vim	/^cnoremap <C-e> <End>$/;"	m
<C-e>	keymap.vim	/^inoremap <C-e> <End>$/;"	m
<C-f>	keymap.vim	/^cnoremap <C-f> <Right>$/;"	m
<C-f>	keymap.vim	/^inoremap <C-f> <Right>$/;"	m
<C-h>	settings/menu.vim	/^nmap <C-h> :call OpenGlobalList()<CR>$/;"	m
<C-n>	keymap.vim	/^cnoremap <C-n> <Down>$/;"	m
<C-n>	keymap.vim	/^inoremap <C-n> <Down>$/;"	m
<C-p>	keymap.vim	/^cnoremap <C-p> <Up>$/;"	m
<C-p>	keymap.vim	/^inoremap <C-p> <Up>$/;"	m
<C-q>	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-q> <NOP>$/;"	m
<C-s>	settings/menu.vim	/^nmap <C-s> :call OpenGlobalMenu()<CR>$/;"	m
<C-v>	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <C-v> <NOP>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py b:Lf_AnyExplManager."accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "bufTagExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "bufExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "colorschemeExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Command.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "commandExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "fileExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Filetype.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "filetypeExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "functionExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "gtagsExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "helpExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/History.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "historyExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "lineExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "mruExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "qfloclistExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "rgExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Self.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "selfExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "tagExplManager.accept()"<CR>$/;"	m
<CR>	plugged/LeaderF/autoload/leaderf/Window.vim	/^    nnoremap <buffer> <silent> <CR>          :exec g:Lf_py "windowExplManager.accept()"<CR>$/;"	m
<CR>	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <CR> :call ale#preview#OpenSelection()<CR>$/;"	m
<CR>	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  imap <buffer> <CR> <Plug>L2UAutoSub$/;"	m
<CR>	plugged/vista.vim/autoload/vista/ftplugin.vim	/^    nnoremap <buffer> <silent> <CR> :<c-u>call vista#cursor#FoldOrJump()<CR>$/;"	m
<CR>	settings/complete.vim	/^inoremap <silent> <expr> <CR> ncm2_ultisnips#expand_or("\\<CR>", 'n')$/;"	m
<DEL>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <DEL> <c-g>"_c$/;"	m
<Down>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> <Down>        <Down>:exec g:Lf_py "bufTagExplManager._previewResu/;"	m
<Down>	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> <Down>        <Down>:exec g:Lf_py "colorschemeExplManager._previe/;"	m
<Down>	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> <Down>        <Down>:exec g:Lf_py "fileExplManager._previewResult/;"	m
<Down>	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> <Down>        <Down>:exec g:Lf_py "functionExplManager._previewRe/;"	m
<Down>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> <Down>        <Down>:exec g:Lf_py "gtagsExplManager._previewResul/;"	m
<Down>	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> <Down>        <Down>:exec g:Lf_py "lineExplManager._previewResult/;"	m
<Down>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> <Down>        <Down>:exec g:Lf_py "mruExplManager._previewResult(/;"	m
<Down>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> <Down>        <Down>:exec g:Lf_py "rgExplManager._previewResult(F/;"	m
<Down>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> <Down>        <Down>:exec g:Lf_py "tagExplManager._previewResult(/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "bufTagExplManager._closePreviewPopup/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "bufExplManager._closePreviewPopup()"/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/File.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "fileExplManager._closePreviewPopup()/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/Function.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "functionExplManager._closePreviewPop/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "gtagsExplManager._closePreviewPopup(/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/Line.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "lineExplManager._closePreviewPopup()/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "mruExplManager._closePreviewPopup()"/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "qfloclistExplManager._closePreviewPo/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> <Esc>         :exec g:Lf_py "qfloclistExplManager.quit()"<CR>$/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "rgExplManager._closePreviewPopup()"</;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^        nnoremap <buffer> <silent> <Esc>     :exec g:Lf_py "tagExplManager._closePreviewPopup()"/;"	m
<Esc>	plugged/LeaderF/autoload/leaderf/Window.vim	/^    nnoremap <buffer> <silent> <Esc>         :exec g:Lf_py "windowExplManager.quit()"<CR>$/;"	m
<F10>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^map <buffer> <F10> :emenu <C-Z>$/;"	m
<F12>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^map <buffer> <F12> :g!\/%.*\/normal 0i%<Return>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py b:Lf_AnyExplManager."toggleHelp()"<CR/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "bufTagExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "bufExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "colorschemeExplManager.toggleHelp()"/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Command.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "commandExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "fileExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Filetype.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "filetypeExplManager.toggleHelp()"<CR/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "functionExplManager.toggleHelp()"<CR/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "gtagsExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "helpExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/History.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "historyExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "lineExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "mruExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "qfloclistExplManager.toggleHelp()"<C/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "rgExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Self.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "selfExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "tagExplManager.toggleHelp()"<CR>$/;"	m
<F1>	plugged/LeaderF/autoload/leaderf/Window.vim	/^    nnoremap <buffer> <silent> <F1>          :exec g:Lf_py "windowExplManager.toggleHelp()"<CR>$/;"	m
<F4>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^map <buffer> <F4> :w<Return>:se makeprg=lilypond\\ \\"%<\\"<Return>:make<Return>:!timidity "%<.m/;"	m
<F5>	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> <F5>          :exec g:Lf_py "fileExplManager.refresh()"<CR>$/;"	m
<F5>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> <F5>          :exec g:Lf_py "tagExplManager.refresh()"<CR>$/;"	m
<F5>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^map <buffer> <F5> :w<Return>:se makeprg=lilypond\\ \\"%<\\"<Return>:make<Return>$/;"	m
<F6>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^map <buffer> <F6> :!gv --watch "%<.ps" &<Return>$/;"	m
<F7>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^map <buffer> <F7> :cp<Return>$/;"	m
<F8>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^map <buffer> <F8> :cn<Return>$/;"	m
<F9>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^map <buffer> <F9> :w<Return>:se makeprg=make\\ -k<Return>:make<Return>$/;"	m
<Leader>bd	plugged/bclose.vim/plugin/bclose.vim	/^     nnoremap <silent> <Leader>bd :Bclose<CR>$/;"	m
<Leader>fr	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fr :FufFile <c-r>=scala#GetRootDirForFuzzyFinder('%:p:h/;"	m
<Leader>fs	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fs :FufFile <c-r>=scala#GetMainDirForFuzzyFinder('%:p:h/;"	m
<Leader>ft	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>ft :FufFile <c-r>=scala#GetTestDirForFuzzyFinder('%:p:h/;"	m
<Leader>rf	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rf :TextileRenderFile<CR>$/;"	m
<Leader>rp	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rp :TextilePreview<CR>$/;"	m
<Leader>rt	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rt :TextileRenderTab<CR>$/;"	m
<Leader>w	plug.vim	/^    nmap <silent> <Leader>w <Plug>TranslateW$/;"	m
<Leader>w	plug.vim	/^    vmap <silent> <Leader>w <Plug>TranslateWV$/;"	m
<LeftRelease>	plugged/tagbar/autoload/tagbar.vim	/^    inoremap <script> <silent> <buffer> <LeftRelease>$/;"	m
<LeftRelease>	plugged/tagbar/autoload/tagbar.vim	/^    nnoremap <script> <silent> <buffer> <LeftRelease>$/;"	m
<LocalLeader><LocalLeader>	plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> <LocalLeader><LocalLeader> $/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    xmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>S <Plug>OCamlSwitchNewWin$/;"	m
<LocalLeader>a	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>a 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTE/;"	m
<LocalLeader>b	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>b 0:call IdrisAddClause(0)<ENTER>$/;"	m
<LocalLeader>b	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>b 0:call IdrisAddClause(0)<ENTER>$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>c :call IdrisCaseSplit()<ENTER>$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>c :call IdrisCaseSplit()<ENTER>$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    xmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/spec.vim	/^		map <buffer> <LocalLeader>c <Plug>SpecChangelog$/;"	m
<LocalLeader>d	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>d 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTE/;"	m
<LocalLeader>d	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>d 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTE/;"	m
<LocalLeader>e	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>e :call IdrisEval()<ENTER>$/;"	m
<LocalLeader>e	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>e :call IdrisEval()<ENTER>$/;"	m
<LocalLeader>f	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>f :call IdrisRefine()<ENTER>$/;"	m
<LocalLeader>f	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>f :call IdrisRefine()<ENTER>$/;"	m
<LocalLeader>g	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>g :call IdrisGenerateDef()<ENTER>$/;"	m
<LocalLeader>h	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>h :call IdrisShowDoc()<ENTER>$/;"	m
<LocalLeader>h	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>h :call IdrisShowDoc()<ENTER>$/;"	m
<LocalLeader>i	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>i 0:call IdrisResponseWin()<ENTER>$/;"	m
<LocalLeader>i	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>i 0:call IdrisResponseWin()<ENTER>$/;"	m
<LocalLeader>l	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>l :call IdrisMakeLemma()<ENTER>$/;"	m
<LocalLeader>l	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>l :call IdrisMakeLemma()<ENTER>$/;"	m
<LocalLeader>m	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>m :call IdrisAddMissing()<ENTER>$/;"	m
<LocalLeader>m	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>m :call IdrisAddMissing()<ENTER>$/;"	m
<LocalLeader>mc	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>mc :call IdrisMakeCase()<ENTER>$/;"	m
<LocalLeader>mc	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>mc :call IdrisMakeCase()<ENTER>$/;"	m
<LocalLeader>md	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>md 0:call search(":")<ENTER>b:call IdrisAddClause(1)<ENT/;"	m
<LocalLeader>md	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>md 0:call search(":")<ENTER>b:call IdrisAddClause(1)<ENT/;"	m
<LocalLeader>o	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>o :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>o	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>o :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>p	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>p :call IdrisProofSearch(1)<ENTER>$/;"	m
<LocalLeader>p	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>p :call IdrisProofSearch(1)<ENTER>$/;"	m
<LocalLeader>q	plugged/vim-polyglot/ftplugin/mail.vim	/^    nmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>q	plugged/vim-polyglot/ftplugin/mail.vim	/^    vmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>r	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>r :call IdrisReload(0)<ENTER>$/;"	m
<LocalLeader>r	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>r :call IdrisReload(0)<ENTER>$/;"	m
<LocalLeader>s	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>s :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>s	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>s <Plug>OCamlSwitchEdit$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>t :call IdrisShowType()<ENTER>$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>t :call IdrisShowType()<ENTER>$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
<LocalLeader>w	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>w 0:call IdrisMakeWith()<ENTER>$/;"	m
<LocalLeader>w	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>w 0:call IdrisMakeWith()<ENTER>$/;"	m
<M-b>	keymap.vim	/^cnoremap <M-b> <S-Left>$/;"	m
<M-b>	keymap.vim	/^inoremap <M-b> <S-Left>$/;"	m
<M-f>	keymap.vim	/^cnoremap <M-f> <S-Right>$/;"	m
<M-f>	keymap.vim	/^inoremap <M-f> <S-Right>$/;"	m
<PageDown>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> <PageDown>    <PageDown>:exec g:Lf_py "bufTagExplManager._preview/;"	m
<PageDown>	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> <PageDown>    <PageDown>:exec g:Lf_py "colorschemeExplManager._pr/;"	m
<PageDown>	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> <PageDown>    <PageDown>:exec g:Lf_py "fileExplManager._previewRe/;"	m
<PageDown>	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> <PageDown>    <PageDown>:exec g:Lf_py "functionExplManager._previ/;"	m
<PageDown>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> <PageDown>    <PageDown>:exec g:Lf_py "gtagsExplManager._previewR/;"	m
<PageDown>	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> <PageDown>    <PageDown>:exec g:Lf_py "lineExplManager._previewRe/;"	m
<PageDown>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> <PageDown>    <PageDown>:exec g:Lf_py "mruExplManager._previewRes/;"	m
<PageDown>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> <PageDown>    <PageDown>:exec g:Lf_py "rgExplManager._previewResu/;"	m
<PageDown>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> <PageDown>    <PageDown>:exec g:Lf_py "tagExplManager._previewRes/;"	m
<PageUp>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> <PageUp>      <PageUp>:exec g:Lf_py "bufTagExplManager._previewRe/;"	m
<PageUp>	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> <PageUp>      <PageUp>:exec g:Lf_py "colorschemeExplManager._prev/;"	m
<PageUp>	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> <PageUp>      <PageUp>:exec g:Lf_py "fileExplManager._previewResu/;"	m
<PageUp>	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> <PageUp>      <PageUp>:exec g:Lf_py "functionExplManager._preview/;"	m
<PageUp>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> <PageUp>      <PageUp>:exec g:Lf_py "gtagsExplManager._previewRes/;"	m
<PageUp>	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> <PageUp>      <PageUp>:exec g:Lf_py "lineExplManager._previewResu/;"	m
<PageUp>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> <PageUp>      <PageUp>:exec g:Lf_py "mruExplManager._previewResul/;"	m
<PageUp>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> <PageUp>      <PageUp>:exec g:Lf_py "rgExplManager._previewResult/;"	m
<PageUp>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> <PageUp>      <PageUp>:exec g:Lf_py "tagExplManager._previewResul/;"	m
<Plug>(JuliaDocPrompt)	plugged/vim-polyglot/ftplugin/julia.vim	/^nnoremap <silent><buffer> <Plug>(JuliaDocPrompt) :<C-u>call julia#doc#prompt()<CR>$/;"	m
<Plug>(JuliaDocPrompt)	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^nnoremap <silent><buffer> <Plug>(JuliaDocPrompt) :<C-u>call julia#doc#prompt()<CR>$/;"	m
<Plug>(ale_code_action)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_code_action) :ALECodeAction<Return>$/;"	m
<Plug>(ale_complete)	plugged/ale/plugin/ale.vim	/^inoremap <silent> <Plug>(ale_complete) <C-\\><C-O>:ALEComplete<Return>$/;"	m
<Plug>(ale_detail)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_detail) :ALEDetail<Return>$/;"	m
<Plug>(ale_disable)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable) :ALEDisable<Return>$/;"	m
<Plug>(ale_disable_buffer)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_disable_buffer) :ALEDisableBuffer<Return>$/;"	m
<Plug>(ale_documentation)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_documentation) :ALEDocumentation<Return>$/;"	m
<Plug>(ale_enable)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable) :ALEEnable<Return>$/;"	m
<Plug>(ale_enable_buffer)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_enable_buffer) :ALEEnableBuffer<Return>$/;"	m
<Plug>(ale_find_references)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_find_references) :ALEFindReferences<Return>$/;"	m
<Plug>(ale_first)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_first) :ALEFirst<Return>$/;"	m
<Plug>(ale_fix)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_fix) :ALEFix<Return>$/;"	m
<Plug>(ale_go_to_definition)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition) :ALEGoToDefinition<Return>$/;"	m
<Plug>(ale_go_to_definition_in_split)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_split) :ALEGoToDefinition -split<Return>$/;"	m
<Plug>(ale_go_to_definition_in_tab)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_tab) :ALEGoToDefinition -tab<Return>$/;"	m
<Plug>(ale_go_to_definition_in_vsplit)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_definition_in_vsplit) :ALEGoToDefinition -vsplit<Return>$/;"	m
<Plug>(ale_go_to_type_definition)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition) :ALEGoToTypeDefinition<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_split)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_split) :ALEGoToTypeDefinition -split<Retur/;"	m
<Plug>(ale_go_to_type_definition_in_tab)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_tab) :ALEGoToTypeDefinition -tab<Return>$/;"	m
<Plug>(ale_go_to_type_definition_in_vsplit)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_go_to_type_definition_in_vsplit) :ALEGoToTypeDefinitionIn -vsplit<R/;"	m
<Plug>(ale_hover)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_hover) :ALEHover<Return>$/;"	m
<Plug>(ale_import)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_import) :ALEImport<Return>$/;"	m
<Plug>(ale_last)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_last) :ALELast<Return>$/;"	m
<Plug>(ale_lint)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_lint) :ALELint<Return>$/;"	m
<Plug>(ale_next)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next) :ALENext<Return>$/;"	m
<Plug>(ale_next_error)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_error) :ALENext -error<Return>$/;"	m
<Plug>(ale_next_warning)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_warning) :ALENext -warning<Return>$/;"	m
<Plug>(ale_next_wrap)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap) :ALENextWrap<Return>$/;"	m
<Plug>(ale_next_wrap_error)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_error) :ALENext -wrap -error<Return>$/;"	m
<Plug>(ale_next_wrap_warning)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_next_wrap_warning) :ALENext -wrap -warning<Return>$/;"	m
<Plug>(ale_previous)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous) :ALEPrevious<Return>$/;"	m
<Plug>(ale_previous_error)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_error) :ALEPrevious -error<Return>$/;"	m
<Plug>(ale_previous_warning)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_warning) :ALEPrevious -warning<Return>$/;"	m
<Plug>(ale_previous_wrap)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap) :ALEPreviousWrap<Return>$/;"	m
<Plug>(ale_previous_wrap_error)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_error) :ALEPrevious -wrap -error<Return>$/;"	m
<Plug>(ale_previous_wrap_warning)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_previous_wrap_warning) :ALEPrevious -wrap -warning<Return>$/;"	m
<Plug>(ale_rename)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_rename) :ALERename<Return>$/;"	m
<Plug>(ale_repeat_selection)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_repeat_selection) :ALERepeatSelection<Return>$/;"	m
<Plug>(ale_reset)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset) :ALEReset<Return>$/;"	m
<Plug>(ale_reset_buffer)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_reset_buffer) :ALEResetBuffer<Return>$/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^cnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^inoremap <silent> <Plug>(ale_show_completion_menu) <C-x><C-o><C-p>$/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^nnoremap <silent> <Plug>(ale_show_completion_menu) :call ale#completion#RestoreCompletionOptions/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^onoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_show_completion_menu)	plugged/ale/autoload/ale/completion.vim	/^vnoremap <silent> <Plug>(ale_show_completion_menu) <Nop>$/;"	m
<Plug>(ale_toggle)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle) :ALEToggle<Return>$/;"	m
<Plug>(ale_toggle_buffer)	plugged/ale/plugin/ale.vim	/^nnoremap <silent> <Plug>(ale_toggle_buffer) :ALEToggleBuffer<Return>$/;"	m
<Plug>(crystal-format)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-format)             :<C-u>CrystalFormat<CR>$/;"	m
<Plug>(crystal-jump-to-definition)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-jump-to-definition) :<C-u>CrystalDef<CR>$/;"	m
<Plug>(crystal-show-context)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-show-context)       :<C-u>CrystalContext<CR>$/;"	m
<Plug>(crystal-spec-run-all)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-all)       :<C-u>CrystalSpecRunAll<CR>$/;"	m
<Plug>(crystal-spec-run-current)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-current)   :<C-u>CrystalSpecRunCurrent<CR>$/;"	m
<Plug>(crystal-spec-switch)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-switch)        :<C-u>CrystalSpecSwitch<CR>$/;"	m
<Plug>(llvm-goto-definition)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-goto-definition) :<C-u>call <SID>goto_definition()<CR>$/;"	m
<Plug>(llvm-move-block-next)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-move-block-next) :<C-u>call <SID>move_to_following_block()<CR>$/;"	m
<Plug>(llvm-move-block-prev)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-move-block-prev) :<C-u>call <SID>move_to_pred_block()<CR>$/;"	m
<Plug>(llvm-next-section-begin)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-next-section-begin) :<C-u>call <SID>next_section(1)<CR>$/;"	m
<Plug>(llvm-next-section-end)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-next-section-end) :<C-u>call <SID>next_section(0)<CR>$/;"	m
<Plug>(llvm-prev-section-begin)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-prev-section-begin) :<C-u>call <SID>prev_section(1)<CR>$/;"	m
<Plug>(llvm-prev-section-end)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-prev-section-end) :<C-u>call <SID>prev_section(0)<CR>$/;"	m
<Plug>(ncm2_auto_trigger)	plugged/ncm2/autoload/ncm2.vim	/^inoremap <silent> <Plug>(ncm2_auto_trigger)      <c-r>=ncm2#auto_trigger()<cr>$/;"	m
<Plug>(ncm2_c_e)	plugged/ncm2/autoload/ncm2.vim	/^inoremap <silent> <expr> <Plug>(ncm2_c_e) (pumvisible() ? "\\<c-e>" : '')$/;"	m
<Plug>(ncm2_manual_trigger)	plugged/ncm2/autoload/ncm2.vim	/^inoremap <silent> <Plug>(ncm2_manual_trigger)    <c-r>=ncm2#manual_trigger()<cr>$/;"	m
<Plug>(ncm2_skip_auto_trigger)	plugged/ncm2/autoload/ncm2.vim	/^inoremap <silent> <Plug>(ncm2_skip_auto_trigger) <c-r>=ncm2#skip_auto_trigger()<cr>$/;"	m
<Plug>(ncm2_ultisnips_expand_completed)	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^inoremap <silent> <Plug>(ncm2_ultisnips_expand_completed) <c-r>=ncm2_ultisnips#_do_expand_comple/;"	m
<Plug><cfile>	plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
<Plug><ctag>	plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><ctag> substitute(RubyCursorTag(),'^$',"\\022\\027",'')$/;"	m
<Plug>AirlineSelectNextTab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectNextTab :<C-u>call <SID>jump_to_tab(v:count1)<CR>$/;"	m
<Plug>AirlineSelectNextTab	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectNextTab :<C-U>exe repeat(':tabn\\|', v:count1)<cr>$/;"	m
<Plug>AirlineSelectPrevTab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    noremap <silent> <Plug>AirlineSelectPrevTab :<C-u>call <SID>jump_to_tab(-v:count1)<CR>$/;"	m
<Plug>AirlineSelectPrevTab	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  noremap <silent> <Plug>AirlineSelectPrevTab gT$/;"	m
<Plug>BUncomOff	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOff	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i\/*<ESC>`>o<ESC>0i*\/<ESC>`<$/;"	m
<Plug>BUncomOn	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>Comment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Comment          :call <SID>Comment('c')<CR>$/;"	m
<Plug>DeComment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>DeComment        :call <SID>Comment('u')<CR>$/;"	m
<Plug>L2UAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  inoremap <buffer><expr> <Plug>L2UAutoSub LaTeXtoUnicode#AutoSub("\\n", "\\<CR>")$/;"	m
<Plug>L2UTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  inoremap <buffer><expr> <Plug>L2UTab LaTeXtoUnicode#Tab()$/;"	m
<Plug>LUncomOff	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOff <ESC>:s\/^\\\/\\* \\(.*\\) \\*\\\/\/\\1\/<CR>$/;"	m
<Plug>LUncomOff	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i\/* <ESC>$A *\/<ESC>`z$/;"	m
<Plug>LUncomOn	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn gI(* <End> *)<ESC>$/;"	m
<Plug>LeaderfBufferBottom	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfBufferBottom     :<C-U>Leaderf buffer --bottom<CR>$/;"	m
<Plug>LeaderfBufferFullScreen	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfBufferFullScreen :<C-U>Leaderf buffer --fullScreen<CR>$/;"	m
<Plug>LeaderfBufferLeft	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfBufferLeft       :<C-U>Leaderf buffer --left<CR>$/;"	m
<Plug>LeaderfBufferRight	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfBufferRight      :<C-U>Leaderf buffer --right<CR>$/;"	m
<Plug>LeaderfBufferTop	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfBufferTop        :<C-U>Leaderf buffer --top<CR>$/;"	m
<Plug>LeaderfFileBottom	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfFileBottom     :<C-U>Leaderf file --bottom<CR>$/;"	m
<Plug>LeaderfFileFullScreen	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfFileFullScreen :<C-U>Leaderf file --fullScreen<CR>$/;"	m
<Plug>LeaderfFileLeft	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfFileLeft       :<C-U>Leaderf file --left<CR>$/;"	m
<Plug>LeaderfFileRight	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfFileRight      :<C-U>Leaderf file --right<CR>$/;"	m
<Plug>LeaderfFileTop	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfFileTop        :<C-U>Leaderf file --top<CR>$/;"	m
<Plug>LeaderfGtagsDefinition	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfGtagsDefinition :<C-U><C-R>=leaderf#Gtags#startCmdline(0, 1, 'd')<CR><CR>$/;"	m
<Plug>LeaderfGtagsDefinition	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfGtagsDefinition :<C-U><C-R>=leaderf#Gtags#startCmdline(2, 1, 'd')/;"	m
<Plug>LeaderfGtagsGrep	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfGtagsGrep :<C-U><C-R>=leaderf#Gtags#startCmdline(0, 1, 'g')<CR><CR>$/;"	m
<Plug>LeaderfGtagsGrep	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfGtagsGrep :<C-U><C-R>=leaderf#Gtags#startCmdline(2, 1, 'g')<CR><C/;"	m
<Plug>LeaderfGtagsReference	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfGtagsReference :<C-U><C-R>=leaderf#Gtags#startCmdline(0, 1, 'r')<CR><CR>$/;"	m
<Plug>LeaderfGtagsReference	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfGtagsReference :<C-U><C-R>=leaderf#Gtags#startCmdline(2, 1, 'r')</;"	m
<Plug>LeaderfGtagsSymbol	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfGtagsSymbol :<C-U><C-R>=leaderf#Gtags#startCmdline(0, 1, 's')<CR><CR>$/;"	m
<Plug>LeaderfGtagsSymbol	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfGtagsSymbol :<C-U><C-R>=leaderf#Gtags#startCmdline(2, 1, 's')<CR>/;"	m
<Plug>LeaderfMruCwdBottom	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfMruCwdBottom     :<C-U>Leaderf mru --bottom<CR>$/;"	m
<Plug>LeaderfMruCwdFullScreen	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfMruCwdFullScreen :<C-U>Leaderf mru --fullScreen<CR>$/;"	m
<Plug>LeaderfMruCwdLeft	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfMruCwdLeft       :<C-U>Leaderf mru --left<CR>$/;"	m
<Plug>LeaderfMruCwdRight	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfMruCwdRight      :<C-U>Leaderf mru --right<CR>$/;"	m
<Plug>LeaderfMruCwdTop	plugged/LeaderF/plugin/leaderf.vim	/^noremap <silent> <Plug>LeaderfMruCwdTop        :<C-U>Leaderf mru --top<CR>$/;"	m
<Plug>LeaderfRgBangCwordLiteralBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgBangCwordLiteralBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline(0, 1, 0, 1/;"	m
<Plug>LeaderfRgBangCwordLiteralNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgBangCwordLiteralNoBoundary :<C-U><C-R>=leaderf#Rg#startCmdline(0, 1, 0, 0/;"	m
<Plug>LeaderfRgBangCwordRegexBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgBangCwordRegexBoundary     :<C-U><C-R>=leaderf#Rg#startCmdline(0, 1, 1, 1/;"	m
<Plug>LeaderfRgBangCwordRegexNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgBangCwordRegexNoBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline(0, 1, 1, 0/;"	m
<Plug>LeaderfRgBangVisualLiteralBoundary	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfRgBangVisualLiteralBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline/;"	m
<Plug>LeaderfRgBangVisualLiteralNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfRgBangVisualLiteralNoBoundary :<C-U><C-R>=leaderf#Rg#startCmdline/;"	m
<Plug>LeaderfRgBangVisualRegexBoundary	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfRgBangVisualRegexBoundary     :<C-U><C-R>=leaderf#Rg#startCmdline/;"	m
<Plug>LeaderfRgBangVisualRegexNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfRgBangVisualRegexNoBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline/;"	m
<Plug>LeaderfRgCwordLiteralBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgCwordLiteralBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline(0, 0, 0, 1)<CR/;"	m
<Plug>LeaderfRgCwordLiteralNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgCwordLiteralNoBoundary :<C-U><C-R>=leaderf#Rg#startCmdline(0, 0, 0, 0)<CR/;"	m
<Plug>LeaderfRgCwordRegexBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgCwordRegexBoundary     :<C-U><C-R>=leaderf#Rg#startCmdline(0, 0, 1, 1)<CR/;"	m
<Plug>LeaderfRgCwordRegexNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgCwordRegexNoBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline(0, 0, 1, 0)<CR/;"	m
<Plug>LeaderfRgPrompt	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgPrompt :<C-U>Leaderf rg -e<Space>$/;"	m
<Plug>LeaderfRgVisualLiteralBoundary	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfRgVisualLiteralBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline(2, /;"	m
<Plug>LeaderfRgVisualLiteralNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfRgVisualLiteralNoBoundary :<C-U><C-R>=leaderf#Rg#startCmdline(2, /;"	m
<Plug>LeaderfRgVisualRegexBoundary	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfRgVisualRegexBoundary     :<C-U><C-R>=leaderf#Rg#startCmdline(2, /;"	m
<Plug>LeaderfRgVisualRegexNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^vnoremap <silent> <Plug>LeaderfRgVisualRegexNoBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline(2, /;"	m
<Plug>LeaderfRgWORDLiteralBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgWORDLiteralBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline(1, 0, 0, 1)<CR>$/;"	m
<Plug>LeaderfRgWORDLiteralNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgWORDLiteralNoBoundary :<C-U><C-R>=leaderf#Rg#startCmdline(1, 0, 0, 0)<CR>$/;"	m
<Plug>LeaderfRgWORDRegexBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgWORDRegexBoundary     :<C-U><C-R>=leaderf#Rg#startCmdline(1, 0, 1, 1)<CR>$/;"	m
<Plug>LeaderfRgWORDRegexNoBoundary	plugged/LeaderF/plugin/leaderf.vim	/^noremap <Plug>LeaderfRgWORDRegexNoBoundary   :<C-U><C-R>=leaderf#Rg#startCmdline(1, 0, 1, 0)<CR>$/;"	m
<Plug>MailQuote	plugged/vim-polyglot/ftplugin/mail.vim	/^  nnoremap <buffer> <Plug>MailQuote :.,$s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>MailQuote	plugged/vim-polyglot/ftplugin/mail.vim	/^  vnoremap <buffer> <Plug>MailQuote :s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>Markdown_EditUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_EditUrlUnderCursor :call <sid>EditUrlUnderCursor()<cr>$/;"	m
<Plug>Markdown_OpenUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_OpenUrlUnderCursor :call <sid>OpenUrlUnderCursor()<cr>$/;"	m
<Plug>OCamlPrintType	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("normal")<CR>$/;"	m
<Plug>OCamlPrintType	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  xnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("visual")<CR>`<$/;"	m
<Plug>OCamlSwitchEdit	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchEdit :<C-u>call OCaml_switch(0)<CR>$/;"	m
<Plug>OCamlSwitchNewWin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchNewWin :<C-u>call OCaml_switch(1)<CR>$/;"	m
<Plug>RacketDoc	plugged/vim-polyglot/ftplugin/racket.vim	/^nnoremap <buffer> <Plug>RacketDoc :silent !raco docs <cword><cr>:redraw!<cr>$/;"	m
<Plug>RacketDoc	plugged/vim-polyglot/ftplugin/racket.vim	/^vnoremap <buffer> <Plug>RacketDoc :call <SID>Racket_visual_doc()<cr>$/;"	m
<Plug>SpecChangelog	plugged/vim-polyglot/ftplugin/spec.vim	/^       noremap <buffer> <unique> <script> <Plug>SpecChangelog :call <SID>SpecChangelog("")<CR>$/;"	m
<Plug>Traditional	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Traditional      :call <SID>Comment('t')<CR>$/;"	m
<Plug>Translate	plugged/vim-translator/plugin/translator.vim	/^nnoremap <silent> <Plug>Translate   :Translate<CR>$/;"	m
<Plug>TranslateR	plugged/vim-translator/plugin/translator.vim	/^nnoremap <silent> <Plug>TranslateR  viw:<C-u>TranslateR<CR>$/;"	m
<Plug>TranslateRV	plugged/vim-translator/plugin/translator.vim	/^vnoremap <silent> <Plug>TranslateRV :TranslateR<CR>$/;"	m
<Plug>TranslateV	plugged/vim-translator/plugin/translator.vim	/^vnoremap <silent> <Plug>TranslateV  :Translate<CR>$/;"	m
<Plug>TranslateW	plugged/vim-translator/plugin/translator.vim	/^nnoremap <silent> <Plug>TranslateW  :TranslateW<CR>$/;"	m
<Plug>TranslateWV	plugged/vim-translator/plugin/translator.vim	/^vnoremap <silent> <Plug>TranslateWV :TranslateW<CR>$/;"	m
<Plug>TranslateX	plugged/vim-translator/plugin/translator.vim	/^nnoremap <silent> <Plug>TranslateX  :TranslateX<CR>$/;"	m
<Plug>VisualComment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualComment     :'<,'>call <SID>Comment('c')<CR>$/;"	m
<Plug>VisualDeComment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualDeComment   :'<,'>call <SID>Comment('u')<CR>$/;"	m
<Plug>VisualTraditional	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualTraditional :'<,'>call <SID>Comment('t')<CR>$/;"	m
<Plug>XTablineCdCurrent	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdCurrent :cd %:p:h<cr>:call airline#util#doaut/;"	m
<Plug>XTablineCdDown1	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown1   :cd %:p:h:h<cr>:call airline#util#doa/;"	m
<Plug>XTablineCdDown2	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown2   :cd %:p:h:h:h<cr>:call airline#util#d/;"	m
<Plug>XTablineCdDown3	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown3   :cd %:p:h:h:h:h<cr>:call airline#util/;"	m
<Plug>XTablineCdHome	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdHome    :cd ~<cr>:call airline#util#doautocmd/;"	m
<Plug>XTablineNextBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineNextBuffer <SID>NextBuffer$/;"	m
<Plug>XTablinePrevBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablinePrevBuffer <SID>PrevBuffer$/;"	m
<Plug>XTablineReopen	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineReopen <SID>ReopenLastTab$/;"	m
<Plug>XTablineSelectBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineSelectBuffer <SID>SelectBuffer$/;"	m
<Plug>XTablineToggleFiltering	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleFiltering <SID>ToggleFiltering$/;"	m
<Plug>XTablineToggleTabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleTabs <SID>ToggleTabs$/;"	m
<S-F12>	plugged/vim-polyglot/ftplugin/lilypond.vim	/^map <buffer> <S-F12> :g\/%.*\/normal 0x<Return>$/;"	m
<S-Tab>	settings/complete.vim	/^inoremap <expr> <S-Tab> pumvisible() ? "\\<C-p>" : "\\<S-Tab>"$/;"	m
<S-v>	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> <S-v> <NOP>$/;"	m
<SID>:	plugged/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>:	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID>NextBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>NextBuffer airline#extensions#tabline#xtabline#next_buffer(v:c/;"	m
<SID>PrevBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>PrevBuffer airline#extensions#tabline#xtabline#prev_buffer(v:c/;"	m
<SID>ReopenLastTab	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ReopenLastTab :XTabReopen<cr>$/;"	m
<SID>SelectBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>SelectBuffer g:xtabline_changing_buffer ? "\\<C-c>" : ":<C-u>c/;"	m
<SID>ToggleFiltering	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleFiltering :call airline#extensions#tabline#xtabline#toggle_buff/;"	m
<SID>ToggleTabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleTabs :call airline#extensions#tabline#xtabline#toggle_tabs()<cr/;"	m
<SID>c:	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>foldopen	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  cnoremap <SID>foldopen <Bar>if &foldopen =~# 'tag'<Bar>exe 'norm! zv'<Bar>endif$/;"	m
<SID>tagzv	plugged/vim-polyglot/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py b:Lf_AnyExplManager."input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "bufTagExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "bufExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "colorschemeExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "fileExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "functionExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "gtagsExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "helpExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "lineExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "mruExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "qfloclistExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^        nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "rgExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Self.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "selfExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "tagExplManager.input()"<CR>$/;"	m
<Tab>	plugged/LeaderF/autoload/leaderf/Window.vim	/^    nnoremap <buffer> <silent> <Tab>         :exec g:Lf_py "windowExplManager.input()"<CR>$/;"	m
<Tab>	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  imap <buffer> <Tab> <Plug>L2UTab$/;"	m
<Tab>	plugged/vim-polyglot/ftplugin/cobol.vim	/^        inoremap <silent> <buffer> <Tab> <C-R>=<SID>Tab()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<Tab>	settings/complete.vim	/^inoremap <expr> <Tab> pumvisible() ? "\\<C-n>" : "\\<Tab>"$/;"	m
<Up>	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> <Up>          <Up>:exec g:Lf_py "bufTagExplManager._previewResult/;"	m
<Up>	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> <Up>          <Up>:exec g:Lf_py "colorschemeExplManager._previewR/;"	m
<Up>	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> <Up>          <Up>:exec g:Lf_py "fileExplManager._previewResult(F/;"	m
<Up>	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> <Up>          <Up>:exec g:Lf_py "functionExplManager._previewResu/;"	m
<Up>	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> <Up>          <Up>:exec g:Lf_py "gtagsExplManager._previewResult(/;"	m
<Up>	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> <Up>          <Up>:exec g:Lf_py "lineExplManager._previewResult(F/;"	m
<Up>	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> <Up>          <Up>:exec g:Lf_py "mruExplManager._previewResult(Fa/;"	m
<Up>	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> <Up>          <Up>:exec g:Lf_py "rgExplManager._previewResult(Fal/;"	m
<Up>	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> <Up>          <Up>:exec g:Lf_py "tagExplManager._previewResult(Fa/;"	m
<bs>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <silent> <unique> <buffer> <bs> <C-R>=ada#Insert_Backspace ()<cr>$/;"	m
<c-f10>	plugged/vim-quickui/test/menu_example.vim	/^	noremap <c-f10> :call MenuHelp_TaskList()<cr>$/;"	m
<c-h>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <c-h> <c-g>"_c$/;"	m
<c-r>	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<cr>	autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<leader>cd2	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd2 <Plug>XTablineCdDown2$/;"	m
<leader>cd3	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd3 <Plug>XTablineCdDown3$/;"	m
<leader>cdc	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdc <Plug>XTablineCdCurrent$/;"	m
<leader>cdd	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdd <Plug>XTablineCdDown1$/;"	m
<leader>cdh	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdh <Plug>XTablineCdHome$/;"	m
<leader>d	keymap.vim	/^nmap <leader>d :bp\\|bd #<CR>$/;"	m
<leader>f	plugged/ranger.vim/plugin/ranger.vim	/^  map <leader>f :Ranger<CR>$/;"	m
<leader>fl	settings/finder.vim	/^nmap <leader>fl :LeaderfLine<CR>$/;"	m
<leader>fr	settings/finder.vim	/^nmap <leader>fr :Leaderf rg<CR>$/;"	m
<leader>ft	settings/finder.vim	/^nmap <leader>ft :LeaderfTag<CR>$/;"	m
<leader>g	plug.vim	/^    nmap <leader>g :Ranger<CR>$/;"	m
<localleader>R	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>R :call smt2#RunSolverAndShowResult()<cr>$/;"	m
<localleader>r	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>r :call smt2#RunSolver()<cr>$/;"	m
<localleader>v	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>v :call smt2#PrintSolverVersion()<cr>$/;"	m
<plug>(plug-preview)	autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
<plug>(signify-motion-inner-pending)	plugged/vim-signify/plugin/signify.vim	/^onoremap <silent> <plug>(signify-motion-inner-pending) :<c-u>call sy#util#hunk_text_object(0)<cr/;"	m
<plug>(signify-motion-inner-visual)	plugged/vim-signify/plugin/signify.vim	/^xnoremap <silent> <plug>(signify-motion-inner-visual)  :<c-u>call sy#util#hunk_text_object(0)<cr/;"	m
<plug>(signify-motion-outer-pending)	plugged/vim-signify/plugin/signify.vim	/^onoremap <silent> <plug>(signify-motion-outer-pending) :<c-u>call sy#util#hunk_text_object(1)<cr/;"	m
<plug>(signify-motion-outer-visual)	plugged/vim-signify/plugin/signify.vim	/^xnoremap <silent> <plug>(signify-motion-outer-visual)  :<c-u>call sy#util#hunk_text_object(1)<cr/;"	m
<plug>(signify-next-hunk)	plugged/vim-signify/plugin/signify.vim	/^nnoremap <silent> <expr> <plug>(signify-next-hunk) &diff$/;"	m
<plug>(signify-prev-hunk)	plugged/vim-signify/plugin/signify.vim	/^nnoremap <silent> <expr> <plug>(signify-prev-hunk) &diff$/;"	m
<plug>NERDCommenterAltDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<plug>NERDCommenterInsert	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^inoremap <silent> <plug>NERDCommenterInsert <SPACE><BS><ESC>:call NERDComment('i', 'insert')<CR>$/;"	m
<space><space>	plugged/vim-quickui/test/demo_menu.vim	/^nnoremap <silent><space><space> :call quickui#menu#open()<cr>$/;"	m
<space><space>	plugged/vim-quickui/test/menu_example.vim	/^nnoremap <silent><space><space> :call quickui#menu#open()<cr>$/;"	m
<tab>	plugged/vim-polyglot/autoload/ledger.vim	/^    nnoremap <silent> <buffer> <tab> <c-w><c-w>$/;"	m
<tab>	plugged/vim-polyglot/autoload/ledger.vim	/^  nnoremap <silent> <buffer> <tab> <c-w><c-p>$/;"	m
=	plugged/vim-polyglot/autoload/rubycomplete.vim	/^          ln = buf[x]$/;"	m
=	plugged/vim-polyglot/autoload/rubycomplete.vim	/^      ln = buf[x]$/;"	m
=	plugged/vim-polyglot/autoload/rubycomplete.vim	/^      nm = "%s(::.*)*\\", %s, \\"" % [ name, nums.last ]$/;"	m
=	plugged/vim-polyglot/ftplugin/terraform.vim	/^  inoremap <buffer> <silent> = =<Esc>:call terraform#align()<CR>a$/;"	m
=>	plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    inoremap <buffer> <silent> => =><Esc>:call puppet#align#AlignHashrockets()<CR>$a$/;"	m
>	plugged/vim-polyglot/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> > :set opfunc=<SID>IncreaseFunc<CR>g@$/;"	m
>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> > :call CobolIndentBlock(v:count1)<CR>$/;"	m
>>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> >> :call CobolIndentBlock(1)<CR>$/;"	m
@babel/code-frame	plugged/onedark.vim/build/package-lock.json	/^        "@babel\/code-frame": "^7.0.0",$/;"	s	object:dependencies.eslint.requires
@babel/code-frame	plugged/onedark.vim/build/package-lock.json	/^        "@babel\/code-frame": "^7.0.0",$/;"	s	object:dependencies.parse-json.requires
@babel/code-frame	plugged/onedark.vim/build/package-lock.json	/^    "@babel\/code-frame": {$/;"	o	object:dependencies
@babel/helper-validator-identifier	plugged/onedark.vim/build/package-lock.json	/^        "@babel\/helper-validator-identifier": "^7.10.4",$/;"	s	object:dependencies.@babel/highlight.requires
@babel/helper-validator-identifier	plugged/onedark.vim/build/package-lock.json	/^    "@babel\/helper-validator-identifier": {$/;"	o	object:dependencies
@babel/highlight	plugged/onedark.vim/build/package-lock.json	/^        "@babel\/highlight": "^7.10.4"$/;"	s	object:dependencies.@babel/code-frame.requires
@babel/highlight	plugged/onedark.vim/build/package-lock.json	/^    "@babel\/highlight": {$/;"	o	object:dependencies
@eslint/eslintrc	plugged/onedark.vim/build/package-lock.json	/^        "@eslint\/eslintrc": "^0.2.1",$/;"	s	object:dependencies.eslint.requires
@eslint/eslintrc	plugged/onedark.vim/build/package-lock.json	/^    "@eslint\/eslintrc": {$/;"	o	object:dependencies
@types/parse-json	plugged/onedark.vim/build/package-lock.json	/^        "@types\/parse-json": "^4.0.0",$/;"	s	object:dependencies.cosmiconfig.requires
@types/parse-json	plugged/onedark.vim/build/package-lock.json	/^    "@types\/parse-json": {$/;"	o	object:dependencies
A	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> A <NOP>$/;"	m
ALE Supported Languages and Tools	plugged/ale/supported-tools.md	/^# ALE Supported Languages and Tools$/;"	c
ALEBufferFixGroup	plugged/ale/autoload/ale/fix.vim	/^augroup ALEBufferFixGroup$/;"	a
ALECleanupGroup	plugged/ale/plugin/ale.vim	/^augroup ALECleanupGroup$/;"	a
ALECodeAction	plugged/ale/plugin/ale.vim	/^command! -bar -range ALECodeAction :call ale#codefix#Execute(<range>)$/;"	c
ALECodeActionsGroup	plugged/ale/autoload/ale/code_action.vim	/^    augroup ALECodeActionsGroup$/;"	a
ALEComplete	plugged/ale/plugin/ale.vim	/^command! -bar ALEComplete :call ale#completion#GetCompletions('ale-manual')$/;"	c
ALECompletionActions	plugged/ale/autoload/ale/completion.vim	/^augroup ALECompletionActions$/;"	a
ALECompletionGroup	plugged/ale/autoload/ale/completion.vim	/^    augroup ALECompletionGroup$/;"	a
ALEDetail	plugged/ale/plugin/ale.vim	/^command! -bar ALEDetail :call ale#cursor#ShowCursorDetail()$/;"	c
ALEDisable	plugged/ale/plugin/ale.vim	/^command! -bar ALEDisable :call ale#toggle#Disable()$/;"	c
ALEDisableBuffer	plugged/ale/plugin/ale.vim	/^command! -bar ALEDisableBuffer :call ale#toggle#DisableBuffer(bufnr(''))$/;"	c
ALEDocumentation	plugged/ale/plugin/ale.vim	/^command! -bar ALEDocumentation :call ale#hover#ShowDocumentationAtCursor()$/;"	c
ALEEnable	plugged/ale/plugin/ale.vim	/^command! -bar ALEEnable :call ale#toggle#Enable()$/;"	c
ALEEnableBuffer	plugged/ale/plugin/ale.vim	/^command! -bar ALEEnableBuffer :call ale#toggle#EnableBuffer(bufnr(''))$/;"	c
ALEEvents	plugged/ale/autoload/ale/events.vim	/^    augroup ALEEvents$/;"	a
ALEFindReferences	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEFindReferences :call ale#references#Find(<f-args>)$/;"	c
ALEFirst	plugged/ale/plugin/ale.vim	/^command! -bar ALEFirst :call ale#loclist_jumping#JumpToIndex(0)$/;"	c
ALEFix	plugged/ale/plugin/ale.vim	/^command! -bar -bang -nargs=* -complete=customlist,ale#fix#registry#CompleteFixers ALEFix :call a/;"	c
ALEFixSuggest	plugged/ale/plugin/ale.vim	/^command! -bar ALEFixSuggest :call ale#fix#registry#Suggest(&filetype)$/;"	c
ALEGoToDefinition	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEGoToDefinition :call ale#definition#GoToCommandHandler('', <f-args>)$/;"	c
ALEGoToTypeDefinition	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEGoToTypeDefinition :call ale#definition#GoToCommandHandler('type', <f-/;"	c
ALEHighlightBufferGroup	plugged/ale/autoload/ale/highlight.vim	/^augroup ALEHighlightBufferGroup$/;"	a
ALEHover	plugged/ale/plugin/ale.vim	/^command! -bar ALEHover :call ale#hover#ShowAtCursor()$/;"	c
ALEImport	plugged/ale/plugin/ale.vim	/^command! -bar ALEImport :call ale#completion#Import()$/;"	c
ALEInfo	plugged/ale/plugin/ale.vim	/^command! -bar ALEInfo :call ale#debugging#Info()$/;"	c
ALEInfoToClipboard	plugged/ale/plugin/ale.vim	/^command! -bar ALEInfoToClipboard :call ale#debugging#InfoToClipboard()$/;"	c
ALEInfoToFile	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=1 ALEInfoToFile :call ale#debugging#InfoToFile(<f-args>)$/;"	c
ALELast	plugged/ale/plugin/ale.vim	/^command! -bar ALELast :call ale#loclist_jumping#JumpToIndex(-1)$/;"	c
ALELint	plugged/ale/plugin/ale.vim	/^command! -bar ALELint :call ale#Queue(0, 'lint_file')$/;"	c
ALELintStop	plugged/ale/plugin/ale.vim	/^command! -bar ALELintStop :call ale#engine#Stop(bufnr(''))$/;"	c
ALENext	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=* ALENext$/;"	c
ALENextWrap	plugged/ale/plugin/ale.vim	/^command! -bar ALENextWrap :call ale#loclist_jumping#Jump('after', 1)$/;"	c
ALEOrganizeImports	plugged/ale/plugin/ale.vim	/^command! -bar ALEOrganizeImports :call ale#organize_imports#Execute()$/;"	c
ALEPrevious	plugged/ale/plugin/ale.vim	/^command! -bar -nargs=* ALEPrevious$/;"	c
ALEPreviousWrap	plugged/ale/plugin/ale.vim	/^command! -bar ALEPreviousWrap :call ale#loclist_jumping#Jump('before', 1)$/;"	c
ALERename	plugged/ale/plugin/ale.vim	/^command! -bar -bang ALERename :call ale#rename#Execute()$/;"	c
ALERepeatSelection	plugged/ale/plugin/ale.vim	/^command! -bar ALERepeatSelection :call ale#preview#RepeatSelection()$/;"	c
ALEReset	plugged/ale/plugin/ale.vim	/^command! -bar ALEReset :call ale#toggle#Reset()$/;"	c
ALEResetBuffer	plugged/ale/plugin/ale.vim	/^command! -bar ALEResetBuffer :call ale#toggle#ResetBuffer(bufnr(''))$/;"	c
ALEStopAllLSPs	plugged/ale/plugin/ale.vim	/^command! -bar ALEStopAllLSPs :call ale#lsp#reset#StopAllLSPs()$/;"	c
ALESymbolSearch	plugged/ale/plugin/ale.vim	/^command! -nargs=1 ALESymbolSearch :call ale#symbol#Search(<q-args>)$/;"	c
ALEToggle	plugged/ale/plugin/ale.vim	/^command! -bar ALEToggle :call ale#toggle#Toggle()$/;"	c
ALEToggleBuffer	plugged/ale/plugin/ale.vim	/^command! -bar ALEToggleBuffer :call ale#toggle#ToggleBuffer(bufnr(''))$/;"	c
ALWAYS	plugged/vim-snippets/pythonx/javascript_snippets.py	/^ALWAYS = 'always'$/;"	v
API	plugged/ncm2-ultisnips/README.md	/^## API$/;"	s
API	plugged/vim-devicons/DEVELOPER.md	/^### API$/;"	S
API Examples	plugged/vim-devicons/DEVELOPER.md	/^#### API Examples$/;"	t
ARR_D	plugged/ultisnips/test/constant.py	/^ARR_D = "\\x1bOB"$/;"	v
ARR_L	plugged/ultisnips/test/constant.py	/^ARR_L = "\\x1bOD"$/;"	v
ARR_R	plugged/ultisnips/test/constant.py	/^ARR_R = "\\x1bOC"$/;"	v
ARR_U	plugged/ultisnips/test/constant.py	/^ARR_U = "\\x1bOA"$/;"	v
Abaqus_ToggleComment	plugged/vim-polyglot/ftplugin/abaqus.vim	/^function! <SID>Abaqus_ToggleComment() range$/;"	f
Acknowledgments	plugged/vim-devicons/README.md	/^Acknowledgments$/;"	s
Actual behaviour	plugged/LeaderF/ISSUE_TEMPLATE.md	/^### Actual behaviour$/;"	S
AddEntry	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function AddEntry()$/;"	f
AddFunc_Opt	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddIndentByInd	plugged/vim-polyglot/indent/autohotkey.vim	/^function! AddIndentByInd(indent)$/;"	f
AddNewSnippetSource	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
AddedSnippetsSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
Additional Info	plugged/vim/.github/issue_template.md	/^### Additional Info$/;"	S
Airline theme	plugged/gruvbox/README.md	/^### Airline theme$/;"	S
AirlineExtensions	plugged/vim-airline/plugin/airline.vim	/^command! AirlineExtensions   call s:airline_extensions()$/;"	c
AirlineRefresh	plugged/vim-airline/plugin/airline.vim	/^command! -bar -bang AirlineRefresh call s:airline_refresh(<q-bang>)$/;"	c
AirlineTheme	plugged/vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airli/;"	c
AirlineToggle	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle  call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
Aliases for snippets	plugged/ultisnips/doc/examples/snippets-aliasing/README.md	/^# Aliases for snippets$/;"	c
Anon_NoTrigger_AfterSpace	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
AnonymousFunction33628de30100	plugged/onedark.vim/build/build.js	/^			_.partialRight(_.mapValues, function (color) {$/;"	f
AnonymousFunction33628de30200	plugged/onedark.vim/build/build.js	/^			_.partialRight(_.mapValues, function (color) {$/;"	f
AnonymousFunction33628de30300	plugged/onedark.vim/build/build.js	/^			_.partialRight(_.mapValues, function (color) {$/;"	f
AnonymousFunction33628de30400	plugged/onedark.vim/build/build.js	/^			_.partialRight(_.mapValues, function (color) {$/;"	f
AnonymousFunction33628de30500	plugged/onedark.vim/build/build.js	/^				srgb = srgb.map(function (n) {$/;"	f	function:AnonymousFunction33628de30400
AntSyntaxScript	plugged/vim-polyglot/syntax/ant.vim	/^    fun AntSyntaxScript(tagname, synfilename)$/;"	f
Any background context you can provide?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Any background context you can provide?$/;"	t
AnyExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^class AnyExplManager(Manager):$/;"	c
AnyExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^class AnyExplorer(Explorer):$/;"	c
AnyHub	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^class AnyHub(object):$/;"	c
AssertFixer	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertFixer :call ale#assert#Fixer(<args>)$/;"	c
AssertFixerNotExecuted	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=0 AssertFixerNotExecuted :call ale#assert#FixerNotExecuted()$/;"	c
AssertLSPAddress	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPAddress :call ale#assert#LSPAddress(<args>)$/;"	c
AssertLSPConfig	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPConfig :call ale#assert#LSPConfig(<args>)$/;"	c
AssertLSPLanguage	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPLanguage :call ale#assert#LSPLanguage(<args>)$/;"	c
AssertLSPOptions	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPOptions :call ale#assert#LSPOptions(<args>)$/;"	c
AssertLSPProject	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLSPProject :call ale#assert#LSPProject(<args>)$/;"	c
AssertLinter	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ AssertLinter :call ale#assert#Linter(<args>)$/;"	c
AssertLinterNotExecuted	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=0 AssertLinterNotExecuted :call ale#assert#LinterNotExecuted()$/;"	c
AsyncExecutor	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^class AsyncExecutor(object):$/;"	c
Asynchronous Lint Engine [![Travis CI Build Status](https://travis-ci.com/dense-analysis/ale.svg?branch=master)](https://travis-ci.com/dense-analysis/ale) [![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/r0ef1xu8xjmik58d/branch/master?svg=true)](https://ci.appveyor.com/project/dense-analysis/ale) [![Join the chat at https://gitter.im/vim-ale/Lobby](https://badges.gitter.im/vim-ale/Lobby.svg)](https://gitter.im/vim-ale/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)	plugged/ale/README.md	/^# Asynchronous Lint Engine [![Travis CI Build Status](https:\/\/travis-ci.com\/dense-analysis\/a/;"	c
Attention	plugged/gruvbox/README.md	/^Attention$/;"	s
Attribution	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s
Author and Feedback	plugged/vim-signify/README.md	/^## Author and Feedback$/;"	s
Author's Instructions	plugged/nerdtree/.github/PULL_REQUEST_TEMPLATE.md	/^#### Author's Instructions$/;"	t
Autocommands	plugged/ultisnips/test/test_Autocommands.py	/^class Autocommands(_VimTest):$/;"	c
Autoindent	plugged/vim-polyglot/README.md	/^## Autoindent$/;"	s
Autojump from tabstop when it's empty	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^# Autojump from tabstop when it's empty$/;"	c
Automatic truncation	plugged/vim-airline/README.md	/^## Automatic truncation$/;"	s
Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne(_VimTest):$/;"	c
Autotrigger_CanMatchContext	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchContext(_VimTest):$/;"	c
Autotrigger_CanMatchPreviouslySelectedPlaceholder	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchPreviouslySelectedPlaceholder(_VimTest):$/;"	c
Autotrigger_CanMatchSimpleTrigger	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchSimpleTrigger(_VimTest):$/;"	c
Autotrigger_WillProduceNoExceptionWithVimLowerThan214	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_WillProduceNoExceptionWithVimLowerThan214(_VimTest):$/;"	c
Available Widgets	plugged/vim-quickui/MANUAL.md	/^## Available Widgets$/;"	s
BACKWARD	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    BACKWARD = 2$/;"	v	class:JumpDirection
BAR	plugged/vista.vim/test/data/175.cpp	/^		BAR$/;"	e	enum:example::__anon517ee2f20503	file:
BAR	plugged/vista.vim/test/data/ctags_tree_view.py	/^                BAR = 12$/;"	v	class:Foo.Bar.Qux.Bar
BAR	plugged/vista.vim/test/data/ctags_tree_view.py	/^                BAR = 12$/;"	v	class:Foo.Bar1.Qux.Bar
BAR	plugged/vista.vim/test/data/ctags_tree_view.py	/^                BAR = 12$/;"	v	class:Foo.Bar2.Qux.Bar
BAR	plugged/vista.vim/test/data/ctags_tree_view.py	/^        BAR = 12$/;"	v	class:Foo.Bar
BAR	plugged/vista.vim/test/data/ctags_tree_view.py	/^        BAR = 12$/;"	v	class:Foo.Bar1
BAR	plugged/vista.vim/test/data/ctags_tree_view.py	/^        BAR = 12$/;"	v	class:Foo.Bar2
BAZ	plugged/vista.vim/test/data/175.cpp	/^		BAZ$/;"	e	enum:__anon517ee2f20611::__anon517ee2f20703	file:
BRACES	plugged/ultisnips/test/vim_interface.py	/^    BRACES = re.compile("([}{])")$/;"	v	class:VimInterfaceWindows
BS	plugged/ultisnips/test/constant.py	/^BS = "\\x7f"$/;"	v
BUILD_INVERTED_INDEX	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
Background Information	plugged/onedark.vim/CONTRIBUTING.md	/^### Background Information$/;"	S
Backspace_TabStop_NotZero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
BaicizhanTranslator	plugged/vim-translator/script/translator.py	/^class BaicizhanTranslator(BasicTranslator):$/;"	c
Bar	plugged/vista.vim/test/data/70.py	/^    class Bar:$/;"	c	class:Foo
Bar	plugged/vista.vim/test/data/ctags_tree_view.py	/^            class Bar:$/;"	c	class:Foo.Bar.Qux
Bar	plugged/vista.vim/test/data/ctags_tree_view.py	/^            class Bar:$/;"	c	class:Foo.Bar1.Qux
Bar	plugged/vista.vim/test/data/ctags_tree_view.py	/^            class Bar:$/;"	c	class:Foo.Bar2.Qux
Bar	plugged/vista.vim/test/data/ctags_tree_view.py	/^    class Bar:$/;"	c	class:Foo
Bar1	plugged/vista.vim/test/data/ctags_tree_view.py	/^    class Bar1:$/;"	c	class:Foo
Bar2	plugged/vista.vim/test/data/ctags_tree_view.py	/^    class Bar2:$/;"	c	class:Foo
Base	plugged/ale/rplugin/python3/deoplete/sources/ale.py	/^    class Base(object):$/;"	c
BasicTranslator	plugged/vim-translator/script/translator.py	/^class BasicTranslator(object):$/;"	c
Baz	plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Baz:$/;"	c	class:Foo.Bar.Qux.Bar
Baz	plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Baz:$/;"	c	class:Foo.Bar1.Qux.Bar
Baz	plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Baz:$/;"	c	class:Foo.Bar2.Qux.Bar
Baz	plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Baz:$/;"	c	class:Foo.Bar
Baz	plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Baz:$/;"	c	class:Foo.Bar1
Baz	plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Baz:$/;"	c	class:Foo.Bar2
Bclose	plugged/bclose.vim/plugin/bclose.vim	/^command! -bang -complete=buffer -nargs=? Bclose call <SID>Bclose('<bang>', '<args>')$/;"	c
Before you add a feature	plugged/ultisnips/CONTRIBUTING.md	/^## Before you add a feature$/;"	s
Bindings	plugged/bclose.vim/README.md	/^## Bindings$/;"	s
BingTranslator	plugged/vim-translator/script/translator.py	/^class BingTranslator(BasicTranslator):$/;"	c
Bookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=? Bookmark :call nerdtree#ui_glue#bookmarkNode('<args>')$/;"	c
BookmarkToRoot	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=+ BookmarkToRoot cal/;"	c
Breaking Changes	plugged/vim-translator/README.md	/^## Breaking Changes$/;"	s
BufExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^class BufExplManager(Manager):$/;"	c
BufPath	plugged/ncm2-path/pythonx/ncm2_path.py	/^class BufPath(Ncm2Source):$/;"	c
BufTagExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^class BufTagExplManager(Manager):$/;"	c
BufTagExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^class BufTagExplorer(Explorer):$/;"	c
Buffer switcher	plugged/vim-quickui/MANUAL.md	/^### Buffer switcher$/;"	S
BufferExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^class BufferExplorer(Explorer):$/;"	c
Bug1251994	plugged/ultisnips/test/test_Fixes.py	/^class Bug1251994(_VimTest):$/;"	c
Bugs	plugged/vim-airline/CONTRIBUTING.md	/^# Bugs$/;"	c
Build System	plugged/onedark.vim/CONTRIBUTING.md	/^## Build System$/;"	s
Builtin	plugged/vim-polyglot/syntax/8th.vim	/^com! -nargs=+ Builtin syn keyword eighthBuiltin <args>$/;"	c
Builtin	plugged/vim-polyglot/syntax/reva.vim	/^com! -nargs=+ Builtin syn keyword revaBuiltin <args>$/;"	c
BzlFoldText	plugged/vim-polyglot/ftplugin/bzl.vim	/^function BzlFoldText() abort$/;"	f
CCode	plugged/vim-polyglot/ftplugin/vala.vim	/^command! -buffer -bar CCode call CCode()$/;"	c
CCode	plugged/vim-polyglot/ftplugin/vala.vim	/^function! CCode() abort$/;"	f
CHANGELOG	plugged/vim-devicons/CHANGELOG.md	/^CHANGELOG$/;"	c
CHANGELOG	plugged/vista.vim/CHANGELOG.md	/^# CHANGELOG$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\$\\d+")$/;"	v	class:MirrorToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+[:}]")$/;"	v	class:TabStopToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\\/")$/;"	v	class:TransformationToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\|")$/;"	v	class:ChoicesToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!p\\s")$/;"	v	class:PythonCodeToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!v\\s")$/;"	v	class:VimLCodeToken
CMakeGetIndent	plugged/vim-polyglot/indent/cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f
COMMAND_RE	plugged/ale/test/script/block-padding-checker	/^COMMAND_RE = re.compile(r'^ *([a-zA-Z\\\\]+)')$/;"	v
COMMENT_LINE_RE	plugged/ale/test/script/block-padding-checker	/^COMMENT_LINE_RE = re.compile(r'^ *"')$/;"	v
COMPLETION_OPTIONS	plugged/ultisnips/test/test_Completion.py	/^COMPLETION_OPTIONS = "completion1\\ncompletion2\\n"$/;"	v
COMPL_ACCEPT	plugged/ultisnips/test/constant.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	plugged/ultisnips/test/constant.py	/^COMPL_KW = chr(24) + chr(14)$/;"	v
CONTRIBUTING	plugged/vim-signify/CONTRIBUTING.md	/^CONTRIBUTING$/;"	c
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CSVCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVCol(...) "{{{3$/;"	f
CSVCount	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVCount(col, fmt, first, last, ...) "{{{3$/;"	f
CSVField	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVField(x, y, ...) "{{{3$/;"	f
CSVMax	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVMax(col, fmt, first, last) "{{{3$/;"	f
CSVMin	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVMin(col, fmt, first, last) "{{{3$/;"	f
CSVPat	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVPat(colnr, ...) "{{{3$/;"	f
CSVSum	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVSum(col, fmt, first, last) "{{{3$/;"	f
CSVWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVWidth(...) "{{{3$/;"	f
CSV_CloseBuffer	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_CloseBuffer(buffer) "{{{3$/;"	f
CSV_Menu	plugged/vim-polyglot/autoload/csv.vim	/^        augroup CSV_Menu$/;"	a
CSV_Preview	plugged/vim-polyglot/autoload/csv.vim	/^          aug CSV_Preview$/;"	a
CSV_Preview	plugged/vim-polyglot/autoload/csv.vim	/^        aug CSV_Preview$/;"	a
CSV_QuitPre	plugged/vim-polyglot/autoload/csv.vim	/^        augroup CSV_QuitPre$/;"	a
CSV_QuitPre	plugged/vim-polyglot/autoload/csv.vim	/^    aug CSV_QuitPre$/;"	a
CSV_SetSplitOptions	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_SetSplitOptions(window) "{{{3$/;"	f
CSV_WCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_WCol(...) "{{{3$/;"	f
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
Can I have different highlighting for different file extensions?	plugged/nerdtree/README.markdown	/^#### Can I have different highlighting for different file extensions?$/;"	t
Can I have the nerdtree on every tab automatically?	plugged/nerdtree/README.markdown	/^#### Can I have the nerdtree on every tab automatically?$/;"	t
Category_File	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    Category_File,$/;"	e	enum:__anon07ea32bd0803	file:
Category_Gtags	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    Category_Gtags,$/;"	e	enum:__anon07ea32bd0803	file:
Category_Line	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    Category_Line,$/;"	e	enum:__anon07ea32bd0803	file:
Category_Rg	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    Category_Rg = 0,$/;"	e	enum:__anon07ea32bd0803	file:
Category_Tag	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    Category_Tag,$/;"	e	enum:__anon07ea32bd0803	file:
CdlAsignment	plugged/vim-polyglot/indent/cdl.vim	/^fun! CdlAsignment(lnum, line)$/;"	f
CdlGetIndent	plugged/vim-polyglot/indent/cdl.vim	/^fun! CdlGetIndent(lnum)$/;"	f
Change Log	plugged/gruvbox/CHANGELOG.md	/^# Change Log$/;"	c
Change Log	plugged/vim-airline/CHANGELOG.md	/^# Change Log$/;"	c
Changelog	plugged/LeaderF/README.md	/^Changelog$/;"	s
Changelog	plugged/nerdcommenter/CHANGELOG.md	/^# Changelog$/;"	c
CheckItems	plugged/vim-polyglot/tests/native.vim	/^func CheckItems(checks)$/;"	f
CheckSaneSearchPattern	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>CheckSaneSearchPattern() "{{{3$/;"	f
Choices	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^class Choices(TabStop):$/;"	c
ChoicesToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ChoicesToken(Token):$/;"	c
Choices_AsNestedElement_CanBeTabbedInto	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedInto(_VimTest):$/;"	c
Choices_AsNestedElement_CanBeTabbedThrough	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedThrough(_VimTest):$/;"	c
Choices_AsNestedElement_ShallNotTakeActionIfParentInput	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShallNotTakeActionIfParentInput(_VimTest):$/;"	c
Choices_AsNestedElement_ShouldOverwriteDefaultText	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShouldOverwriteDefaultText(_VimTest):$/;"	c
Choices_CanEscapeCommaInsideChoiceItem	plugged/ultisnips/test/test_Choices.py	/^class Choices_CanEscapeCommaInsideChoiceItem(_VimTest):$/;"	c
Choices_CanTakeNonAsciiCharacters	plugged/ultisnips/test/test_Choices.py	/^class Choices_CanTakeNonAsciiCharacters(_VimTest):$/;"	c
Choices_EmptyChoiceWillBeDiscarded	plugged/ultisnips/test/test_Choices.py	/^class Choices_EmptyChoiceWillBeDiscarded(_VimTest):$/;"	c
Choices_ExpectCorrectResult	plugged/ultisnips/test/test_Choices.py	/^class Choices_ExpectCorrectResult(_VimTest):$/;"	c
Choices_MoreThan9Candidates_ShouldTerminateWithSpace	plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldTerminateWithSpace(_VimTest):$/;"	c
Choices_MoreThan9Candidates_ShouldWaitForInputs	plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldWaitForInputs(_VimTest):$/;"	c
Choices_ShouldThrowErrorWithZeroTabstop	plugged/ultisnips/test/test_Choices.py	/^class Choices_ShouldThrowErrorWithZeroTabstop(_VimTest):$/;"	c
Choices_WilNotMessWithTabstopsAfterIt	plugged/ultisnips/test/test_Choices.py	/^class Choices_WilNotMessWithTabstopsAfterIt(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_CharTyped	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_CharTyped(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex(_VimTest):$/;"	c
Choices_WillBeExpandedToInlineSelection	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillBeExpandedToInlineSelection(_VimTest):$/;"	c
Choices_WillNotExpand_If_ChoiceListIsEmpty	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillNotExpand_If_ChoiceListIsEmpty(_VimTest):$/;"	c
Choices_With_Mirror	plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror(_VimTest):$/;"	c
Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone	plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone(_VimTest):$/;"	c
CleanUp	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
ClearAllBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ClearAllBookmarks call g:NERDTreeBookmark.ClearAll() <bar> call b:/;"	c
ClearBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=* ClearBookmarks cal/;"	c
CloseBug	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function CloseBug()$/;"	f
CobolIndentBlock	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! CobolIndentBlock(shift)$/;"	f
CoffeeAuWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^  augroup CoffeeAuWatch$/;"	a
CoffeeBufNew	plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeLint	plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeMake	plugged/vim-polyglot/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeRun	plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeUpdateMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
Collaborator's Instructions	plugged/nerdtree/.github/PULL_REQUEST_TEMPLATE.md	/^#### Collaborator's Instructions$/;"	t
Color Reference	plugged/onedark.vim/README.md	/^## Color Reference$/;"	s
ColorschemeExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^class ColorschemeExplManager(Manager):$/;"	c
ColorschemeExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^class ColorschemeExplorer(Explorer):$/;"	c
CommandExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^class CommandExplManager(Manager):$/;"	c
CommandExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^class CommandExplorer(Explorer):$/;"	c
Commands	plugged/indentLine/README.md	/^### Commands$/;"	S
Commands	plugged/vim-translator/README.md	/^## Commands$/;"	s
Commands	plugged/vim-which-key/README.md	/^### Commands$/;"	S
Commands	plugged/vista.vim/README.md	/^### Commands$/;"	S
Common issues	plugged/ranger.vim/README.md	/^## Common issues$/;"	s
Compile ctags with JSON format support	plugged/vista.vim/README.md	/^#### Compile ctags with JSON format support$/;"	t
CompilerSet	plugged/vim-polyglot/compiler/ant.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/cargo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/credo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/cs.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/dot.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/exunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/gradle.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/gradlew.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/ledger.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/mix.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/nim.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/nix-build.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/powershell.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/python.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rustc.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/sbt.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/swift.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/tcl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/tex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/tidy.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	plugged/ultisnips/test/test_Completion.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
Config	plugged/ncm2-jedi/README.md	/^## Config$/;"	s
Configurable and extensible	plugged/vim-airline/README.md	/^## Configurable and extensible$/;"	s
Configuration	plugged/vim-translator/README.md	/^## Configuration$/;"	s
Configuration	plugged/vim-which-key/README.md	/^### Configuration$/;"	S
Configuration examples	plugged/LeaderF/README.md	/^Configuration examples$/;"	s
Configuration for async update	plugged/vim-signify/README.md	/^## Configuration for async update$/;"	s
Configure It	plugged/onedark.vim/CONTRIBUTING.md	/^### Configure It$/;"	S
Content	plugged/vim-quickui/MANUAL.md	/^# Content$/;"	c
Content	plugged/vim-quickui/README.md	/^# Content $/;"	c
Contents	plugged/vim-snippets/README.md	/^Contents$/;"	s
Context menu	plugged/vim-quickui/MANUAL.md	/^### Context menu$/;"	S
Context menu	plugged/vim-quickui/README.md	/^### Context menu$/;"	S
ContextSnippets_ContextHasAccessToVisual	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToVisual(_VimTest):$/;"	c
ContextSnippets_ContextIsClearedBeforeExpand	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextIsClearedBeforeExpand(_VimTest):$/;"	c
ContextSnippets_CursorIsZeroBased	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_CursorIsZeroBased(_VimTest):$/;"	c
ContextSnippets_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_Header_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_Header_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_PriorityKeyword	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_PriorityKeyword(_VimTest):$/;"	c
ContextSnippets_ReportError	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportError(_VimTest):$/;"	c
ContextSnippets_ReportErrorOnIndexOutOfRange	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportErrorOnIndexOutOfRange(_VimTest):$/;"	c
ContextSnippets_SimpleSnippet	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SimpleSnippet(_VimTest):$/;"	c
ContextSnippets_SnippetPriority	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SnippetPriority(_VimTest):$/;"	c
ContextSnippets_UseContext	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_UseContext(_VimTest):$/;"	c
Contrast options	plugged/gruvbox/README.md	/^Contrast options$/;"	s
Contributing	plugged/bclose.vim/README.md	/^## Contributing$/;"	s
Contributing	plugged/onedark.vim/README.md	/^### Contributing$/;"	S
Contributing	plugged/vim-devicons/README.md	/^Contributing$/;"	s
Contributing	plugged/vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing	plugged/vim-polyglot/README.md	/^## Contributing$/;"	s
Contributing	plugged/vista.vim/README.md	/^## Contributing$/;"	s
Contributing Guide	plugged/vim-devicons/CONTRIBUTING.md	/^# Contributing Guide$/;"	c
Contributing to UltiSnips	plugged/ultisnips/CONTRIBUTING.md	/^# Contributing to UltiSnips$/;"	c
Contributing to onedark.vim	plugged/onedark.vim/CONTRIBUTING.md	/^# Contributing to onedark.vim$/;"	c
Contributions	plugged/gruvbox/README.md	/^Contributions$/;"	s
Contributions	plugged/nerdcommenter/README.md	/^## Contributions$/;"	s
Contributions	plugged/vim-airline/CONTRIBUTING.md	/^# Contributions$/;"	c
Contributor Covenant Code of Conduct	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Contributors	plugged/tagbar/README.md	/^## Contributors$/;"	s
CountWrapper	plugged/vim-polyglot/ftplugin/vhdl.vim	/^function! <SID>CountWrapper(cmd)$/;"	f
Creating Issues	plugged/ale/.github/CONTRIBUTING.md	/^## Creating Issues$/;"	s
Credit	plugged/vim-quickui/MANUAL.md	/^## Credit$/;"	s
Credit	plugged/vim-quickui/README.md	/^## Credit$/;"	s
Credit	plugged/vim-which-key/README.md	/^## Credit$/;"	s
Credits	plugged/nerdtree-git-plugin/README.md	/^## Credits$/;"	s
CrystalContext	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalContext        echo crystal_lang#context(expand('%'), getpos('./;"	c
CrystalDef	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=0 CrystalDef            call crystal_lang#jump_to_definition(expand('%')/;"	c
CrystalExpand	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalExpand         echo crystal_lang#expand(expand('%'), getpos('.'/;"	c
CrystalFormat	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* -bar CrystalFormat    call crystal_lang#format(<q-args>, 0)$/;"	c
CrystalHierarchy	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalHierarchy      echo crystal_lang#type_hierarchy(expand('%'), <q/;"	c
CrystalImpl	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalImpl           echo crystal_lang#impl(expand('%'), getpos('.'),/;"	c
CrystalSpecRunAll	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunAll     call crystal_lang#run_all_spec(<f-args>)$/;"	c
CrystalSpecRunCurrent	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunCurrent call crystal_lang#run_current_spec(<f-args>)$/;"	c
CrystalSpecSwitch	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecSwitch     call crystal_lang#switch_spec_file(<f-args>)$/;"	c
CucumberComplete	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
Current Result (Include screenshots where appropriate.)	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Current Result (Include screenshots where appropriate.)$/;"	t
Current Result (Include screenshots where appropriate.)	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Current Result (Include screenshots where appropriate.)$/;"	t
CursorMovement_BS_InEditMode	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
Customization	plugged/LeaderF/README.md	/^Customization$/;"	s
Customization	plugged/indentLine/README.md	/^## Customization$/;"	s
Customize	plugged/vim-quickui/MANUAL.md	/^## Customize$/;"	s
Customizing onedark.vim's look without forking the repository	plugged/onedark.vim/README.md	/^### Customizing onedark.vim's look without forking the repository$/;"	S
CwdPath	plugged/ncm2-path/pythonx/ncm2_path.py	/^class CwdPath(Ncm2Source):$/;"	c
Cycle	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -count=1 -bar -bang Cycle call s:cycle(<bang>0 ? -<count> : <count>)$/;"	c
D	autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
D	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> D             :exec g:Lf_py "bufExplManager.deleteBuffer()"<CR>$/;"	m
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DJANGO_SETTINGS_MODULE	plugged/ale/test/command_callback/python_paths/namespace_package_pytest/pytest.ini	/^DJANGO_SETTINGS_MODULE=foo.settings$/;"	k	section:pytest
DUMP_FILENAME	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^DUMP_FILENAME = ($/;"	v
Dark mode	plugged/gruvbox/README.md	/^### Dark mode$/;"	S
DartIndent	plugged/vim-polyglot/indent/dart.vim	/^function! DartIndent()$/;"	f
Date	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Date()$/;"	f
DebChangelogFoldText	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebChangelogFoldText()$/;"	f
DebCompleteBugs	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^fun! DebCompleteBugs(findstart, base)$/;"	f
DebControlFold	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! DebControlFold(l)$/;"	f
DebControlFoldText	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! DebControlFoldText()$/;"	f
DebGetChangelogFold	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebGetChangelogFold(lnum)$/;"	f
DebGetPkgSrcName	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebGetPkgSrcName(lineno)$/;"	f
Debugging	plugged/ncm2/README.md	/^## Debugging$/;"	s
Debugging	plugged/nvim-yarp/README.md	/^## Debugging$/;"	s
Default mappings	plugged/nerdcommenter/README.md	/^### Default mappings$/;"	S
Default settings	plugged/vim-polyglot/README.md	/^## Default settings$/;"	s
DeleteCurrentTabStop1_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	plugged/ultisnips/test/test_Editing.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
Demo	plugged/vim-signify/README.md	/^## Demo$/;"	s
DeopleteSourceTest	plugged/ale/test/python/test_deoplete_source.py	/^class DeopleteSourceTest(unittest.TestCase):$/;"	c
Dependencies	plugged/tagbar/README.md	/^## Dependencies$/;"	s
Describe your question, feature request, or bug.	plugged/LeaderF/ISSUE_TEMPLATE.md	/^### Describe your question, feature request, or bug.$/;"	S
Description	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/feature_request.md	/^#### Description$/;"	t
Description	plugged/nerdtree/.github/ISSUE_TEMPLATE/feature_request.md	/^#### Description$/;"	t
Description of Changes	plugged/nerdtree-git-plugin/.github/PULL_REQUEST_TEMPLATE.md	/^### Description of Changes$/;"	S
Description of Changes	plugged/nerdtree/.github/PULL_REQUEST_TEMPLATE.md	/^### Description of Changes$/;"	S
Developers	plugged/vim-devicons/README.md	/^Developers$/;"	s
DhallFormat	plugged/vim-polyglot/ftplugin/dhall.vim	/^function! DhallFormat()$/;"	f
DiffGitCached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^  command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:git/;"	c
DiffGitCached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdi/;"	c
Distribution	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Distribution(dist)$/;"	f
DoHighlight	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>DoHighlight() "{{{3$/;"	f
DoNotCrashOnUndoAndJumpInNestedSnippet	plugged/ultisnips/test/test_Editing.py	/^class DoNotCrashOnUndoAndJumpInNestedSnippet(_VimTest):$/;"	c
DoNotExpandAfterSpace_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
DoNotTrimSpacesAtEndOfLinesByDefault	plugged/ultisnips/test/test_Chars.py	/^class DoNotTrimSpacesAtEndOfLinesByDefault(_VimTest):$/;"	c
DoSyntaxDefinitions	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>DoSyntaxDefinitions() "{{{3$/;"	f
Documentation	plugged/gruvbox/README.md	/^Documentation$/;"	s
Documentation	plugged/nerdcommenter/README.md	/^### Documentation$/;"	S
Documentation	plugged/vim-airline/README.md	/^# Documentation$/;"	c
Documenting	plugged/ultisnips/CONTRIBUTING.md	/^## Documenting$/;"	s
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
Dracula for [Vim](http://www.vim.org/)	plugged/vim/README.md	/^# Dracula for [Vim](http:\/\/www.vim.org\/)$/;"	c
Drop	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Drop   :<line1>,<line2>call s:choose('drop')$/;"	c
DylanGetIndent	plugged/vim-polyglot/indent/dylan.vim	/^function DylanGetIndent()$/;"	f
Dynamic tabstop generation	plugged/ultisnips/doc/examples/tabstop-generation/README.md	/^# Dynamic tabstop generation$/;"	c
E2v	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range E2v :<line1>,<line2>call <SID>ExtendedRegex2VimRegexLineWise(<q-args>)$/;"	c
E2v	plugged/vim-polyglot/scripts/eregex.vim	/^function! E2v(extendedregex, ...)$/;"	f
EA	plugged/ultisnips/test/constant.py	/^EA = "#"  # Expand anonymous$/;"	v
END_BLOCKS	plugged/ale/test/script/block-padding-checker	/^END_BLOCKS = set(['endif', 'endfor', 'endwhile', 'endtry', 'endfunction'])$/;"	v
ENGINES	plugged/vim-translator/script/translator.py	/^ENGINES = {$/;"	v
ESC	plugged/ultisnips/test/constant.py	/^ESC = "\\x1b"$/;"	v
EX	plugged/ultisnips/test/constant.py	/^EX = "\\t"  # EXPAND$/;"	v
Edit	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Edit   :<line1>,<line2>call s:choose('edit')$/;"	c
EditBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 EditBookmarks call g:NERDTreeBookmark.Edit()$/;"	c
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class EditableTextObject(TextObject):$/;"	c
Email	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Email()$/;"	f
EndOfTextToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EndOfTextToken(Token):$/;"	c
Enforcement	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s
Environment (for bug reports)	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Environment (for bug reports)$/;"	t
Environment (for bug reports)	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Environment (for bug reports)$/;"	t
ErlangFoldText	plugged/vim-polyglot/ftplugin/erlang.vim	/^function ErlangFoldText()$/;"	f
ErlangIndent	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangIndent()$/;"	f
ErlangShowTokensInCurrentLine	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInCurrentLine()$/;"	f
ErlangShowTokensInLine	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInLine(line)$/;"	f
ErubyAtCursor	plugged/vim-polyglot/ftplugin/eruby.vim	/^function! ErubyAtCursor() abort$/;"	f
Esc	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>Esc(val, char) "{{{3 $/;"	f
EscapeCharToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/text_objects/escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
Example	plugged/vim-which-key/README.md	/^#### Example$/;"	t
Example for existing neovim rplugin porting to Vim 8	plugged/nvim-yarp/README.md	/^## Example for existing neovim rplugin porting to Vim 8$/;"	s
Examples	plugged/vim-signify/CONTRIBUTING.md	/^Examples$/;"	s
ExclusiveSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExitSnippetModeAfterTabstopZero	plugged/ultisnips/test/test_Expand.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExpandInTheMiddleOfLine_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
Expected Result	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Expected Result$/;"	t
Expected Result	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Expected Result$/;"	t
Expected behaviour	plugged/LeaderF/ISSUE_TEMPLATE.md	/^### Expected behaviour$/;"	S
Explorer	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^class Explorer(object):$/;"	c
Explorer	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer3.py	/^class Explorer(metaclass = ABCMeta):$/;"	c
ExtendedRegex2VimRegex	plugged/vim-polyglot/scripts/eregex.vim	/^function! ExtendedRegex2VimRegex(data)$/;"	f
Extensible pipeline	plugged/vim-airline/README.md	/^#### Extensible pipeline$/;"	t
Extras	plugged/vim-airline/README.md	/^## Extras$/;"	s
F.A.Q. (here, and in the [Wiki](https://github.com/preservim/nerdtree/wiki))	plugged/nerdtree/README.markdown	/^F.A.Q. (here, and in the [Wiki](https:\/\/github.com\/preservim\/nerdtree\/wiki))$/;"	s
FAQ	plugged/LeaderF/README.md	/^FAQ$/;"	s
FAQ	plugged/nerdtree-git-plugin/README.md	/^## FAQ$/;"	s
FAQ	plugged/vim-airline/README.md	/^# FAQ$/;"	c
FAQ	plugged/vim-fugitive/README.markdown	/^## FAQ$/;"	s
FAQ	plugged/vim-translator/README.md	/^## FAQ$/;"	s
FILESIZE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^for \/F %%F in ("%DB_FILE%.files") do set FILESIZE=%%~zF$/;"	v
FILESIZE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILESIZE=0$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FM_BITSCAN_WINDOWS	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    #define FM_BITSCAN_WINDOWS$/;"	d	file:
FM_BITSCAN_WINDOWS64	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^        #define FM_BITSCAN_WINDOWS64$/;"	d	file:
FM_BIT_LENGTH	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^        #define FM_BIT_LENGTH(/;"	d	file:
FM_BIT_LENGTH	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    #define FM_BIT_LENGTH(/;"	d	file:
FM_BIT_LENGTH	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    uint32_t FM_BIT_LENGTH(uint64_t x)$/;"	f	typeref:typename:uint32_t
FM_BitLength	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    uint32_t FM_BitLength(uint64_t x)$/;"	f	typeref:typename:uint32_t
FM_CTZ	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^#define FM_CTZ(/;"	d	file:
FOO	plugged/vista.vim/test/data/175.cpp	/^		FOO$/;"	e	enum:example::__anon517ee2f20403	file:
FORWARD	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    FORWARD = 1$/;"	v	class:JumpDirection
FOSimple_Break_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FUZZYENGINE_H_	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.h	/^#define FUZZYENGINE_H_$/;"	d
FUZZYMATCH_H_	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^#define FUZZYMATCH_H_$/;"	d
FalconGetIndent	plugged/vim-polyglot/indent/falcon.vim	/^function FalconGetIndent(...)$/;"	f
FeCircularQueue	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef struct FeCircularQueue$/;"	s	file:
FeCircularQueue	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^}FeCircularQueue;$/;"	t	typeref:struct:FeCircularQueue	file:
FeResult	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef struct FeResult$/;"	s	file:
FeResult	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^}FeResult;$/;"	t	typeref:struct:FeResult	file:
FeString	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef struct FeString$/;"	s	file:
FeString	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^}FeString;$/;"	t	typeref:struct:FeString	file:
Features	plugged/gruvbox/README.md	/^Features$/;"	s
Features	plugged/ncm2-ultisnips/README.md	/^## Features$/;"	s
Features	plugged/vim-airline/README.md	/^# Features$/;"	c
Features	plugged/vim-devicons/README.md	/^Features$/;"	s
Features	plugged/vim-translator/README.md	/^## Features$/;"	s
Features	plugged/vista.vim/README.md	/^## Features$/;"	s
FermHiLink	plugged/vim-polyglot/syntax/ferm.vim	/^  command! -nargs=+ FermHiLink highlight default link <args>$/;"	c
FermHiLink	plugged/vim-polyglot/syntax/ferm.vim	/^  command! -nargs=+ FermHiLink highlight link <args>$/;"	c
FileExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^class FileExplManager(Manager):$/;"	c
FileExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^class FileExplorer(Explorer):$/;"	c
FiletypeExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^class FiletypeExplManager(Manager):$/;"	c
FiletypeExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^class FiletypeExplorer(Explorer):$/;"	c
Filter	plugged/ncm2/pythonx/ncm2_filter/abbr_ellipsis.py	/^def Filter(**kargs):$/;"	f
Filter	plugged/ncm2/pythonx/ncm2_filter/dedup.py	/^def Filter(**kargs):$/;"	f
Filter	plugged/ncm2/pythonx/ncm2_filter/none.py	/^def Filter(**kargs):$/;"	f
Filter	plugged/ncm2/pythonx/ncm2_filter/same_word.py	/^def Filter(**kargs):$/;"	f
Filter	plugged/ncm2/pythonx/ncm2_filter/set_dup.py	/^def Filter(**kargs):$/;"	f
Filter	plugged/ncm2/pythonx/ncm2_filter/substitute.py	/^def Filter(**kargs):$/;"	f
Filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^class Filter(Base):$/;"	c
Finalise	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Finalise()$/;"	f
FinaliseMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>FinaliseMenu()$/;"	f
Finalised	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Finalised()$/;"	f
FindOpenBrace	plugged/vim-polyglot/indent/llvm.vim	/^function! FindOpenBrace(lnum)$/;"	f
FindReferences_nim	plugged/vim-polyglot/autoload/nim.vim	/^fun! FindReferences_nim() abort$/;"	f
Fine-tuned configuration	plugged/vim-airline/README.md	/^#### Fine-tuned configuration$/;"	t
FixBeginfigs	plugged/vim-polyglot/ftplugin/mp.vim	/^  command -nargs=0 FixBeginfigs call s:fix_beginfigs()$/;"	c
Fixedgq	plugged/vim-polyglot/ftplugin/typescript.vim	/^function! Fixedgq(lnum, count)$/;"	f
Fixup	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Fixup  :<line1>,<line2>call s:choose('fixup')$/;"	c
FloatWindow	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^class FloatWindow(object):$/;"	c
FoldOverwrite_Simple_ECR	plugged/ultisnips/test/test_Folding.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
Fold_DeleteMiddleLine_ECR	plugged/ultisnips/test/test_Folding.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
FoldingEnabled_SnippetWithFold_ExpectNoFolding	plugged/ultisnips/test/test_Folding.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
Font patching	plugged/indentLine/README.md	/^### Font patching$/;"	S
Foo	plugged/vista.vim/test/data/114.py	/^class Foo:$/;"	c
Foo	plugged/vista.vim/test/data/70.py	/^class Foo:$/;"	c
Foo	plugged/vista.vim/test/data/ctags_tree_view.py	/^class Foo:$/;"	c
FormatRmd	plugged/vim-polyglot/ftplugin/rmd.vim	/^function! FormatRmd()$/;"	f
FormatRrst	plugged/vim-polyglot/ftplugin/rrst.vim	/^function! FormatRrst()$/;"	f
FortranGetFixedIndent	plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetFixedIndent()$/;"	f
FortranGetFreeIndent	plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetFreeIndent()$/;"	f
FortranGetIndent	plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetIndent(lnum)$/;"	f
FugitiveCommonDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveConfigGet	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGet(name, ...) abort$/;"	f
FugitiveConfigGetAll	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetAll(name, ...) abort$/;"	f
FugitiveDetect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(path) abort$/;"	f
FugitiveExtractGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveGitPath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitPath(path) abort$/;"	f
FugitiveHead	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(path) abort$/;"	f
FugitiveParse	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveRemoteUrl	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveStatusline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveVimPath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveVimPath(path) abort$/;"	f
FugitiveWorkTree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
FullName	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>FullName()$/;"	f
Function list	plugged/vim-quickui/MANUAL.md	/^### Function list$/;"	S
FunctionExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^class FunctionExplManager(Manager):$/;"	c
FunctionExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^class FunctionExplorer(Explorer):$/;"	c
Future ideas and examples	plugged/vim-snippets/README.md	/^Future ideas and examples$/;"	s
FuzzyEngine	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^struct FuzzyEngine$/;"	s	file:
FuzzyEngine	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.h	/^typedef struct FuzzyEngine FuzzyEngine;$/;"	t	typeref:struct:FuzzyEngine
FuzzyMatch	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^class FuzzyMatch(object):$/;"	c
G	plugged/vim-fugitive/plugin/fugitive.vim	/^  command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Comm/;"	c
G	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range=% -bang G :<line1>,<line2>call <SID>Eglobal(<q-bang>, <q-args>)$/;"	c
GCUpper	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpper(what)$/;"	f
GCUpperCommon	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperCommon(what)$/;"	f
GCUpperDot	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperDot(what)$/;"	f
GCUpperSpace	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperSpace(what)$/;"	f
GET_HIGHLIGHTS	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    GET_HIGHLIGHTS,$/;"	e	enum:__anon07ea32bd0703	file:
GET_PATH_WEIGHT	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    GET_PATH_WEIGHT,$/;"	e	enum:__anon07ea32bd0703	file:
GET_WEIGHT	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    GET_WEIGHT = 0,$/;"	e	enum:__anon07ea32bd0703	file:
Gallery Screenshot	plugged/vim-quickui/README.md	/^## Gallery Screenshot$/;"	s
Generating Vim help files	plugged/ale/README.md	/^#### Generating Vim help files$/;"	t
GetAdaIndent	plugged/vim-polyglot/indent/ada.vim	/^function GetAdaIndent()$/;"	f
GetAnsibleIndent	plugged/vim-polyglot/indent/ansible.vim	/^function GetAnsibleIndent(lnum)$/;"	f
GetAppleScriptIndent	plugged/vim-polyglot/indent/applescript.vim	/^func! GetAppleScriptIndent()$/;"	f
GetAutoHotkeyIndent	plugged/vim-polyglot/indent/autohotkey.vim	/^function! GetAutoHotkeyIndent()$/;"	f
GetAwkIndent	plugged/vim-polyglot/indent/awk.vim	/^function! GetAwkIndent()$/;"	f
GetBladeIndent	plugged/vim-polyglot/indent/blade.vim	/^function! GetBladeIndent()$/;"	f
GetBstIndent	plugged/vim-polyglot/indent/bst.vim	/^function! GetBstIndent(lnum) abort$/;"	f
GetBzlIndent	plugged/vim-polyglot/indent/bzl.vim	/^function GetBzlIndent(lnum) abort$/;"	f
GetCSIndent	plugged/vim-polyglot/indent/cs.vim	/^function! GetCSIndent(lnum) abort$/;"	f
GetCSSIndent	plugged/vim-polyglot/indent/css.vim	/^function GetCSSIndent()$/;"	f
GetCabalIndent	plugged/vim-polyglot/indent/cabal.vim	/^function! GetCabalIndent()$/;"	f
GetCaddyfileIndent	plugged/vim-polyglot/indent/caddyfile.vim	/^function! GetCaddyfileIndent(lnum)$/;"	f
GetChaiScriptIndent	plugged/vim-polyglot/indent/chaiscript.vim	/^function! GetChaiScriptIndent()$/;"	f
GetClojureIndent	plugged/vim-polyglot/indent/clojure.vim	/^	function! GetClojureIndent()$/;"	f
GetCobolIndent	plugged/vim-polyglot/indent/cobol.vim	/^function! GetCobolIndent(lnum) abort$/;"	f
GetCoffeeIndent	plugged/vim-polyglot/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetConfigIndent	plugged/vim-polyglot/indent/config.vim	/^function GetConfigIndent()$/;"	f
GetCrystalIndent	plugged/vim-polyglot/indent/crystal.vim	/^function! GetCrystalIndent(...) abort$/;"	f
GetCucumberIndent	plugged/vim-polyglot/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetDIndent	plugged/vim-polyglot/indent/d.vim	/^function GetDIndent()$/;"	f
GetDTDIndent	plugged/vim-polyglot/indent/dtd.vim	/^function GetDTDIndent()$/;"	f
GetDosBatchIndent	plugged/vim-polyglot/indent/dosbatch.vim	/^function! GetDosBatchIndent(lnum)$/;"	f
GetEcrystalFold	plugged/vim-polyglot/indent/ecrystal.vim	/^function! GetEcrystalFold() abort$/;"	f
GetEcrystalIndent	plugged/vim-polyglot/indent/ecrystal.vim	/^function! GetEcrystalIndent() abort$/;"	f
GetEelixirIndent	plugged/vim-polyglot/indent/eelixir.vim	/^function! GetEelixirIndent(...)$/;"	f
GetElmIndent	plugged/vim-polyglot/indent/elm.vim	/^function! GetElmIndent()$/;"	f
GetErlangFold	plugged/vim-polyglot/ftplugin/erlang.vim	/^function GetErlangFold(lnum)$/;"	f
GetErubyIndent	plugged/vim-polyglot/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetEtermIndent	plugged/vim-polyglot/indent/eterm.vim	/^function GetEtermIndent()$/;"	f
GetFennelIndent	plugged/vim-polyglot/indent/fennel.vim	/^	function! GetFennelIndent()$/;"	f
GetFrameScriptIndent	plugged/vim-polyglot/indent/framescript.vim	/^function GetFrameScriptIndent()$/;"	f
GetFsharpIndent	plugged/vim-polyglot/indent/fsharp.vim	/^function! GetFsharpIndent()$/;"	f
GetGitconfigIndent	plugged/vim-polyglot/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetGitoliteIndent	plugged/vim-polyglot/indent/gitolite.vim	/^function! GetGitoliteIndent()$/;"	f
GetGoHTMLTmplIndent	plugged/vim-polyglot/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetGraphQLIndent	plugged/vim-polyglot/indent/graphql.vim	/^function GetGraphQLIndent()$/;"	f
GetHamlIndent	plugged/vim-polyglot/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHandlebarsIndent	plugged/vim-polyglot/indent/handlebars.vim	/^function! GetHandlebarsIndent(...)$/;"	f
GetHaskellIndent	plugged/vim-polyglot/indent/haskell.vim	/^function! GetHaskellIndent()$/;"	f
GetHelp	plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp echo system(s:pwsh_cmd . ' -NoLogo -NoProfile -NonInteract/;"	c
GetHelp	plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp silent exe '!' . s:pwsh_cmd . ' -NoLogo -NoProfile -NonInt/;"	c
GetHelp	plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp silent exe 'term ' . s:pwsh_cmd . ' -NoLogo -NoProfile -No/;"	c
GetHogIndent	plugged/vim-polyglot/indent/hog.vim	/^function GetHogIndent()$/;"	f
GetIdrisIndent	plugged/vim-polyglot/indent/idris.vim	/^function! GetIdrisIndent()$/;"	f
GetIdrisIndent	plugged/vim-polyglot/indent/idris2.vim	/^function! GetIdrisIndent()$/;"	f
GetJIndent	plugged/vim-polyglot/indent/j.vim	/^function GetJIndent() abort$/;"	f
GetJSONIndent	plugged/vim-polyglot/indent/json.vim	/^function GetJSONIndent()$/;"	f
GetJavaIndent	plugged/vim-polyglot/indent/java.vim	/^function GetJavaIndent()$/;"	f
GetJavascriptGraphQLIndent	plugged/vim-polyglot/after/indent/javascript-2.vim	/^function GetJavascriptGraphQLIndent()$/;"	f
GetJavascriptIndent	plugged/vim-polyglot/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetJsIndent	plugged/vim-polyglot/indent/qml.vim	/^function! GetJsIndent()$/;"	f
GetJstIndent	plugged/vim-polyglot/indent/jst.vim	/^function! GetJstIndent(...)$/;"	f
GetJsxIndent	plugged/vim-polyglot/after/indent/jsx.vim	/^function! GetJsxIndent()$/;"	f
GetJsxIndent	plugged/vim-polyglot/after/indent/tsx.vim	/^function! GetJsxIndent()$/;"	f
GetJuliaIndent	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaIndent()$/;"	f
GetJuliaNestingBrackets	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingBrackets(lnum, c)$/;"	f
GetJuliaNestingStruct	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingStruct(lnum, ...)$/;"	f
GetKotlinIndent	plugged/vim-polyglot/indent/kotlin.vim	/^function! GetKotlinIndent()$/;"	f
GetLLVMIndent	plugged/vim-polyglot/indent/llvm.vim	/^function! GetLLVMIndent()$/;"	f
GetLedgerIndent	plugged/vim-polyglot/indent/ledger.vim	/^function GetLedgerIndent(...)$/;"	f
GetLilyPondIndent	plugged/vim-polyglot/indent/lilypond.vim	/^function GetLilyPondIndent()$/;"	f
GetLiquidIndent	plugged/vim-polyglot/indent/liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLitCoffeeIndent	plugged/vim-polyglot/indent/litcoffee.vim	/^function GetLitCoffeeIndent()$/;"	f
GetLiveScriptIndent	plugged/vim-polyglot/indent/ls.vim	/^function! GetLiveScriptIndent(curlinenum)$/;"	f
GetLogtalkIndent	plugged/vim-polyglot/indent/logtalk.vim	/^function! GetLogtalkIndent()$/;"	f
GetLuaIndent	plugged/vim-polyglot/indent/lua.vim	/^function GetLuaIndent()$/;"	f
GetMakeIndent	plugged/vim-polyglot/indent/make.vim	/^function GetMakeIndent()$/;"	f
GetMakeIndent	plugged/vim-polyglot/indent/omake.vim	/^function GetMakeIndent()$/;"	f
GetMakoIndent	plugged/vim-polyglot/indent/mako.vim	/^function GetMakoIndent()$/;"	f
GetMarkdownIndent	plugged/vim-polyglot/indent/markdown.vim	/^function GetMarkdownIndent()$/;"	f
GetMesonIndent	plugged/vim-polyglot/indent/meson.vim	/^function GetMesonIndent(lnum)$/;"	f
GetMetaPostIndent	plugged/vim-polyglot/indent/mp.vim	/^function GetMetaPostIndent()$/;"	f
GetMetaPostIndentIntern	plugged/vim-polyglot/indent/mp.vim	/^function! GetMetaPostIndentIntern()$/;"	f
GetMoonIndent	plugged/vim-polyglot/indent/moon.vim	/^function! GetMoonIndent(curlinenum)$/;"	f
GetNimIndent	plugged/vim-polyglot/indent/nim.vim	/^function! GetNimIndent(lnum)$/;"	f
GetNixIndent	plugged/vim-polyglot/indent/nix.vim	/^function! GetNixIndent()$/;"	f
GetNsisIndent	plugged/vim-polyglot/indent/nsis.vim	/^function! GetNsisIndent(lnum)$/;"	f
GetOCamlIndent	plugged/vim-polyglot/indent/ocaml.vim	/^function! GetOCamlIndent()$/;"	f
GetObjCIndentImproved	plugged/vim-polyglot/after/indent/objc.vim	/^function! GetObjCIndentImproved()$/;"	f
GetOccamIndent	plugged/vim-polyglot/indent/occam.vim	/^function GetOccamIndent()$/;"	f
GetOctaveIndent	plugged/vim-polyglot/indent/octave.vim	/^function! GetOctaveIndent()$/;"	f
GetOdinIndent	plugged/vim-polyglot/indent/odin.vim	/^function! GetOdinIndent(lnum)$/;"	f
GetPHPGraphQLIndent	plugged/vim-polyglot/after/indent/php.vim	/^function GetPHPGraphQLIndent()$/;"	f
GetPascalIndent	plugged/vim-polyglot/indent/pascal.vim	/^function! GetPascalIndent( line_num )$/;"	f
GetPerlIndent	plugged/vim-polyglot/indent/perl.vim	/^function! GetPerlIndent()$/;"	f
GetPlantUMLIndent	plugged/vim-polyglot/indent/plantuml.vim	/^function! GetPlantUMLIndent(...) abort$/;"	f
GetPoVRayIndent	plugged/vim-polyglot/indent/pov.vim	/^function GetPoVRayIndent()$/;"	f
GetPotionFold	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! GetPotionFold(lnum)$/;"	f
GetPrologIndent	plugged/vim-polyglot/indent/prolog.vim	/^function! GetPrologIndent()$/;"	f
GetPugIndent	plugged/vim-polyglot/indent/pug.vim	/^function! GetPugIndent()$/;"	f
GetPuppetIndent	plugged/vim-polyglot/indent/puppet.vim	/^function! GetPuppetIndent(...)$/;"	f
GetPurescriptIndent	plugged/vim-polyglot/indent/purescript.vim	/^function! GetPurescriptIndent()$/;"	f
GetPythonIndent	plugged/vim-polyglot/indent/gdscript3.vim	/^function GetPythonIndent(lnum)$/;"	f
GetPythonPEPIndent	plugged/vim-polyglot/indent/cython.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetPythonPEPIndent	plugged/vim-polyglot/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetRSTIndent	plugged/vim-polyglot/indent/rst.vim	/^function GetRSTIndent()$/;"	f
GetRakuIndent	plugged/vim-polyglot/indent/raku.vim	/^function! GetRakuIndent()$/;"	f
GetReadlineIndent	plugged/vim-polyglot/indent/readline.vim	/^function GetReadlineIndent()$/;"	f
GetReasonIndent	plugged/vim-polyglot/indent/reason.vim	/^function GetReasonIndent(lnum)$/;"	f
GetRmdIndent	plugged/vim-polyglot/indent/rmd.vim	/^function GetRmdIndent()$/;"	f
GetRnowebIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^function GetRnowebIndent()$/;"	f
GetRrstIndent	plugged/vim-polyglot/indent/rrst.vim	/^function GetRrstIndent()$/;"	f
GetRstIndent	plugged/vim-polyglot/indent/rrst.vim	/^function GetRstIndent()$/;"	f
GetRubyIndent	plugged/vim-polyglot/indent/ruby.vim	/^function! GetRubyIndent(...) abort$/;"	f
GetRustIndent	plugged/vim-polyglot/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f
GetSASIndent	plugged/vim-polyglot/indent/sas.vim	/^function! GetSASIndent()$/;"	f
GetSCSSIndent	plugged/vim-polyglot/indent/scss.vim	/^function GetSCSSIndent()$/;"	f
GetSDLIndent	plugged/vim-polyglot/indent/sdl.vim	/^function! GetSDLIndent()$/;"	f
GetSMLIndent	plugged/vim-polyglot/indent/sml.vim	/^function! GetSMLIndent()$/;"	f
GetSQLIndent	plugged/vim-polyglot/indent/pgsql.vim	/^function! GetSQLIndent()$/;"	f
GetSassIndent	plugged/vim-polyglot/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetScalaIndent	plugged/vim-polyglot/indent/scala.vim	/^function! GetScalaIndent()$/;"	f
GetSlimIndent	plugged/vim-polyglot/indent/slim.vim	/^function! GetSlimIndent()$/;"	f
GetSlimeIndent	plugged/vim-polyglot/indent/slime.vim	/^function! GetSlimeIndent()$/;"	f
GetSolidityIndent	plugged/vim-polyglot/indent/solidity.vim	/^function GetSolidityIndent()$/;"	f
GetSshconfigIndent	plugged/vim-polyglot/indent/sshconfig.vim	/^function GetSshconfigIndent(lnum)$/;"	f
GetStylusIndent	plugged/vim-polyglot/indent/stylus.vim	/^function! GetStylusIndent()$/;"	f
GetSvelteIndent	plugged/vim-polyglot/indent/svelte.vim	/^function! GetSvelteIndent()$/;"	f
GetTFIndent	plugged/vim-polyglot/indent/tf.vim	/^function GetTFIndent()$/;"	f
GetTclIndent	plugged/vim-polyglot/indent/tcl.vim	/^function GetTclIndent()$/;"	f
GetTeXIndent	plugged/vim-polyglot/indent/tex.vim	/^function! GetTeXIndent() " {{{$/;"	f
GetTeraTermIndent	plugged/vim-polyglot/indent/teraterm.vim	/^function! GetTeraTermIndent(lnum)$/;"	f
GetTildeIndent	plugged/vim-polyglot/indent/tilde.vim	/^function GetTildeIndent(lnum)$/;"	f
GetTreetopIndent	plugged/vim-polyglot/indent/treetop.vim	/^function GetTreetopIndent()$/;"	f
GetTsxIndent	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! GetTsxIndent()$/;"	f
GetTwigIndent	plugged/vim-polyglot/indent/twig.vim	/^fun! GetTwigIndent(currentLineNumber)$/;"	f
GetTypescriptGraphQLIndent	plugged/vim-polyglot/after/indent/typescript.vim	/^function GetTypescriptGraphQLIndent()$/;"	f
GetTypescriptIndent	plugged/vim-polyglot/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetVHDLindent	plugged/vim-polyglot/indent/vhdl.vim	/^function GetVHDLindent()$/;"	f
GetValaIndent	plugged/vim-polyglot/indent/vala.vim	/^function GetValaIndent(lnum)$/;"	f
GetVerilogIndent	plugged/vim-polyglot/indent/verilog.vim	/^function GetVerilogIndent()$/;"	f
GetVueIndent	plugged/vim-polyglot/indent/vue.vim	/^function! GetVueIndent()$/;"	f
GetXF86ConfIndent	plugged/vim-polyglot/indent/xf86conf.vim	/^function GetXF86ConfIndent()$/;"	f
GetXinetdIndent	plugged/vim-polyglot/indent/xinetd.vim	/^function GetXinetdIndent()$/;"	f
GetYAMLIndent	plugged/vim-polyglot/indent/yaml.vim	/^function GetYAMLIndent(lnum)$/;"	f
GetYaccIndent	plugged/vim-polyglot/indent/yacc.vim	/^function GetYaccIndent()$/;"	f
GetZigIndent	plugged/vim-polyglot/indent/zig.vim	/^function! GetZigIndent(lnum)$/;"	f
GetZimbuIndent	plugged/vim-polyglot/indent/zimbu.vim	/^func GetZimbuIndent(lnum)$/;"	f
Getting help	plugged/vim-snippets/README.md	/^Getting help$/;"	s
Git	plugged/vim-fugitive/plugin/fugitive.vim	/^command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Comman/;"	c
GivenCommandOutput	plugged/ale/autoload/ale/assert.vim	/^    command! -nargs=+ GivenCommandOutput :call ale#assert#GivenCommandOutput(<args>)$/;"	c
Global color overrides	plugged/onedark.vim/README.md	/^#### Global color overrides$/;"	t
GoIndent	plugged/vim-polyglot/indent/go.vim	/^function! GoIndent(lnum) abort$/;"	f
GoogleTranslator	plugged/vim-translator/script/translator.py	/^class GoogleTranslator(BasicTranslator):$/;"	c
GotoDefinition_nim	plugged/vim-polyglot/autoload/nim.vim	/^fun! GotoDefinition_nim() abort$/;"	f
GotoDefinition_nim_ready	plugged/vim-polyglot/autoload/nim.vim	/^fun! GotoDefinition_nim_ready(def_output) abort$/;"	f
GruvboxHlsHideCursor	plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsHideCursor()$/;"	f
GruvboxHlsShowCursor	plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsShowCursor()$/;"	f
GtagsExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^class GtagsExplManager(Manager):$/;"	c
GtagsExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^class GtagsExplorer(Explorer):$/;"	c
GtagsParameter	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef struct GtagsParameter$/;"	s	file:
GtagsParameter	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^}GtagsParameter;$/;"	t	typeref:struct:GtagsParameter	file:
Guidelines	plugged/ale/.github/CONTRIBUTING.md	/^## Guidelines$/;"	s
Gutentags	plugged/vim-gutentags/README.md	/^# Gutentags$/;"	c
GutentagsToggleEnabled	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	plugged/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
HaiciTranslator	plugged/vim-translator/script/translator.py	/^class HaiciTranslator(BasicTranslator):$/;"	c
HamGetFreeIndent	plugged/vim-polyglot/indent/hamster.vim	/^function HamGetFreeIndent()$/;"	f
HamGetIndent	plugged/vim-polyglot/indent/hamster.vim	/^function HamGetIndent(lnum)$/;"	f
HaxeHiLink	plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi def link <args>$/;"	c
HaxeHiLink	plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi link <args>$/;"	c
HeaderDecrease	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderDecrease call s:HeaderDecrease(<line1>, <line2>)$/;"	c
HeaderIncrease	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderIncrease call s:HeaderDecrease(<line1>, <line2>, 1)$/;"	c
Help viewer	plugged/vim-quickui/MANUAL.md	/^### Help viewer$/;"	S
HelpExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^class HelpExplManager(Manager):$/;"	c
HelpExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^class HelpExplorer(Explorer):$/;"	c
Hi	plugged/vim-polyglot/syntax/sdl.vim	/^command -nargs=+ Hi     hi def <args>$/;"	c
Hi	plugged/vim-polyglot/syntax/xpm2.vim	/^command -nargs=+ Hi hi def <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/common.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>HiLink(name, target) "{{{3$/;"	f
HiLink	plugged/vim-polyglot/syntax/fbs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fbs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/jinja2.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lilypond.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lilypond.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/llvm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/llvm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/puppet.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/python.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/python.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/raku.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/raku.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/sexplib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/sexplib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tablegen.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tablegen.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tptp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tptp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/unison.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/unison.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Hide statusline	plugged/vim-which-key/README.md	/^#### Hide statusline$/;"	t
Highlight	plugged/vim-translator/README.md	/^## Highlight$/;"	s
HighlightGroup	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^typedef struct HighlightGroup$/;"	s
HighlightGroup	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^}HighlightGroup;$/;"	t	typeref:struct:HighlightGroup
HighlightPos	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^typedef struct HighlightPos$/;"	s
HighlightPos	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^}HighlightPos;$/;"	t	typeref:struct:HighlightPos
Historical notes	plugged/vim-snippets/README.md	/^Historical notes$/;"	s
HistoryExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^class HistoryExplManager(Manager):$/;"	c
HistoryExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^class HistoryExplorer(Explorer):$/;"	c
How Do I write Ncm2 Source?	plugged/ncm2/README.md	/^## How Do I write Ncm2 Source?$/;"	s
How can I change default arrows?	plugged/nerdtree/README.markdown	/^#### How can I change default arrows?$/;"	t
How can I close vim if the only window left open is a NERDTree?	plugged/nerdtree/README.markdown	/^#### How can I close vim if the only window left open is a NERDTree?$/;"	t
How can I map a specific key or shortcut to open NERDTree?	plugged/nerdtree/README.markdown	/^#### How can I map a specific key or shortcut to open NERDTree?$/;"	t
How can I open NERDTree automatically when vim starts up on opening a directory?	plugged/nerdtree/README.markdown	/^#### How can I open NERDTree automatically when vim starts up on opening a directory?$/;"	t
How can I open a NERDTree automatically when vim starts up if no files were specified?	plugged/nerdtree/README.markdown	/^#### How can I open a NERDTree automatically when vim starts up if no files were specified?$/;"	t
How can I open a NERDTree automatically when vim starts up?	plugged/nerdtree/README.markdown	/^#### How can I open a NERDTree automatically when vim starts up?$/;"	t
How should this be manually tested?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### How should this be manually tested?$/;"	t
How to change border style	plugged/vim-quickui/MANUAL.md	/^### How to change border style$/;"	S
How to change preview window size	plugged/vim-quickui/MANUAL.md	/^### How to change preview window size$/;"	S
How to change the color scheme	plugged/vim-quickui/MANUAL.md	/^### How to change the color scheme$/;"	S
How to contribute	plugged/vim-devicons/CONTRIBUTING.md	/^## How to contribute$/;"	s
How to use it	plugged/ranger.vim/README.md	/^How to use it$/;"	s
How?	plugged/vim-gutentags/README.md	/^## How?$/;"	s
HtmlHiLink	plugged/vim-polyglot/syntax/handlebars.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/handlebars.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndent	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent()$/;"	f
HtmlIndent	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent()$/;"	f
HtmlIndentClose	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentClose(lnum)$/;"	f
HtmlIndentCloseAlt	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentOpen	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpen(lnum)$/;"	f
HtmlIndentOpenAlt	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlIndent_CheckUserSettings	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f
HtmlIndent_CheckUserSettings	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f
HtmlIndent_CountBraces	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f
HtmlIndent_CountBraces	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f
HtmlIndent_FindStartTag	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f
HtmlIndent_FindStartTag	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f
HtmlIndent_FindTagEnd	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f
HtmlIndent_FindTagEnd	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f
HtmlIndent_FindTagStart	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f
HtmlIndent_FindTagStart	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f
HtmlIndent_IsOpenTag	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f
HtmlIndent_IsOpenTag	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f
I	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> I <NOP>$/;"	m
ICibaTranslator	plugged/vim-translator/script/translator.py	/^class ICibaTranslator(BasicTranslator):$/;"	c
IMMoving_AcceptInputWhenMoved_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
INDENTATION_RE	plugged/ale/test/script/block-padding-checker	/^INDENTATION_RE = re.compile(r'^ *')$/;"	v
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
IWrite	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IWrite(str)$/;"	f
IWrite	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IWrite(str)$/;"	f
IcalHiLink	plugged/vim-polyglot/syntax/icalendar.vim	/^command! -nargs=+ IcalHiLink hi def link <args>$/;"	c
IdrisAddClause	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisAddClause(proof)$/;"	f
IdrisAddClause	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisAddClause(proof)$/;"	f
IdrisAddMissing	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisAddMissing()$/;"	f
IdrisAddMissing	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisAddMissing()$/;"	f
IdrisCaseSplit	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisCaseSplit()$/;"	f
IdrisCaseSplit	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisCaseSplit()$/;"	f
IdrisDocFold	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisDocFold(lineNum)$/;"	f
IdrisDocFold	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisDocFold(lineNum)$/;"	f
IdrisEval	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisEval()$/;"	f
IdrisEval	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisEval()$/;"	f
IdrisFold	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisFold(lineNum)$/;"	f
IdrisFold	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisFold(lineNum)$/;"	f
IdrisGenerateDef	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisGenerateDef()$/;"	f
IdrisHideResponseWin	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisHideResponseWin()$/;"	f
IdrisHideResponseWin	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisHideResponseWin()$/;"	f
IdrisMakeCase	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeCase()$/;"	f
IdrisMakeCase	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeCase()$/;"	f
IdrisMakeLemma	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeLemma()$/;"	f
IdrisMakeLemma	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeLemma()$/;"	f
IdrisMakeWith	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeWith()$/;"	f
IdrisMakeWith	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeWith()$/;"	f
IdrisProofSearch	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisProofSearch(hint)$/;"	f
IdrisProofSearch	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisProofSearch(hint)$/;"	f
IdrisRefine	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisRefine()$/;"	f
IdrisRefine	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisRefine()$/;"	f
IdrisReload	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisReload(q)$/;"	f
IdrisReload	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisReload(q)$/;"	f
IdrisReloadToLine	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisReloadToLine(cline)$/;"	f
IdrisReloadToLine	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisReloadToLine(cline)$/;"	f
IdrisResponseWin	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisResponseWin()$/;"	f
IdrisResponseWin	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisResponseWin()$/;"	f
IdrisShowDoc	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowDoc()$/;"	f
IdrisShowDoc	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowDoc()$/;"	f
IdrisShowResponseWin	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowResponseWin()$/;"	f
IdrisShowResponseWin	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowResponseWin()$/;"	f
IdrisShowType	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowType()$/;"	f
IdrisShowType	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowType()$/;"	f
Implementation	plugged/ultisnips/doc/examples/autojump-if-empty/README.md	/^## Implementation$/;"	s
IndentLevel	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! IndentLevel(lnum)$/;"	f
IndentLinesDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! -bar IndentLinesDisable call s:IndentLinesDisable()$/;"	c
IndentLinesDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! -bar IndentLinesDisable let b:indentLine_enabled = 0 | call s:IndentLinesDisable()$/;"	c
IndentLinesEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! -bar IndentLinesEnable call s:IndentLinesEnable()$/;"	c
IndentLinesEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! -bar IndentLinesEnable let b:indentLine_enabled = 1 | call s:IndentLinesEnable()$/;"	c
IndentLinesReset	plugged/indentLine/after/plugin/indentLine.vim	/^command! -nargs=? IndentLinesReset call s:ResetWidth(<f-args>)$/;"	c
IndentLinesToggle	plugged/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesToggle call s:IndentLinesToggle()$/;"	c
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^class IndentUtil:$/;"	c
Information	plugged/ale/.github/ISSUE_TEMPLATE/report-a-bug.md	/^## Information$/;"	s
InitPureScript	plugged/vim-polyglot/ftplugin/purescript.vim	/^fun! InitPureScript()$/;"	f
InsertNToc	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertNToc call s:InsertToc('numbers', <args>)$/;"	c
InsertToc	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertToc call s:InsertToc('bullets', <args>)$/;"	c
Install	plugged/ncm2-ultisnips/README.md	/^## Install$/;"	s
Install	plugged/ncm2/README.md	/^## Install$/;"	s
Install	plugged/vim/INSTALL.md	/^#### Install$/;"	t
Install	plugged/vim/README.md	/^## Install$/;"	s
Install using other plugin managers	plugged/vim/INSTALL.md	/^#### Install using other plugin managers$/;"	t
Installation	plugged/LeaderF/README.md	/^Installation$/;"	s
Installation	plugged/indentLine/README.md	/^## Installation$/;"	s
Installation	plugged/ncm2-vim/README.md	/^## Installation$/;"	s
Installation	plugged/nerdcommenter/README.md	/^## Installation$/;"	s
Installation	plugged/nerdtree-git-plugin/README.md	/^## Installation$/;"	s
Installation	plugged/nerdtree/README.markdown	/^Installation$/;"	s
Installation	plugged/onedark.vim/README.md	/^## Installation$/;"	s
Installation	plugged/onedark.vim/README.md	/^### Installation$/;"	S
Installation	plugged/ranger.vim/README.md	/^Installation$/;"	s
Installation	plugged/tagbar/README.md	/^## Installation$/;"	s
Installation	plugged/vim-airline/README.md	/^# Installation$/;"	c
Installation	plugged/vim-devicons/README.md	/^Installation$/;"	s
Installation	plugged/vim-fugitive/README.markdown	/^## Installation$/;"	s
Installation	plugged/vim-polyglot/README.md	/^## Installation$/;"	s
Installation	plugged/vim-quickui/MANUAL.md	/^## Installation$/;"	s
Installation	plugged/vim-quickui/README.md	/^## Installation$/;"	s
Installation	plugged/vim-signify/README.md	/^## Installation$/;"	s
Installation	plugged/vim-snippets/README.md	/^Installation$/;"	s
Installation	plugged/vim-translator/README.md	/^## Installation$/;"	s
Installation	plugged/vim-which-key/README.md	/^## Installation$/;"	s
Installation	plugged/vista.vim/README.md	/^## Installation$/;"	s
Integrating with powerline fonts	plugged/vim-airline/README.md	/^# Integrating with powerline fonts$/;"	c
Integration with other plugins	plugged/vim-devicons/DEVELOPER.md	/^#### Integration with other plugins$/;"	t
Introduction	plugged/ncm2/README.md	/^## Introduction$/;"	s
Introduction	plugged/nerdtree/README.markdown	/^Introduction$/;"	s
Introduction	plugged/vim-which-key/README.md	/^## Introduction$/;"	s
Introduction	plugged/vista.vim/README.md	/^## Introduction$/;"	s
Is there any support for `git` flags?	plugged/nerdtree/README.markdown	/^#### Is there any support for `git` flags?$/;"	t
IsBeginBlockByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsBeginBlockByStr(str)$/;"	f
IsDoubleCoronByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsDoubleCoronByStr(str)$/;"	f
IsEndBlockByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsEndBlockByStr(str)$/;"	f
IsFunctionArgPar	plugged/vim-polyglot/indent/julia.vim	/^function IsFunctionArgPar(lnum, c)$/;"	f
IsIfStatementByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsIfStatementByStr(str)$/;"	f
IsInBrackets	plugged/vim-polyglot/indent/julia.vim	/^function IsInBrackets(lnum, c)$/;"	f
IsInContinuationImportLine	plugged/vim-polyglot/indent/julia.vim	/^function IsInContinuationImportLine(lnum)$/;"	f
IsInDocString	plugged/vim-polyglot/indent/julia.vim	/^function IsInDocString(lnum)$/;"	f
IsInsideOfBlockByNum	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsInsideOfBlockByNum(line_num)$/;"	f
IsInsidePythonBlock	plugged/vim-polyglot/indent/mako.vim	/^function IsInsidePythonBlock(startline)$/;"	f
IsReturnByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsReturnByStr(str)$/;"	f
Issue Description	plugged/onedark.vim/.github/ISSUE_TEMPLATE.md	/^### Issue Description$/;"	S
J	keymap.vim	/^nmap J :bp!<CR>$/;"	m
JB	plugged/ultisnips/test/constant.py	/^JB = "+"  # Jump backwards$/;"	v
JF	plugged/ultisnips/test/constant.py	/^JF = "?"  # Jump forwards$/;"	v
JsonnetFmt	plugged/vim-polyglot/ftplugin/jsonnet.vim	/^command! -nargs=0 JsonnetFmt call jsonnet#Format()$/;"	c
JuliaBlocks	plugged/vim-polyglot/autoload/julia_blocks.vim	/^  augroup JuliaBlocks$/;"	a
JuliaDoc	plugged/vim-polyglot/ftplugin/julia.vim	/^command! -nargs=1 -buffer -complete=customlist,julia#doc#complete JuliaDoc call julia#doc#open(</;"	c
JuliaDoc	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^command! -nargs=1 -buffer -complete=customlist,julia#doc#complete JuliaDoc call julia#doc#open(</;"	c
JuliaDocKeywordprg	plugged/vim-polyglot/ftplugin/julia.vim	/^command! -nargs=1 -buffer JuliaDocKeywordprg call julia#doc#keywordprg(<q-args>)$/;"	c
JuliaDocKeywordprg	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^command! -nargs=1 -buffer JuliaDocKeywordprg call julia#doc#keywordprg(<q-args>)$/;"	c
JuliaGetMatchWords	plugged/vim-polyglot/ftplugin/julia.vim	/^  function! JuliaGetMatchWords()$/;"	f
JuliaMatch	plugged/vim-polyglot/indent/julia.vim	/^function JuliaMatch(lnum, str, regex, st, ...)$/;"	f
JumpDirection	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class JumpDirection(Enum):$/;"	c
JumpForward_DefSnippet	plugged/ultisnips/test/test_Editing.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
JumpToMatch	plugged/vim-polyglot/indent/julia.vim	/^function JumpToMatch(lnum, last_closed_bracket)$/;"	f
K	keymap.vim	/^nmap K :bn!<CR>$/;"	m
K	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>K <Plug>(llvm-goto-definition)$/;"	m
K	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\/;"	m
K	plugged/vim-polyglot/ftplugin/racket.vim	/^  nmap <buffer> K <Plug>RacketDoc$/;"	m
K	plugged/vim-polyglot/ftplugin/racket.vim	/^  vmap <buffer> K <Plug>RacketDoc$/;"	m
K	plugged/vim-quickui/test/menu_example.vim	/^nnoremap <silent>K :call quickui#tools#clever_context('k', g:context_menu_k, {})<cr>$/;"	m
Key Mappings	plugged/vim-translator/README.md	/^## Key Mappings$/;"	s
L	autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> L             :exec g:Lf_py "lineExplManager.outputToLoclist()"<C/;"	m
L	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> L             :exec g:Lf_py "rgExplManager.outputToLoclist()"<CR>$/;"	m
L2UAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  augroup L2UAutoSub$/;"	a
L2UInit	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^    augroup L2UInit$/;"	a
L2UTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  augroup L2UTab$/;"	a
LLI	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    command! -buffer -nargs=? -bar -complete=file LLI call <SID>run_lli(<f-args>)$/;"	c
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LS	plugged/ultisnips/test/constant.py	/^LS = "@"  # List snippets$/;"	v
LaTeXtoUnicode#AutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#AutoSub(...)$/;"	f
LaTeXtoUnicode#CmdTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#CmdTab(trigger)$/;"	f
LaTeXtoUnicode#Disable	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Disable(...)$/;"	f
LaTeXtoUnicode#Enable	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Enable(...)$/;"	f
LaTeXtoUnicode#FallbackCallback	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#FallbackCallback()$/;"	f
LaTeXtoUnicode#Init	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Init(...)$/;"	f
LaTeXtoUnicode#PutLiteral	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#PutLiteral(k)$/;"	f
LaTeXtoUnicode#Refresh	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Refresh()$/;"	f
LaTeXtoUnicode#Tab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Tab()$/;"	f
LaTeXtoUnicode#Toggle	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Toggle()$/;"	f
LaTeXtoUnicode#omnifunc	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#omnifunc(findstart, base)$/;"	f
Language maintainers	plugged/vim-snippets/README.md	/^Language maintainers$/;"	s
Language packs	plugged/vim-polyglot/README.md	/^## Language packs$/;"	s
LastBlockIndent	plugged/vim-polyglot/indent/julia.vim	/^function LastBlockIndent(lnum)$/;"	f
LeaderF	plugged/LeaderF/README.md	/^LeaderF$/;"	c
LeaderF_Gtags	plugged/LeaderF/plugin/leaderf.vim	/^augroup LeaderF_Gtags$/;"	a
LeaderF_Mru	plugged/LeaderF/plugin/leaderf.vim	/^augroup LeaderF_Mru$/;"	a
Leaderf	plugged/LeaderF/plugin/leaderf.vim	/^command! -nargs=* -bang -complete=customlist,leaderf#Any#parseArguments Leaderf call leaderf#Any/;"	c
LeaderfBufTag	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 -bang LeaderfBufTag Leaderf<bang> bufTag$/;"	c
LeaderfBufTagAll	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 -bang LeaderfBufTagAll Leaderf<bang> bufTag --all$/;"	c
LeaderfBufTagAllCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 -bang LeaderfBufTagAllCword Leaderf<bang> bufTag --all --cword$/;"	c
LeaderfBufTagAllPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 -bang LeaderfBufTagAllPattern Leaderf<bang> bufTag --all --input <args>$/;"	c
LeaderfBufTagCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 -bang LeaderfBufTagCword Leaderf<bang> bufTag --cword$/;"	c
LeaderfBufTagPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 -bang LeaderfBufTagPattern Leaderf<bang> bufTag --input <args>$/;"	c
LeaderfBuffer	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfBuffer Leaderf buffer$/;"	c
LeaderfBufferAll	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfBufferAll Leaderf buffer --all$/;"	c
LeaderfBufferCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfBufferCword Leaderf buffer --cword$/;"	c
LeaderfBufferPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 LeaderfBufferPattern Leaderf buffer --input <args>$/;"	c
LeaderfColorscheme	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfColorscheme Leaderf colorscheme$/;"	c
LeaderfCommand	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfCommand Leaderf command$/;"	c
LeaderfFile	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=? -complete=dir LeaderfFile Leaderf file <q-args>$/;"	c
LeaderfFileCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfFileCword Leaderf file --cword$/;"	c
LeaderfFileFullScreen	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=? -complete=dir LeaderfFileFullScreen Leaderf file --fullScreen <q-args>$/;"	c
LeaderfFilePattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 LeaderfFilePattern Leaderf file --input <args>$/;"	c
LeaderfFiletype	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfFiletype Leaderf filetype$/;"	c
LeaderfFunction	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 -bang LeaderfFunction Leaderf<bang> function$/;"	c
LeaderfFunctionAll	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 -bang LeaderfFunctionAll Leaderf<bang> function --all$/;"	c
LeaderfFunctionAllCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 -bang LeaderfFunctionAllCword Leaderf<bang> function --all --cword$/;"	c
LeaderfFunctionAllPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 -bang LeaderfFunctionAllPattern Leaderf<bang> function --all --input <arg/;"	c
LeaderfFunctionCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 -bang LeaderfFunctionCword Leaderf<bang> function --cword$/;"	c
LeaderfFunctionPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 -bang LeaderfFunctionPattern Leaderf<bang> function --input <args>$/;"	c
LeaderfHelp	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfHelp Leaderf help$/;"	c
LeaderfHelpCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfHelpCword Leaderf help --cword$/;"	c
LeaderfHelpPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 LeaderfHelpPattern Leaderf help --input <args>$/;"	c
LeaderfHistoryCmd	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfHistoryCmd Leaderf cmdHistory$/;"	c
LeaderfHistorySearch	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfHistorySearch exec "Leaderf searchHistory" | silent! norm! n$/;"	c
LeaderfInstallCExtension	plugged/LeaderF/plugin/leaderf.vim	/^command! -nargs=0 LeaderfInstallCExtension call s:InstallCExtension(1)$/;"	c
LeaderfLine	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfLine Leaderf line$/;"	c
LeaderfLineAll	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfLineAll Leaderf line --all$/;"	c
LeaderfLineAllCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfLineAllCword Leaderf line --all --cword$/;"	c
LeaderfLineAllPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 LeaderfLineAllPattern Leaderf line --all --input <args>$/;"	c
LeaderfLineCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfLineCword Leaderf line --cword$/;"	c
LeaderfLinePattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 LeaderfLinePattern Leaderf line --input <args>$/;"	c
LeaderfLocList	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfLocList  Leaderf loclist$/;"	c
LeaderfMru	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfMru Leaderf mru$/;"	c
LeaderfMruCwd	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfMruCwd Leaderf mru --cwd$/;"	c
LeaderfMruCwdCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfMruCwdCword Leaderf mru --cwd --cword$/;"	c
LeaderfMruCwdPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 LeaderfMruCwdPattern Leaderf mru --cwd --input <args>$/;"	c
LeaderfMruCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfMruCword Leaderf mru --cword$/;"	c
LeaderfMruPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 LeaderfMruPattern Leaderf mru --input <args>$/;"	c
LeaderfQuickFix	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfQuickFix Leaderf quickfix$/;"	c
LeaderfRgInteractive	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfRgInteractive call leaderf#Rg#Interactive()$/;"	c
LeaderfRgRecall	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfRgRecall exec "Leaderf! rg --recall"$/;"	c
LeaderfSelf	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfSelf Leaderf self$/;"	c
LeaderfTabBuffer	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfTabBuffer Leaderf buffer --tabpage$/;"	c
LeaderfTabBufferAll	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfTabBufferAll Leaderf buffer --tabpage --all$/;"	c
LeaderfTag	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfTag Leaderf tag$/;"	c
LeaderfTagCword	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfTagCword Leaderf tag --cword$/;"	c
LeaderfTagPattern	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=1 LeaderfTagPattern Leaderf tag --input <args>$/;"	c
LeaderfUninstallCExtension	plugged/LeaderF/plugin/leaderf.vim	/^command! -nargs=0 LeaderfUninstallCExtension call s:InstallCExtension(0)$/;"	c
LeaderfWindow	plugged/LeaderF/plugin/leaderf.vim	/^command! -bar -nargs=0 LeaderfWindow Leaderf window$/;"	c
Leading Spaces	plugged/indentLine/README.md	/^### Leading Spaces$/;"	S
LeadingSpaceDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! -bar LeadingSpaceDisable call s:LeadingSpaceDisable()$/;"	c
LeadingSpaceDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! -bar LeadingSpaceDisable let b:indentLine_leadingSpaceEnabled = 0 | call s:LeadingS/;"	c
LeadingSpaceEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! -bar LeadingSpaceEnable call s:LeadingSpaceEnable()$/;"	c
LeadingSpaceEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! -bar LeadingSpaceEnable let b:indentLine_leadingSpaceEnabled = 1 | call s:LeadingSp/;"	c
LeadingSpaceToggle	plugged/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceToggle call s:LeadingSpaceToggle()$/;"	c
LeaveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
LfCli	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^class LfCli(object):$/;"	c
LfDefineDefaultColors	plugged/LeaderF/syntax/leaderf.vim	/^function! g:LfDefineDefaultColors() abort$/;"	f
LfHelpFormatter	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^class LfHelpFormatter(argparse.HelpFormatter):$/;"	c
LfInstance	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^class LfInstance(object):$/;"	c
LfNoErrMsgCmd	plugged/LeaderF/plugin/leaderf.vim	/^function! g:LfNoErrMsgCmd(cmd)$/;"	f
LfNoErrMsgMatch	plugged/LeaderF/plugin/leaderf.vim	/^function! g:LfNoErrMsgMatch(expr, pat)$/;"	f
LfPopupInstance	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^class LfPopupInstance(object):$/;"	c
LfRegisterPythonExtension	plugged/LeaderF/plugin/leaderf.vim	/^function! g:LfRegisterPythonExtension(name, dict)$/;"	f
LfRegisterSelf	plugged/LeaderF/plugin/leaderf.vim	/^function! g:LfRegisterSelf(cmd, description)$/;"	f
LfShlex	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^class LfShlex(shlex.shlex):$/;"	c
Lf_Floatwin_Close	plugged/LeaderF/autoload/leaderf.vim	/^        augroup Lf_Floatwin_Close$/;"	a
License	plugged/LeaderF/README.md	/^License$/;"	s
License	plugged/gruvbox/README.md	/^License$/;"	s
License	plugged/indentLine/README.md	/^## License$/;"	s
License	plugged/tagbar/README.md	/^## License$/;"	s
License	plugged/vim-airline/README.md	/^# License$/;"	c
License	plugged/vim-devicons/README.md	/^License$/;"	s
License	plugged/vim-fugitive/README.markdown	/^## License$/;"	s
License	plugged/vim-polyglot/README.md	/^## License$/;"	s
License	plugged/vim-snippets/README.md	/^License$/;"	s
License	plugged/vim-translator/README.md	/^## License$/;"	s
License	plugged/vim/README.md	/^## License$/;"	s
License	plugged/vista.vim/README.md	/^## License$/;"	s
Light mode	plugged/gruvbox/README.md	/^### Light mode$/;"	S
LineExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^class LineExplManager(Manager):$/;"	c
LineExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^class LineExplorer(Explorer):$/;"	c
LineIterator	plugged/ultisnips/pythonx/UltiSnips/text.py	/^class LineIterator:$/;"	c
ListAllAvailable_BraceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_Disabled_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_Disabled_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
Listbox	plugged/vim-quickui/MANUAL.md	/^### Listbox$/;"	S
Listbox	plugged/vim-quickui/README.md	/^### Listbox$/;"	S
LiveScriptCompile	plugged/vim-polyglot/ftplugin/ls.vim	/^\\        LiveScriptCompile call s:LiveScriptCompile(<line1>, <line2>, <q-args>)$/;"	c
LiveScriptCompileAuWatch	plugged/vim-polyglot/ftplugin/ls.vim	/^    augroup LiveScriptCompileAuWatch$/;"	a
LiveScriptMake	plugged/vim-polyglot/compiler/ls.vim	/^command! -bang -bar -nargs=* LiveScriptMake make<bang> <args>$/;"	c
LiveScriptRun	plugged/vim-polyglot/ftplugin/ls.vim	/^command! -range=% -bar LiveScriptRun <line1>,<line2>:w !lsc -sp$/;"	c
LiveScriptUpdateMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^augroup LiveScriptUpdateMakePrg$/;"	a
LoadBufferMenu	plugged/vim-polyglot/extras/menu.vim	/^  augroup LoadBufferMenu$/;"	a
Log files if you think the issue is a bug	plugged/ncm2/.github/ISSUE_TEMPLATE.md	/^### Log files if you think the issue is a bug$/;"	S
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
M	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -count=1 M :let s:eregex_tmp_hlsearch = &hlsearch | let v:searchforward = <SID/;"	c
MAKEFILE_DIR	plugged/ultisnips/Makefile	/^MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})$/;"	m
MAKEFILE_PATH	plugged/ultisnips/Makefile	/^MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MAX_TASK_COUNT	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^#define MAX_TASK_COUNT(/;"	d	file:
MERGE	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    MERGE,$/;"	e	enum:__anon07ea32bd0703	file:
MERGE_2	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    MERGE_2,$/;"	e	enum:__anon07ea32bd0703	file:
MIDDLE_BLOCKS	plugged/ale/test/script/block-padding-checker	/^MIDDLE_BLOCKS = set(['else', 'elseif', 'catch', 'finally'])$/;"	v
MIN	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^#define MIN(/;"	d	file:
MIN_WEIGHT	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^#define MIN_WEIGHT /;"	d
MIN_WEIGHT	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    MIN_WEIGHT = -10000.0$/;"	v	class:FuzzyMatch
MYSTDINT_H_	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/mystdint.h	/^#define MYSTDINT_H_$/;"	d
Machine Info	plugged/vim/.github/issue_template.md	/^### Machine Info$/;"	S
Maintainers	plugged/vim-airline/README.md	/^# Maintainers$/;"	c
Maintenance	plugged/vim-airline/CONTRIBUTING.md	/^# Maintenance$/;"	c
MakeMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>MakeMenu()$/;"	f
MakoIndentClose	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentClose(lnum)$/;"	f
MakoIndentOpen	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentOpen(lnum)$/;"	f
MakoIndentPush	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentPush(tag)$/;"	f
Manager	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^class Manager(object):$/;"	c
Manual Installation	plugged/nerdcommenter/README.md	/^### Manual Installation$/;"	S
MatchCount	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MatchCount(expr, pat)$/;"	f
MatchIsTooCheap	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
Matcher	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^def Matcher(case='smartcase', key='abbr', **kargs):$/;"	f
Matcher	plugged/ncm2/pythonx/ncm2_matcher/base_min_len.py	/^def Matcher(context, value, key='abbr', **kargs):$/;"	f
Matcher	plugged/ncm2/pythonx/ncm2_matcher/combine.py	/^def Matcher(**kargs):$/;"	f
Matcher	plugged/ncm2/pythonx/ncm2_matcher/equal.py	/^def Matcher(context, case='smartcase', key='abbr', **kargs):$/;"	f
Matcher	plugged/ncm2/pythonx/ncm2_matcher/must.py	/^def Matcher(**kargs):$/;"	f
Matcher	plugged/ncm2/pythonx/ncm2_matcher/none.py	/^def Matcher(**kargs):$/;"	f
Matcher	plugged/ncm2/pythonx/ncm2_matcher/prefix.py	/^def Matcher(case='smartcase', key='abbr', **kargs):$/;"	f
Matcher	plugged/ncm2/pythonx/ncm2_matcher/substr.py	/^def Matcher(case='smartcase', key='abbr', **kargs):$/;"	f
Matcher	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def Matcher(case='smartcase', key='abbr', **kargs):$/;"	f
Menu	plugged/vim-quickui/MANUAL.md	/^### Menu$/;"	S
Menu	plugged/vim-quickui/README.md	/^### Menu$/;"	S
MenuExplOpen	plugged/vim-polyglot/extras/menu.vim	/^  fun MenuExplOpen()$/;"	f
MergeTaskItem	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef struct MergeTaskItem$/;"	s	file:
MergeTaskItem	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^}MergeTaskItem;$/;"	t	typeref:struct:MergeTaskItem	file:
Methods	plugged/nvim-yarp/README.md	/^## Methods$/;"	s
Minimal Configuration	plugged/vim-which-key/README.md	/^#### Minimal Configuration$/;"	t
Minimal vimrc for reproducing the issue	plugged/ncm2/.github/ISSUE_TEMPLATE.md	/^### Minimal vimrc for reproducing the issue$/;"	S
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
MirrorBeforeTabstopLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class MirrorToken(Token):$/;"	c
Mirror_TestKillTabstop_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
Miscellaneous	plugged/onedark.vim/README.md	/^## Miscellaneous$/;"	s
MixProject	plugged/ale/test/command_callback/elixir_paths/mix_project/mix.exs	/^defmodule Test.MixProject do$/;"	m
Mkd	plugged/vim-polyglot/ftplugin/markdown.vim	/^augroup Mkd$/;"	a
MovePosition_DelSameLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
Mru	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^class Mru(object):$/;"	c
MruExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^class MruExplManager(Manager):$/;"	c
MruExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^class MruExplorer(Explorer):$/;"	c
MultiLine	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
MultilineExpandTestTyping_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
MultiplyDeBruijnBitPosition	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^static uint8_t MultiplyDeBruijnBitPosition[64] =$/;"	v	typeref:typename:uint8_t[64]	file:
MyAppend1	plugged/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	plugged/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyCallback	plugged/vim-quickui/autoload/quickui/context.vim	/^	function! MyCallback(code)$/;"	f
MyCallback	plugged/vim-quickui/test/test_listbox.vim	/^	function! MyCallback(code)$/;"	f
MyCallback	plugged/vim-quickui/test/test_nvim_context.vim	/^	function! MyCallback(code)$/;"	f
MyCallback	plugged/vim-quickui/test/test_nvim_list.vim	/^	function! MyCallback(code)$/;"	f
MyFuncref	plugged/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	plugged/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
NERD Commenter	plugged/nerdcommenter/README.md	/^# NERD Commenter$/;"	c
NERDComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommentIsCharCommented	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDCommentIsCharCommented(line, col) abort$/;"	f
NERDCommentIsLineCommented	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDCommentIsLineCommented(lineNo)$/;"	f
NERDCommenter	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^augroup NERDCommenter$/;"	a
NERDTree	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreateTabTree('<args>')$/;"	c
NERDTree	plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree Change Log	plugged/nerdtree/CHANGELOG.md	/^# NERDTree Change Log$/;"	c
NERDTreeAddKeyMap	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirOnTabSwitch	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeChDirOnTabSwitch$/;"	a
NERDTreeClose	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeClose :call g:NERDTree.Close()$/;"	c
NERDTreeCopyNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeExecuteFileWindows	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileWindows()$/;"	f
NERDTreeFind	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=file -bar NERDTreeFind call s:findAndRevealPath('<args>')$/;"	c
NERDTreeFocus	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call/;"	c
NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeIgnore	settings/sidebar.vim	/^    let NERDTreeIgnore = ['\\.pyc$']$/;"	v
NERDTreeListNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMinimalUI	settings/sidebar.vim	/^    let NERDTreeMinimalUI=1$/;"	v
NERDTreeMirror	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRefreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeRefreshRoot call s:refreshRoot()$/;"	c
NERDTreeRender	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.ToggleTabTree('<args/;"	c
NERDTreeToggleVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeToggleVCS :call <SID>ToggleTabTreeVCS('<args>')$/;"	c
NERDTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NERDTreeWebDevIconsRefreshListener	plugged/vim-devicons/plugin/webdevicons.vim	/^function! NERDTreeWebDevIconsRefreshListener(event)$/;"	f
NEVER	plugged/vim-snippets/pythonx/javascript_snippets.py	/^NEVER = 'never'$/;"	v
Ncm2Base	plugged/ncm2/pythonx/ncm2.py	/^class Ncm2Base:$/;"	c
Ncm2Core	plugged/ncm2/pythonx/ncm2_core.py	/^class Ncm2Core(Ncm2Base):$/;"	c
Ncm2Source	plugged/ncm2/pythonx/ncm2.py	/^class Ncm2Source(Ncm2Base):$/;"	c
NeoVim	plugged/vim-which-key/README.md	/^#### NeoVim$/;"	t
NeoVim	plugged/vista.vim/README.md	/^#### NeoVim$/;"	t
NeoVim on Unix	plugged/ale/README.md	/^#### NeoVim on Unix$/;"	t
New Version Info	plugged/nerdtree/.github/PULL_REQUEST_TEMPLATE.md	/^### New Version Info$/;"	S
New project	plugged/nerdtree-git-plugin/README.md	/^## New project$/;"	s
NewTest_filetype_detection	plugged/vim-polyglot/tests/native.vim	/^func NewTest_filetype_detection()$/;"	f
NewVersion	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function NewVersion()$/;"	f
NextNonBlankLine	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! NextNonBlankLine(lnum)$/;"	f
NimAsyncCmdComplete	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimAsyncCmdComplete(cmd, output) abort$/;"	f
NimComplete	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimComplete(findstart, base) abort$/;"	f
NimExec	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimExec(op) abort$/;"	f
NimExecAsync	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimExecAsync(op, Handler) abort$/;"	f
NimLog	plugged/vim-polyglot/autoload/nim.vim	/^command! NimLog :e log:\/\/nim$/;"	c
NimRestartService	plugged/vim-polyglot/autoload/nim.vim	/^command! NimRestartService$/;"	c
NimTerminateService	plugged/vim-polyglot/autoload/nim.vim	/^command! NimTerminateService$/;"	c
NimVim	plugged/vim-polyglot/autoload/nim.vim	/^augroup NimVim$/;"	a
NoUmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class NoUmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
No_Tab_Expand_ET	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld, _VimTest):$/;"	c
No_Tab_Expand_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NonUnicodeDataInUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class NonUnicodeDataInUnnamedRegister(_VimTest):$/;"	c
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class NoneditableTextObject(TextObject):$/;"	c
Note: If the file structure display is wrong	plugged/tagbar/README.md	/^## Note: If the file structure display is wrong$/;"	s
O	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> O <NOP>$/;"	m
OCaml_switch	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OMLetFoldLevel	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
OPERATOR_END_RE	plugged/ale/test/script/block-padding-checker	/^OPERATOR_END_RE = re.compile(r'(&&|\\|\\||\\+|-|\\*\\| \/)$')$/;"	v
OS	plugged/ncm2/.github/ISSUE_TEMPLATE.md	/^### OS$/;"	S
Ocaml_get_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_get_type(mode)$/;"	f
Ocaml_get_type_or_not	plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_get_type_or_not(mode)$/;"	f
Ocaml_print_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_print_type(mode)$/;"	f
Ocpgrep	plugged/vim-polyglot/ftplugin/ocaml.vim	/^command! -bar -bang -complete=file -nargs=+ Ocpgrep exe s:OcpGrep(<q-bang>, <q-args>)$/;"	c
OldSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_RealWorldCase_Test(_OS_Base):$/;"	c
OldSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_SimpleTabstop_Test(_OS_Base):$/;"	c
OpenBookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 OpenBookmark call /;"	c
OpenGlobalMenu	settings/menu.vim	/^function OpenGlobalMenu()$/;"	f
OpenRanger	plugged/ranger.vim/plugin/ranger.vim	/^function! OpenRanger()$/;"	f
OpenRangerIn	plugged/ranger.vim/plugin/ranger.vim	/^  function! OpenRangerIn(path, edit_cmd)$/;"	f
OpenRangerOnVimLoadDir	plugged/ranger.vim/plugin/ranger.vim	/^function! OpenRangerOnVimLoadDir(argv_path)$/;"	f
Opening ranger instead of netrw when you open a directory	plugged/ranger.vim/README.md	/^### Opening ranger instead of netrw when you open a directory$/;"	S
Optional Info	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Optional Info$/;"	t
Optional Vimrc Tips	plugged/ncm2/README.md	/^## Optional Vimrc Tips$/;"	s
OptionalAction	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^class OptionalAction(argparse.Action):$/;"	c
Options	plugged/nvim-yarp/README.md	/^## Options$/;"	s
Options	plugged/onedark.vim/README.md	/^## Options$/;"	s
Options	plugged/vim-which-key/README.md	/^### Options$/;"	S
Options	plugged/vista.vim/README.md	/^### Options$/;"	S
Other tips	plugged/vista.vim/README.md	/^### Other tips$/;"	S
Our Pledge	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s
Our Responsibilities	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Responsibilities$/;"	s
Our Standards	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s
Output From `vim --version`	plugged/onedark.vim/.github/ISSUE_TEMPLATE.md	/^### Output From `vim --version`$/;"	S
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
PY_SET_ITEM	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    PY_SET_ITEM,$/;"	e	enum:__anon07ea32bd0703	file:
PY_SET_ITEM_2	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    PY_SET_ITEM_2$/;"	e	enum:__anon07ea32bd0703	file:
PY_SSIZE_T_CLEAN	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    #define PY_SSIZE_T_CLEAN$/;"	d	file:
PY_SSIZE_T_CLEAN	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    #define PY_SSIZE_T_CLEAN$/;"	d	file:
Package management	plugged/vim-which-key/README.md	/^### Package management$/;"	S
Package management	plugged/vista.vim/README.md	/^### Package management$/;"	S
Palette	plugged/gruvbox/README.md	/^Palette$/;"	s
Parameter	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef struct Parameter$/;"	s	file:
Parameter	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^}Parameter;$/;"	t	typeref:struct:Parameter	file:
ParseArgs	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseSnippets_ClearAll	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
ParseSnippets_ClearOne	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
ParseSnippets_ClearTwo	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
ParseSnippets_Global_Local_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
ParseSnippets_MissingEndSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
ParseSnippets_MultiWord_Description	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_Quotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
ParseSnippets_MultiWord_RE1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_WithQuotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippet(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetContext	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetContext(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetLocation	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetLocation(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPostAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPostAction(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPreAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPreAction(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktrace	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktrace(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktraceMultiline	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktraceMultiline(_VimTest):$/;"	c
ParseSnippets_SimpleSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
ParseSnippets_UnknownDirective	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
Parser	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^class Parser:$/;"	c
Patched font	plugged/indentLine/README.md	/^### Patched font$/;"	S
PatternContext	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^typedef struct PatternContext$/;"	s
PatternContext	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^}PatternContext;$/;"	t	typeref:struct:PatternContext
Performance	plugged/LeaderF/README.md	/^Performance$/;"	s
Performance	plugged/vim-airline/README.md	/^# Performance$/;"	c
PerlSyntaxFold	plugged/ultisnips/test/test_Folding.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
Pick	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Pick   :<line1>,<line2>call s:choose('pick')$/;"	c
Plug	autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
Plugin Manager	plugged/vim-which-key/README.md	/^### Plugin Manager$/;"	S
Plugin Manager	plugged/vista.vim/README.md	/^### Plugin Manager$/;"	S
Plugin_SuperTab_SimpleTest	plugged/ultisnips/test/test_Plugin.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
PolyglotVerify	plugged/vim-polyglot/ftdetect/polyglot.vim	/^func! PolyglotVerify()$/;"	f
Popen	plugged/ncm2/pythonx/ncm2.py	/^    class Popen(cls):$/;"	c
Popup Mode	plugged/LeaderF/README.md	/^Popup Mode$/;"	s
PopupWindow	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^class PopupWindow(object):$/;"	c
Position	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class Position:$/;"	c
Post Installation	plugged/nerdcommenter/README.md	/^### Post Installation$/;"	S
PostscrIndentGet	plugged/vim-polyglot/indent/postscr.vim	/^function! PostscrIndentGet(lnum)$/;"	f
Preview images	plugged/onedark.vim/README.md	/^### Preview images$/;"	S
Preview quickfix	plugged/vim-quickui/MANUAL.md	/^### Preview quickfix$/;"	S
Preview tag	plugged/vim-quickui/MANUAL.md	/^### Preview tag$/;"	S
Preview window	plugged/vim-quickui/MANUAL.md	/^### Preview window$/;"	S
Preview window	plugged/vim-quickui/README.md	/^### Preview window$/;"	S
Promotion	plugged/vim-devicons/README.md	/^### Promotion$/;"	S
ProperIndenting_AutoIndentAndNewline_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFileComplete_ECR(ProperIndenting_FirstLineInFile_ECR):$/;"	c
ProperIndenting_FirstLineInFile_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
Pros.	plugged/vim-which-key/README.md	/^## Pros.$/;"	s
Public Methods	plugged/vim-devicons/DEVELOPER.md	/^#### Public Methods$/;"	t
Pushing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	s
PyInit_fuzzyEngine	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^PyMODINIT_FUNC PyInit_fuzzyEngine(void)$/;"	f	typeref:typename:PyMODINIT_FUNC
PyInit_fuzzyMatchC	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^PyMODINIT_FUNC PyInit_fuzzyMatchC(void)$/;"	f	typeref:typename:PyMODINIT_FUNC
PySetTaskItem	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef struct PySetTaskItem$/;"	s	file:
PySetTaskItem	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^}PySetTaskItem;$/;"	t	typeref:struct:PySetTaskItem	file:
Python2Syntax	plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python2Syntax let b:python_version_2 = 1 | let &syntax=&syntax$/;"	c
Python3Syntax	plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python3Syntax let b:python_version_2 = 0 | let &syntax=&syntax$/;"	c
PythonCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteFirst	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_CanOverwriteTabstop	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_CanOverwriteTabstop(_VimTest):$/;"	c
PythonCode_IndentEtSw	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_HasAccessToSelectedPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToSelectedPlaceholders(_VimTest):$/;"	c
PythonVisual_HasAccessToZeroPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToZeroPlaceholders(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
Python_SnipRvCanBeNonText	plugged/ultisnips/test/test_Interpolation.py	/^class Python_SnipRvCanBeNonText(_VimTest):$/;"	c
Q	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> Q             :exec g:Lf_py "lineExplManager.outputToQflist()"<CR/;"	m
Q	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> Q             :exec g:Lf_py "rgExplManager.outputToQflist()"<CR>$/;"	m
QUEUE_DESTROY	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^#define QUEUE_DESTROY(/;"	d	file:
QUEUE_GET	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^#define QUEUE_GET(/;"	d	file:
QUEUE_INIT	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^#define QUEUE_INIT(/;"	d	file:
QUEUE_JOIN	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^#define QUEUE_JOIN(/;"	d	file:
QUEUE_PUT	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^#define QUEUE_PUT(/;"	d	file:
QUEUE_SET_TASK_COUNT	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^#define QUEUE_SET_TASK_COUNT(/;"	d	file:
QUEUE_TASK_DONE	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^#define QUEUE_TASK_DONE(/;"	d	file:
Q_SORT	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    Q_SORT,$/;"	e	enum:__anon07ea32bd0703	file:
Q_SORT_2	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    Q_SORT_2,$/;"	e	enum:__anon07ea32bd0703	file:
QfLocListExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^class QfLocListExplManager(Manager):$/;"	c
QfLocListExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^class QfLocListExplorer(Explorer):$/;"	c
Queue	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^    import queue as Queue$/;"	I
Queue	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    import queue as Queue$/;"	I
Quick Start	plugged/ultisnips/README.md	/^Quick Start$/;"	s
QuickThemeChange	plugged/vim-quickui/plugin/quickui.vim	/^function! QuickThemeChange(theme)$/;"	f
Quickstart	plugged/tagbar/README.md	/^## Quickstart$/;"	s
Qux	plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Qux:$/;"	c	class:Foo.Bar.Qux.Bar
Qux	plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Qux:$/;"	c	class:Foo.Bar1.Qux.Bar
Qux	plugged/vista.vim/test/data/ctags_tree_view.py	/^                class Qux:$/;"	c	class:Foo.Bar2.Qux.Bar
Qux	plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Qux:$/;"	c	class:Foo.Bar
Qux	plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Qux:$/;"	c	class:Foo.Bar1
Qux	plugged/vista.vim/test/data/ctags_tree_view.py	/^        class Qux:$/;"	c	class:Foo.Bar2
R	autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
RE_BUILT_IN_COMMAND	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^RE_BUILT_IN_COMMAND = re.compile(r"^\\|:([^|]+)\\|")$/;"	v
RE_CANNOT_USE_FOR_HIGHLIGHT	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^RE_CANNOT_USE_FOR_HIGHLIGHT = re.compile(r'[^a-zA-Z0-9_]+')$/;"	v
RE_USER_DEFINED_COMMAND	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^RE_USER_DEFINED_COMMAND = re.compile(r"^.{4}(\\w+)")$/;"	v
RUN_TESTS	plugged/ale/run-tests.bat	/^:RUN_TESTS$/;"	l
RandomID	plugged/vim-polyglot/ftplugin/mma.vim	/^	function! RandomID()$/;"	f
Ranger	plugged/ranger.vim/plugin/ranger.vim	/^command! Ranger RangerCurrentFile$/;"	c
Ranger.vim	plugged/ranger.vim/README.md	/^Ranger.vim$/;"	c
RangerCurrentDirectory	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerCurrentDirectory call OpenRangerIn("%:p:h", s:default_edit_cmd)$/;"	c
RangerCurrentDirectoryExistingOrNewTab	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerCurrentDirectoryExistingOrNewTab call OpenRangerIn("%:p:h", 'tab drop ')$/;"	c
RangerCurrentDirectoryNewTab	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerCurrentDirectoryNewTab call OpenRangerIn("%:p:h", 'tabedit ')$/;"	c
RangerCurrentFile	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerCurrentFile call OpenRangerIn("%", s:default_edit_cmd)$/;"	c
RangerCurrentFileExistingOrNewTab	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerCurrentFileExistingOrNewTab call OpenRangerIn("%", 'tab drop ')$/;"	c
RangerCurrentFileNewTab	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerCurrentFileNewTab call OpenRangerIn("%", 'tabedit ')$/;"	c
RangerNewTab	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerNewTab RangerCurrentDirectoryNewTab$/;"	c
RangerWorkingDirectory	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerWorkingDirectory call OpenRangerIn(".", s:default_edit_cmd)$/;"	c
RangerWorkingDirectoryExistingOrNewTab	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerWorkingDirectoryExistingOrNewTab call OpenRangerIn(".", 'tab drop ')$/;"	c
RangerWorkingDirectoryNewTab	plugged/ranger.vim/plugin/ranger.vim	/^command! RangerWorkingDirectoryNewTab call OpenRangerIn(".", 'tabedit ')$/;"	c
Rationale	plugged/vim-airline/README.md	/^# Rationale$/;"	c
ReadBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ReadBookmarks call g:NERDTreeBookmark.CacheBookmarks(0) <bar> call/;"	c
ReadOnPath	plugged/vim-polyglot/syntax/ragel.vim	/^fun! <SID>ReadOnPath(script)$/;"	f
Reaurements	plugged/ncm2-ultisnips/README.md	/^## Reaurements$/;"	s
RecTabStopsWithExpandtab_SimpleExample_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
References	plugged/vim-translator/README.md	/^## References$/;"	s
Related Projects	plugged/vim-gutentags/README.md	/^# Related Projects$/;"	c
Related repositories	plugged/vim-snippets/README.md	/^Related repositories$/;"	s
Relatives of onedark.vim	plugged/onedark.vim/README.md	/^### Relatives of onedark.vim$/;"	S
RemoveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
ReplaceNetrwByRangerVim	plugged/ranger.vim/plugin/ranger.vim	/^  augroup ReplaceNetrwByRangerVim$/;"	a
Reproducing Bugs	plugged/ultisnips/CONTRIBUTING.md	/^# Reproducing Bugs$/;"	c
Reproducing the bug	plugged/ale/.github/ISSUE_TEMPLATE/report-a-bug.md	/^## Reproducing the bug$/;"	s
Required Info	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Required Info$/;"	t
Requirement	plugged/vim-which-key/README.md	/^## Requirement$/;"	s
Requirement	plugged/vista.vim/README.md	/^## Requirement$/;"	s
Requirements	plugged/LeaderF/README.md	/^Requirements$/;"	s
Requirements	plugged/indentLine/README.md	/^## Requirements$/;"	s
Requirements	plugged/ncm2/README.md	/^## Requirements$/;"	s
Requirements	plugged/nvim-yarp/README.md	/^## Requirements$/;"	s
Requirements	plugged/vim-devicons/.github/ISSUE_TEMPLATE.md	/^#### Requirements$/;"	t
Requirements	plugged/vim-quickui/MANUAL.md	/^## Requirements$/;"	s
Requirements	plugged/vim-quickui/README.md	/^## Requirements$/;"	s
Requirements (please check off with 'x')	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Requirements (please check off with 'x')$/;"	t
Result	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^    class Result(object):$/;"	c	class:AsyncExecutor
RetainsTheUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
RetainsTheUnnamedRegister_ButOnlyOnce	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
RevealBookmark	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 RevealBookmark :ca/;"	c
Reword	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Reword :<line1>,<line2>call s:choose('reword')$/;"	c
RgExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^class RgExplManager(Manager):$/;"	c
RgExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^class RgExplorer(Explorer):$/;"	c
RgParameter	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef struct RgParameter$/;"	s	file:
RgParameter	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^}RgParameter;$/;"	t	typeref:struct:RgParameter	file:
RootPath	plugged/ncm2-path/pythonx/ncm2_path.py	/^class RootPath(Ncm2Source):$/;"	c
RplGetFreeIndent	plugged/vim-polyglot/indent/rpl.vim	/^function RplGetFreeIndent()$/;"	f
RplGetIndent	plugged/vim-polyglot/indent/rpl.vim	/^function RplGetIndent(lnum)$/;"	f
RstFold	plugged/vim-polyglot/ftplugin/rst.vim	/^  augroup RstFold$/;"	a
RstFold#GetRstFold	plugged/vim-polyglot/autoload/RstFold.vim	/^function RstFold#GetRstFold()$/;"	f
RstFold#GetRstFoldText	plugged/vim-polyglot/autoload/RstFold.vim	/^function RstFold#GetRstFoldText()$/;"	f
RubyBalloonexpr	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f
RubyCursorFile	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f
RubyCursorIdentifier	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f
RubyCursorTag	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorTag() abort$/;"	f
RunScript	keymap.vim	/^function! RunScript()$/;"	f
Run_script_detection	plugged/vim-polyglot/tests/native.vim	/^func Run_script_detection(test_dict)$/;"	f
Running the test suite.	plugged/ultisnips/CONTRIBUTING.md	/^### Running the test suite.$/;"	S
Running using docker.	plugged/ultisnips/CONTRIBUTING.md	/^#### Running using docker.$/;"	t
Rust	plugged/vim-polyglot/ctags/rust.ctags	/^--langdef=Rust$/;"	l
RustCargoQuickFixHooks	plugged/vim-polyglot/compiler/cargo.vim	/^augroup RustCargoQuickFixHooks$/;"	a
RustEmitAsm	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustEmitIr	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustExpand	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Ex/;"	c
RustFmt	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar -buffer RustFmt call rustfmt#Format()$/;"	c
RustFmtRange	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)$/;"	c
RustInfo	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar RustInfo call rust#debugging#Info()$/;"	c
RustInfoToClipboard	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar RustInfoToClipboard call rust#debugging#InfoToClipboard()$/;"	c
RustInfoToFile	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar -nargs=1 RustInfoToFile call rust#debugging#InfoToFile(<f-args>)$/;"	c
RustPlay	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustRun	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
RustTest	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -buffer -nargs=* -count -bang RustTest call rust#Test(<q-mods>, <count>, <bang>0, <q-ar/;"	c
S	autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
S	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range S :<line1>,<line2>call <SID>Esubstitute(<q-args>) <Bar> :noh$/;"	c
SAME_INDENTATION_SET	plugged/ale/test/script/block-padding-checker	/^SAME_INDENTATION_SET = set(['\\\\'])$/;"	v
SEQUENCES	plugged/ultisnips/test/constant.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SHOW_RESULTS	plugged/ale/run-tests.bat	/^:SHOW_RESULTS$/;"	l
SNIPMATE_SNIPPET_PRIORITY	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
SQLGetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    command! -nargs=0 SQLGetType :call SQL_GetType()$/;"	c
SQLSetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    command! -nargs=* -complete=custom,SQL_GetList SQLSetType :call SQL_SetType(<q-args>)$/;"	c
SQL_GetList	plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_GetList(ArgLead, CmdLine, CursorPos)$/;"	f
SQL_GetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_GetType()$/;"	f
SQL_SetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_SetType(name)$/;"	f
START_BLOCKS	plugged/ale/test/script/block-padding-checker	/^START_BLOCKS = set(['if', 'for', 'while', 'try', 'function'])$/;"	v
SassIncludeExpr	plugged/vim-polyglot/ftplugin/sass.vim	/^function! SassIncludeExpr(file) abort$/;"	f
Scope	plugged/vim-devicons/CODE_OF_CONDUCT.md	/^## Scope$/;"	s
Screencasts	plugged/ultisnips/README.md	/^Screencasts$/;"	s
Screencasts	plugged/vim-fugitive/README.markdown	/^## Screencasts$/;"	s
Screenshot	plugged/vim/.github/issue_template.md	/^### Screenshot$/;"	S
Screenshots	plugged/LeaderF/README.md	/^Screenshots$/;"	s
Screenshots	plugged/gruvbox/README.md	/^Screenshots$/;"	s
Screenshots	plugged/indentLine/README.md	/^## Screenshots$/;"	s
Screenshots	plugged/tagbar/README.md	/^## Screenshots$/;"	s
Screenshots	plugged/vim-airline/README.md	/^# Screenshots$/;"	c
Screenshots (if appropriate or helpful)	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### Screenshots (if appropriate or helpful)$/;"	t
SdcvShell	plugged/vim-translator/script/translator.py	/^class SdcvShell(BasicTranslator):$/;"	c
Seamless integration	plugged/vim-airline/README.md	/^## Seamless integration$/;"	s
SectionSpec	plugged/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
SelectModeMappings_BufferLocalMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
Self promotion	plugged/indentLine/README.md	/^## Self promotion$/;"	s
Self-Diagnosis	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Self-Diagnosis$/;"	t
Self-Diagnosis	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/question.md	/^#### Self-Diagnosis$/;"	t
Self-Diagnosis	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Self-Diagnosis$/;"	t
Self-Diagnosis	plugged/nerdtree/.github/ISSUE_TEMPLATE/question.md	/^#### Self-Diagnosis$/;"	t
Self-Promotion	plugged/gruvbox/README.md	/^Self-Promotion$/;"	s
Self-Promotion	plugged/vim-fugitive/README.markdown	/^## Self-Promotion$/;"	s
SelfExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^class SelfExplManager(Manager):$/;"	c
SelfExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^class SelfExplorer(Explorer):$/;"	c
SetexToAtx	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% SetexToAtx call s:SetexToAtx(<line1>, <line2>)$/;"	c
Setting a custom ranger command	plugged/ranger.vim/README.md	/^### Setting a custom ranger command$/;"	S
Setting an other path for the temporary file	plugged/ranger.vim/README.md	/^### Setting an other path for the temporary file$/;"	S
Settings	plugged/nerdcommenter/README.md	/^### Settings$/;"	S
SetupLazyloadMenus	plugged/vim-polyglot/extras/menu.vim	/^  augroup SetupLazyloadMenus$/;"	a
ShellCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShiftWidthZero	plugged/ultisnips/test/test_Fixes.py	/^class ShiftWidthZero(_VimTest):$/;"	c
Show the nearest method/function in the statusline	plugged/vista.vim/README.md	/^### Show the nearest method\/function in the statusline$/;"	S
ShowUsage	plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	plugged/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
SignifyDebug	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyDebug           call sy#repo#debug_detection()$/;"	c
SignifyDiff	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar -bang SignifyDiff            call sy#repo#diffmode(<bang>1)$/;"	c
SignifyDisable	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyDisable         call sy#stop()$/;"	c
SignifyDisableAll	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyDisableAll      call sy#stop_all()$/;"	c
SignifyEnable	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyEnable          call sy#start()$/;"	c
SignifyEnableAll	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyEnableAll       call sy#start_all()$/;"	c
SignifyFold	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar -bang SignifyFold            call sy#fold#dispatch(<bang>1)$/;"	c
SignifyFoldExpr	plugged/vim-signify/autoload/sy/fold.vim	/^function! SignifyFoldExpr(lnum)$/;"	f
SignifyFoldText	plugged/vim-signify/autoload/sy/fold.vim	/^function! SignifyFoldText()$/;"	f
SignifyHunkDiff	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyHunkDiff        call sy#repo#diff_hunk()$/;"	c
SignifyHunkUndo	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyHunkUndo        call sy#repo#undo_hunk()$/;"	c
SignifyList	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyList            call sy#debug#list_active_buffers()$/;"	c
SignifyRefresh	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyRefresh         call sy#util#refresh_windows()$/;"	c
SignifyToggle	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyToggle          call sy#toggle()$/;"	c
SignifyToggleHighlight	plugged/vim-signify/plugin/signify.vim	/^command! -nargs=0 -bar       SignifyToggleHighlight call sy#highlight#line_toggle()$/;"	c
Simple function call	plugged/vim-devicons/DEVELOPER.md	/^##### Simple function call$/;"	T
SimpleExpandEndingWithNewline_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_DoNotClobberDefaultRegister	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_DoNotClobberDefaultRegister(_VimTest):$/;"	c
SimpleExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
SkipBlanksAndComments	plugged/vim-polyglot/indent/d.vim	/^function! SkipBlanksAndComments(startline)$/;"	f
SkipJavaBlanksAndComments	plugged/vim-polyglot/indent/java.vim	/^function! SkipJavaBlanksAndComments(startline)$/;"	f
Sleuth	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  command! -bar -bang Sleuth call s:detect_indent()$/;"	c
SleuthIndicator	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  func! SleuthIndicator() abort$/;"	f
Smarter tab line	plugged/vim-airline/README.md	/^## Smarter tab line$/;"	s
SnipMateFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
Snippet engines supporting vim-snippets	plugged/vim-snippets/README.md	/^Snippet engines supporting vim-snippets$/;"	s
SnippetActions_CanEvenWrapSnippetInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanEvenWrapSnippetInPreAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonOnPreExpand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonOnPreExpand(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetOnFirstJump	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetOnFirstJump(_VimTest):$/;"	c
SnippetActions_CanExpandSnippetInDifferentPlace	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandSnippetInDifferentPlace(_VimTest):$/;"	c
SnippetActions_CanMirrorTabStopsOutsideOfSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanMirrorTabStopsOutsideOfSnippet(_VimTest):$/;"	c
SnippetActions_CanModifyParentBody	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanModifyParentBody(_VimTest):$/;"	c
SnippetActions_CanUseContextFromContextMatch	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanUseContextFromContextMatch(_VimTest):$/;"	c
SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre(_VimTest):$/;"	c
SnippetActions_DoNotBreakCursorOnSingleLikeChange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_DoNotBreakCursorOnSingleLikeChange(_VimTest):$/;"	c
SnippetActions_EnsureIndent	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_EnsureIndent(_VimTest):$/;"	c
SnippetActions_ErrorOnBufferModificationThroughCommand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnBufferModificationThroughCommand(_VimTest):$/;"	c
SnippetActions_ErrorOnModificationSnippetLine	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnModificationSnippetLine(_VimTest):$/;"	c
SnippetActions_MoveParentSnippetFromChildInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveParentSnippetFromChildInPreAction(_VimTest):$/;"	c
SnippetActions_MoveVisual	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveVisual(_VimTest):$/;"	c
SnippetActions_PostActionCanUseSnippetRange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionCanUseSnippetRange(_VimTest):$/;"	c
SnippetActions_PostActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_PostActionModifiesCharAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesCharAfterSnippet(_VimTest):$/;"	c
SnippetActions_PostActionModifiesLineAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesLineAfterSnippet(_VimTest):$/;"	c
SnippetActions_PreActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PreActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_UseCorrectJumpActions	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_UseCorrectJumpActions(_VimTest):$/;"	c
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class SnippetDefinition:$/;"	c
SnippetDictionary	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^class SnippetDictionary:$/;"	c
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager:$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix2($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix3($/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NoExpand(_SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetOptions_Regex_WithSpace	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_WithSpace(_VimTest):$/;"	c
SnippetPriorities_AddedHasHigherThanFile	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
SnippetPriorities_ClearedByChild	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByChild(_VimTest):$/;"	c
SnippetPriorities_ClearedByParent	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByParent(_VimTest):$/;"	c
SnippetPriorities_DoNotCareAboutNonMatchings	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded_neg_prio	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded_neg_prio(_VimTest):$/;"	c
SnippetPriorities_MultiWordTriggerOverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteThenChoose_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetPriorities_OverwriteTwice_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetPriorities_SimpleClear	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear(_VimTest):$/;"	c
SnippetPriorities_SimpleClear2	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear2(_VimTest):$/;"	c
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^class SnippetSource:$/;"	c
SnippetSyntaxError	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetSyntaxError(RuntimeError):$/;"	c
SnippetUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtil:$/;"	c
SnippetUtilForAction	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtilForAction(dict):$/;"	c
Snippet_With_DoubleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
Sorter	plugged/ncm2/pythonx/ncm2_sorter/abbrfuzzy.py	/^def Sorter(**kargs):$/;"	f
Sorter	plugged/ncm2/pythonx/ncm2_sorter/alphanum.py	/^def Sorter(**kargs):$/;"	f
Sorter	plugged/ncm2/pythonx/ncm2_sorter/none.py	/^def Sorter(**kargs):$/;"	f
Source	plugged/ale/rplugin/python3/deoplete/sources/ale.py	/^class Source(Base):$/;"	c
Source	plugged/ncm2-bufword/pythonx/ncm2_bufword.py	/^class Source(Ncm2Source):$/;"	c
Source	plugged/ncm2-go/pythonx/ncm2_go.py	/^class Source(Ncm2Source):$/;"	c
Source	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^class Source(Ncm2Source):$/;"	c
Source	plugged/neco-vim/rplugin/python3/deoplete/source/vim.py	/^class Source(Base):$/;"	c
Source	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^class Source(Base):$/;"	c
Special keys	plugged/vim-which-key/README.md	/^### Special keys$/;"	S
Specify color group precisely	plugged/vim-quickui/MANUAL.md	/^### Specify color group precisely$/;"	S
SpellPopupMenu	plugged/vim-polyglot/extras/menu.vim	/^  augroup SpellPopupMenu$/;"	a
Split	plugged/vim-polyglot/syntax/ragel.vim	/^function! <SID>Split(path) abort " {{{1$/;"	f
Squash	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Squash :<line1>,<line2>call s:choose('squash')$/;"	c
State Your Question	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/question.md	/^#### State Your Question$/;"	t
State Your Question	plugged/nerdtree/.github/ISSUE_TEMPLATE/question.md	/^#### State Your Question$/;"	t
Status line	plugged/vim-devicons/DEVELOPER.md	/^##### Status line$/;"	T
Statusline	plugged/vim-translator/README.md	/^## Statusline$/;"	s
Steps to Reproduce the Issue	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^#### Steps to Reproduce the Issue$/;"	t
Steps to Reproduce the Issue	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^#### Steps to Reproduce the Issue$/;"	t
Steps to reproduce	plugged/LeaderF/ISSUE_TEMPLATE.md	/^### Steps to reproduce$/;"	S
Straightforward customization	plugged/vim-airline/README.md	/^## Straightforward customization$/;"	s
StripTrailingWhitespace	plugged/vim-polyglot/ftplugin/dhall.vim	/^function! StripTrailingWhitespace()$/;"	f
Style Guidelines	plugged/onedark.vim/CONTRIBUTING.md	/^## Style Guidelines$/;"	s
Stylus	plugged/vim-polyglot/ftplugin/stylus.vim	/^command! Stylus !clear; cat % | stylus$/;"	c
Support for additional filetypes	plugged/tagbar/README.md	/^## Support for additional filetypes$/;"	s
SvgIndentGet	plugged/vim-polyglot/indent/svg.vim	/^fun! SvgIndentGet(lnum, use_syntax_check)$/;"	f
SvgIndentSum	plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentSum(lnum, style, add)$/;"	f
SvgIndentSynCheck	plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentSynCheck(lnum)$/;"	f
SvgIndentWithPattern	plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentWithPattern(line, pat)$/;"	f
SwiftIndent	plugged/vim-polyglot/indent/swift.vim	/^function! SwiftIndent(...)$/;"	f
SynAttrXMLish	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! SynAttrXMLish(synattr)$/;"	f
SynDisplay	plugged/vim-polyglot/syntax/inform.vim	/^command -nargs=+ SynDisplay syntax <args> display$/;"	c
SynEOL	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! SynEOL(lnum)$/;"	f
SynFold	plugged/vim-polyglot/syntax/crystal.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
SynFold	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args> fold$/;"	c
SynFold	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args>$/;"	c
SynFold	plugged/vim-polyglot/syntax/ruby.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
SynFold	plugged/vim-polyglot/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args> fold$/;"	c
SynFold	plugged/vim-polyglot/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args>$/;"	c
SynFoldDoc	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args> fold$/;"	c
SynFoldDoc	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args>$/;"	c
SynSOL	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! SynSOL(lnum)$/;"	f
SynTSXBlockEnd	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! SynTSXBlockEnd(syns)$/;"	f
SynTSXContinues	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! SynTSXContinues(cursyn, prevsyn)$/;"	f
SynTSXDepth	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! SynTSXDepth(syns)$/;"	f
SynXMLish	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! SynXMLish(syns)$/;"	f
SyntaxCheckers_nim_nim_GetLocList	plugged/vim-polyglot/autoload/nim.vim	/^fun! SyntaxCheckers_nim_nim_GetLocList() abort$/;"	f
SyntaxCheckers_nim_nim_IsAvailable	plugged/vim-polyglot/autoload/nim.vim	/^function! SyntaxCheckers_nim_nim_IsAvailable() abort$/;"	f
SystemVerilogIndent	plugged/vim-polyglot/indent/systemverilog.vim	/^function SystemVerilogIndent()$/;"	f
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TAPTestLine_foldtext	plugged/vim-polyglot/syntax/tap.vim	/^function! TAPTestLine_foldtext()$/;"	f
TERMINATORS	plugged/ale/test/script/block-padding-checker	/^TERMINATORS = set(['return', 'throw'])$/;"	v
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopWithOneChar_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_AdjacentTabStopAddText_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_AdjacentTabStopAddText_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_CROnlyOnSelectedNear	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_CROnlyOnSelectedNear(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_Shell_WithUmlauts	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0($/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1($/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite($/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
Table Of Contents	plugged/vista.vim/README.md	/^## Table Of Contents$/;"	s
Table of Contents	plugged/ale/README.md	/^## Table of Contents$/;"	s
TableFormat	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer TableFormat call s:TableFormat()$/;"	c
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
TagExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^class TagExplManager(Manager):$/;"	c
TagExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^class TagExplorer(Explorer):$/;"	c
Tagbar	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
Tagbar: a class outline viewer for Vim	plugged/tagbar/README.md	/^# Tagbar: a class outline viewer for Vim$/;"	c
TagbarAutoCmds	plugged/tagbar/autoload/tagbar.vim	/^    augroup TagbarAutoCmds$/;"	a
TagbarBalloonExpr	plugged/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#debug#start_debug(<f-args>)$/;"	c
TagbarDebugEnd	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#debug#stop_debug()$/;"	c
TagbarForceUpdate	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarForceUpdate   call tagbar#ForceUpdate()$/;"	c
TagbarGetTypeConfig	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	plugged/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TaskItem	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef struct TaskItem$/;"	s	file:
TaskItem	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^}TaskItem;$/;"	t	typeref:struct:TaskItem	file:
Team	plugged/vim/README.md	/^## Team$/;"	s
TempFileManager	plugged/ultisnips/test/vim_interface.py	/^class TempFileManager:$/;"	c
TermExit	plugged/vim-quickui/test/test_terminal.vim	/^function! TermExit(code)$/;"	f
Terminal	plugged/vim-quickui/MANUAL.md	/^### Terminal$/;"	S
Terminal	plugged/vim-quickui/README.md	/^### Terminal$/;"	S
Terminal Emulator Info	plugged/onedark.vim/.github/ISSUE_TEMPLATE.md	/^### Terminal Emulator Info$/;"	S
Terraform	plugged/vim-polyglot/ftplugin/terraform.vim	/^command! -nargs=+ -complete=custom,terraform#commands -buffer Terraform$/;"	c
TerraformFmt	plugged/vim-polyglot/ftplugin/terraform.vim	/^command! -nargs=0 -buffer TerraformFmt call terraform#fmt()$/;"	c
TerraformIndent	plugged/vim-polyglot/indent/terraform.vim	/^function! TerraformIndent(lnum)$/;"	f
Test	plugged/vim-polyglot/ftplugin/mma.vim	/^	function! Test()$/;"	f
TestAllMatch	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestCheapDelete	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestCommonCharacters	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestCrash	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestEmptyString	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestExtension	plugged/vim-polyglot/tests/extensions.vim	/^function! TestExtension(filetype, filename, content)$/;"	f
TestFiletype	plugged/vim-polyglot/tests/filetypes.vim	/^func! TestFiletype(filetype)$/;"	f
TestFiletypeFuncs	plugged/vim-polyglot/extras/filetype.vim	/^func! TestFiletypeFuncs(testlist)$/;"	f
TestGuessing_BackspaceOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestLangmapWithUtf8_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
TestLotsaNewlines	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestNoSubstring	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
TestRealLife	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestTranslator	plugged/vim-translator/test/test_translator.py	/^class TestTranslator(unittest.TestCase):$/;"	c
TestUltiSnipsProblem	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestWithNewline	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
Test_conf_type	plugged/vim-polyglot/tests/native.vim	/^func Test_conf_type()$/;"	f
Test_detection	plugged/vim-polyglot/tests/native.vim	/^func Test_detection()$/;"	f
Test_emptybuf_ftdetect	plugged/vim-polyglot/tests/native.vim	/^func Test_emptybuf_ftdetect()$/;"	f
Test_filetype_indent_off	plugged/vim-polyglot/tests/native.vim	/^func Test_filetype_indent_off()$/;"	f
Test_hook_file	plugged/vim-polyglot/tests/native.vim	/^func Test_hook_file()$/;"	f
Test_other_type	plugged/vim-polyglot/tests/native.vim	/^func Test_other_type()$/;"	f
Test_script_detection	plugged/vim-polyglot/tests/native.vim	/^func Test_script_detection()$/;"	f
Test_setfiletype_completion	plugged/vim-polyglot/tests/native.vim	/^func Test_setfiletype_completion()$/;"	f
Testing	plugged/ultisnips/CONTRIBUTING.md	/^## Testing$/;"	s
Testing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	s
TexFold	plugged/vim-polyglot/syntax/tex.vim	/^ com! -nargs=* TexFold <args> $/;"	c
TexFold	plugged/vim-polyglot/syntax/tex.vim	/^ com! -nargs=* TexFold <args> fold $/;"	c
TexNewMathZone	plugged/vim-polyglot/syntax/tex.vim	/^ fun! TexNewMathZone(sfx,mathzone,starform)$/;"	f
TextContext	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^typedef struct TextContext$/;"	s	file:
TextContext	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^}TextContext;$/;"	t	typeref:struct:TextContext	file:
TextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class TextObject:$/;"	c
TextObjectTransformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class TextObjectTransformation:$/;"	c
TextTabStopAfterMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
Textbox	plugged/vim-quickui/MANUAL.md	/^### Textbox$/;"	S
Textbox	plugged/vim-quickui/README.md	/^### Textbox$/;"	S
TextilePreview	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextilePreview call TextileRenderBufferToPreview()$/;"	c
TextileRender	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRender(lines)$/;"	f
TextileRenderBufferToFile	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToFile()$/;"	f
TextileRenderBufferToPreview	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToPreview()$/;"	f
TextileRenderBufferToTab	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToTab()$/;"	f
TextileRenderFile	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderFile call TextileRenderBufferToFile()$/;"	c
TextileRenderFile	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderFile(lines, filename)$/;"	f
TextileRenderTab	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderTab call TextileRenderBufferToTab()$/;"	c
Thanks!	plugged/onedark.vim/CONTRIBUTING.md	/^## Thanks!$/;"	s
The NERDTree [![Vint](https://github.com/preservim/nerdtree/workflows/Vint/badge.svg)](https://github.com/preservim/nerdtree/actions?workflow=Vint)	plugged/nerdtree/README.markdown	/^The NERDTree [![Vint](https:\/\/github.com\/preservim\/nerdtree\/workflows\/Vint\/badge.svg)](ht/;"	c
Themes	plugged/vim-airline/CONTRIBUTING.md	/^# Themes$/;"	c
Themes	plugged/vim-airline/README.md	/^## Themes$/;"	s
Things to consider when contributing	plugged/vim-snippets/README.md	/^Things to consider when contributing$/;"	s
Things to keep in mind	plugged/vim-devicons/CONTRIBUTING.md	/^## Things to keep in mind$/;"	s
ToDo	plugged/gruvbox/README.md	/^ToDo$/;"	s
Toc	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toc call s:Toc()$/;"	c
Toch	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toch call s:Toc('horizontal')$/;"	c
Toct	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toct call s:Toc('tab')$/;"	c
Tocv	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Tocv call s:Toc('vertical')$/;"	c
Token	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class Token:$/;"	c
Tools	plugged/vim-quickui/MANUAL.md	/^## Tools$/;"	s
TrailingNewline_TabStop_EndNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
Transformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLowercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter1	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter1(_VimTest):$/;"	c
Transformation_ConditionalWithEscapedDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithEscapedDelimiter(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionMultiline_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionMultiline_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
Translate	plugged/vim-translator/plugin/translator.vim	/^  \\ Translate$/;"	c
TranslateH	plugged/vim-translator/plugin/translator.vim	/^command! -nargs=0   TranslateH call translator#history#export()$/;"	c
TranslateL	plugged/vim-translator/plugin/translator.vim	/^command! -nargs=0   TranslateL call translator#logger#open_log()$/;"	c
TranslateR	plugged/vim-translator/plugin/translator.vim	/^  \\ TranslateR$/;"	c
TranslateShell	plugged/vim-translator/script/translator.py	/^class TranslateShell(BasicTranslator):$/;"	c
TranslateW	plugged/vim-translator/plugin/translator.vim	/^  \\ TranslateW$/;"	c
TranslateX	plugged/vim-translator/plugin/translator.vim	/^  \\ TranslateX$/;"	c
Translation	plugged/vim-translator/script/translator.py	/^class Translation(object):$/;"	c
Trim	plugged/vim-polyglot/indent/qml.vim	/^function! Trim(line)$/;"	f
TrimSpacesAtEndOfLines	plugged/ultisnips/test/test_Chars.py	/^class TrimSpacesAtEndOfLines(_VimTest):$/;"	c
Troubleshooting	plugged/onedark.vim/README.md	/^## Troubleshooting$/;"	s
Troubleshooting	plugged/vim-devicons/README.md	/^Troubleshooting$/;"	s
Troubleshooting	plugged/vim-polyglot/README.md	/^## Troubleshooting$/;"	s
TsIncludeExpr	plugged/vim-polyglot/ftplugin/typescript.vim	/^function! TsIncludeExpr(file)$/;"	f
U	autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> U             :call leaderf#Rg#UndoLastChange()<CR>$/;"	m
UNIDECODE_ALERT_RAISED	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UltiSnips	plugged/ultisnips/README.md	/^UltiSnips$/;"	c
UltiSnips#AddFiletypes	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes) abort$/;"	f
UltiSnips#AddSnippetWithPriority	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, prior/;"	f
UltiSnips#Anon	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...) abort$/;"	f
UltiSnips#CursorMoved	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved() abort$/;"	f
UltiSnips#Edit	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...) abort$/;"	f
UltiSnips#ExpandSnippet	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet() abort$/;"	f
UltiSnips#ExpandSnippetOrJump	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump() abort$/;"	f
UltiSnips#FileTypeComplete	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos) abort$/;"	f
UltiSnips#JumpBackwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards() abort$/;"	f
UltiSnips#JumpForwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards() abort$/;"	f
UltiSnips#LeavingBuffer	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer() abort$/;"	f
UltiSnips#LeavingInsertMode	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode() abort$/;"	f
UltiSnips#ListSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets() abort$/;"	f
UltiSnips#RefreshSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets() abort$/;"	f
UltiSnips#SaveLastVisualSelection	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range abort$/;"	f
UltiSnips#SnippetsInCurrentScope	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...) abort$/;"	f
UltiSnips#TrackChange	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange() abort$/;"	f
UltiSnips#map_keys#MapKeys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys() abort$/;"	f
UltiSnipsAddFiletypes	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
UltiSnips_AutoTrigger	plugged/ultisnips/plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
UltiSnips_Manager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
UmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class UmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
UnIndentByInd	plugged/vim-polyglot/indent/autohotkey.vim	/^function! UnIndentByInd(indent)$/;"	f
Undo_ChangesInPlaceholder	plugged/ultisnips/test/test_Editing.py	/^class Undo_ChangesInPlaceholder(_VimTest):$/;"	c
Undo_CompletelyUndoSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_CompletelyUndoSnippet(_VimTest):$/;"	c
Undo_RemoveEditInTabstop	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime2	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime2(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
Unfinalise	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Unfinalise()$/;"	f
UnfinaliseMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>UnfinaliseMenu()$/;"	f
Unicode	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def Unicode(str, encoding):$/;"	f
Unix	plugged/nerdcommenter/README.md	/^#### Unix$/;"	t
Unlock	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
UpdateModifiedSnippetWithoutCursorMove1	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove1(_VimTest):$/;"	c
UpdateModifiedSnippetWithoutCursorMove2	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove2(_VimTest):$/;"	c
Updating	plugged/vim-polyglot/README.md	/^## Updating$/;"	s
Urgency	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Urgency(urg)$/;"	f
Usage	plugged/LeaderF/README.md	/^Usage$/;"	s
Usage	plugged/nerdcommenter/README.md	/^## Usage$/;"	s
Usage	plugged/nvim-yarp/README.md	/^## Usage$/;"	s
Usage	plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Usage	plugged/vim-which-key/README.md	/^## Usage$/;"	s
Usage	plugged/vista.vim/README.md	/^## Usage$/;"	s
Use It	plugged/onedark.vim/CONTRIBUTING.md	/^### Use It$/;"	S
Use case	plugged/nvim-yarp/README.md	/^## Use case$/;"	s
User Manual	plugged/vim-quickui/MANUAL.md	/^# User Manual$/;"	c
User Manual	plugged/vim-quickui/README.md	/^## User Manual$/;"	s
Using fish shell (issue #42)	plugged/ranger.vim/README.md	/^### Using fish shell (issue #42)$/;"	S
Util1	plugged/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	plugged/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	plugged/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
V	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range=% V :<line1>,<line2>call <SID>Evglobal(<q-args>)$/;"	c
VADER_OUTPUT_FILE	plugged/ale/run-tests.bat	/^set VADER_OUTPUT_FILE=%~dp0\\vader_output$/;"	v
ValaCodingStyle	plugged/vim-polyglot/ftplugin/vala.vim	/^command! -buffer -bar ValaCodingStyle call ValaCodingStyle()$/;"	c
ValaCodingStyle	plugged/vim-polyglot/ftplugin/vala.vim	/^function! ValaCodingStyle() abort$/;"	f
ValueElements	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^typedef struct ValueElements$/;"	s	file:
ValueElements	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^}ValueElements;$/;"	t	typeref:struct:ValueElements	file:
VbGetIndent	plugged/vim-polyglot/indent/vb.vim	/^fun! VbGetIndent(lnum)$/;"	f
VbSearch	plugged/vim-polyglot/ftplugin/vb.vim	/^fun! <SID>VbSearch(pattern, flags)$/;"	f
Vendor Snippets	plugged/vim-snippets/README.md	/^Vendor Snippets$/;"	s
VerifyVimDict1	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict3(_VimTest):$/;"	c
Versions / dialects / ..	plugged/vim-snippets/README.md	/^Versions \/ dialects \/ ..$/;"	c
Vertical bars	plugged/indentLine/README.md	/^### Vertical bars$/;"	S
Via Plugin Manager (Recommended)	plugged/nerdcommenter/README.md	/^### Via Plugin Manager (Recommended)$/;"	S
Vim 8	plugged/vim-which-key/README.md	/^#### Vim 8$/;"	t
Vim 8	plugged/vista.vim/README.md	/^#### Vim 8$/;"	t
Vim 8 on Unix	plugged/ale/README.md	/^#### Vim 8 on Unix$/;"	t
Vim 8 on Windows	plugged/ale/README.md	/^#### Vim 8 on Windows$/;"	t
Vim 8+ packages	plugged/nerdtree/README.markdown	/^#### Vim 8+ packages$/;"	t
VimBuffer	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^class VimBuffer:$/;"	c
VimBufferProxy	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^class VimBufferProxy(vim_helper.VimBuffer):$/;"	c
VimInterface	plugged/ultisnips/test/vim_interface.py	/^class VimInterface(TempFileManager):$/;"	c
VimInterfaceTmux	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
VimInterfaceTmuxNeovim	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmuxNeovim(VimInterfaceTmux):$/;"	c
VimInterfaceWindows	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimMock	plugged/ale/test/python/test_deoplete_source.py	/^class VimMock(object):$/;"	c
VimPosition	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
VimState	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimState:$/;"	c
VimTestCase	plugged/ultisnips/test/vim_test_case.py	/^class VimTestCase(unittest.TestCase, TempFileManager):$/;"	c
Vimrc Example	plugged/ncm2-ultisnips/README.md	/^## Vimrc Example$/;"	s
VirtualEdit	plugged/ultisnips/test/test_Fixes.py	/^class VirtualEdit(_VimTest):$/;"	c
Vista	plugged/vista.vim/plugin/vista.vim	/^command! -bang -nargs=* -bar -complete=custom,vista#util#Complete Vista call vista#(<bang>0, <f-/;"	c
Vista.vim	plugged/vista.vim/README.md	/^# Vista.vim$/;"	c
VistaBlink	plugged/vista.vim/autoload/vista/util.vim	/^    augroup VistaBlink$/;"	a
VistaCursor	plugged/vista.vim/autoload/vista/ftplugin.vim	/^  augroup VistaCursor$/;"	a
VistaFloatingWin	plugged/vista.vim/autoload/vista/floating.vim	/^  augroup VistaFloatingWin$/;"	a
VistaMOF	plugged/vista.vim/autoload/vista/autocmd.vim	/^  augroup VistaMOF$/;"	a
VistaPopup	plugged/vista.vim/autoload/vista/popup.vim	/^  augroup VistaPopup$/;"	a
Visual	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
VisualContentPreserver	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver:$/;"	c
VisualToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VisualToken(Token):$/;"	c
VisualTransformationWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_DedentLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
Visual_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Visual.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordExclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordExclusive(_VimTest):$/;"	c
Visual_SelectOneWordInclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordInclusive(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
VlangIndent	plugged/vim-polyglot/indent/vlang.vim	/^function! VlangIndent(lnum) abort$/;"	f
W	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> W             :call leaderf#Rg#ApplyChangesAndSave(1)<CR>$/;"	m
WHITESPACE_AFTER_SET	plugged/ale/test/script/block-padding-checker	/^WHITESPACE_AFTER_SET = END_BLOCKS$/;"	v
WHITESPACE_BEFORE_SET	plugged/ale/test/script/block-padding-checker	/^WHITESPACE_BEFORE_SET = START_BLOCKS | TERMINATORS$/;"	v
WHITESPACE_FORBIDDEN_AFTER_SET	plugged/ale/test/script/block-padding-checker	/^WHITESPACE_FORBIDDEN_AFTER_SET = START_BLOCKS | MIDDLE_BLOCKS$/;"	v
WHITESPACE_FORBIDDEN_BEFORE_SET	plugged/ale/test/script/block-padding-checker	/^WHITESPACE_FORBIDDEN_BEFORE_SET = END_BLOCKS | MIDDLE_BLOCKS$/;"	v
WIN_ESCAPES	plugged/ultisnips/test/vim_interface.py	/^    WIN_ESCAPES = ["+", "^", "%", "~", "[", "]", "<", ">", "(", ")"]$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	plugged/ultisnips/test/vim_interface.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
WarnIfNotUnfinalised	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>WarnIfNotUnfinalised()$/;"	f
Warning	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>Warning(msg) "{{{3$/;"	f
WebDevIconsGetFileFormatSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileFormatSymbol(...)$/;"	f
WebDevIconsGetFileTypeSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileTypeSymbol(...)$/;"	f
WebDevIconsNERDTreeChangeRootHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeChangeRootHandler(node)$/;"	f
WebDevIconsNERDTreeDirClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirClose(node)$/;"	f
WebDevIconsNERDTreeDirCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseChildren(node)$/;"	f
WebDevIconsNERDTreeDirCloseRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseRecursively(node)$/;"	f
WebDevIconsNERDTreeDirOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpen(node)$/;"	f
WebDevIconsNERDTreeDirOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeDirUpdateFlags	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirUpdateFlags(node, glyph)$/;"	f
WebDevIconsNERDTreeMapActivateNode	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNode(node)$/;"	f
WebDevIconsNERDTreeMapActivateNodeSingleMode	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNodeSingleMode(node)$/;"	f
WebDevIconsNERDTreeMapCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseChildren(node)$/;"	f
WebDevIconsNERDTreeMapCloseDir	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseDir(node)$/;"	f
WebDevIconsNERDTreeMapOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeMapUpdirKeepOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapUpdirKeepOpen()$/;"	f
WebDevIconsNERDTreeUpDirCurrentRootClosedHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeUpDirCurrentRootClosedHandler()$/;"	f
What I expected to happen	plugged/vim/.github/issue_template.md	/^### What I expected to happen$/;"	S
What Is It ?	plugged/vim-quickui/README.md	/^# What Is It ?$/;"	c
What Tagbar is	plugged/tagbar/README.md	/^## What Tagbar is$/;"	s
What Tagbar is not	plugged/tagbar/README.md	/^## What Tagbar is not$/;"	s
What are the relevant tickets (if any)?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What are the relevant tickets (if any)?$/;"	t
What does this Pull Request (PR) do?	plugged/vim-devicons/.github/PULL_REQUEST_TEMPLATE.md	/^#### What does this Pull Request (PR) do?$/;"	t
What happened	plugged/vim/.github/issue_template.md	/^### What happened$/;"	S
What if I'm also opening a saved session, for example `vim -S session_file.vim`? I don't want NERDTree to open in that scenario.	plugged/nerdtree/README.markdown	/^#### What if I'm also opening a saved session, for example `vim -S session_file.vim`? I don't wa/;"	t
What went wrong	plugged/ale/.github/ISSUE_TEMPLATE/report-a-bug.md	/^## What went wrong$/;"	s
What?	plugged/vim-gutentags/README.md	/^## What?$/;"	s
Where did the name come from?	plugged/vim-airline/README.md	/^# Where did the name come from?$/;"	c
WhichKey	plugged/vim-which-key/plugin/which_key.vim	/^command! -bang -nargs=1 WhichKey call which_key#start(0, <bang>0, <args>)$/;"	c
WhichKeyVisual	plugged/vim-which-key/plugin/which_key.vim	/^command! -bang -nargs=1 -range WhichKeyVisual call which_key#start(1, <bang>0, <args>)$/;"	c
Who Am I ?	plugged/vim-quickui/MANUAL.md	/^## Who Am I ?$/;"	s
Who Am I ?	plugged/vim-quickui/README.md	/^## Who Am I ?$/;"	s
Why do all comments look like they're highlighted?	plugged/onedark.vim/README.md	/^### Why do all comments look like they're highlighted?$/;"	S
Why do colors look washed out when using [iTerm2](https://www.iterm2.com)?	plugged/onedark.vim/README.md	/^### Why do colors look washed out when using [iTerm2](https:\/\/www.iterm2.com)?$/;"	S
Why do the colors in terminal Vim look slightly off/not like the preview image at the top of this README?	plugged/onedark.vim/README.md	/^### Why do the colors in terminal Vim look slightly off\/not like the preview image at the top o/;"	S
Why do the colors in terminal Vim look totally crazy?	plugged/onedark.vim/README.md	/^### Why do the colors in terminal Vim look totally crazy?$/;"	S
Why?	plugged/vim-gutentags/README.md	/^## Why?$/;"	s
Wiki	plugged/LeaderF/README.md	/^Wiki$/;"	s
WindowExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^class WindowExplManager(Manager):$/;"	c
WindowExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^class WindowExplorer(Explorer):$/;"	c
Windows (PowerShell)	plugged/nerdcommenter/README.md	/^#### Windows (PowerShell)$/;"	t
WriteBookmarks	plugged/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 WriteBookmarks call g:NERDTreeBookmark.Write()$/;"	c
Writing	plugged/vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	s
X	autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
XTabReopen	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    com! XTabReopen call airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	c
Xf86confdeclopt	plugged/vim-polyglot/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained nextgroup=xf86/;"	c
Xf86confdeclopt	plugged/vim-polyglot/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained$/;"	c
Yet Another Remote Plugin Framework for Neovim	plugged/nvim-yarp/README.md	/^# Yet Another Remote Plugin Framework for Neovim$/;"	c
YoudaoTranslator	plugged/vim-translator/script/translator.py	/^class YoudaoTranslator(BasicTranslator):$/;"	c
ZimbuGoEndBlock	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! ZimbuGoEndBlock()$/;"	f
ZimbuGoStartBlock	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! ZimbuGoStartBlock()$/;"	f
[#	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [# :call search('^\\s*#\\@!', "bW")<CR>$/;"	m
[0.10] - 2018-12-15	plugged/vim-airline/CHANGELOG.md	/^## [0.10] - 2018-12-15$/;"	s
[0.11] - 2019-11-10	plugged/vim-airline/CHANGELOG.md	/^## [0.11] - 2019-11-10$/;"	s
[0.12] - Unreleased	plugged/vim-airline/CHANGELOG.md	/^## [0.12] - Unreleased$/;"	s
[0.1] - 2013-07-17	plugged/vim-airline/CHANGELOG.md	/^## [0.1] - 2013-07-17$/;"	s
[0.2] - 2013-07-28	plugged/vim-airline/CHANGELOG.md	/^## [0.2] - 2013-07-28$/;"	s
[0.3] - 2013-08-12	plugged/vim-airline/CHANGELOG.md	/^## [0.3] - 2013-08-12$/;"	s
[0.4] - 2013-08-26	plugged/vim-airline/CHANGELOG.md	/^## [0.4] - 2013-08-26$/;"	s
[0.5] - 2013-09-13	plugged/vim-airline/CHANGELOG.md	/^## [0.5] - 2013-09-13$/;"	s
[0.6] - 2013-10-08	plugged/vim-airline/CHANGELOG.md	/^## [0.6] - 2013-10-08$/;"	s
[0.7] - 2014-12-10	plugged/vim-airline/CHANGELOG.md	/^## [0.7] - 2014-12-10$/;"	s
[0.8] - 2016-03-09	plugged/vim-airline/CHANGELOG.md	/^## [0.8] - 2016-03-09$/;"	s
[0.9] - 2018-01-15	plugged/vim-airline/CHANGELOG.md	/^## [0.9] - 2018-01-15$/;"	s
[<C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldop/;"	m
[C	plugged/vim-signify/plugin/signify.vim	/^    nmap [C 9999[c$/;"	m
[Code of Conduct](CODE_OF_CONDUCT.md)	plugged/vim-devicons/README.md	/^### [Code of Conduct](CODE_OF_CONDUCT.md)$/;"	S
[Contributing Guide](CONTRIBUTING.md)	plugged/vim-devicons/README.md	/^### [Contributing Guide](CONTRIBUTING.md)$/;"	S
[LanguageClient][57]	plugged/vim-airline/README.md	/^#### [LanguageClient][57]$/;"	t
[M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','n')<CR/;"	m
[M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','v')<CR/;"	m
[NeoBundle](https://github.com/Shougo/neobundle.vim)	plugged/nerdcommenter/README.md	/^#### [NeoBundle](https:\/\/github.com\/Shougo\/neobundle.vim)$/;"	t
[Pathogen](https://github.com/tpope/vim-pathogen)	plugged/nerdcommenter/README.md	/^#### [Pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	t
[Unreleased](https://github.com/morhetz/gruvbox/tree/HEAD)	plugged/gruvbox/CHANGELOG.md	/^## [Unreleased](https:\/\/github.com\/morhetz\/gruvbox\/tree\/HEAD)$/;"	s
[Vim-CMake][60]	plugged/vim-airline/README.md	/^#### [Vim-CMake][60]$/;"	t
[Vim-Plug](https://github.com/junegunn/vim-plug)	plugged/nerdcommenter/README.md	/^#### [Vim-Plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	t
[Vim](http://www.vim.org/)	plugged/vim/INSTALL.md	/^### [Vim](http:\/\/www.vim.org\/)$/;"	S
[Vundle.vim](https://github.com/VundleVim/Vundle.vim)	plugged/nerdtree/README.markdown	/^#### [Vundle.vim](https:\/\/github.com\/VundleVim\/Vundle.vim)$/;"	t
[Vundle](https://github.com/VundleVim/Vundle.vim) or similar	plugged/nerdcommenter/README.md	/^#### [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim) or similar$/;"	t
[[	autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
[[	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[[ <Plug>(llvm-prev-section-begin)$/;"	m
[[	plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> [[ ?^\\*\\a<CR>:nohlsearch<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [[ m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z/;"	m
[[	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [[ :call search('^\\s*sub\\>', "bW")<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/handlebars.vim	/^nnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','n',v:count1)<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/handlebars.vim	/^xnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','v',v:count1)<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, '')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, visualmode())<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false/;"	m
[[	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)/;"	m
[[	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false/;"	m
[[	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)/;"	m
[[	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
[[	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^xnoremap <silent> <buffer> [[ :call rust#Jump('v', 'Back')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> [[ :call <SID>NextSection(1)<cr>$/;"	m
[[	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [[ :call search('\\c^\\s*begin\\>', 'bW' )<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> [[ :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*begin\\>', 'bW' )/;"	m
[[	plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [[ :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(/;"	m
[[	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[[ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
[[	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[[ :<C-u>cal <SID>CountWrapper('[[')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [[ :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'bW')</;"	m
[[	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> [[ m`:call ZimbuGoStartBlock()<CR>$/;"	m
[]	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[] <Plug>(llvm-prev-section-end)$/;"	m
[]	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [] m':call <SID>toend('b')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [] :call search('^\\s*endsub\\>', "bW")<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, '')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, visualmode())<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false/;"	m
[]	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)/;"	m
[]	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false/;"	m
[]	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)/;"	m
[]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
[]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
[]	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [] :call search('\\c^\\s*end\\W*$', 'bW' )<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> [] :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*end\\W*$', 'bW' )/;"	m
[]	plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [] :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', /;"	m
[]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
[]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[] :<C-u>cal <SID>CountWrapper('[]')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [] :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'bW'/;"	m
[apt-vim](https://github.com/egalpin/apt-vim)	plugged/nerdtree/README.markdown	/^#### [apt-vim](https:\/\/github.com\/egalpin\/apt-vim)$/;"	t
[b	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[b <Plug>(llvm-move-block-prev)$/;"	m
[c	plugged/vim-signify/plugin/signify.vim	/^  nmap [c <plug>(signify-prev-hunk)$/;"	m
[csv.vim][28]	plugged/vim-airline/README.md	/^#### [csv.vim][28]$/;"	t
[ctrlp.vim][10]	plugged/vim-airline/README.md	/^#### [ctrlp.vim][10]$/;"	t
[ctrlspace][38]	plugged/vim-airline/README.md	/^#### [ctrlspace][38]$/;"	t
[d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[dein.vim](https://github.com/Shougo/dein.vim)	plugged/nerdtree/README.markdown	/^#### [dein.vim](https:\/\/github.com\/Shougo\/dein.vim)$/;"	t
[denite.nvim][51]	plugged/vim-airline/README.md	/^#### [denite.nvim][51]$/;"	t
[lightline.vim](https://github.com/itchyny/lightline.vim)	plugged/vista.vim/README.md	/^#### [lightline.vim](https:\/\/github.com\/itchyny\/lightline.vim)$/;"	t
[localsearch][54]	plugged/vim-airline/README.md	/^#### [localsearch][54]$/;"	t
[m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','n')<CR/;"	m
[m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','v')<CR/;"	m
[pathogen.vim](https://github.com/tpope/vim-pathogen)	plugged/nerdtree/README.markdown	/^#### [pathogen.vim](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	t
[promptline][36]	plugged/vim-airline/README.md	/^#### [promptline][36]$/;"	t
[syntastic][5]	plugged/vim-airline/README.md	/^#### [syntastic][5]$/;"	t
[tagbar][19]	plugged/vim-airline/README.md	/^#### [tagbar][19]$/;"	t
[tmuxline][35]	plugged/vim-airline/README.md	/^#### [tmuxline][35]$/;"	t
[unite.vim][9]	plugged/vim-airline/README.md	/^#### [unite.vim][9]$/;"	t
[v0.0.8](https://github.com/morhetz/gruvbox/tree/v0.0.8) (2012-12-08)	plugged/gruvbox/CHANGELOG.md	/^## [v0.0.8](https:\/\/github.com\/morhetz\/gruvbox\/tree\/v0.0.8) (2012-12-08)$/;"	s
[v1.3.5](https://github.com/morhetz/gruvbox/tree/v1.3.5) (2014-03-19)	plugged/gruvbox/CHANGELOG.md	/^## [v1.3.5](https:\/\/github.com\/morhetz\/gruvbox\/tree\/v1.3.5) (2014-03-19)$/;"	s
[vim-plug](https://github.com/junegunn/vim-plug)	plugged/nerdtree/README.markdown	/^#### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	t
[vim.battery][61]	plugged/vim-airline/README.md	/^#### [vim.battery][61]$/;"	t
[vimagit][50]	plugged/vim-airline/README.md	/^#### [vimagit][50]$/;"	t
[vimtex][53]	plugged/vim-airline/README.md	/^#### [vimtex][53]$/;"	t
[virtualenv][31]	plugged/vim-airline/README.md	/^#### [virtualenv][31]$/;"	t
[xkb-switch][48]/[xkb-layout][49]	plugged/vim-airline/README.md	/^#### [xkb-switch][48]\/[xkb-layout][49]$/;"	t
[{	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false/;"	m
[{	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)/;"	m
[{	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false/;"	m
[{	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)/;"	m
]#	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ]# :call search('^\\s*#\\@!', "W")<CR>$/;"	m
]<C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldop/;"	m
]C	plugged/vim-signify/plugin/signify.vim	/^    nmap ]C 9999]c$/;"	m
]M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','n')<CR>$/;"	m
]M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','v')<CR>$/;"	m
][	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>][ <Plug>(llvm-next-section-end)$/;"	m
][	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ][ m':call <SID>toend('')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
][	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
][	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ][ :call search('^\\s*endsub\\>', "W")<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, '')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, visualmode())<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false/;"	m
][	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)/;"	m
][	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false/;"	m
][	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)/;"	m
][	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
][	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
][	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ][ :call search('\\c^\\s*end\\W*$', 'W' )<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> ][ :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*end\\W*$', 'W' )</;"	m
][	plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ][ :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', /;"	m
][	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>][ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
][	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>][ :<C-u>cal <SID>CountWrapper('][')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ][ :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'W')/;"	m
]]	autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
]]	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>]] <Plug>(llvm-next-section-begin)$/;"	m
]]	plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> ]] \/^\\*\\a<CR>:nohlsearch<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ]] m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z/;"	m
]]	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
]]	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
]]	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ]] :call search('^\\s*sub\\>', "W")<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/handlebars.vim	/^nnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'n',v:count1)<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/handlebars.vim	/^xnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'v',v:count1)<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, '')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/j.vim	/^xnoremap <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, visualmode())<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false/;"	m
]]	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)/;"	m
]]	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false/;"	m
]]	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)/;"	m
]]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
]]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^xnoremap <silent> <buffer> ]] :call rust#Jump('v', 'Forward')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> ]] :call <SID>NextSection(0)<cr>$/;"	m
]]	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ]] :call search('\\c^\\s*begin\\>', 'W' )<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/sql.vim	/^xnoremap <buffer> <silent> ]] :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*begin\\>', 'W' )</;"	m
]]	plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ]] :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(/;"	m
]]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>]] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
]]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>]] :<C-u>cal <SID>CountWrapper(']]')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ]] :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'W')<C/;"	m
]]	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> ]] m`:call ZimbuGoEndBlock()<CR>$/;"	m
]b	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>]b <Plug>(llvm-move-block-next)$/;"	m
]c	plugged/vim-signify/plugin/signify.vim	/^  nmap ]c <plug>(signify-next-hunk)$/;"	m
]d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','n')<CR>$/;"	m
]m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','v')<CR>$/;"	m
]}	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false/;"	m
]}	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)/;"	m
]}	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false/;"	m
]}	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)/;"	m
_	plugged/onedark.vim/build/build.js	/^const _ = require('lodash') \/\/ ships with termcolors; only used because of termcolors customiz/;"	C
_AddFuncBase	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class _AnonBase(_VimTest):$/;"	c
_Base	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _Base:$/;"	c
_BaseGuessing	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing:$/;"	c
_CONDITIONAL	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CleverReplace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class _CleverReplace:$/;"	c
_DOLLAR	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_ES_Base	plugged/ultisnips/test/test_Selection.py	/^class _ES_Base(_VimTest):$/;"	c
_ExpandTabs	plugged/ultisnips/test/test_Format.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FormatoptionsBase	plugged/ultisnips/test/test_Format.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_INDENT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_LONG_CASEFOLDINGS	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_ListAllSnippets	plugged/ultisnips/test/test_ListSnippets.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MPBase	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class _MPBase:$/;"	c
_MultiLineDefault	plugged/ultisnips/test/test_Chars.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	plugged/ultisnips/test/test_MultipleMatches.py	/^class _MultipleMatches(_VimTest):$/;"	c
_No_Tab_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_ONE_CHAR_CASE_SWITCH	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_OS_Base	plugged/ultisnips/test/test_Selection.py	/^class _OS_Base(_VimTest):$/;"	c
_ParseSnippets_MultiWord	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
_ParseSnippets_MultiWord_RE	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
_Placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^_Placeholder = namedtuple("_FrozenPlaceholder", ["current_text", "start", "end"])$/;"	v
_REPLACE_NON_WS	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
_Regex_Self	plugged/ultisnips/test/test_SnippetOptions.py	/^class _Regex_Self(_VimTest):$/;"	c
_SelectModeMappings	plugged/ultisnips/test/test_Selection.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	plugged/ultisnips/test/test_Expand.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetUtilCursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class _SnippetUtilCursor:$/;"	c
_TABS	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TabExpand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class _TabExpand_RealWorld:$/;"	c
_Tabs	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class _Tabs:$/;"	c
_TextIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class _TextIterator:$/;"	c
_UmlautsBase	plugged/ultisnips/test/test_Chars.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VimCursor	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VimTest	plugged/ultisnips/test/test_AnonymousExpansion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Autocommands.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Autotrigger.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Chars.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Choices.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Completion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_ContextSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Editing.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Expand.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Fixes.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Folding.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Format.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Interpolation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_ListSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Mirror.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Movement.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_MultipleMatches.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_ParseSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Plugin.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Recursive.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Selection.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_SnipMate.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_SnippetActions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_SnippetOptions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_TabStop.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Transformation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_UltiSnipFunc.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VimTest	plugged/ultisnips/test/test_Visual.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	x
_VisualContent	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^_VisualContent = namedtuple("_VisualContent", ["mode", "text"])$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
__WHITESPACE_SPLIT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^__WHITESPACE_SPLIT = re.compile(r"\\s")$/;"	v
__add__	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^        def __add__(self, iterable):$/;"	m	class:AsyncExecutor.Result
__add__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position
__add__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^__all__ = ['anyHub']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^__all__ = ['bufExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^__all__ = ['bufTagExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^__all__ = ['colorschemeExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^__all__ = ["commandExplManager"]$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer.py	/^__all__ = ['Explorer']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^__all__ = ['fileExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^__all__ = ["filetypeExplManager"]$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^__all__ = ['functionExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^__all__ = ['gtagsExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^__all__ = ['helpExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^__all__ = ['historyExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^__all__ = ['lineExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^__all__ = ['mru']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^__all__ = ['mruExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^__all__ = ["qfloclistExplManager"]$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^__all__ = ['rgExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^__all__ = ['selfExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^__all__ = ['tagExplManager']$/;"	v
__all__	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^__all__ = ["windowExplManager"]$/;"	v
__all__	plugged/ncm2/pythonx/ncm2.py	/^__all__ = ['Ncm2Base', 'Ncm2Source', 'Popen']$/;"	v
__all__	plugged/ncm2/pythonx/ncm2_core.py	/^__all__ = events$/;"	v
__anon07ea32bd010a	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    {$/;"	u	struct:FeResult	file:
__anon07ea32bd020a	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    {$/;"	u	struct:PySetTaskItem	file:
__anon07ea32bd030a	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    {$/;"	u	struct:FuzzyEngine	file:
__anon07ea32bd0408	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^        {$/;"	s	union:FuzzyEngine::__anon07ea32bd030a	file:
__anon07ea32bd0508	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^        {$/;"	s	union:FuzzyEngine::__anon07ea32bd030a	file:
__anon07ea32bd060a	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    {$/;"	u	struct:FuzzyEngine	file:
__anon07ea32bd0703	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^{$/;"	g	file:
__anon07ea32bd0803	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^{$/;"	g	file:
__anon517ee2f20108	plugged/vista.vim/test/data/175.cpp	/^struct {$/;"	s	file:
__anon517ee2f20208	plugged/vista.vim/test/data/175.cpp	/^	struct {$/;"	s	namespace:example	file:
__anon517ee2f20308	plugged/vista.vim/test/data/175.cpp	/^	struct {$/;"	s	namespace:example	file:
__anon517ee2f20403	plugged/vista.vim/test/data/175.cpp	/^	enum {$/;"	g	namespace:example	file:
__anon517ee2f20503	plugged/vista.vim/test/data/175.cpp	/^	enum {$/;"	g	namespace:example	file:
__anon517ee2f20611	plugged/vista.vim/test/data/175.cpp	/^namespace {$/;"	n	file:
__anon517ee2f20703	plugged/vista.vim/test/data/175.cpp	/^	enum {$/;"	g	namespace:__anon517ee2f20611	file:
__anonde0a4e2a0111	plugged/vista.vim/test/data/anonymous_namespace.cpp	/^namespace {$/;"	n	file:
__anonde0a4e2a0211	plugged/vista.vim/test/data/anonymous_namespace.cpp	/^namespace {$/;"	n	file:
__anonde0a4e2a0311	plugged/vista.vim/test/data/anonymous_namespace.cpp	/^namespace {$/;"	n	file:
__author__	plugged/ale/rplugin/python3/deoplete/sources/ale.py	/^__author__ = 'Joao Paulo, w0rp'$/;"	v
__call__	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def __call__(self, parser, namespace, values, option_string=None):$/;"	m	class:OptionalAction
__del__	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def __del__(self):$/;"	m	class:GtagsExplorer
__delitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __delitem__(self, key):$/;"	m	class:VimBufferProxy
__eq__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position
__getitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getitem__(self, key):$/;"	m	class:VimBufferProxy
__getitem__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __getitem__(self, index):$/;"	m	class:Position
__getitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor
__getitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs
__getitem__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer
__getslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBufferProxy
__iadd__	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^        def __iadd__(self, iterable):$/;"	m	class:AsyncExecutor.Result
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def __init__(self):$/;"	m	class:AnyExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def __init__(self):$/;"	m	class:AnyHub
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def __init__(self, category, config):$/;"	m	class:AnyExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def __init__(self,$/;"	m	class:LfHelpFormatter
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def __init__(self,$/;"	m	class:OptionalAction
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^        def __init__(self, iterable):$/;"	m	class:AsyncExecutor.Result
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^    def __init__(self):$/;"	m	class:AsyncExecutor
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def __init__(self):$/;"	m	class:BufExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def __init__(self):$/;"	m	class:BufferExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def __init__(self):$/;"	m	class:BufTagExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def __init__(self):$/;"	m	class:BufTagExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def __init__(self):$/;"	m	class:LfCli
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def __init__(self):$/;"	m	class:ColorschemeExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def __init__(self):$/;"	m	class:ColorschemeExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def __init__(self):$/;"	m	class:CommandExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def __init__(self):$/;"	m	class:CommandExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def __init__(self):$/;"	m	class:FileExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def __init__(self):$/;"	m	class:FiletypeExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def __init__(self):$/;"	m	class:FiletypeExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def __init__(self):$/;"	m	class:FunctionExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def __init__(self):$/;"	m	class:FunctionExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def __init__(self, pattern, encoding):$/;"	m	class:FuzzyMatch
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def __init__(self):$/;"	m	class:GtagsExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def __init__(self):$/;"	m	class:GtagsExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def __init__(self):$/;"	m	class:HelpExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def __init__(self):$/;"	m	class:HelpExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def __init__(self):$/;"	m	class:HistoryExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def __init__(self):$/;"	m	class:HistoryExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def __init__(self):$/;"	m	class:LfPopupInstance
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def __init__(self, manager, category, cli,$/;"	m	class:LfInstance
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def __init__(self, winid, buffer, tabpage, init_line):$/;"	m	class:PopupWindow
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def __init__(self, winid, window, buffer, tabpage, init_line):$/;"	m	class:FloatWindow
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def __init__(self):$/;"	m	class:LineExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def __init__(self):$/;"	m	class:LineExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def __init__(self):$/;"	m	class:Manager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^    def __init__(self):$/;"	m	class:Mru
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def __init__(self):$/;"	m	class:MruExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def __init__(self):$/;"	m	class:MruExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def __init__(self):$/;"	m	class:QfLocListExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def __init__(self):$/;"	m	class:QfLocListExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def __init__(self):$/;"	m	class:RgExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def __init__(self):$/;"	m	class:RgExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def __init__(self):$/;"	m	class:SelfExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def __init__(self):$/;"	m	class:SelfExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def __init__(self):$/;"	m	class:TagExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def __init__(self):$/;"	m	class:TagExplorer
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def __init__(self):$/;"	m	class:WindowExplManager
__init__	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def __init__(self):$/;"	m	class:WindowExplorer
__init__	plugged/ale/rplugin/python3/deoplete/sources/ale.py	/^        def __init__(self, vim):$/;"	m	class:Base
__init__	plugged/ale/rplugin/python3/deoplete/sources/ale.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ale/test/python/test_deoplete_source.py	/^    def __init__(self, call_list, call_results, commands):$/;"	m	class:VimMock
__init__	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ncm2/pythonx/ncm2.py	/^        def __init__(self, *args, **keys):$/;"	m	class:Popen
__init__	plugged/ncm2/pythonx/ncm2.py	/^    def __init__(self, nvim):$/;"	m	class:Ncm2Base
__init__	plugged/ncm2/pythonx/ncm2.py	/^    def __init__(self, nvim):$/;"	m	class:Ncm2Source
__init__	plugged/ncm2/pythonx/ncm2_core.py	/^    def __init__(self, nvim):$/;"	m	class:Ncm2Core
__init__	plugged/neco-vim/rplugin/python3/deoplete/source/vim.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __init__(self, snippets_stack, vstate):$/;"	m	class:VimBufferProxy
__init__	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__($/;"	m	class:SnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
__init__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__($/;"	m	class:TextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __init__(self, parent, token: ChoicesToken):$/;"	m	class:Choices
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, initial_indent, vmode, vtext, context, parent):$/;"	m	class:SnippetUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__($/;"	m	class:SnippetInstance
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, name=""):$/;"	m	class:TempFileManager
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, name):$/;"	m	class:VimInterface
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmux
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmuxNeovim
__init__	plugged/ultisnips/test/vim_test_case.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:VimTestCase
__init__	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, engine):$/;"	m	class:Translation
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, name):$/;"	m	class:BasicTranslator
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, name="baicizhan"):$/;"	m	class:BaicizhanTranslator
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, name="bing"):$/;"	m	class:BingTranslator
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, name="google"):$/;"	m	class:GoogleTranslator
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, name="haici"):$/;"	m	class:HaiciTranslator
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, name="iciba"):$/;"	m	class:ICibaTranslator
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, name="sdcv"):$/;"	m	class:SdcvShell
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, name="trans"):$/;"	m	class:TranslateShell
__init__	plugged/vim-translator/script/translator.py	/^    def __init__(self, name="youdao"):$/;"	m	class:YoudaoTranslator
__init__	plugged/vim-translator/test/test_translator.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:TestTranslator
__init__	plugged/vista.vim/test/data/114.py	/^    def __init__(self, x):$/;"	m	class:Foo
__iter__	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^        def __iter__(self):$/;"	m	class:AsyncExecutor.Result
__iter__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator
__iter__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator
__le__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position
__le__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __le__(self, other):$/;"	m	class:TextObject
__len__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __len__(self):$/;"	m	class:VimBufferProxy
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __len__(self):$/;"	m	class:SnippetDictionary
__len__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __len__(self):$/;"	m	class:VimBuffer
__lshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil
__lt__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position
__lt__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject
__metaclass__	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^    __metaclass__ = ABCMeta$/;"	v	class:Explorer	file:
__ne__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position
__new__	plugged/vim-translator/script/translator.py	/^    def __new__(self, engine):$/;"	m	class:Translation
__next__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator
__next__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator
__repr__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ChoicesToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __repr__(self):$/;"	m	class:TextObject
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __repr__(self):$/;"	m	class:Choices
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop
__rshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil
__setitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setitem__(self, key, value):$/;"	m	class:VimBufferProxy
__setitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor
__setitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __setitem__(self, no, value):$/;"	m	class:_Tabs
__setitem__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer
__setitem__	plugged/vim-translator/script/translator.py	/^    def __setitem__(self, k, v):$/;"	m	class:Translation
__setslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBufferProxy
__str__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor
__str__	plugged/vim-translator/script/translator.py	/^    def __str__(self):$/;"	m	class:Translation
__sub__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position
_accept	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _accept(self, file, mode, *args, **kwargs):$/;"	m	class:Manager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:AnyExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:BufExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:BufTagExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:ColorschemeExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:CommandExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:FileExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:FiletypeExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:FunctionExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:GtagsExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:HelpExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:HistoryExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:LineExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:Manager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:MruExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:QfLocListExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:RgExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:SelfExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:TagExplManager
_acceptSelection	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def _acceptSelection(self, *args, **kwargs):$/;"	m	class:WindowExplManager
_action_context	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _action_context(self):$/;"	m	class:SnippetManager
_actualLength	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def _actualLength(self, buffer):$/;"	m	class:LfInstance
_add_argument	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _add_argument(self, parser, arg_list, positional_args):$/;"	m	class:AnyHub
_add_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _afterEnter(self):$/;"	m	class:AnyExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def _afterEnter(self):$/;"	m	class:BufExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _afterEnter(self):$/;"	m	class:BufTagExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def _afterEnter(self):$/;"	m	class:ColorschemeExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _afterEnter(self):$/;"	m	class:FileExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _afterEnter(self):$/;"	m	class:FunctionExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _afterEnter(self):$/;"	m	class:GtagsExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def _afterEnter(self):$/;"	m	class:HelpExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _afterEnter(self):$/;"	m	class:LineExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _afterEnter(self):$/;"	m	class:Manager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _afterEnter(self):$/;"	m	class:MruExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def _afterEnter(self):$/;"	m	class:QfLocListExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _afterEnter(self):$/;"	m	class:RgExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def _afterEnter(self):$/;"	m	class:SelfExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def _afterEnter(self):$/;"	m	class:TagExplManager
_afterEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def _afterEnter(self):$/;"	m	class:WindowExplManager
_afterExit	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _afterExit(self):$/;"	m	class:AnyExplManager
_afterExit	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _afterExit(self):$/;"	m	class:Manager
_andModeFilter	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _andModeFilter(self, iterable):$/;"	m	class:Manager
_apply_change	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _apply_change(self, change):$/;"	m	class:VimBufferProxy
_argaddFiles	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _argaddFiles(self, files):$/;"	m	class:Manager
_argaddFiles	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _argaddFiles(self, files):$/;"	m	class:MruExplManager
_ask_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_ask_user	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_backspace	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _backspace(self):$/;"	m	class:LfCli
_bangEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _bangEnter(self):$/;"	m	class:AnyExplManager
_bangEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _bangEnter(self):$/;"	m	class:BufTagExplManager
_bangEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _bangEnter(self):$/;"	m	class:FileExplManager
_bangEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _bangEnter(self):$/;"	m	class:FunctionExplManager
_bangEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _bangEnter(self):$/;"	m	class:GtagsExplManager
_bangEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _bangEnter(self):$/;"	m	class:Manager
_bangEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _bangEnter(self):$/;"	m	class:RgExplManager
_bangReadFinished	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _bangReadFinished(self):$/;"	m	class:BufTagExplManager
_bangReadFinished	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _bangReadFinished(self):$/;"	m	class:FunctionExplManager
_bangReadFinished	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _bangReadFinished(self):$/;"	m	class:Manager
_beforeEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _beforeEnter(self):$/;"	m	class:AnyExplManager
_beforeEnter	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _beforeEnter(self):$/;"	m	class:Manager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _beforeExit(self):$/;"	m	class:AnyExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def _beforeExit(self):$/;"	m	class:BufExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _beforeExit(self):$/;"	m	class:BufTagExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def _beforeExit(self):$/;"	m	class:ColorschemeExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _beforeExit(self):$/;"	m	class:FileExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _beforeExit(self):$/;"	m	class:FunctionExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _beforeExit(self):$/;"	m	class:GtagsExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def _beforeExit(self):$/;"	m	class:HelpExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _beforeExit(self):$/;"	m	class:LineExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _beforeExit(self):$/;"	m	class:Manager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _beforeExit(self):$/;"	m	class:MruExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _beforeExit(self):$/;"	m	class:RgExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def _beforeExit(self):$/;"	m	class:SelfExplManager
_beforeExit	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def _beforeExit(self):$/;"	m	class:TagExplManager
_before_test	plugged/ultisnips/test/test_Fixes.py	/^    def _before_test(self):$/;"	m	class:NonUnicodeDataInUnnamedRegister
_before_test	plugged/ultisnips/test/test_Plugin.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:TestLangmapWithUtf8_ExpectCorrectResult
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:_AddFuncBase
_before_test	plugged/ultisnips/test/vim_test_case.py	/^    def _before_test(self):$/;"	m	class:VimTestCase
_buildCmd	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _buildCmd(self, dir, **kwargs):$/;"	m	class:FileExplorer
_buildCmd	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _buildCmd(self, dir, **kwargs):$/;"	m	class:GtagsExplorer
_buildNvimPrompt	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _buildNvimPrompt(self):$/;"	m	class:LfCli
_buildPattern	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _buildPattern(self):$/;"	m	class:LfCli
_buildPopupPrompt	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _buildPopupPrompt(self):$/;"	m	class:LfCli
_buildPrompt	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _buildPrompt(self):$/;"	m	class:LfCli
_calc_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _calc_end(text, start):$/;"	f
_check_if_still_inside_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_check_version	plugged/ultisnips/test/vim_interface.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
_child_has_moved	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _chomp(string):$/;"	f
_cleanup	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _cleanup(self):$/;"	m	class:Manager
_clearHighlights	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _clearHighlights(self):$/;"	m	class:Manager
_clearHighlightsPos	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _clearHighlightsPos(self):$/;"	m	class:Manager
_clearLeft	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _clearLeft(self):$/;"	m	class:LfCli
_closePreviewPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _closePreviewPopup(self):$/;"	m	class:Manager
_cmdExtension	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def _cmdExtension(self, cmd):$/;"	m	class:CommandExplManager
_cmdExtension	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def _cmdExtension(self, cmd):$/;"	m	class:HistoryExplManager
_cmdExtension	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _cmdExtension(self, cmd):$/;"	m	class:Manager
_context_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _context_match(self, visual_content):$/;"	m	class:SnippetDefinition
_createBufWindow	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def _createBufWindow(self, win_pos):$/;"	m	class:LfInstance
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _createHelp(self):$/;"	m	class:AnyExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def _createHelp(self):$/;"	m	class:BufExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _createHelp(self):$/;"	m	class:BufTagExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def _createHelp(self):$/;"	m	class:ColorschemeExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def _createHelp(self):$/;"	m	class:CommandExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _createHelp(self):$/;"	m	class:FileExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def _createHelp(self):$/;"	m	class:FiletypeExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _createHelp(self):$/;"	m	class:FunctionExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _createHelp(self):$/;"	m	class:GtagsExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def _createHelp(self):$/;"	m	class:HelpExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def _createHelp(self):$/;"	m	class:HistoryExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _createHelp(self):$/;"	m	class:LineExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _createHelp(self):$/;"	m	class:Manager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _createHelp(self):$/;"	m	class:MruExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def _createHelp(self):$/;"	m	class:QfLocListExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _createHelp(self):$/;"	m	class:RgExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def _createHelp(self):$/;"	m	class:SelfExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def _createHelp(self):$/;"	m	class:TagExplManager
_createHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def _createHelp(self):$/;"	m	class:WindowExplManager
_createHelpHint	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _createHelpHint(self):$/;"	m	class:Manager
_createPopupModePreview	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _createPopupModePreview(self, title, source, line_nr, jump_cmd):$/;"	m	class:Manager
_createPopupPreview	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _createPopupPreview(self, title, source, line_nr, jump_cmd=''):$/;"	m	class:Manager
_createPopupWindow	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def _createPopupWindow(self, clear):$/;"	m	class:LfInstance
_create_file	plugged/ultisnips/test/vim_test_case.py	/^    def _create_file(self, file_path, content):$/;"	m	class:VimTestCase
_create_transformations	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
_current_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_cursor_moved	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_default_action	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _default_action(self, category, positional_args, arguments, *args, **kwargs):$/;"	m	class:AnyHub
_default_palette	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^_default_palette = {$/;"	v
_defineCommonMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _defineCommonMaps(self):$/;"	m	class:Manager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _defineMaps(self):$/;"	m	class:AnyExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def _defineMaps(self):$/;"	m	class:BufExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _defineMaps(self):$/;"	m	class:BufTagExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def _defineMaps(self):$/;"	m	class:ColorschemeExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def _defineMaps(self):$/;"	m	class:CommandExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _defineMaps(self):$/;"	m	class:FileExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def _defineMaps(self):$/;"	m	class:FiletypeExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _defineMaps(self):$/;"	m	class:FunctionExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _defineMaps(self):$/;"	m	class:GtagsExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def _defineMaps(self):$/;"	m	class:HelpExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def _defineMaps(self):$/;"	m	class:HistoryExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _defineMaps(self):$/;"	m	class:LineExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _defineMaps(self):$/;"	m	class:Manager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _defineMaps(self):$/;"	m	class:MruExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def _defineMaps(self):$/;"	m	class:QfLocListExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _defineMaps(self):$/;"	m	class:RgExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def _defineMaps(self):$/;"	m	class:SelfExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def _defineMaps(self):$/;"	m	class:TagExplManager
_defineMaps	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def _defineMaps(self):$/;"	m	class:WindowExplManager
_delLeftWord	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _delLeftWord(self):$/;"	m	class:LfCli
_del_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
_delete	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _delete(self):$/;"	m	class:LfCli
_disable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _disable_edits(self):$/;"	m	class:VimBufferProxy
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:EditableTextObject
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:Choices
_do_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text	file:
_do_print	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=""):$/;"	f	function:echo_to_hierarchy	file:
_do_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_editable_children	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
_enable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _enable_edits(self):$/;"	m	class:VimBufferProxy
_enterOpeningBuffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def _enterOpeningBuffer(self):$/;"	m	class:LfInstance
_evalVimVar	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _evalVimVar(self):$/;"	m	class:GtagsExplorer
_eval_code	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _eval_code(self, code, additional_locals={}):$/;"	m	class:SnippetDefinition
_executeCmd	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _executeCmd(self, root, dbpath):$/;"	m	class:GtagsExplorer
_execute_action	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _execute_action(self, action, context, additional_locals={}):$/;"	m	class:SnippetDefinition
_exists	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _exists(self, path, dir):$/;"	m	class:FileExplorer
_exists	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _exists(self, path, dir):$/;"	m	class:GtagsExplorer
_expandGlob	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _expandGlob(self, type, glob):$/;"	m	class:FileExplorer
_extra_vim_config	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_AnonBase
_extra_vim_config	plugged/ultisnips/test/test_Autocommands.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autocommands
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpand_DoNotClobberDefaultRegister
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ShiftWidthZero
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VirtualEdit
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PerlSyntaxFold
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ExpandTabs
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_FormatoptionsBase
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_OptExists
_extra_vim_config	plugged/ultisnips/test/test_ListSnippets.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ListAllAvailable_Disabled_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Movement.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
_extra_vim_config	plugged/ultisnips/test/test_Plugin.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ES_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_OS_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_SelectModeMappings
_extra_vim_config	plugged/ultisnips/test/test_SnipMate.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:snipMate_Disabled
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:AddNewSnippetSource
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:TestNonEmptyLangmap_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Visual.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Visual_SelectOneWordExclusive
_extra_vim_config	plugged/ultisnips/test/vim_test_case.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VimTestCase
_file_list_cmd	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _file_list_cmd(self, root):$/;"	m	class:GtagsExplorer
_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):$/;"	m	class:SnippetManager
_filter	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _filter(self, step, filter_method, content, is_continue,$/;"	m	class:Manager
_find_closing_brace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_find_recursive	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	member:SnippetInstance.update_textobjects	file:
_formatResult	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _formatResult(self, buffer, result):$/;"	m	class:BufTagExplorer
_formatResult	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _formatResult(self, buffer, result):$/;"	m	class:FunctionExplorer
_fuzzyFilter	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _fuzzyFilter(self, is_full_path, get_weight, iterable):$/;"	m	class:BufTagExplManager
_fuzzyFilter	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _fuzzyFilter(self, is_full_path, get_weight, iterable):$/;"	m	class:Manager
_fuzzyFilterEx	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _fuzzyFilterEx(self, is_full_path, get_weight, iterable):$/;"	m	class:Manager
_fuzzySearch	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _fuzzySearch(self, content, is_continue, step):$/;"	m	class:Manager
_fzf_statusline	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_generateDbpath	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _generateDbpath(self, path):$/;"	m	class:GtagsExplorer
_getDegestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def _getDegestStartPos(self, line, mode):$/;"	m	class:CommandExplManager
_getDegestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def _getDegestStartPos(self, line, mode):$/;"	m	class:FiletypeExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:AnyExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:BufExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:BufTagExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:ColorschemeExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:CommandExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:FiletypeExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:FunctionExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:GtagsExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:HelpExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:HistoryExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:LineExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _getDigest(self, line, mode):$/;"	m	class:Manager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:MruExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:QfLocListExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:RgExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:SelfExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:TagExplManager
_getDigest	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def _getDigest(self, line, mode):$/;"	m	class:WindowExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:AnyExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:BufExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:BufTagExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:ColorschemeExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:FunctionExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:GtagsExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:HelpExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:HistoryExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:LineExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:Manager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:MruExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:QfLocListExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:RgExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:SelfExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:TagExplManager
_getDigestStartPos	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def _getDigestStartPos(self, line, mode):$/;"	m	class:WindowExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _getExplClass(self):$/;"	m	class:AnyExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def _getExplClass(self):$/;"	m	class:BufExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _getExplClass(self):$/;"	m	class:BufTagExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def _getExplClass(self):$/;"	m	class:ColorschemeExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def _getExplClass(self):$/;"	m	class:CommandExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _getExplClass(self):$/;"	m	class:FileExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def _getExplClass(self):$/;"	m	class:FiletypeExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _getExplClass(self):$/;"	m	class:FunctionExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _getExplClass(self):$/;"	m	class:GtagsExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def _getExplClass(self):$/;"	m	class:HelpExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def _getExplClass(self):$/;"	m	class:HistoryExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _getExplClass(self):$/;"	m	class:LineExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _getExplClass(self):$/;"	m	class:Manager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _getExplClass(self):$/;"	m	class:MruExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def _getExplClass(self):$/;"	m	class:QfLocListExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _getExplClass(self):$/;"	m	class:RgExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def _getExplClass(self):$/;"	m	class:SelfExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def _getExplClass(self):$/;"	m	class:TagExplManager
_getExplClass	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def _getExplClass(self):$/;"	m	class:WindowExplManager
_getExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _getExplorer(self):$/;"	m	class:Manager
_getExt	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def _getExt(file):$/;"	f
_getFileInfo	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _getFileInfo(self, line):$/;"	m	class:RgExplManager
_getFileList	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _getFileList(self, dir):$/;"	m	class:FileExplorer
_getFiles	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _getFiles(self, dir):$/;"	m	class:FileExplorer
_getFilesFromCache	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _getFilesFromCache(self):$/;"	m	class:FileExplorer
_getFormatedContents	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _getFormatedContents(self):$/;"	m	class:LineExplManager
_getFormatedContents	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _getFormatedContents(self):$/;"	m	class:RgExplManager
_getFunctionList	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _getFunctionList(self):$/;"	m	class:FunctionExplorer
_getFunctionResult	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _getFunctionResult(self, buffer):$/;"	m	class:FunctionExplorer
_getInstance	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _getInstance(self):$/;"	m	class:Manager
_getLineList	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _getLineList(self, buffer):$/;"	m	class:LineExplorer
_getList	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _getList(self, pairs):$/;"	m	class:BufTagExplManager
_getList	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _getList(self, pairs):$/;"	m	class:Manager
_getTagList	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _getTagList(self):$/;"	m	class:BufTagExplorer
_getTagResult	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _getTagResult(self, buffer):$/;"	m	class:BufTagExplorer
_getUnit	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _getUnit(self):$/;"	m	class:BufTagExplManager
_getUnit	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _getUnit(self):$/;"	m	class:Manager
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_get_choices_placeholder	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _get_choices_placeholder(self) -> str:$/;"	m	class:Choices
_get_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_diff(self, start, end, new_value):$/;"	m	class:VimBufferProxy
_get_existing_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def _get_existing_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
_get_line_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_line_diff(self, line_number, before, after):$/;"	m	class:VimBufferProxy
_get_max_bufname_len	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def _get_max_bufname_len(self):$/;"	m	class:WindowExplorer
_get_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _get_pos(name):$/;"	f
_get_potential_snippet_filenames_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _get_potential_snippet_filenames_to_edit(snippet_dir: str, filetypes: str) -> Set[str]:$/;"	f
_get_prev_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_tmp	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _get_tmp():$/;"	f
_get_unescaped_choice_item	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _get_unescaped_choice_item(self, escaped_choice_item):$/;"	m	class:ChoicesToken
_gotoFirstLine	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _gotoFirstLine(self):$/;"	m	class:Manager
_guessFilter	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _guessFilter(self, filename, suffix, dirname, icon, iterable):$/;"	m	class:Manager
_guessSearch	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _guessSearch(self, content, is_continue=False, step=0):$/;"	m	class:Manager
_handle_failure	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_handle_snippet_or_global	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _handle_snippet_or_global($/;"	f
_hideHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _hideHelp(self):$/;"	m	class:Manager
_highlight	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _highlight(self, is_full_path, get_highlights, use_fuzzy_engine=False, clear=True, hl_gr/;"	m	class:Manager
_highlightRefine	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _highlightRefine(self, first_get_highlights, get_highlights):$/;"	m	class:Manager
_highlight_and_mode	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _highlight_and_mode(self, highlight_methods):$/;"	m	class:Manager
_icons	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^_icons = _icons_setup()$/;"	v
_icons_setup	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def _icons_setup():$/;"	f
_inHelpLines	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _inHelpLines(self):$/;"	m	class:Manager
_initCache	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _initCache(self):$/;"	m	class:FileExplorer
_initCache	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^    def _initCache(self):$/;"	m	class:Mru
_initStlVar	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def _initStlVar(self):$/;"	m	class:LfInstance
_insert	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _insert(self, ch):$/;"	m	class:LfCli
_isDBModified	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _isDBModified(self, dbpath):$/;"	m	class:GtagsExplorer
_isVersionControl	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _isVersionControl(self, filename):$/;"	m	class:GtagsExplorer
_is_pos_zero	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _is_pos_zero(pos):$/;"	f
_issue_422_set_option	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _issue_422_set_option(self):$/;"	m	class:Manager
_join	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _join(self, cmdline):$/;"	m	class:LfCli
_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, jump_direction: JumpDirection):$/;"	m	class:SnippetManager
_jumpNext	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _jumpNext(self):$/;"	m	class:Manager
_jumpPrevious	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _jumpPrevious(self):$/;"	m	class:Manager
_leaving_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_leaving_insert_mode	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_leftClick	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _leftClick(self):$/;"	m	class:Manager
_link_file	plugged/ultisnips/test/vim_test_case.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:VimTestCase
_load_snippets_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_make_debug_exception	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _make_debug_exception(self, e, code=""):$/;"	m	class:SnippetDefinition
_matchadd	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def _matchadd(icons, pattern, priority, winid):$/;"	f
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_multi_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _multi_char_case_change(match):$/;"	f	member:_CleverReplace.replace	file:
_nearestAncestor	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _nearestAncestor(self, markers, path):$/;"	m	class:FileExplManager
_nearestAncestor	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _nearestAncestor(self, markers, path):$/;"	m	class:GtagsExplorer
_nearestAncestor	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _nearestAncestor(self, markers, path):$/;"	m	class:RgExplManager
_needExit	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _needExit(self, line, arguments):$/;"	m	class:AnyExplManager
_needExit	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _needExit(self, line, arguments):$/;"	m	class:Manager
_needPreview	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _needPreview(self, preview):$/;"	m	class:Manager
_needs_update	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_normalize_name	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def _normalize_name(val):$/;"	f
_one_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _one_char_case_change(match):$/;"	f	member:_CleverReplace.replace	file:
_pageDown	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _pageDown(self):$/;"	m	class:Manager
_pageUp	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _pageUp(self):$/;"	m	class:Manager
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ChoicesToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_comments	plugged/vim-snippets/pythonx/vimsnippets.py	/^def _parse_comments(s):$/;"	f
_parse_number	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
_parse_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_till_closing_brace	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_paste	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _paste(self):$/;"	m	class:LfCli
_place_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	member:SnippetInstance.replace_initial_text	file:
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:AnyExplManager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:BufExplManager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:BufTagExplManager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:FileExplManager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:FunctionExplManager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:GtagsExplManager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:LineExplManager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:Manager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:MruExplManager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:QfLocListExplManager
_previewInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def _previewInPopup(self, *args, **kwargs):$/;"	m	class:RgExplManager
_previewResult	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _previewResult(self, preview):$/;"	m	class:BufTagExplManager
_previewResult	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def _previewResult(self, preview):$/;"	m	class:ColorschemeExplManager
_previewResult	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _previewResult(self, preview):$/;"	m	class:FunctionExplManager
_previewResult	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _previewResult(self, preview):$/;"	m	class:Manager
_processTask	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _processTask(self):$/;"	m	class:GtagsExplorer
_re_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_readContent	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _readContent(self, content):$/;"	m	class:Manager
_readFromFileList	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _readFromFileList(self, files):$/;"	m	class:FileExplorer
_read_text_file	plugged/ultisnips/test/vim_interface.py	/^def _read_text_file(filename):$/;"	f
_readerThread	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^    def _readerThread(self, fd, queue):$/;"	m	class:AsyncExecutor
_refineFilter	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _refineFilter(self, first_get_weight, get_weight, iterable):$/;"	m	class:BufTagExplManager
_refineFilter	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _refineFilter(self, first_get_weight, get_weight, iterable):$/;"	m	class:Manager
_refresh	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _refresh(self):$/;"	m	class:FileExplorer
_refresh_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _refresh_snippets(self):$/;"	m	class:SnippetManager
_regexFilter	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _regexFilter(self, iterable):$/;"	m	class:BufTagExplManager
_regexFilter	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _regexFilter(self, iterable):$/;"	m	class:Manager
_regexSearch	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _regexSearch(self, content, is_continue, step):$/;"	m	class:Manager
_reinit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_relocateCursor	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _relocateCursor(self):$/;"	m	class:BufTagExplManager
_relocateCursor	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _relocateCursor(self):$/;"	m	class:FunctionExplManager
_remove	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _remove(self, filename):$/;"	m	class:GtagsExplorer
_replace_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _replace_conditional(match, string):$/;"	f
_replace_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _replace_text(buf, start, end, text):$/;"	f
_reset	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_resetAutochdir	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _resetAutochdir(self):$/;"	m	class:Manager
_resetHighlights	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _resetHighlights(self):$/;"	m	class:Manager
_restoreOrigCwd	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _restoreOrigCwd(self):$/;"	m	class:Manager
_root_dbpath	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _root_dbpath(self, filename):$/;"	m	class:GtagsExplorer
_run_shell_command	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_rv_changed	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_save_last_visual_selection	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_search	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _search(self, content, is_continue=False, step=0):$/;"	m	class:Manager
_select_and_create_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _select_and_create_file_to_edit(potentials: Set[str]) -> str:$/;"	f
_send	plugged/ultisnips/test/vim_interface.py	/^    def _send(self, s):$/;"	m	class:VimInterfaceTmux
_setAttributes	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def _setAttributes(self):$/;"	m	class:LfInstance
_setAutochdir	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _setAutochdir(self):$/;"	m	class:Manager
_setDefaultMode	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _setDefaultMode(self):$/;"	m	class:LfCli
_setResultContent	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _setResultContent(self):$/;"	m	class:Manager
_setStatusline	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def _setStatusline(self):$/;"	m	class:LfInstance
_setStlMode	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _setStlMode(self, **kwargs):$/;"	m	class:Manager
_set_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _set_pos(name, pos):$/;"	f
_setup_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _setup_inner_state(self):$/;"	m	class:SnippetManager
_show_user_warning	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _show_user_warning(msg):$/;"	f
_snip_quote	plugged/ultisnips/test/test_Chars.py	/^def _snip_quote(qt):$/;"	f
_snipmate_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _snipmate_files_for(ft):$/;"	f
_snips	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial, autotrigger_only=False):$/;"	m	class:SnippetManager
_spaces	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^    _spaces = ' '$/;"	v
_split_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _split_conditional(string):$/;"	f
_splitall	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_supportsRefine	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def _supportsRefine(self):$/;"	m	class:AnyExplManager
_supportsRefine	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _supportsRefine(self):$/;"	m	class:BufTagExplManager
_supportsRefine	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def _supportsRefine(self):$/;"	m	class:FunctionExplManager
_supportsRefine	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _supportsRefine(self):$/;"	m	class:GtagsExplManager
_supportsRefine	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def _supportsRefine(self):$/;"	m	class:HelpExplManager
_supportsRefine	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _supportsRefine(self):$/;"	m	class:Manager
_supportsRefine	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def _supportsRefine(self):$/;"	m	class:SelfExplManager
_teardown_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _teardown_inner_state(self):$/;"	m	class:SnippetManager
_toBegin	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _toBegin(self):$/;"	m	class:LfCli
_toDown	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _toDown(self):$/;"	m	class:BufTagExplManager
_toDown	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _toDown(self):$/;"	m	class:Manager
_toDownInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _toDownInPopup(self):$/;"	m	class:Manager
_toEnd	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _toEnd(self):$/;"	m	class:LfCli
_toLeft	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _toLeft(self):$/;"	m	class:LfCli
_toRight	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def _toRight(self):$/;"	m	class:LfCli
_toUp	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def _toUp(self):$/;"	m	class:BufTagExplManager
_toUp	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _toUp(self):$/;"	m	class:Manager
_toUpInPopup	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _toUpInPopup(self):$/;"	m	class:Manager
_track_change	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _track_change(self):$/;"	m	class:SnippetManager
_transform	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_try_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_unmap_select_mode_mapping	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _unmap_select_mode_mapping():$/;"	f
_update	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _update(self, filename, single_update, auto):$/;"	m	class:GtagsExplorer
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:EditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:NoneditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:TextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _update(self, done, buf):$/;"	m	class:Choices
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _update(self, done, buf):$/;"	m	class:Mirror
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _update(self, done, buf):$/;"	m	class:PythonCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def _update(self, done, buf):$/;"	m	class:ShellCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def _update(self, done, buf):$/;"	m	class:VimLCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def _update(self, done, buf):$/;"	m	class:Visual
_updateLibGtags	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _updateLibGtags(self, root, dbpath):$/;"	m	class:GtagsExplorer
_vim_dec	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_dec(string):$/;"	f
_vim_enc	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_enc(bytearray):$/;"	f
_vim_line_with_eol	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^        _vim_line_with_eol = lambda ln: vim_helper.buf[ln] + "\\n"$/;"	f	member:VisualContentPreserver.conserve	file:
_which	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def _which(self, executable):$/;"	m	class:GtagsExplorer
_words_for_line	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
_workInIdle	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def _workInIdle(self, content=None, bang=False):$/;"	m	class:Manager
_worker	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static DWORD WINAPI _worker(LPVOID pParam)$/;"	f	typeref:typename:DWORD WINAPI	file:
_writeCache	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def _writeCache(self, content):$/;"	m	class:FileExplorer
`TranslateH`	plugged/vim-translator/README.md	/^#### `TranslateH`$/;"	t
`TranslateL`	plugged/vim-translator/README.md	/^#### `TranslateL`$/;"	t
`TranslateR`	plugged/vim-translator/README.md	/^#### `TranslateR`$/;"	t
`TranslateW`	plugged/vim-translator/README.md	/^#### `TranslateW`$/;"	t
`TranslateX`	plugged/vim-translator/README.md	/^#### `TranslateX`$/;"	t
`Translate`	plugged/vim-translator/README.md	/^#### `Translate`$/;"	t
`default`	plugged/vim-airline/README.md	/^#### `default`$/;"	t
`g:ncm2_jedi#call_sig_hint`	plugged/ncm2-jedi/README.md	/^### `g:ncm2_jedi#call_sig_hint`$/;"	S
`g:ncm2_jedi#environment`	plugged/ncm2-jedi/README.md	/^### `g:ncm2_jedi#environment`$/;"	S
`g:ncm2_jedi#python_version`	plugged/ncm2-jedi/README.md	/^### `g:ncm2_jedi#python_version`$/;"	S
`g:ncm2_jedi#settings`	plugged/ncm2-jedi/README.md	/^### `g:ncm2_jedi#settings`$/;"	S
`jsformatter`	plugged/vim-airline/README.md	/^#### `jsformatter`$/;"	t
`onedark#extend_highlight`	plugged/onedark.vim/README.md	/^#### `onedark#extend_highlight`$/;"	t
`onedark#set_highlight`	plugged/onedark.vim/README.md	/^#### `onedark#set_highlight`$/;"	t
`timeoutlen`	plugged/vim-which-key/README.md	/^### `timeoutlen`$/;"	S
`unique_tail_improved`	plugged/vim-airline/README.md	/^#### `unique_tail_improved`$/;"	t
`unique_tail`	plugged/vim-airline/README.md	/^#### `unique_tail`$/;"	t
a	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> a             :exec g:Lf_py "fileExplManager.selectAll()"<CR>$/;"	m
a	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> a             :exec g:Lf_py "mruExplManager.selectAll()"<CR>$/;"	m
a	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> a <NOP>$/;"	m
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "First Line\\nSecond Line"$/;"	v	class:TestWithNewline
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestCheapDelete
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestRealLife1
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hallo Blah mitte=sdfdsfsd\\nhallo kjsdhfjksdhfkjhsdfkh mittekjshdkfhkhsdfdsf"$/;"	v	class:TestCrash
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hallo End Beginning"$/;"	v	class:TestRealLife
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:MultiLine
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "stdin.h"$/;"	v	class:MatchIsTooCheap
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "this is it this is it this is it"$/;"	v	class:TestUltiSnipsProblem
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "", ""$/;"	v	class:TestEmptyString
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "Hello", "Hello\\nWorld\\nWorld\\nWorld"$/;"	v	class:TestLotsaNewlines
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abc", "def"$/;"	v	class:TestNoSubstring
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abcdef", "abcdef"$/;"	v	class:TestAllMatch
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "hasomelongertextbl", "hol"$/;"	v	class:TestCommonCharacters
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar1
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_BackspaceOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_DeleteOneChar
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a: List[str] = []$/;"	v	class:TestGuessing_Noop0
aM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aS	plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> aS :<C-U>call <SID>UltiSnippetTextObj(0)<CR>$/;"	m
aS	plugged/ultisnips/ftplugin/snippets.vim	/^xnoremap <silent><buffer> aS :<C-U>call <SID>UltiSnippetTextObj(0)<CR>$/;"	m
abbr_fuzzy_match	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^def abbr_fuzzy_match(abbr, b, s, off, chcmp):$/;"	f
abbrs_ge	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def abbrs_ge(abbrs, ge):$/;"	f
about: Create a report to help us improve	plugged/vista.vim/.github/ISSUE_TEMPLATE/bug_report.md	/^about: Create a report to help us improve$/;"	s
about: Suggest an idea for this project	plugged/vista.vim/.github/ISSUE_TEMPLATE/feature_request.md	/^about: Suggest an idea for this project$/;"	s
abstract classes	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*abstract class[ \\t]+([a-zA-Z0-9_]+)\/\\2\/a,abstra/;"	k	langdef:typescript
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-v/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby'/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_r/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abutton_dec	plugged/vim-polyglot/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|tex/;"	v
accept	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def accept(self, mode=''):$/;"	m	class:Manager
acorn	plugged/onedark.vim/build/package-lock.json	/^        "acorn": "^7.4.0",$/;"	s	object:dependencies.espree.requires
acorn	plugged/onedark.vim/build/package-lock.json	/^    "acorn": {$/;"	o	object:dependencies
acorn-jsx	plugged/onedark.vim/build/package-lock.json	/^        "acorn-jsx": "^5.2.0",$/;"	s	object:dependencies.espree.requires
acorn-jsx	plugged/onedark.vim/build/package-lock.json	/^    "acorn-jsx": {$/;"	o	object:dependencies
actual behavior	plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### actual behavior$/;"	t
ada#Completion	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Completion (cmd)$/;"	f
ada#Completion_End	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Completion_End ()$/;"	f
ada#Create_Tags	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Create_Tags (option)$/;"	f
ada#Insert_Backspace	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Insert_Backspace ()$/;"	f
ada#Jump_Tag	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Jump_Tag (Word, Mode)$/;"	f
ada#List_Tag	plugged/vim-polyglot/autoload/ada.vim	/^function ada#List_Tag (...)$/;"	f
ada#Map_Menu	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Map_Menu (Text, Keys, Command)$/;"	f
ada#Map_Popup	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Map_Popup (Text, Keys, Command)$/;"	f
ada#Pretty_Print_Folding	plugged/vim-polyglot/autoload/ada.vim	/^   function ada#Pretty_Print_Folding (Line)			     " {{{2$/;"	f
ada#Switch_Session	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Switch_Session (New_Session)$/;"	f
ada#Switch_Syntax_Option	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Switch_Syntax_Option (option)$/;"	f
ada#User_Complete	plugged/vim-polyglot/autoload/ada.vim	/^function! ada#User_Complete(findstart, base)$/;"	f
ada#Word	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Word (...)$/;"	f
ada_session	plugged/vim-polyglot/autoload/ada.vim	/^	 augroup ada_session$/;"	a
addSelections	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def addSelections(self):$/;"	m	class:Manager
add_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, filetypes: str):$/;"	m	class:SnippetManager
add_match	plugged/ncm2-bufword/pythonx/ncm2_bufword.py	/^        def add_match(bufnr, re_match, lnum):$/;"	f	member:Source.on_complete	file:
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet($/;"	m	class:SnippetManager
ae	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  onoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
ae	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  xnoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
airline	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^augroup airline#extensions#cursormode$/;"	a
airline	plugged/vim-airline/plugin/airline.vim	/^    augroup airline$/;"	a
airline#add_inactive_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#async#get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_mq_async(cmd, file)$/;"	f
airline#async#get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_msgfmt_stat(cmd, file)$/;"	f
airline#async#mq_output	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#mq_output(buf, file)$/;"	f
airline#async#nvim_get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_mq_async(cmd, file)$/;"	f
airline#async#nvim_get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_msgfmt_stat(cmd, file)$/;"	f
airline#async#nvim_vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#nvim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#nvim_vcs_untracked(cfg, file, vcs)$/;"	f
airline#async#vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_untracked(config, file, vcs)$/;"	f
airline#async#vim7_vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vim7_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_untracked(config, file)$/;"	f
airline#builder#get_next_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_next_group(sections, i)$/;"	f
airline#builder#get_prev_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_prev_group(sections, i)$/;"	f
airline#builder#new	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#builder#should_change_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#should_change_group(group1, group2)$/;"	f
airline#check_mode	plugged/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	plugged/vim-airline/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#extensions#ale#get	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get(type)$/;"	f
airline#extensions#ale#get_error	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_error()$/;"	f
airline#extensions#ale#get_warning	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warning()$/;"	f
airline#extensions#ale#init	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
airline#extensions#append_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#battery#init	plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#init(ext) abort$/;"	f
airline#extensions#battery#status	plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#status(...) abort$/;"	f
airline#extensions#bookmark#currentbookmark	plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#currentbookmark() abort$/;"	f
airline#extensions#bookmark#init	plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#init(ext) abort$/;"	f
airline#extensions#branch#get_head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#branch#update_untracked_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#update_untracked_config(file, vcs)$/;"	f
airline#extensions#bufferline#init	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#coc#get	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get(type) abort$/;"	f
airline#extensions#coc#get_error	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_error() abort$/;"	f
airline#extensions#coc#get_status	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_status() abort$/;"	f
airline#extensions#coc#get_warning	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_warning() abort$/;"	f
airline#extensions#coc#init	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#init(ext) abort$/;"	f
airline#extensions#commandt#apply	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext) abort$/;"	f
airline#extensions#ctrlspace#statusline	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...) abort$/;"	f
airline#extensions#cursormode#activate	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#activate()$/;"	f
airline#extensions#cursormode#apply	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#apply(...)$/;"	f
airline#extensions#cursormode#init	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#init(ext)$/;"	f
airline#extensions#cursormode#set	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#set(...)$/;"	f
airline#extensions#cursormode#tmux_escape	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#tmux_escape(escape)$/;"	f
airline#extensions#default#apply	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#denite#apply	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#apply(...) abort$/;"	f
airline#extensions#denite#check_denite_mode	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#check_denite_mode(bufnr) abort$/;"	f
airline#extensions#denite#init	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#init(ext) abort$/;"	f
airline#extensions#dirvish#apply	plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#apply(...) abort$/;"	f
airline#extensions#dirvish#init	plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#init(ext) abort$/;"	f
airline#extensions#eclim#creat_line	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#fern#apply	plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#apply(...) abort$/;"	f
airline#extensions#fern#init	plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#init(ext) abort$/;"	f
airline#extensions#fugitiveline#bufname	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#bufname()$/;"	f
airline#extensions#fugitiveline#init	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#init(ext)$/;"	f
airline#extensions#fzf#apply	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#apply(...) abort$/;"	f
airline#extensions#fzf#inactive_apply	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#inactive_apply(...) abort$/;"	f
airline#extensions#fzf#init	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#init(ext) abort$/;"	f
airline#extensions#fzf#statusline	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#statusline(...) abort$/;"	f
airline#extensions#gen_tags#init	plugged/vim-airline/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#init(ext) abort$/;"	f
airline#extensions#gen_tags#status	plugged/vim-airline/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#status(...) abort$/;"	f
airline#extensions#get_loaded_extensions	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#get_loaded_extensions()$/;"	f
airline#extensions#gina#apply	plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#apply(...) abort$/;"	f
airline#extensions#gina#init	plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#init(ext) abort$/;"	f
airline#extensions#grepper#init	plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#init(ext)$/;"	f
airline#extensions#grepper#status	plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#status()$/;"	f
airline#extensions#gutentags#init	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#init(ext)$/;"	f
airline#extensions#gutentags#status	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#status()$/;"	f
airline#extensions#hunks#get_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks() abort$/;"	f
airline#extensions#hunks#get_raw_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_raw_hunks() abort$/;"	f
airline#extensions#hunks#init	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext) abort$/;"	f
airline#extensions#keymap#init	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#init(ext)$/;"	f
airline#extensions#keymap#status	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#status()$/;"	f
airline#extensions#languageclient#get	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get(type)$/;"	f
airline#extensions#languageclient#get_error	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_error()$/;"	f
airline#extensions#languageclient#get_warning	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_warning()$/;"	f
airline#extensions#languageclient#init	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#init(ext)$/;"	f
airline#extensions#load	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#localsearch#apply	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#apply(...) abort$/;"	f
airline#extensions#localsearch#init	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#init(ext) abort$/;"	f
airline#extensions#localsearch#load_theme	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#load_theme(palette) abort$/;"	f
airline#extensions#lsp#get	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get(type) abort$/;"	f
airline#extensions#lsp#get_error	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_error() abort$/;"	f
airline#extensions#lsp#get_warning	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_warning() abort$/;"	f
airline#extensions#lsp#init	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#init(ext) abort$/;"	f
airline#extensions#neomake#get_errors	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#get_warnings	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#init	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
airline#extensions#netrw#apply	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#nvimlsp#get	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get(type) abort$/;"	f
airline#extensions#nvimlsp#get_error	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_error() abort$/;"	f
airline#extensions#nvimlsp#get_warning	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_warning() abort$/;"	f
airline#extensions#nvimlsp#init	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#init(ext) abort$/;"	f
airline#extensions#obsession#get_status	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
airline#extensions#obsession#init	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#omnisharp#init	plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#init(ext) abort$/;"	f
airline#extensions#omnisharp#server_status	plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#server_status(...) abort$/;"	f
airline#extensions#po#apply	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#init	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
airline#extensions#po#on_winenter	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#on_winenter()$/;"	f
airline#extensions#po#shorten	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#shorten()$/;"	f
airline#extensions#po#stats	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#poetv#apply	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#apply(...)$/;"	f
airline#extensions#poetv#init	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#init(ext)$/;"	f
airline#extensions#poetv#update	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#update()$/;"	f
airline#extensions#prepend_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#get_type	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#get_type()$/;"	f
airline#extensions#quickfix#inactive_qf_window	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#init	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#searchcount#apply	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#apply(...) abort$/;"	f
airline#extensions#searchcount#init	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#init(ext) abort$/;"	f
airline#extensions#searchcount#status	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#status() abort$/;"	f
airline#extensions#syntastic#get	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get(type)$/;"	f
airline#extensions#syntastic#get_error	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_error()$/;"	f
airline#extensions#syntastic#get_warning	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warning()$/;"	f
airline#extensions#syntastic#init	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#add_label	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_label(dict, type, right)$/;"	f
airline#extensions#tabline#add_tab_label	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_tab_label(dict)$/;"	f
airline#extensions#tabline#autoshow#off	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#clickbuf	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
airline#extensions#tabline#buffers#get	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#clean	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#clean()$/;"	f
airline#extensions#tabline#buflist#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#builder#new	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! airline#extensions#tabline#builder#new(context)$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pul/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#get	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#off	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#enable	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#enable()$/;"	f
airline#extensions#tabline#formatters#default#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#jsformatter#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/jsformatter.vim	/^function! airline#extensions#tabline#formatters#jsformatter#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#short_path#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^function! airline#extensions#tabline#formatters#short_path#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#tabnr#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/tabnr.vim	/^function! airline#extensions#tabline#formatters#tabnr#format(tab_nr_type, nr)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#webdevicons#format	plugged/vim-devicons/autoload/airline/extensions/tabline/formatters/webdevicons.vim	/^function! airline#extensions#tabline#formatters#webdevicons#format(bufnr, buffers) abort$/;"	f
airline#extensions#tabline#get	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#group_of_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#init	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#redraw	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#redraw()$/;"	f
airline#extensions#tabline#tabs#get	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#off	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#tabs#tabnr_formatter	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#tabnr_formatter(nr, i) abort$/;"	f
airline#extensions#tabline#tabws#add_buffer_section	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_buffer_section(builder, cur_tab, cur_buf, pull_ri/;"	f
airline#extensions#tabline#tabws#add_tab_section	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#tabws#get	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#get()$/;"	f
airline#extensions#tabline#tabws#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#invalidate()$/;"	f
airline#extensions#tabline#tabws#off	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#off()$/;"	f
airline#extensions#tabline#tabws#on	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#on()$/;"	f
airline#extensions#tabline#title	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tabline#xtabline#filter_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#filter_buffers()$/;"	f
airline#extensions#tabline#xtabline#init	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#init()$/;"	f
airline#extensions#tabline#xtabline#maps	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#maps()$/;"	f
airline#extensions#tabline#xtabline#next_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#next_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#prev_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#prev_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#reopen_last_tab	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	f
airline#extensions#tabline#xtabline#select_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#select_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#toggle_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_buffers()$/;"	f
airline#extensions#tabline#xtabline#toggle_tabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_tabs()$/;"	f
airline#extensions#tabline#xtabline#update_obsession	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#update_obsession()$/;"	f
airline#extensions#tagbar#currenttag	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#term#apply	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#apply(...) abort$/;"	f
airline#extensions#term#inactive_apply	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#inactive_apply(...) abort$/;"	f
airline#extensions#term#init	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#init(ext) abort$/;"	f
airline#extensions#term#termmode	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#termmode() abort$/;"	f
airline#extensions#tmuxline#init	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unicode#apply	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#unite#apply	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#vimagit#apply	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#apply(...) abort$/;"	f
airline#extensions#vimagit#get_mode	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#get_mode() abort$/;"	f
airline#extensions#vimagit#init	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#init(ext) abort$/;"	f
airline#extensions#vimcmake#apply	plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#apply(...) abort$/;"	f
airline#extensions#vimcmake#inactive_apply	plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#inactive_apply(...) abort$/;"	f
airline#extensions#vimcmake#init	plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#init(ext) abort$/;"	f
airline#extensions#vimtex#apply	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#apply(...)$/;"	f
airline#extensions#vimtex#get_scope	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#get_scope()$/;"	f
airline#extensions#vimtex#init	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#init(ext)$/;"	f
airline#extensions#virtualenv#apply	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#update	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
airline#extensions#vista#currenttag	plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#currenttag() abort$/;"	f
airline#extensions#vista#init	plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#init(ext) abort$/;"	f
airline#extensions#webdevicons#apply	plugged/vim-devicons/autoload/airline/extensions/webdevicons.vim	/^function! airline#extensions#webdevicons#apply(...) abort$/;"	f
airline#extensions#webdevicons#init	plugged/vim-devicons/autoload/airline/extensions/webdevicons.vim	/^function! airline#extensions#webdevicons#init(ext) abort$/;"	f
airline#extensions#whitespace#check	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#disable	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#disable()$/;"	f
airline#extensions#whitespace#init	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#wordcount#apply	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#formatters#default#to_string	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#to_string(wordcount)$/;"	f
airline#extensions#wordcount#formatters#default#update_fmt	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#update_fmt(...)$/;"	f
airline#extensions#wordcount#formatters#readingtime#to_string	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#to_string(wordcount) abort$/;"	f
airline#extensions#wordcount#formatters#readingtime#update_fmt	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#update_fmt(...) abort$/;"	f
airline#extensions#wordcount#get	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function airline#extensions#wordcount#get()$/;"	f
airline#extensions#wordcount#init	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
airline#extensions#xkblayout#init	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#init(ext)$/;"	f
airline#extensions#xkblayout#status	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#status()$/;"	f
airline#extensions#ycm#get_error_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count() abort$/;"	f
airline#extensions#ycm#get_warning_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
airline#extensions#ycm#init	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#extensions#zoomwintab#apply	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#apply(...) abort$/;"	f
airline#extensions#zoomwintab#init	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#init(ext) abort$/;"	f
airline#formatter#short_path#format	plugged/vim-airline/autoload/airline/formatter/short_path.vim	/^function! airline#formatter#short_path#format(val) abort$/;"	f
airline#highlighter#add_accent	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent) abort$/;"	f
airline#highlighter#add_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse) abort$/;"	f
airline#highlighter#exec	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors) abort$/;"	f
airline#highlighter#get_highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...) abort$/;"	f
airline#highlighter#get_highlight2	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...) abort$/;"	f
airline#highlighter#highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes, ...) abort$/;"	f
airline#highlighter#highlight_modified_inactive	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr) abort$/;"	f
airline#highlighter#load_theme	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme() abort$/;"	f
airline#highlighter#reset_hlcache	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#reset_hlcache() abort$/;"	f
airline#init#bootstrap	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#sections	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#mode_changed	plugged/vim-airline/autoload/airline.vim	/^function! airline#mode_changed()$/;"	f
airline#msdos#round_msdos_colors	plugged/vim-airline/autoload/airline/msdos.vim	/^function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
airline#parts#crypt	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#define	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#spell	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#remove_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name, ...)$/;"	f
airline#themes#generate_color_map	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#gruvbox#refresh	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^function! airline#themes#gruvbox#refresh()$/;"	f
airline#themes#onedark#refresh	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^function! airline#themes#onedark#refresh()$/;"	f
airline#themes#patch	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#update_statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#update_statusline_focuslost	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_focuslost()$/;"	f
airline#update_statusline_inactive	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_inactive(range)$/;"	f
airline#update_tabline	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_tabline()$/;"	f
airline#util#append	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#doautocmd	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#doautocmd(event)$/;"	f
airline#util#exec_funcrefs	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getbufvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getbufvar(bufnr, key, def)$/;"	f
airline#util#getwinvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#has_custom_scm	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_custom_scm()$/;"	f
airline#util#has_fugitive	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_fugitive()$/;"	f
airline#util#has_gina	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_gina()$/;"	f
airline#util#has_lawrencium	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_lawrencium()$/;"	f
airline#util#has_vcscommand	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_vcscommand()$/;"	f
airline#util#ignore_buf	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_buf(name)$/;"	f
airline#util#ignore_next_focusgain	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_next_focusgain()$/;"	f
airline#util#prepend	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#shorten	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth, ...)$/;"	f
airline#util#stl_disabled	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#stl_disabled(winnr)$/;"	f
airline#util#strcharpart	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strcharpart(...)$/;"	f
airline#util#strchars	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strchars(str)$/;"	f
airline#util#themes	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#themes(match)$/;"	f
airline#util#try_focusgained	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#try_focusgained()$/;"	f
airline#util#warning	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#winwidth	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#winwidth(...)$/;"	f
airline#util#wrap	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_ale	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^  augroup airline_ale$/;"	a
airline_languageclient	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^  augroup airline_languageclient$/;"	a
airline_omnisharp	plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^  augroup airline_omnisharp$/;"	a
airline_tabline_autoshow	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^  augroup airline_tabline_autoshow$/;"	a
airline_tabline_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  augroup airline_tabline_buffers$/;"	a
airline_tabline_ctrlspace	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^  augroup airline_tabline_ctrlspace$/;"	a
airline_tabline_tabs	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  augroup airline_tabline_tabs$/;"	a
airline_tabline_tabws	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^  augroup airline_tabline_tabws$/;"	a
airline_whitespace	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^    augroup airline_whitespace$/;"	a
airline_whitespace	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^  augroup airline_whitespace$/;"	a
ajv	plugged/onedark.vim/build/package-lock.json	/^        "ajv": "^6.10.0",$/;"	s	object:dependencies.eslint.requires
ajv	plugged/onedark.vim/build/package-lock.json	/^        "ajv": "^6.10.2",$/;"	s	object:dependencies.table.requires
ajv	plugged/onedark.vim/build/package-lock.json	/^        "ajv": "^6.12.4",$/;"	s	object:dependencies.@eslint/eslintrc.requires
ajv	plugged/onedark.vim/build/package-lock.json	/^    "ajv": {$/;"	o	object:dependencies
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
alacrittyTemplate	plugged/onedark.vim/build/build.js	/^	let alacrittyTemplate, itermTemplate, kittyTemplate, terminalAppTemplate$/;"	v
ale#Env	plugged/ale/autoload/ale.vim	/^function! ale#Env(variable_name, value) abort$/;"	f
ale#Escape	plugged/ale/autoload/ale.vim	/^function! ale#Escape(str) abort$/;"	f
ale#FileTooLarge	plugged/ale/autoload/ale.vim	/^function! ale#FileTooLarge(buffer) abort$/;"	f
ale#GetFilenameMappings	plugged/ale/autoload/ale.vim	/^function! ale#GetFilenameMappings(buffer, name) abort$/;"	f
ale#GetLocItemMessage	plugged/ale/autoload/ale.vim	/^function! ale#GetLocItemMessage(item, format_string) abort$/;"	f
ale#Has	plugged/ale/autoload/ale.vim	/^function! ale#Has(feature) abort$/;"	f
ale#Pad	plugged/ale/autoload/ale.vim	/^function! ale#Pad(string) abort$/;"	f
ale#Queue	plugged/ale/autoload/ale.vim	/^function! ale#Queue(delay, ...) abort$/;"	f
ale#Set	plugged/ale/autoload/ale.vim	/^function! ale#Set(variable_name, default) abort$/;"	f
ale#ShouldDoNothing	plugged/ale/autoload/ale.vim	/^function! ale#ShouldDoNothing(buffer) abort$/;"	f
ale#Var	plugged/ale/autoload/ale.vim	/^function! ale#Var(buffer, variable_name) abort$/;"	f
ale#ant#BuildClasspathCommand	plugged/ale/autoload/ale/ant.vim	/^function! ale#ant#BuildClasspathCommand(buffer) abort$/;"	f
ale#ant#FindExecutable	plugged/ale/autoload/ale/ant.vim	/^function! ale#ant#FindExecutable(buffer) abort$/;"	f
ale#ant#FindProjectRoot	plugged/ale/autoload/ale/ant.vim	/^function! ale#ant#FindProjectRoot(buffer) abort$/;"	f
ale#args#Parse	plugged/ale/autoload/ale/args.vim	/^function! ale#args#Parse(arg_list, string) abort$/;"	f
ale#assert#Fixer	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#Fixer(expected_result) abort$/;"	f
ale#assert#FixerNotExecuted	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#FixerNotExecuted() abort$/;"	f
ale#assert#GivenCommandOutput	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#GivenCommandOutput(...) abort$/;"	f
ale#assert#LSPAddress	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPAddress(expected_address) abort$/;"	f
ale#assert#LSPConfig	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPConfig(expected_config) abort$/;"	f
ale#assert#LSPLanguage	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPLanguage(expected_language) abort$/;"	f
ale#assert#LSPOptions	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPOptions(expected_options) abort$/;"	f
ale#assert#LSPProject	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LSPProject(expected_root) abort$/;"	f
ale#assert#Linter	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#Linter(expected_executable, expected_command) abort$/;"	f
ale#assert#LinterNotExecuted	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#LinterNotExecuted() abort$/;"	f
ale#assert#SetUpFixerTest	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTest(filetype, name, ...) abort$/;"	f
ale#assert#SetUpFixerTestCommands	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpFixerTestCommands() abort$/;"	f
ale#assert#SetUpLinterTest	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTest(filetype, name) abort$/;"	f
ale#assert#SetUpLinterTestCommands	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#SetUpLinterTestCommands() abort$/;"	f
ale#assert#TearDownFixerTest	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#TearDownFixerTest() abort$/;"	f
ale#assert#TearDownLinterTest	plugged/ale/autoload/ale/assert.vim	/^function! ale#assert#TearDownLinterTest() abort$/;"	f
ale#balloon#Disable	plugged/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Disable() abort$/;"	f
ale#balloon#Enable	plugged/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Enable() abort$/;"	f
ale#balloon#Expr	plugged/ale/autoload/ale/balloon.vim	/^function! ale#balloon#Expr() abort$/;"	f
ale#balloon#MessageForPos	plugged/ale/autoload/ale/balloon.vim	/^function! ale#balloon#MessageForPos(bufnr, lnum, col) abort$/;"	f
ale#c#ExpandAtArgs	plugged/ale/autoload/ale/c.vim	/^function! ale#c#ExpandAtArgs(path_prefix, raw_split_lines) abort$/;"	f
ale#c#FindCompileCommands	plugged/ale/autoload/ale/c.vim	/^function! ale#c#FindCompileCommands(buffer) abort$/;"	f
ale#c#FindLocalHeaderPaths	plugged/ale/autoload/ale/c.vim	/^function! ale#c#FindLocalHeaderPaths(buffer) abort$/;"	f
ale#c#FindProjectRoot	plugged/ale/autoload/ale/c.vim	/^function! ale#c#FindProjectRoot(buffer) abort$/;"	f
ale#c#FlagsFromCompileCommands	plugged/ale/autoload/ale/c.vim	/^function! ale#c#FlagsFromCompileCommands(buffer, compile_commands_file) abort$/;"	f
ale#c#GetBuildDirectory	plugged/ale/autoload/ale/c.vim	/^function! ale#c#GetBuildDirectory(buffer) abort$/;"	f
ale#c#GetCFlags	plugged/ale/autoload/ale/c.vim	/^function! ale#c#GetCFlags(buffer, output) abort$/;"	f
ale#c#GetMakeCommand	plugged/ale/autoload/ale/c.vim	/^function! ale#c#GetMakeCommand(buffer) abort$/;"	f
ale#c#IncludeOptions	plugged/ale/autoload/ale/c.vim	/^function! ale#c#IncludeOptions(include_paths) abort$/;"	f
ale#c#ParseCFlags	plugged/ale/autoload/ale/c.vim	/^function! ale#c#ParseCFlags(path_prefix, should_quote, raw_arguments) abort$/;"	f
ale#c#ParseCFlagsFromMakeOutput	plugged/ale/autoload/ale/c.vim	/^function! ale#c#ParseCFlagsFromMakeOutput(buffer, make_output) abort$/;"	f
ale#c#ParseCompileCommandsFlags	plugged/ale/autoload/ale/c.vim	/^function! ale#c#ParseCompileCommandsFlags(buffer, file_lookup, dir_lookup) abort$/;"	f
ale#c#QuoteArg	plugged/ale/autoload/ale/c.vim	/^function! ale#c#QuoteArg(arg) abort$/;"	f
ale#c#ResetCompileCommandsCache	plugged/ale/autoload/ale/c.vim	/^function! ale#c#ResetCompileCommandsCache() abort$/;"	f
ale#c#RunMakeCommand	plugged/ale/autoload/ale/c.vim	/^function! ale#c#RunMakeCommand(buffer, Callback) abort$/;"	f
ale#c#ShellSplit	plugged/ale/autoload/ale/c.vim	/^function! ale#c#ShellSplit(line) abort$/;"	f
ale#code_action#ApplyChanges	plugged/ale/autoload/ale/code_action.vim	/^function! ale#code_action#ApplyChanges(filename, changes, should_save) abort$/;"	f
ale#code_action#BuildChangesList	plugged/ale/autoload/ale/code_action.vim	/^function! ale#code_action#BuildChangesList(changes_map) abort$/;"	f
ale#code_action#DisablePopUpMenu	plugged/ale/autoload/ale/code_action.vim	/^function! ale#code_action#DisablePopUpMenu() abort$/;"	f
ale#code_action#EnablePopUpMenu	plugged/ale/autoload/ale/code_action.vim	/^function! ale#code_action#EnablePopUpMenu() abort$/;"	f
ale#code_action#GetChanges	plugged/ale/autoload/ale/code_action.vim	/^function! ale#code_action#GetChanges(workspace_edit) abort$/;"	f
ale#code_action#GetCodeActions	plugged/ale/autoload/ale/code_action.vim	/^function! ale#code_action#GetCodeActions(options) abort$/;"	f
ale#code_action#HandleCodeAction	plugged/ale/autoload/ale/code_action.vim	/^function! ale#code_action#HandleCodeAction(code_action, options) abort$/;"	f
ale#code_action#ReloadBuffer	plugged/ale/autoload/ale/code_action.vim	/^function! ale#code_action#ReloadBuffer() abort$/;"	f
ale#codefix#ApplyLSPCodeAction	plugged/ale/autoload/ale/codefix.vim	/^function! ale#codefix#ApplyLSPCodeAction(data, item) abort$/;"	f
ale#codefix#ApplyTSServerCodeAction	plugged/ale/autoload/ale/codefix.vim	/^function! ale#codefix#ApplyTSServerCodeAction(data, item) abort$/;"	f
ale#codefix#ClearLSPData	plugged/ale/autoload/ale/codefix.vim	/^function! ale#codefix#ClearLSPData() abort$/;"	f
ale#codefix#Execute	plugged/ale/autoload/ale/codefix.vim	/^function! ale#codefix#Execute(range, ...) abort$/;"	f
ale#codefix#GetMap	plugged/ale/autoload/ale/codefix.vim	/^function! ale#codefix#GetMap() abort$/;"	f
ale#codefix#HandleLSPResponse	plugged/ale/autoload/ale/codefix.vim	/^function! ale#codefix#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#codefix#HandleTSServerResponse	plugged/ale/autoload/ale/codefix.vim	/^function! ale#codefix#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#codefix#SetMap	plugged/ale/autoload/ale/codefix.vim	/^function! ale#codefix#SetMap(map) abort$/;"	f
ale#command#ClearData	plugged/ale/autoload/ale/command.vim	/^function! ale#command#ClearData() abort$/;"	f
ale#command#CreateDirectory	plugged/ale/autoload/ale/command.vim	/^function! ale#command#CreateDirectory(buffer) abort$/;"	f
ale#command#CreateFile	plugged/ale/autoload/ale/command.vim	/^function! ale#command#CreateFile(buffer) abort$/;"	f
ale#command#CreateTempFile	plugged/ale/autoload/ale/command.vim	/^function! ale#command#CreateTempFile(buffer, temporary_file, input) abort$/;"	f
ale#command#EscapeCommandPart	plugged/ale/autoload/ale/command.vim	/^function! ale#command#EscapeCommandPart(command_part) abort$/;"	f
ale#command#FormatCommand	plugged/ale/autoload/ale/command.vim	/^function! ale#command#FormatCommand($/;"	f
ale#command#GetData	plugged/ale/autoload/ale/command.vim	/^function! ale#command#GetData() abort$/;"	f
ale#command#InitData	plugged/ale/autoload/ale/command.vim	/^function! ale#command#InitData(buffer) abort$/;"	f
ale#command#IsDeferred	plugged/ale/autoload/ale/command.vim	/^function! ale#command#IsDeferred(value) abort$/;"	f
ale#command#ManageDirectory	plugged/ale/autoload/ale/command.vim	/^function! ale#command#ManageDirectory(buffer, directory) abort$/;"	f
ale#command#ManageFile	plugged/ale/autoload/ale/command.vim	/^function! ale#command#ManageFile(buffer, file) abort$/;"	f
ale#command#RemoveManagedFiles	plugged/ale/autoload/ale/command.vim	/^function! ale#command#RemoveManagedFiles(buffer) abort$/;"	f
ale#command#Run	plugged/ale/autoload/ale/command.vim	/^function! ale#command#Run(buffer, command, Callback, ...) abort$/;"	f
ale#command#StopJobs	plugged/ale/autoload/ale/command.vim	/^function! ale#command#StopJobs(buffer, job_type) abort$/;"	f
ale#completion#AutomaticOmniFunc	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#AutomaticOmniFunc(findstart, base) abort$/;"	f
ale#completion#CanProvideCompletions	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#CanProvideCompletions() abort$/;"	f
ale#completion#Disable	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Disable() abort$/;"	f
ale#completion#Done	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Done() abort$/;"	f
ale#completion#Enable	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Enable() abort$/;"	f
ale#completion#Filter	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Filter($/;"	f
ale#completion#GetAllTriggers	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetAllTriggers() abort$/;"	f
ale#completion#GetCompletionKind	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionKind(kind) abort$/;"	f
ale#completion#GetCompletionPosition	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionPosition() abort$/;"	f
ale#completion#GetCompletionPositionForDeoplete	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionPositionForDeoplete(input) abort$/;"	f
ale#completion#GetCompletionResult	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionResult() abort$/;"	f
ale#completion#GetCompletionSymbols	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletionSymbols(kind) abort$/;"	f
ale#completion#GetCompletions	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetCompletions(...) abort$/;"	f
ale#completion#GetPrefix	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetPrefix(filetype, line, column) abort$/;"	f
ale#completion#GetTriggerCharacter	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#GetTriggerCharacter(filetype, prefix) abort$/;"	f
ale#completion#HandleLSPResponse	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#completion#HandleTSServerResponse	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#completion#HandleUserData	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#HandleUserData(completed_item) abort$/;"	f
ale#completion#Import	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Import() abort$/;"	f
ale#completion#NullFilter	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#NullFilter(buffer, item) abort$/;"	f
ale#completion#OmniFunc	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#OmniFunc(findstart, base) abort$/;"	f
ale#completion#ParseLSPCompletions	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseLSPCompletions(response) abort$/;"	f
ale#completion#ParseTSServerCompletionEntryDetails	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletionEntryDetails(response) abort$/;"	f
ale#completion#ParseTSServerCompletions	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#ParseTSServerCompletions(response) abort$/;"	f
ale#completion#Queue	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Queue() abort$/;"	f
ale#completion#RestoreCompletionOptions	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#RestoreCompletionOptions() abort$/;"	f
ale#completion#Show	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#Show(result) abort$/;"	f
ale#completion#StopTimer	plugged/ale/autoload/ale/completion.vim	/^function! ale#completion#StopTimer() abort$/;"	f
ale#completion#python#CompletionItemFilter	plugged/ale/autoload/ale/completion/python.vim	/^function! ale#completion#python#CompletionItemFilter(buffer, item) abort$/;"	f
ale#cursor#EchoCursorWarning	plugged/ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarning(...) abort$/;"	f
ale#cursor#EchoCursorWarningWithDelay	plugged/ale/autoload/ale/cursor.vim	/^function! ale#cursor#EchoCursorWarningWithDelay() abort$/;"	f
ale#cursor#ShowCursorDetail	plugged/ale/autoload/ale/cursor.vim	/^function! ale#cursor#ShowCursorDetail() abort$/;"	f
ale#cursor#TruncatedEcho	plugged/ale/autoload/ale/cursor.vim	/^function! ale#cursor#TruncatedEcho(original_message) abort$/;"	f
ale#d#FindDUBConfig	plugged/ale/autoload/ale/d.vim	/^function! ale#d#FindDUBConfig(buffer) abort$/;"	f
ale#debugging#Info	plugged/ale/autoload/ale/debugging.vim	/^function! ale#debugging#Info() abort$/;"	f
ale#debugging#InfoToClipboard	plugged/ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToClipboard() abort$/;"	f
ale#debugging#InfoToFile	plugged/ale/autoload/ale/debugging.vim	/^function! ale#debugging#InfoToFile(filename) abort$/;"	f
ale#definition#ClearLSPData	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#ClearLSPData() abort$/;"	f
ale#definition#GetMap	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#GetMap() abort$/;"	f
ale#definition#GoTo	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#GoTo(options) abort$/;"	f
ale#definition#GoToCommandHandler	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#GoToCommandHandler(command, ...) abort$/;"	f
ale#definition#GoToType	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#GoToType(options) abort$/;"	f
ale#definition#HandleLSPResponse	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#definition#HandleTSServerResponse	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#definition#SetMap	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#SetMap(map) abort$/;"	f
ale#definition#UpdateTagStack	plugged/ale/autoload/ale/definition.vim	/^function! ale#definition#UpdateTagStack() abort$/;"	f
ale#engine#Cleanup	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#Cleanup(buffer) abort$/;"	f
ale#engine#CleanupEveryBuffer	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#CleanupEveryBuffer() abort$/;"	f
ale#engine#EscapeCommandPart	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#EscapeCommandPart(command_part) abort$/;"	f
ale#engine#FixLocList	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#FixLocList(buffer, linter_name, from_other_source, loclist) abort$/;"	f
ale#engine#GetLoclist	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#GetLoclist(buffer) abort$/;"	f
ale#engine#HandleLoclist	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#HandleLoclist(linter_name, buffer, loclist, from_other_source) abort$/;"	f
ale#engine#InitBufferInfo	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#InitBufferInfo(buffer) abort$/;"	f
ale#engine#IsCheckingBuffer	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#IsCheckingBuffer(buffer) abort$/;"	f
ale#engine#IsExecutable	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#IsExecutable(buffer, executable) abort$/;"	f
ale#engine#MarkLinterActive	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterActive(info, linter) abort$/;"	f
ale#engine#MarkLinterInactive	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#MarkLinterInactive(info, linter_name) abort$/;"	f
ale#engine#ResetExecutableCache	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#ResetExecutableCache() abort$/;"	f
ale#engine#RunLinters	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#RunLinters(buffer, linters, should_lint_file) abort$/;"	f
ale#engine#SetResults	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#SetResults(buffer, loclist) abort$/;"	f
ale#engine#Stop	plugged/ale/autoload/ale/engine.vim	/^function! ale#engine#Stop(buffer) abort$/;"	f
ale#engine#ignore#Exclude	plugged/ale/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#Exclude(filetype, all_linters, config, disable_lsp) abort$/;"	f
ale#engine#ignore#GetList	plugged/ale/autoload/ale/engine/ignore.vim	/^function! ale#engine#ignore#GetList(filetype, config) abort$/;"	f
ale#events#ClockMilliseconds	plugged/ale/autoload/ale/events.vim	/^function! ale#events#ClockMilliseconds() abort$/;"	f
ale#events#FileChangedEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#FileChangedEvent(buffer) abort$/;"	f
ale#events#FileTypeEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#FileTypeEvent(buffer, new_filetype) abort$/;"	f
ale#events#Init	plugged/ale/autoload/ale/events.vim	/^function! ale#events#Init() abort$/;"	f
ale#events#LintOnEnter	plugged/ale/autoload/ale/events.vim	/^function! ale#events#LintOnEnter(buffer) abort$/;"	f
ale#events#QuitEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#QuitEvent(buffer) abort$/;"	f
ale#events#QuitRecently	plugged/ale/autoload/ale/events.vim	/^function! ale#events#QuitRecently(buffer) abort$/;"	f
ale#events#ReadOrEnterEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#ReadOrEnterEvent(buffer) abort$/;"	f
ale#events#SaveEvent	plugged/ale/autoload/ale/events.vim	/^function! ale#events#SaveEvent(buffer) abort$/;"	f
ale#filename_mapping#Invert	plugged/ale/autoload/ale/filename_mapping.vim	/^function! ale#filename_mapping#Invert(filename_mappings) abort$/;"	f
ale#filename_mapping#Map	plugged/ale/autoload/ale/filename_mapping.vim	/^function! ale#filename_mapping#Map(filename, filename_mappings) abort$/;"	f
ale#filetypes#GuessExtension	plugged/ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#GuessExtension(filetype) abort$/;"	f
ale#filetypes#LoadExtensionMap	plugged/ale/autoload/ale/filetypes.vim	/^function! ale#filetypes#LoadExtensionMap() abort$/;"	f
ale#fix#ApplyFixes	plugged/ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyFixes(buffer, output) abort$/;"	f
ale#fix#ApplyQueuedFixes	plugged/ale/autoload/ale/fix.vim	/^function! ale#fix#ApplyQueuedFixes(buffer) abort$/;"	f
ale#fix#Fix	plugged/ale/autoload/ale/fix.vim	/^function! ale#fix#Fix(buffer, fixing_flag, ...) abort$/;"	f
ale#fix#InitBufferData	plugged/ale/autoload/ale/fix.vim	/^function! ale#fix#InitBufferData(buffer, fixing_flag) abort$/;"	f
ale#fix#registry#Add	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Add(name, func, filetypes, desc, ...) abort$/;"	f
ale#fix#registry#Clear	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Clear() abort$/;"	f
ale#fix#registry#CompleteFixers	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#CompleteFixers(ArgLead, CmdLine, CursorPos) abort$/;"	f
ale#fix#registry#GetApplicableFixers	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetApplicableFixers(filetype) abort$/;"	f
ale#fix#registry#GetFunc	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#GetFunc(name) abort$/;"	f
ale#fix#registry#ResetToDefaults	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#ResetToDefaults() abort$/;"	f
ale#fix#registry#Suggest	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#Suggest(filetype) abort$/;"	f
ale#fix#registry#SuggestedFixers	plugged/ale/autoload/ale/fix/registry.vim	/^function! ale#fix#registry#SuggestedFixers(filetype) abort$/;"	f
ale#fixers#astyle#FindProjectOptions	plugged/ale/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#FindProjectOptions(buffer) abort$/;"	f
ale#fixers#astyle#Fix	plugged/ale/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#Fix(buffer) abort$/;"	f
ale#fixers#astyle#Var	plugged/ale/autoload/ale/fixers/astyle.vim	/^function! ale#fixers#astyle#Var(buffer, name) abort$/;"	f
ale#fixers#autoimport#Fix	plugged/ale/autoload/ale/fixers/autoimport.vim	/^function! ale#fixers#autoimport#Fix(buffer) abort$/;"	f
ale#fixers#autopep8#Fix	plugged/ale/autoload/ale/fixers/autopep8.vim	/^function! ale#fixers#autopep8#Fix(buffer) abort$/;"	f
ale#fixers#bibclean#Fix	plugged/ale/autoload/ale/fixers/bibclean.vim	/^function! ale#fixers#bibclean#Fix(buffer) abort$/;"	f
ale#fixers#black#Fix	plugged/ale/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#Fix(buffer) abort$/;"	f
ale#fixers#black#GetExecutable	plugged/ale/autoload/ale/fixers/black.vim	/^function! ale#fixers#black#GetExecutable(buffer) abort$/;"	f
ale#fixers#brittany#Fix	plugged/ale/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#Fix(buffer) abort$/;"	f
ale#fixers#brittany#GetExecutable	plugged/ale/autoload/ale/fixers/brittany.vim	/^function! ale#fixers#brittany#GetExecutable(buffer) abort$/;"	f
ale#fixers#clangformat#Fix	plugged/ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#Fix(buffer) abort$/;"	f
ale#fixers#clangformat#GetExecutable	plugged/ale/autoload/ale/fixers/clangformat.vim	/^function! ale#fixers#clangformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#clangtidy#Fix	plugged/ale/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#Fix(buffer) abort$/;"	f
ale#fixers#clangtidy#GetCommand	plugged/ale/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#GetCommand(buffer) abort$/;"	f
ale#fixers#clangtidy#Var	plugged/ale/autoload/ale/fixers/clangtidy.vim	/^function! ale#fixers#clangtidy#Var(buffer, name) abort$/;"	f
ale#fixers#cmakeformat#Fix	plugged/ale/autoload/ale/fixers/cmakeformat.vim	/^function! ale#fixers#cmakeformat#Fix(buffer) abort$/;"	f
ale#fixers#dartfmt#Fix	plugged/ale/autoload/ale/fixers/dartfmt.vim	/^function! ale#fixers#dartfmt#Fix(buffer) abort$/;"	f
ale#fixers#dfmt#Fix	plugged/ale/autoload/ale/fixers/dfmt.vim	/^function! ale#fixers#dfmt#Fix(buffer) abort$/;"	f
ale#fixers#dhall#Fix	plugged/ale/autoload/ale/fixers/dhall.vim	/^function! ale#fixers#dhall#Fix(buffer) abort$/;"	f
ale#fixers#dhall#GetExecutable	plugged/ale/autoload/ale/fixers/dhall.vim	/^function! ale#fixers#dhall#GetExecutable(buffer) abort$/;"	f
ale#fixers#elm_format#Fix	plugged/ale/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#Fix(buffer) abort$/;"	f
ale#fixers#elm_format#GetExecutable	plugged/ale/autoload/ale/fixers/elm_format.vim	/^function! ale#fixers#elm_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#eslint#ApplyFixForVersion	plugged/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#eslint#Fix	plugged/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#Fix(buffer) abort$/;"	f
ale#fixers#eslint#ProcessEslintDOutput	plugged/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessEslintDOutput(buffer, output) abort$/;"	f
ale#fixers#eslint#ProcessFixDryRunOutput	plugged/ale/autoload/ale/fixers/eslint.vim	/^function! ale#fixers#eslint#ProcessFixDryRunOutput(buffer, output) abort$/;"	f
ale#fixers#fecs#Fix	plugged/ale/autoload/ale/fixers/fecs.vim	/^function! ale#fixers#fecs#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#Fix	plugged/ale/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#Fix(buffer) abort$/;"	f
ale#fixers#fixjson#GetExecutable	plugged/ale/autoload/ale/fixers/fixjson.vim	/^function! ale#fixers#fixjson#GetExecutable(buffer) abort$/;"	f
ale#fixers#floskell#Fix	plugged/ale/autoload/ale/fixers/floskell.vim	/^function! ale#fixers#floskell#Fix(buffer) abort$/;"	f
ale#fixers#floskell#GetExecutable	plugged/ale/autoload/ale/fixers/floskell.vim	/^function! ale#fixers#floskell#GetExecutable(buffer) abort$/;"	f
ale#fixers#generic#RemoveTrailingBlankLines	plugged/ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#RemoveTrailingBlankLines(buffer, lines) abort$/;"	f
ale#fixers#generic#TrimWhitespace	plugged/ale/autoload/ale/fixers/generic.vim	/^function! ale#fixers#generic#TrimWhitespace(buffer, lines) abort$/;"	f
ale#fixers#generic_python#AddLinesBeforeControlStatements	plugged/ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#AddLinesBeforeControlStatements(buffer, lines) abort$/;"	f
ale#fixers#generic_python#BreakUpLongLines	plugged/ale/autoload/ale/fixers/generic_python.vim	/^function! ale#fixers#generic_python#BreakUpLongLines(buffer, lines) abort$/;"	f
ale#fixers#gnatpp#Fix	plugged/ale/autoload/ale/fixers/gnatpp.vim	/^function! ale#fixers#gnatpp#Fix(buffer) abort$/;"	f
ale#fixers#gofmt#Fix	plugged/ale/autoload/ale/fixers/gofmt.vim	/^function! ale#fixers#gofmt#Fix(buffer) abort$/;"	f
ale#fixers#goimports#Fix	plugged/ale/autoload/ale/fixers/goimports.vim	/^function! ale#fixers#goimports#Fix(buffer) abort$/;"	f
ale#fixers#gomod#Fix	plugged/ale/autoload/ale/fixers/gomod.vim	/^function! ale#fixers#gomod#Fix(buffer) abort$/;"	f
ale#fixers#google_java_format#Fix	plugged/ale/autoload/ale/fixers/google_java_format.vim	/^function! ale#fixers#google_java_format#Fix(buffer) abort$/;"	f
ale#fixers#hackfmt#Fix	plugged/ale/autoload/ale/fixers/hackfmt.vim	/^function! ale#fixers#hackfmt#Fix(buffer) abort$/;"	f
ale#fixers#help#AlignTags	plugged/ale/autoload/ale/fixers/help.vim	/^function! ale#fixers#help#AlignTags(buffer, lines) abort$/;"	f
ale#fixers#hfmt#Fix	plugged/ale/autoload/ale/fixers/hfmt.vim	/^function! ale#fixers#hfmt#Fix(buffer) abort$/;"	f
ale#fixers#hindent#Fix	plugged/ale/autoload/ale/fixers/hindent.vim	/^function! ale#fixers#hindent#Fix(buffer) abort$/;"	f
ale#fixers#hindent#GetExecutable	plugged/ale/autoload/ale/fixers/hindent.vim	/^function! ale#fixers#hindent#GetExecutable(buffer) abort$/;"	f
ale#fixers#hlint#Fix	plugged/ale/autoload/ale/fixers/hlint.vim	/^function! ale#fixers#hlint#Fix(buffer) abort$/;"	f
ale#fixers#html_beautify#Fix	plugged/ale/autoload/ale/fixers/html_beautify.vim	/^function! ale#fixers#html_beautify#Fix(buffer) abort$/;"	f
ale#fixers#importjs#Fix	plugged/ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#Fix(buffer) abort$/;"	f
ale#fixers#importjs#ProcessOutput	plugged/ale/autoload/ale/fixers/importjs.vim	/^function! ale#fixers#importjs#ProcessOutput(buffer, output) abort$/;"	f
ale#fixers#isort#Fix	plugged/ale/autoload/ale/fixers/isort.vim	/^function! ale#fixers#isort#Fix(buffer) abort$/;"	f
ale#fixers#jq#Fix	plugged/ale/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#Fix(buffer) abort$/;"	f
ale#fixers#jq#GetExecutable	plugged/ale/autoload/ale/fixers/jq.vim	/^function! ale#fixers#jq#GetExecutable(buffer) abort$/;"	f
ale#fixers#ktlint#Fix	plugged/ale/autoload/ale/fixers/ktlint.vim	/^function! ale#fixers#ktlint#Fix(buffer) abort$/;"	f
ale#fixers#latexindent#Fix	plugged/ale/autoload/ale/fixers/latexindent.vim	/^function! ale#fixers#latexindent#Fix(buffer) abort$/;"	f
ale#fixers#luafmt#Fix	plugged/ale/autoload/ale/fixers/luafmt.vim	/^function! ale#fixers#luafmt#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#Fix	plugged/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#Fix(buffer) abort$/;"	f
ale#fixers#mix_format#GetCommand	plugged/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetCommand(buffer) abort$/;"	f
ale#fixers#mix_format#GetExecutable	plugged/ale/autoload/ale/fixers/mix_format.vim	/^function! ale#fixers#mix_format#GetExecutable(buffer) abort$/;"	f
ale#fixers#nimpretty#Fix	plugged/ale/autoload/ale/fixers/nimpretty.vim	/^function! ale#fixers#nimpretty#Fix(buffer) abort$/;"	f
ale#fixers#nixpkgsfmt#Fix	plugged/ale/autoload/ale/fixers/nixpkgsfmt.vim	/^function! ale#fixers#nixpkgsfmt#Fix(buffer) abort$/;"	f
ale#fixers#ocamlformat#Fix	plugged/ale/autoload/ale/fixers/ocamlformat.vim	/^function! ale#fixers#ocamlformat#Fix(buffer) abort$/;"	f
ale#fixers#ocp_indent#Fix	plugged/ale/autoload/ale/fixers/ocp_indent.vim	/^function! ale#fixers#ocp_indent#Fix(buffer) abort$/;"	f
ale#fixers#ormolu#Fix	plugged/ale/autoload/ale/fixers/ormolu.vim	/^function! ale#fixers#ormolu#Fix(buffer) abort$/;"	f
ale#fixers#perltidy#Fix	plugged/ale/autoload/ale/fixers/perltidy.vim	/^function! ale#fixers#perltidy#Fix(buffer) abort$/;"	f
ale#fixers#pgformatter#Fix	plugged/ale/autoload/ale/fixers/pgformatter.vim	/^function! ale#fixers#pgformatter#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#Fix	plugged/ale/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#Fix(buffer) abort$/;"	f
ale#fixers#php_cs_fixer#GetExecutable	plugged/ale/autoload/ale/fixers/php_cs_fixer.vim	/^function! ale#fixers#php_cs_fixer#GetExecutable(buffer) abort$/;"	f
ale#fixers#phpcbf#Fix	plugged/ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#Fix(buffer) abort$/;"	f
ale#fixers#phpcbf#GetExecutable	plugged/ale/autoload/ale/fixers/phpcbf.vim	/^function! ale#fixers#phpcbf#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#ApplyFixForVersion	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier#CdProjectRoot	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#CdProjectRoot(buffer) abort$/;"	f
ale#fixers#prettier#Fix	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#Fix(buffer) abort$/;"	f
ale#fixers#prettier#GetExecutable	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier#GetProjectRoot	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#GetProjectRoot(buffer) abort$/;"	f
ale#fixers#prettier#ProcessPrettierDOutput	plugged/ale/autoload/ale/fixers/prettier.vim	/^function! ale#fixers#prettier#ProcessPrettierDOutput(buffer, output) abort$/;"	f
ale#fixers#prettier_eslint#ApplyFixForVersion	plugged/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#ApplyFixForVersion(buffer, version) abort$/;"	f
ale#fixers#prettier_eslint#Fix	plugged/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#Fix(buffer) abort$/;"	f
ale#fixers#prettier_eslint#GetExecutable	plugged/ale/autoload/ale/fixers/prettier_eslint.vim	/^function! ale#fixers#prettier_eslint#GetExecutable(buffer) abort$/;"	f
ale#fixers#prettier_standard#Fix	plugged/ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#Fix(buffer) abort$/;"	f
ale#fixers#prettier_standard#GetExecutable	plugged/ale/autoload/ale/fixers/prettier_standard.vim	/^function! ale#fixers#prettier_standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#puppetlint#Fix	plugged/ale/autoload/ale/fixers/puppetlint.vim	/^function! ale#fixers#puppetlint#Fix(buffer) abort$/;"	f
ale#fixers#purty#Fix	plugged/ale/autoload/ale/fixers/purty.vim	/^function! ale#fixers#purty#Fix(buffer) abort$/;"	f
ale#fixers#purty#GetExecutable	plugged/ale/autoload/ale/fixers/purty.vim	/^function! ale#fixers#purty#GetExecutable(buffer) abort$/;"	f
ale#fixers#qmlfmt#Fix	plugged/ale/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#Fix(buffer) abort$/;"	f
ale#fixers#qmlfmt#GetExecutable	plugged/ale/autoload/ale/fixers/qmlfmt.vim	/^function! ale#fixers#qmlfmt#GetExecutable(buffer) abort$/;"	f
ale#fixers#refmt#Fix	plugged/ale/autoload/ale/fixers/refmt.vim	/^function! ale#fixers#refmt#Fix(buffer) abort$/;"	f
ale#fixers#remark_lint#Fix	plugged/ale/autoload/ale/fixers/remark_lint.vim	/^function! ale#fixers#remark_lint#Fix(buffer) abort$/;"	f
ale#fixers#remark_lint#GetExecutable	plugged/ale/autoload/ale/fixers/remark_lint.vim	/^function! ale#fixers#remark_lint#GetExecutable(buffer) abort$/;"	f
ale#fixers#reorder_python_imports#Fix	plugged/ale/autoload/ale/fixers/reorder_python_imports.vim	/^function! ale#fixers#reorder_python_imports#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#Fix	plugged/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#Fix(buffer) abort$/;"	f
ale#fixers#rubocop#GetCommand	plugged/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#GetCommand(buffer) abort$/;"	f
ale#fixers#rubocop#PostProcess	plugged/ale/autoload/ale/fixers/rubocop.vim	/^function! ale#fixers#rubocop#PostProcess(buffer, output) abort$/;"	f
ale#fixers#rufo#Fix	plugged/ale/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#Fix(buffer) abort$/;"	f
ale#fixers#rufo#GetCommand	plugged/ale/autoload/ale/fixers/rufo.vim	/^function! ale#fixers#rufo#GetCommand(buffer) abort$/;"	f
ale#fixers#rustfmt#Fix	plugged/ale/autoload/ale/fixers/rustfmt.vim	/^function! ale#fixers#rustfmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#Fix	plugged/ale/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#Fix(buffer) abort$/;"	f
ale#fixers#scalafmt#GetCommand	plugged/ale/autoload/ale/fixers/scalafmt.vim	/^function! ale#fixers#scalafmt#GetCommand(buffer) abort$/;"	f
ale#fixers#shfmt#Fix	plugged/ale/autoload/ale/fixers/shfmt.vim	/^function! ale#fixers#shfmt#Fix(buffer) abort$/;"	f
ale#fixers#sorbet#Fix	plugged/ale/autoload/ale/fixers/sorbet.vim	/^function! ale#fixers#sorbet#Fix(buffer) abort$/;"	f
ale#fixers#sorbet#GetCommand	plugged/ale/autoload/ale/fixers/sorbet.vim	/^function! ale#fixers#sorbet#GetCommand(buffer) abort$/;"	f
ale#fixers#sqlfmt#Fix	plugged/ale/autoload/ale/fixers/sqlfmt.vim	/^function! ale#fixers#sqlfmt#Fix(buffer) abort$/;"	f
ale#fixers#sqlformat#Fix	plugged/ale/autoload/ale/fixers/sqlformat.vim	/^function! ale#fixers#sqlformat#Fix(buffer) abort$/;"	f
ale#fixers#standard#Fix	plugged/ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#Fix(buffer) abort$/;"	f
ale#fixers#standard#GetExecutable	plugged/ale/autoload/ale/fixers/standard.vim	/^function! ale#fixers#standard#GetExecutable(buffer) abort$/;"	f
ale#fixers#standardrb#Fix	plugged/ale/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#Fix(buffer) abort$/;"	f
ale#fixers#standardrb#GetCommand	plugged/ale/autoload/ale/fixers/standardrb.vim	/^function! ale#fixers#standardrb#GetCommand(buffer) abort$/;"	f
ale#fixers#stylelint#Fix	plugged/ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#Fix(buffer) abort$/;"	f
ale#fixers#stylelint#GetExecutable	plugged/ale/autoload/ale/fixers/stylelint.vim	/^function! ale#fixers#stylelint#GetExecutable(buffer) abort$/;"	f
ale#fixers#styler#Fix	plugged/ale/autoload/ale/fixers/styler.vim	/^function! ale#fixers#styler#Fix(buffer) abort$/;"	f
ale#fixers#stylish_haskell#Fix	plugged/ale/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#Fix(buffer) abort$/;"	f
ale#fixers#stylish_haskell#GetExecutable	plugged/ale/autoload/ale/fixers/stylish_haskell.vim	/^function! ale#fixers#stylish_haskell#GetExecutable(buffer) abort$/;"	f
ale#fixers#swiftformat#Fix	plugged/ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#Fix(buffer) abort$/;"	f
ale#fixers#swiftformat#GetExecutable	plugged/ale/autoload/ale/fixers/swiftformat.vim	/^function! ale#fixers#swiftformat#GetExecutable(buffer) abort$/;"	f
ale#fixers#terraform#Fix	plugged/ale/autoload/ale/fixers/terraform.vim	/^function! ale#fixers#terraform#Fix(buffer) abort$/;"	f
ale#fixers#textlint#Fix	plugged/ale/autoload/ale/fixers/textlint.vim	/^function! ale#fixers#textlint#Fix(buffer) abort$/;"	f
ale#fixers#tidy#Fix	plugged/ale/autoload/ale/fixers/tidy.vim	/^function! ale#fixers#tidy#Fix(buffer) abort$/;"	f
ale#fixers#tslint#Fix	plugged/ale/autoload/ale/fixers/tslint.vim	/^function! ale#fixers#tslint#Fix(buffer) abort$/;"	f
ale#fixers#uncrustify#Fix	plugged/ale/autoload/ale/fixers/uncrustify.vim	/^function! ale#fixers#uncrustify#Fix(buffer) abort$/;"	f
ale#fixers#xmllint#Fix	plugged/ale/autoload/ale/fixers/xmllint.vim	/^function! ale#fixers#xmllint#Fix(buffer) abort$/;"	f
ale#fixers#xo#Fix	plugged/ale/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#Fix(buffer) abort$/;"	f
ale#fixers#xo#GetExecutable	plugged/ale/autoload/ale/fixers/xo.vim	/^function! ale#fixers#xo#GetExecutable(buffer) abort$/;"	f
ale#fixers#yamlfix#Fix	plugged/ale/autoload/ale/fixers/yamlfix.vim	/^function! ale#fixers#yamlfix#Fix(buffer) abort$/;"	f
ale#fixers#yapf#Fix	plugged/ale/autoload/ale/fixers/yapf.vim	/^function! ale#fixers#yapf#Fix(buffer) abort$/;"	f
ale#go#EnvString	plugged/ale/autoload/ale/go.vim	/^function! ale#go#EnvString(buffer) abort$/;"	f
ale#go#FindProjectRoot	plugged/ale/autoload/ale/go.vim	/^function! ale#go#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#BuildClasspathCommand	plugged/ale/autoload/ale/gradle.vim	/^function! ale#gradle#BuildClasspathCommand(buffer) abort$/;"	f
ale#gradle#FindExecutable	plugged/ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindExecutable(buffer) abort$/;"	f
ale#gradle#FindProjectRoot	plugged/ale/autoload/ale/gradle.vim	/^function! ale#gradle#FindProjectRoot(buffer) abort$/;"	f
ale#gradle#GetInitPath	plugged/ale/autoload/ale/gradle.vim	/^function! ale#gradle#GetInitPath() abort$/;"	f
ale#handlers#alex#CreateCommandCallback	plugged/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#CreateCommandCallback(flags) abort$/;"	f
ale#handlers#alex#DefineLinter	plugged/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#DefineLinter(filetype, flags) abort$/;"	f
ale#handlers#alex#GetExecutable	plugged/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#GetExecutable(buffer) abort$/;"	f
ale#handlers#alex#Handle	plugged/ale/autoload/ale/handlers/alex.vim	/^function! ale#handlers#alex#Handle(buffer, lines) abort$/;"	f
ale#handlers#ccls#GetInitOpts	plugged/ale/autoload/ale/handlers/ccls.vim	/^function! ale#handlers#ccls#GetInitOpts(buffer, init_options_var) abort$/;"	f
ale#handlers#ccls#GetProjectRoot	plugged/ale/autoload/ale/handlers/ccls.vim	/^function! ale#handlers#ccls#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#cppcheck#GetBufferPathIncludeOptions	plugged/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetBufferPathIncludeOptions(buffer) abort$/;"	f
ale#handlers#cppcheck#GetCdCommand	plugged/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetCdCommand(buffer) abort$/;"	f
ale#handlers#cppcheck#GetCompileCommandsOptions	plugged/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#GetCompileCommandsOptions(buffer) abort$/;"	f
ale#handlers#cppcheck#HandleCppCheckFormat	plugged/ale/autoload/ale/handlers/cppcheck.vim	/^function! ale#handlers#cppcheck#HandleCppCheckFormat(buffer, lines) abort$/;"	f
ale#handlers#cpplint#HandleCppLintFormat	plugged/ale/autoload/ale/handlers/cpplint.vim	/^function! ale#handlers#cpplint#HandleCppLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleCSSLintFormat	plugged/ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleCSSLintFormat(buffer, lines) abort$/;"	f
ale#handlers#css#HandleStyleLintFormat	plugged/ale/autoload/ale/handlers/css.vim	/^function! ale#handlers#css#HandleStyleLintFormat(buffer, lines) abort$/;"	f
ale#handlers#elixir#FindMixProjectRoot	plugged/ale/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixProjectRoot(buffer) abort$/;"	f
ale#handlers#elixir#FindMixUmbrellaRoot	plugged/ale/autoload/ale/handlers/elixir.vim	/^function! ale#handlers#elixir#FindMixUmbrellaRoot(buffer) abort$/;"	f
ale#handlers#eslint#FindConfig	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#FindConfig(buffer) abort$/;"	f
ale#handlers#eslint#GetCdString	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCdString(buffer) abort$/;"	f
ale#handlers#eslint#GetCommand	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetCommand(buffer) abort$/;"	f
ale#handlers#eslint#GetExecutable	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#eslint#Handle	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#Handle(buffer, lines) abort$/;"	f
ale#handlers#eslint#HandleJSON	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! ale#handlers#eslint#HandleJSON(buffer, lines) abort$/;"	f
ale#handlers#fecs#GetCommand	plugged/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetCommand(buffer) abort$/;"	f
ale#handlers#fecs#GetExecutable	plugged/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#GetExecutable(buffer) abort$/;"	f
ale#handlers#fecs#Handle	plugged/ale/autoload/ale/handlers/fecs.vim	/^function! ale#handlers#fecs#Handle(buffer, lines) abort$/;"	f
ale#handlers#flawfinder#HandleFlawfinderFormat	plugged/ale/autoload/ale/handlers/flawfinder.vim	/^function! ale#handlers#flawfinder#HandleFlawfinderFormat(buffer, lines) abort$/;"	f
ale#handlers#gawk#HandleGawkFormat	plugged/ale/autoload/ale/handlers/gawk.vim	/^function! ale#handlers#gawk#HandleGawkFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormat	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormat(buffer, lines) abort$/;"	f
ale#handlers#gcc#HandleGCCFormatWithIncludes	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! ale#handlers#gcc#HandleGCCFormatWithIncludes(buffer, lines) abort$/;"	f
ale#handlers#go#Handler	plugged/ale/autoload/ale/handlers/go.vim	/^function! ale#handlers#go#Handler(buffer, lines) abort$/;"	f
ale#handlers#haskell#GetStackExecutable	plugged/ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#GetStackExecutable(bufnr) abort$/;"	f
ale#handlers#haskell#HandleGHCFormat	plugged/ale/autoload/ale/handlers/haskell.vim	/^function! ale#handlers#haskell#HandleGHCFormat(buffer, lines) abort$/;"	f
ale#handlers#haskell_stack#EscapeExecutable	plugged/ale/autoload/ale/handlers/haskell_stack.vim	/^function! ale#handlers#haskell_stack#EscapeExecutable(executable, stack_exec) abort$/;"	f
ale#handlers#hdl_checker#DefineLinter	plugged/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#DefineLinter(filetype) abort$/;"	f
ale#handlers#hdl_checker#GetCommand	plugged/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetCommand(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetExecutable	plugged/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetExecutable(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetInitOptions	plugged/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetInitOptions(buffer) abort$/;"	f
ale#handlers#hdl_checker#GetProjectRoot	plugged/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#hdl_checker#IsDotGit	plugged/ale/autoload/ale/handlers/hdl_checker.vim	/^function! ale#handlers#hdl_checker#IsDotGit(path) abort$/;"	f
ale#handlers#hlint#GetExecutable	plugged/ale/autoload/ale/handlers/hlint.vim	/^function! ale#handlers#hlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#ktlint#GetCommand	plugged/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetCommand(buffer) abort$/;"	f
ale#handlers#ktlint#GetRulesets	plugged/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#GetRulesets(buffer) abort$/;"	f
ale#handlers#ktlint#Handle	plugged/ale/autoload/ale/handlers/ktlint.vim	/^function! ale#handlers#ktlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#languagetool#DefineLinter	plugged/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#DefineLinter(filetype) abort$/;"	f
ale#handlers#languagetool#GetCommand	plugged/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetCommand(buffer) abort$/;"	f
ale#handlers#languagetool#GetExecutable	plugged/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#GetExecutable(buffer) abort$/;"	f
ale#handlers#languagetool#HandleOutput	plugged/ale/autoload/ale/handlers/languagetool.vim	/^function! ale#handlers#languagetool#HandleOutput(buffer, lines) abort$/;"	f
ale#handlers#markdownlint#Handle	plugged/ale/autoload/ale/handlers/markdownlint.vim	/^function! ale#handlers#markdownlint#Handle(buffer, lines) abort$/;"	f
ale#handlers#ols#GetCommand	plugged/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetCommand(buffer) abort$/;"	f
ale#handlers#ols#GetExecutable	plugged/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetExecutable(buffer) abort$/;"	f
ale#handlers#ols#GetLanguage	plugged/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetLanguage(buffer) abort$/;"	f
ale#handlers#ols#GetProjectRoot	plugged/ale/autoload/ale/handlers/ols.vim	/^function! ale#handlers#ols#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#pony#HandlePonycFormat	plugged/ale/autoload/ale/handlers/pony.vim	/^function! ale#handlers#pony#HandlePonycFormat(buffer, lines) abort$/;"	f
ale#handlers#redpen#HandleRedpenOutput	plugged/ale/autoload/ale/handlers/redpen.vim	/^function! ale#handlers#redpen#HandleRedpenOutput(buffer, lines) abort$/;"	f
ale#handlers#ruby#HandleSyntaxErrors	plugged/ale/autoload/ale/handlers/ruby.vim	/^function! ale#handlers#ruby#HandleSyntaxErrors(buffer, lines) abort$/;"	f
ale#handlers#rust#HandleRustErrors	plugged/ale/autoload/ale/handlers/rust.vim	/^function! ale#handlers#rust#HandleRustErrors(buffer, lines) abort$/;"	f
ale#handlers#scala#HandleScalacLintFormat	plugged/ale/autoload/ale/handlers/scala.vim	/^function! ale#handlers#scala#HandleScalacLintFormat(buffer, lines) abort$/;"	f
ale#handlers#sh#GetShellType	plugged/ale/autoload/ale/handlers/sh.vim	/^function! ale#handlers#sh#GetShellType(buffer) abort$/;"	f
ale#handlers#shellcheck#DefineLinter	plugged/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#DefineLinter(filetype) abort$/;"	f
ale#handlers#shellcheck#GetCommand	plugged/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetCommand(buffer, version) abort$/;"	f
ale#handlers#shellcheck#GetDialectArgument	plugged/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetDialectArgument(buffer) abort$/;"	f
ale#handlers#shellcheck#GetShellcheckDialectDirective	plugged/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#GetShellcheckDialectDirective(buffer) abort$/;"	f
ale#handlers#shellcheck#Handle	plugged/ale/autoload/ale/handlers/shellcheck.vim	/^function! ale#handlers#shellcheck#Handle(buffer, lines) abort$/;"	f
ale#handlers#sml#GetCmFile	plugged/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetCmFile(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjCm	plugged/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjCm(buffer) abort$/;"	f
ale#handlers#sml#GetExecutableSmlnjFile	plugged/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#GetExecutableSmlnjFile(buffer) abort$/;"	f
ale#handlers#sml#Handle	plugged/ale/autoload/ale/handlers/sml.vim	/^function! ale#handlers#sml#Handle(buffer, lines) abort$/;"	f
ale#handlers#textlint#GetCommand	plugged/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetCommand(buffer) abort$/;"	f
ale#handlers#textlint#GetExecutable	plugged/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#GetExecutable(buffer) abort$/;"	f
ale#handlers#textlint#HandleTextlintOutput	plugged/ale/autoload/ale/handlers/textlint.vim	/^function! ale#handlers#textlint#HandleTextlintOutput(buffer, lines) abort$/;"	f
ale#handlers#tslint#GetExecutable	plugged/ale/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#GetExecutable(buffer) abort$/;"	f
ale#handlers#tslint#InitVariables	plugged/ale/autoload/ale/handlers/tslint.vim	/^function! ale#handlers#tslint#InitVariables() abort$/;"	f
ale#handlers#tsserver#GetProjectRoot	plugged/ale/autoload/ale/handlers/tsserver.vim	/^function! ale#handlers#tsserver#GetProjectRoot(buffer) abort$/;"	f
ale#handlers#unix#HandleAsError	plugged/ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsError(buffer, lines) abort$/;"	f
ale#handlers#unix#HandleAsWarning	plugged/ale/autoload/ale/handlers/unix.vim	/^function! ale#handlers#unix#HandleAsWarning(buffer, lines) abort$/;"	f
ale#handlers#vale#GetType	plugged/ale/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#GetType(severity) abort$/;"	f
ale#handlers#vale#Handle	plugged/ale/autoload/ale/handlers/vale.vim	/^function! ale#handlers#vale#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#DefineLinter	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#DefineLinter(filetype) abort$/;"	f
ale#handlers#writegood#GetCommand	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetCommand(buffer) abort$/;"	f
ale#handlers#writegood#GetExecutable	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#GetExecutable(buffer) abort$/;"	f
ale#handlers#writegood#Handle	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#Handle(buffer, lines) abort$/;"	f
ale#handlers#writegood#ResetOptions	plugged/ale/autoload/ale/handlers/writegood.vim	/^function! ale#handlers#writegood#ResetOptions() abort$/;"	f
ale#highlight#BufferHidden	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#BufferHidden(buffer) abort$/;"	f
ale#highlight#CreatePositions	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#CreatePositions(line, col, end_line, end_col) abort$/;"	f
ale#highlight#RemoveHighlights	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#RemoveHighlights() abort$/;"	f
ale#highlight#SetHighlights	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#SetHighlights(buffer, loclist) abort$/;"	f
ale#highlight#UpdateHighlights	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#UpdateHighlights() abort$/;"	f
ale#highlight#nvim_buf_add_highlight	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#nvim_buf_add_highlight(buffer, ns_id, hl_group, line, col_start, col_end/;"	f
ale#highlight#nvim_buf_clear_namespace	plugged/ale/autoload/ale/highlight.vim	/^function! ale#highlight#nvim_buf_clear_namespace(buffer, ns_id, line_start, line_end) abort$/;"	f
ale#history#Add	plugged/ale/autoload/ale/history.vim	/^function! ale#history#Add(buffer, status, job_id, command) abort$/;"	f
ale#history#Get	plugged/ale/autoload/ale/history.vim	/^function! ale#history#Get(buffer) abort$/;"	f
ale#history#RememberOutput	plugged/ale/autoload/ale/history.vim	/^function! ale#history#RememberOutput(buffer, job_id, output) abort$/;"	f
ale#history#SetExitCode	plugged/ale/autoload/ale/history.vim	/^function! ale#history#SetExitCode(buffer, job_id, exit_code) abort$/;"	f
ale#hover#ClearLSPData	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#ClearLSPData() abort$/;"	f
ale#hover#GetMap	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#GetMap() abort$/;"	f
ale#hover#HandleLSPResponse	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#hover#HandleTSServerResponse	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#hover#ParseLSPResult	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#ParseLSPResult(contents) abort$/;"	f
ale#hover#SetMap	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#SetMap(map) abort$/;"	f
ale#hover#Show	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#Show(buffer, line, col, opt) abort$/;"	f
ale#hover#ShowAtCursor	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowAtCursor() abort$/;"	f
ale#hover#ShowDocumentationAtCursor	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowDocumentationAtCursor() abort$/;"	f
ale#hover#ShowTruncatedMessageAtCursor	plugged/ale/autoload/ale/hover.vim	/^function! ale#hover#ShowTruncatedMessageAtCursor() abort$/;"	f
ale#java#FindProjectRoot	plugged/ale/autoload/ale/java.vim	/^function! ale#java#FindProjectRoot(buffer) abort$/;"	f
ale#job#HasOpenChannel	plugged/ale/autoload/ale/job.vim	/^function! ale#job#HasOpenChannel(job_id) abort$/;"	f
ale#job#IsRunning	plugged/ale/autoload/ale/job.vim	/^function! ale#job#IsRunning(job_id) abort$/;"	f
ale#job#ParseVim8ProcessID	plugged/ale/autoload/ale/job.vim	/^function! ale#job#ParseVim8ProcessID(job_string) abort$/;"	f
ale#job#PrepareCommand	plugged/ale/autoload/ale/job.vim	/^function! ale#job#PrepareCommand(buffer, command) abort$/;"	f
ale#job#SendRaw	plugged/ale/autoload/ale/job.vim	/^function! ale#job#SendRaw(job_id, string) abort$/;"	f
ale#job#Start	plugged/ale/autoload/ale/job.vim	/^function! ale#job#Start(command, options) abort$/;"	f
ale#job#StartWithCmd	plugged/ale/autoload/ale/job.vim	/^function! ale#job#StartWithCmd(command, options) abort$/;"	f
ale#job#Stop	plugged/ale/autoload/ale/job.vim	/^function! ale#job#Stop(job_id) abort$/;"	f
ale#job#ValidateArguments	plugged/ale/autoload/ale/job.vim	/^function! ale#job#ValidateArguments(command, options) abort$/;"	f
ale#julia#FindProjectRoot	plugged/ale/autoload/ale/julia.vim	/^function! ale#julia#FindProjectRoot(buffer) abort$/;"	f
ale#linter#Define	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#Define(filetype, linter) abort$/;"	f
ale#linter#Get	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#Get(original_filetypes) abort$/;"	f
ale#linter#GetAddress	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetAddress(buffer, linter) abort$/;"	f
ale#linter#GetAll	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetAll(filetypes) abort$/;"	f
ale#linter#GetCommand	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetCommand(buffer, linter) abort$/;"	f
ale#linter#GetExecutable	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetExecutable(buffer, linter) abort$/;"	f
ale#linter#GetLanguage	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetLanguage(buffer, linter) abort$/;"	f
ale#linter#GetLintersLoaded	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#GetLintersLoaded() abort$/;"	f
ale#linter#PreProcess	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#PreProcess(filetype, linter) abort$/;"	f
ale#linter#PreventLoading	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#PreventLoading(filetype) abort$/;"	f
ale#linter#RemoveIgnored	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#RemoveIgnored(buffer, filetype, linters) abort$/;"	f
ale#linter#Reset	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#Reset() abort$/;"	f
ale#linter#ResolveFiletype	plugged/ale/autoload/ale/linter.vim	/^function! ale#linter#ResolveFiletype(original_filetype) abort$/;"	f
ale#list#GetCombinedList	plugged/ale/autoload/ale/list.vim	/^function! ale#list#GetCombinedList() abort$/;"	f
ale#list#IsQuickfixOpen	plugged/ale/autoload/ale/list.vim	/^function! ale#list#IsQuickfixOpen() abort$/;"	f
ale#list#SetLists	plugged/ale/autoload/ale/list.vim	/^function! ale#list#SetLists(buffer, loclist) abort$/;"	f
ale#loclist_jumping#FindNearest	plugged/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#FindNearest(direction, wrap, ...) abort$/;"	f
ale#loclist_jumping#Jump	plugged/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#Jump(direction, ...) abort$/;"	f
ale#loclist_jumping#JumpToIndex	plugged/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#JumpToIndex(index) abort$/;"	f
ale#loclist_jumping#WrapJump	plugged/ale/autoload/ale/loclist_jumping.vim	/^function! ale#loclist_jumping#WrapJump(direction, sargs) abort$/;"	f
ale#lsp#CloseDocument	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CloseDocument(buffer) abort$/;"	f
ale#lsp#CloseDocument	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CloseDocument(conn_id) abort$/;"	f
ale#lsp#ConnectToAddress	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ConnectToAddress(conn_id, address) abort$/;"	f
ale#lsp#CreateMessageData	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#CreateMessageData(message) abort$/;"	f
ale#lsp#GetConnections	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetConnections() abort$/;"	f
ale#lsp#GetNextMessageID	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#GetNextMessageID() abort$/;"	f
ale#lsp#HandleInitResponse	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleInitResponse(conn, response) abort$/;"	f
ale#lsp#HandleMessage	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HandleMessage(conn_id, message) abort$/;"	f
ale#lsp#HasCapability	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#HasCapability(conn_id, capability) abort$/;"	f
ale#lsp#MarkConnectionAsTsserver	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#MarkConnectionAsTsserver(conn_id) abort$/;"	f
ale#lsp#MarkDocumentAsOpen	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#MarkDocumentAsOpen(id, buffer) abort$/;"	f
ale#lsp#NotifyForChanges	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#NotifyForChanges(conn_id, buffer) abort$/;"	f
ale#lsp#OnInit	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#OnInit(conn_id, Callback) abort$/;"	f
ale#lsp#OpenDocument	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#OpenDocument(conn_id, buffer, language_id) abort$/;"	f
ale#lsp#ReadMessageData	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ReadMessageData(data) abort$/;"	f
ale#lsp#Register	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Register(executable_or_address, project, init_options) abort$/;"	f
ale#lsp#RegisterCallback	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#RegisterCallback(conn_id, callback) abort$/;"	f
ale#lsp#RemoveConnectionWithID	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#RemoveConnectionWithID(id) abort$/;"	f
ale#lsp#ResetConnections	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#ResetConnections() abort$/;"	f
ale#lsp#Send	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Send(conn_id, message) abort$/;"	f
ale#lsp#StartProgram	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#StartProgram(conn_id, executable, command) abort$/;"	f
ale#lsp#Stop	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#Stop(conn_id) abort$/;"	f
ale#lsp#StopAll	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#StopAll() abort$/;"	f
ale#lsp#UpdateConfig	plugged/ale/autoload/ale/lsp.vim	/^function! ale#lsp#UpdateConfig(conn_id, buffer, config) abort$/;"	f
ale#lsp#message#CodeAction	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#CodeAction(buffer, line, column, end_line, end_column, diagnostics) ab/;"	f
ale#lsp#message#Completion	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Completion(buffer, line, column, trigger_character) abort$/;"	f
ale#lsp#message#Definition	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#message#DidChange	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChange(buffer) abort$/;"	f
ale#lsp#message#DidChangeConfiguration	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidChangeConfiguration(buffer, config) abort$/;"	f
ale#lsp#message#DidClose	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidClose(buffer) abort$/;"	f
ale#lsp#message#DidOpen	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidOpen(buffer, language_id) abort$/;"	f
ale#lsp#message#DidSave	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#DidSave(buffer) abort$/;"	f
ale#lsp#message#ExecuteCommand	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#ExecuteCommand(command, arguments) abort$/;"	f
ale#lsp#message#Exit	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Exit() abort$/;"	f
ale#lsp#message#GetNextVersionID	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#GetNextVersionID() abort$/;"	f
ale#lsp#message#Hover	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Hover(buffer, line, column) abort$/;"	f
ale#lsp#message#Initialize	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialize(root_path, options, capabilities) abort$/;"	f
ale#lsp#message#Initialized	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Initialized() abort$/;"	f
ale#lsp#message#References	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#References(buffer, line, column) abort$/;"	f
ale#lsp#message#Rename	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Rename(buffer, line, column, new_name) abort$/;"	f
ale#lsp#message#Shutdown	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Shutdown() abort$/;"	f
ale#lsp#message#Symbol	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#Symbol(query) abort$/;"	f
ale#lsp#message#TypeDefinition	plugged/ale/autoload/ale/lsp/message.vim	/^function! ale#lsp#message#TypeDefinition(buffer, line, column) abort$/;"	f
ale#lsp#reset#StopAllLSPs	plugged/ale/autoload/ale/lsp/reset.vim	/^function! ale#lsp#reset#StopAllLSPs() abort$/;"	f
ale#lsp#response#GetErrorMessage	plugged/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#GetErrorMessage(response) abort$/;"	f
ale#lsp#response#ReadDiagnostics	plugged/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadDiagnostics(response) abort$/;"	f
ale#lsp#response#ReadTSServerDiagnostics	plugged/ale/autoload/ale/lsp/response.vim	/^function! ale#lsp#response#ReadTSServerDiagnostics(response) abort$/;"	f
ale#lsp#tsserver_message#Change	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Change(buffer) abort$/;"	f
ale#lsp#tsserver_message#Close	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Close(buffer) abort$/;"	f
ale#lsp#tsserver_message#CompletionEntryDetails	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#CompletionEntryDetails(buffer, line, column, entry_names) abo/;"	f
ale#lsp#tsserver_message#Completions	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Completions($/;"	f
ale#lsp#tsserver_message#Definition	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Definition(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#GetApplicableRefactors	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetApplicableRefactors(buffer, line, column, end_line, end_co/;"	f
ale#lsp#tsserver_message#GetCodeFixes	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetCodeFixes(buffer, line, column, end_line, end_column, erro/;"	f
ale#lsp#tsserver_message#GetEditsForRefactor	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#GetEditsForRefactor(buffer, line, column, end_line, end_colum/;"	f
ale#lsp#tsserver_message#Geterr	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Geterr(buffer) abort$/;"	f
ale#lsp#tsserver_message#Open	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Open(buffer) abort$/;"	f
ale#lsp#tsserver_message#OrganizeImports	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#OrganizeImports(buffer) abort$/;"	f
ale#lsp#tsserver_message#Quickinfo	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Quickinfo(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#References	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#References(buffer, line, column) abort$/;"	f
ale#lsp#tsserver_message#Rename	plugged/ale/autoload/ale/lsp/tsserver_message.vim	/^function! ale#lsp#tsserver_message#Rename($/;"	f
ale#lsp_linter#CheckWithLSP	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#CheckWithLSP(buffer, linter) abort$/;"	f
ale#lsp_linter#ClearLSPData	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#ClearLSPData() abort$/;"	f
ale#lsp_linter#FindProjectRoot	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#FindProjectRoot(buffer, linter) abort$/;"	f
ale#lsp_linter#GetConfig	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetConfig(buffer, linter) abort$/;"	f
ale#lsp_linter#GetOptions	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#GetOptions(buffer, linter) abort$/;"	f
ale#lsp_linter#HandleLSPResponse	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#lsp_linter#OnInit	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#OnInit(linter, details, Callback) abort$/;"	f
ale#lsp_linter#SendRequest	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#SendRequest(buffer, linter_name, message, ...) abort$/;"	f
ale#lsp_linter#SetLSPLinterMap	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#SetLSPLinterMap(replacement_map) abort$/;"	f
ale#lsp_linter#StartLSP	plugged/ale/autoload/ale/lsp_linter.vim	/^function! ale#lsp_linter#StartLSP(buffer, linter, Callback) abort$/;"	f
ale#lsp_window#HandleShowMessage	plugged/ale/autoload/ale/lsp_window.vim	/^function! ale#lsp_window#HandleShowMessage(linter_name, format, params) abort$/;"	f
ale#maven#BuildClasspathCommand	plugged/ale/autoload/ale/maven.vim	/^function! ale#maven#BuildClasspathCommand(buffer) abort$/;"	f
ale#maven#FindExecutable	plugged/ale/autoload/ale/maven.vim	/^function! ale#maven#FindExecutable(buffer) abort$/;"	f
ale#maven#FindProjectRoot	plugged/ale/autoload/ale/maven.vim	/^function! ale#maven#FindProjectRoot(buffer) abort$/;"	f
ale#node#Executable	plugged/ale/autoload/ale/node.vim	/^function! ale#node#Executable(buffer, executable) abort$/;"	f
ale#node#FindExecutable	plugged/ale/autoload/ale/node.vim	/^function! ale#node#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#node#FindNearestExecutable	plugged/ale/autoload/ale/node.vim	/^function! ale#node#FindNearestExecutable(buffer, path_list) abort$/;"	f
ale#organize_imports#Execute	plugged/ale/autoload/ale/organize_imports.vim	/^function! ale#organize_imports#Execute() abort$/;"	f
ale#organize_imports#HandleTSServerResponse	plugged/ale/autoload/ale/organize_imports.vim	/^function! ale#organize_imports#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#other_source#ShowResults	plugged/ale/autoload/ale/other_source.vim	/^function! ale#other_source#ShowResults(buffer, linter_name, loclist) abort$/;"	f
ale#other_source#StartChecking	plugged/ale/autoload/ale/other_source.vim	/^function! ale#other_source#StartChecking(buffer, linter_name) abort$/;"	f
ale#path#BufferCdString	plugged/ale/autoload/ale/path.vim	/^function! ale#path#BufferCdString(buffer) abort$/;"	f
ale#path#CdString	plugged/ale/autoload/ale/path.vim	/^function! ale#path#CdString(directory) abort$/;"	f
ale#path#Dirname	plugged/ale/autoload/ale/path.vim	/^function! ale#path#Dirname(path) abort$/;"	f
ale#path#FindNearestDirectory	plugged/ale/autoload/ale/path.vim	/^function! ale#path#FindNearestDirectory(buffer, directory_name) abort$/;"	f
ale#path#FindNearestFile	plugged/ale/autoload/ale/path.vim	/^function! ale#path#FindNearestFile(buffer, filename) abort$/;"	f
ale#path#FromURI	plugged/ale/autoload/ale/path.vim	/^function! ale#path#FromURI(uri) abort$/;"	f
ale#path#GetAbsPath	plugged/ale/autoload/ale/path.vim	/^function! ale#path#GetAbsPath(base_directory, filename) abort$/;"	f
ale#path#IsAbsolute	plugged/ale/autoload/ale/path.vim	/^function! ale#path#IsAbsolute(filename) abort$/;"	f
ale#path#IsBufferPath	plugged/ale/autoload/ale/path.vim	/^function! ale#path#IsBufferPath(buffer, complex_filename) abort$/;"	f
ale#path#IsTempName	plugged/ale/autoload/ale/path.vim	/^function! ale#path#IsTempName(filename) abort$/;"	f
ale#path#RemoveDriveLetter	plugged/ale/autoload/ale/path.vim	/^function! ale#path#RemoveDriveLetter(path) abort$/;"	f
ale#path#ResolveLocalPath	plugged/ale/autoload/ale/path.vim	/^function! ale#path#ResolveLocalPath(buffer, search_string, global_fallback) abort$/;"	f
ale#path#Simplify	plugged/ale/autoload/ale/path.vim	/^function! ale#path#Simplify(path) abort$/;"	f
ale#path#ToURI	plugged/ale/autoload/ale/path.vim	/^function! ale#path#ToURI(path) abort$/;"	f
ale#path#Upwards	plugged/ale/autoload/ale/path.vim	/^function! ale#path#Upwards(path) abort$/;"	f
ale#pattern_options#SetOptions	plugged/ale/autoload/ale/pattern_options.vim	/^function! ale#pattern_options#SetOptions(buffer) abort$/;"	f
ale#powershell#RunPowerShell	plugged/ale/autoload/ale/powershell.vim	/^function! ale#powershell#RunPowerShell(buffer, base_var_name, command) abort$/;"	f
ale#preview#CloseIfTypeMatches	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#CloseIfTypeMatches(filetype) abort$/;"	f
ale#preview#OpenSelection	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#OpenSelection() abort$/;"	f
ale#preview#OpenSelectionInTab	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#OpenSelectionInTab() abort$/;"	f
ale#preview#RepeatSelection	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#RepeatSelection() abort$/;"	f
ale#preview#SetLastSelection	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#SetLastSelection(item_list, options) abort$/;"	f
ale#preview#Show	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#Show(lines, ...) abort$/;"	f
ale#preview#ShowSelection	plugged/ale/autoload/ale/preview.vim	/^function! ale#preview#ShowSelection(item_list, ...) abort$/;"	f
ale#python#FindExecutable	plugged/ale/autoload/ale/python.vim	/^function! ale#python#FindExecutable(buffer, base_var_name, path_list) abort$/;"	f
ale#python#FindProjectRoot	plugged/ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRoot(buffer) abort$/;"	f
ale#python#FindProjectRootIni	plugged/ale/autoload/ale/python.vim	/^function! ale#python#FindProjectRootIni(buffer) abort$/;"	f
ale#python#FindVirtualenv	plugged/ale/autoload/ale/python.vim	/^function! ale#python#FindVirtualenv(buffer) abort$/;"	f
ale#python#HandleTraceback	plugged/ale/autoload/ale/python.vim	/^function! ale#python#HandleTraceback(lines, limit) abort$/;"	f
ale#python#PipenvPresent	plugged/ale/autoload/ale/python.vim	/^function! ale#python#PipenvPresent(buffer) abort$/;"	f
ale#references#ClearLSPData	plugged/ale/autoload/ale/references.vim	/^function! ale#references#ClearLSPData() abort$/;"	f
ale#references#Find	plugged/ale/autoload/ale/references.vim	/^function! ale#references#Find(...) abort$/;"	f
ale#references#GetMap	plugged/ale/autoload/ale/references.vim	/^function! ale#references#GetMap() abort$/;"	f
ale#references#HandleLSPResponse	plugged/ale/autoload/ale/references.vim	/^function! ale#references#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#references#HandleTSServerResponse	plugged/ale/autoload/ale/references.vim	/^function! ale#references#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#references#SetMap	plugged/ale/autoload/ale/references.vim	/^function! ale#references#SetMap(map) abort$/;"	f
ale#rename#ClearLSPData	plugged/ale/autoload/ale/rename.vim	/^function! ale#rename#ClearLSPData() abort$/;"	f
ale#rename#Execute	plugged/ale/autoload/ale/rename.vim	/^function! ale#rename#Execute() abort$/;"	f
ale#rename#GetMap	plugged/ale/autoload/ale/rename.vim	/^function! ale#rename#GetMap() abort$/;"	f
ale#rename#HandleLSPResponse	plugged/ale/autoload/ale/rename.vim	/^function! ale#rename#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#rename#HandleTSServerResponse	plugged/ale/autoload/ale/rename.vim	/^function! ale#rename#HandleTSServerResponse(conn_id, response) abort$/;"	f
ale#rename#SetMap	plugged/ale/autoload/ale/rename.vim	/^function! ale#rename#SetMap(map) abort$/;"	f
ale#ruby#EscapeExecutable	plugged/ale/autoload/ale/ruby.vim	/^function! ale#ruby#EscapeExecutable(executable, bundle_exec) abort$/;"	f
ale#ruby#FindProjectRoot	plugged/ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindProjectRoot(buffer) abort$/;"	f
ale#ruby#FindRailsRoot	plugged/ale/autoload/ale/ruby.vim	/^function! ale#ruby#FindRailsRoot(buffer) abort$/;"	f
ale#ruby#HandleRubocopOutput	plugged/ale/autoload/ale/ruby.vim	/^function! ale#ruby#HandleRubocopOutput(buffer, lines) abort$/;"	f
ale#semver#GTE	plugged/ale/autoload/ale/semver.vim	/^function! ale#semver#GTE(lhs, rhs) abort$/;"	f
ale#semver#ParseVersion	plugged/ale/autoload/ale/semver.vim	/^function! ale#semver#ParseVersion(version_lines) abort$/;"	f
ale#semver#ResetVersionCache	plugged/ale/autoload/ale/semver.vim	/^function! ale#semver#ResetVersionCache() abort$/;"	f
ale#semver#RunWithVersionCheck	plugged/ale/autoload/ale/semver.vim	/^function! ale#semver#RunWithVersionCheck(buffer, executable, command, Callback) abort$/;"	f
ale#sign#Clear	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#Clear() abort$/;"	f
ale#sign#FindCurrentSigns	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#FindCurrentSigns(buffer) abort$/;"	f
ale#sign#GetSignCommands	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignCommands(buffer, was_sign_set, sign_map) abort$/;"	f
ale#sign#GetSignName	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#GetSignName(sublist) abort$/;"	f
ale#sign#ParsePattern	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#ParsePattern() abort$/;"	f
ale#sign#ParseSigns	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#ParseSigns(line_list) abort$/;"	f
ale#sign#ReadSigns	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#ReadSigns(buffer) abort$/;"	f
ale#sign#SetSigns	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#SetSigns(buffer, loclist) abort$/;"	f
ale#sign#SetUpDefaultColumnWithoutErrorsHighlight	plugged/ale/autoload/ale/sign.vim	/^function! ale#sign#SetUpDefaultColumnWithoutErrorsHighlight() abort$/;"	f
ale#socket#Close	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#Close(channel_id) abort$/;"	f
ale#socket#GetAddress	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#GetAddress(channel_id) abort$/;"	f
ale#socket#IsOpen	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#IsOpen(channel_id) abort$/;"	f
ale#socket#Open	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#Open(address, options) abort$/;"	f
ale#socket#Send	plugged/ale/autoload/ale/socket.vim	/^function! ale#socket#Send(channel_id, data) abort$/;"	f
ale#statusline#Count	plugged/ale/autoload/ale/statusline.vim	/^function! ale#statusline#Count(buffer) abort$/;"	f
ale#statusline#FirstProblem	plugged/ale/autoload/ale/statusline.vim	/^function! ale#statusline#FirstProblem(buffer, type) abort$/;"	f
ale#statusline#Update	plugged/ale/autoload/ale/statusline.vim	/^function! ale#statusline#Update(buffer, loclist) abort$/;"	f
ale#swift#FindProjectRoot	plugged/ale/autoload/ale/swift.vim	/^function! ale#swift#FindProjectRoot(buffer) abort$/;"	f
ale#symbol#ClearLSPData	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#ClearLSPData() abort$/;"	f
ale#symbol#GetMap	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#GetMap() abort$/;"	f
ale#symbol#HandleLSPResponse	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#HandleLSPResponse(conn_id, response) abort$/;"	f
ale#symbol#Search	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#Search(args) abort$/;"	f
ale#symbol#SetMap	plugged/ale/autoload/ale/symbol.vim	/^function! ale#symbol#SetMap(map) abort$/;"	f
ale#test#FlushJobs	plugged/ale/autoload/ale/test.vim	/^function! ale#test#FlushJobs() abort$/;"	f
ale#test#GetLoclistWithoutModule	plugged/ale/autoload/ale/test.vim	/^function! ale#test#GetLoclistWithoutModule() abort$/;"	f
ale#test#GetPreviewWindowText	plugged/ale/autoload/ale/test.vim	/^function! ale#test#GetPreviewWindowText() abort$/;"	f
ale#test#GetQflistWithoutModule	plugged/ale/autoload/ale/test.vim	/^function! ale#test#GetQflistWithoutModule() abort$/;"	f
ale#test#RestoreDirectory	plugged/ale/autoload/ale/test.vim	/^function! ale#test#RestoreDirectory() abort$/;"	f
ale#test#SetDirectory	plugged/ale/autoload/ale/test.vim	/^function! ale#test#SetDirectory(docker_path) abort$/;"	f
ale#test#SetFilename	plugged/ale/autoload/ale/test.vim	/^function! ale#test#SetFilename(path) abort$/;"	f
ale#test#WaitForJobs	plugged/ale/autoload/ale/test.vim	/^function! ale#test#WaitForJobs(deadline) abort$/;"	f
ale#toggle#Disable	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Disable() abort$/;"	f
ale#toggle#DisableBuffer	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#DisableBuffer(buffer) abort$/;"	f
ale#toggle#Enable	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Enable() abort$/;"	f
ale#toggle#EnableBuffer	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#EnableBuffer(buffer) abort$/;"	f
ale#toggle#Reset	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Reset() abort$/;"	f
ale#toggle#ResetBuffer	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#ResetBuffer(buffer) abort$/;"	f
ale#toggle#Toggle	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#Toggle() abort$/;"	f
ale#toggle#ToggleBuffer	plugged/ale/autoload/ale/toggle.vim	/^function! ale#toggle#ToggleBuffer(buffer) abort$/;"	f
ale#uri#Decode	plugged/ale/autoload/ale/uri.vim	/^function! ale#uri#Decode(value) abort$/;"	f
ale#uri#Encode	plugged/ale/autoload/ale/uri.vim	/^function! ale#uri#Encode(value) abort$/;"	f
ale#util#BinarySearch	plugged/ale/autoload/ale/util.vim	/^function! ale#util#BinarySearch(loclist, buffer, line, column) abort$/;"	f
ale#util#Col	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Col(str, chr) abort$/;"	f
ale#util#EscapePCRE	plugged/ale/autoload/ale/util.vim	/^function! ale#util#EscapePCRE(unsafe_string) abort$/;"	f
ale#util#EscapeVim	plugged/ale/autoload/ale/util.vim	/^function! ale#util#EscapeVim(unsafe_string) abort$/;"	f
ale#util#Execute	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Execute(expr) abort$/;"	f
ale#util#FeedKeys	plugged/ale/autoload/ale/util.vim	/^function! ale#util#FeedKeys(...) abort$/;"	f
ale#util#FindItemAtCursor	plugged/ale/autoload/ale/util.vim	/^function! ale#util#FindItemAtCursor(buffer) abort$/;"	f
ale#util#FunctionArgCount	plugged/ale/autoload/ale/util.vim	/^function! ale#util#FunctionArgCount(function) abort$/;"	f
ale#util#FuzzyJSONDecode	plugged/ale/autoload/ale/util.vim	/^function! ale#util#FuzzyJSONDecode(data, default) abort$/;"	f
ale#util#GetFunction	plugged/ale/autoload/ale/util.vim	/^function! ale#util#GetFunction(string_or_ref) abort$/;"	f
ale#util#GetItemPriority	plugged/ale/autoload/ale/util.vim	/^function! ale#util#GetItemPriority(item) abort$/;"	f
ale#util#GetLineCount	plugged/ale/autoload/ale/util.vim	/^function! ale#util#GetLineCount(buffer) abort$/;"	f
ale#util#GetMatches	plugged/ale/autoload/ale/util.vim	/^function! ale#util#GetMatches(lines, patterns) abort$/;"	f
ale#util#HasBuflineApi	plugged/ale/autoload/ale/util.vim	/^function! ale#util#HasBuflineApi() abort$/;"	f
ale#util#InSandbox	plugged/ale/autoload/ale/util.vim	/^function! ale#util#InSandbox() abort$/;"	f
ale#util#Input	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Input(message, value) abort$/;"	f
ale#util#JoinNeovimOutput	plugged/ale/autoload/ale/util.vim	/^function! ale#util#JoinNeovimOutput(job, last_line, data, mode, callback) abort$/;"	f
ale#util#LocItemCompare	plugged/ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompare(left, right) abort$/;"	f
ale#util#LocItemCompareWithText	plugged/ale/autoload/ale/util.vim	/^function! ale#util#LocItemCompareWithText(left, right) abort$/;"	f
ale#util#Mode	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Mode(...) abort$/;"	f
ale#util#Open	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Open(filename, line, column, options) abort$/;"	f
ale#util#SetBufferContents	plugged/ale/autoload/ale/util.vim	/^function! ale#util#SetBufferContents(buffer, lines) abort$/;"	f
ale#util#ShowMessage	plugged/ale/autoload/ale/util.vim	/^function! ale#util#ShowMessage(string, ...) abort$/;"	f
ale#util#StartPartialTimer	plugged/ale/autoload/ale/util.vim	/^function! ale#util#StartPartialTimer(delay, callback, args) abort$/;"	f
ale#util#StopPartialTimer	plugged/ale/autoload/ale/util.vim	/^function! ale#util#StopPartialTimer(timer_id) abort$/;"	f
ale#util#Tempname	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Tempname() abort$/;"	f
ale#util#Writefile	plugged/ale/autoload/ale/util.vim	/^function! ale#util#Writefile(buffer, lines, filename) abort$/;"	f
ale#virtualtext#Clear	plugged/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#Clear() abort$/;"	f
ale#virtualtext#ShowCursorWarning	plugged/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarning(...) abort$/;"	f
ale#virtualtext#ShowCursorWarningWithDelay	plugged/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowCursorWarningWithDelay() abort$/;"	f
ale#virtualtext#ShowMessage	plugged/ale/autoload/ale/virtualtext.vim	/^function! ale#virtualtext#ShowMessage(message, hl_group) abort$/;"	f
ale_linters#ada#gcc#GetCommand	plugged/ale/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#ada#gcc#Handle	plugged/ale/ale_linters/ada/gcc.vim	/^function! ale_linters#ada#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#ansible#ansible_lint#GetExecutable	plugged/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#GetExecutable(buffer) abort$/;"	f
ale_linters#ansible#ansible_lint#Handle	plugged/ale/ale_linters/ansible/ansible_lint.vim	/^function! ale_linters#ansible#ansible_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#apiblueprint#drafter#HandleErrors	plugged/ale/ale_linters/apiblueprint/drafter.vim	/^function! ale_linters#apiblueprint#drafter#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#asm#gcc#GetCommand	plugged/ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#asm#gcc#Handle	plugged/ale/ale_linters/asm/gcc.vim	/^function! ale_linters#asm#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#awk#gawk#GetCommand	plugged/ale/ale_linters/awk/gawk.vim	/^function! ale_linters#awk#gawk#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#GetCommand	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#GetCommand(buffer) abort$/;"	f
ale_linters#bib#bibclean#Handle	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#Handle(buffer, lines) abort$/;"	f
ale_linters#bib#bibclean#get_type	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#get_type(str) abort$/;"	f
ale_linters#bib#bibclean#match_entry	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_entry(line) abort$/;"	f
ale_linters#bib#bibclean#match_msg	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_msg(line) abort$/;"	f
ale_linters#bib#bibclean#match_value	plugged/ale/ale_linters/bib/bibclean.vim	/^function! ale_linters#bib#bibclean#match_value(line) abort$/;"	f
ale_linters#c#cc#GetCommand	plugged/ale/ale_linters/c/cc.vim	/^function! ale_linters#c#cc#GetCommand(buffer, output) abort$/;"	f
ale_linters#c#cc#GetExecutable	plugged/ale/ale_linters/c/cc.vim	/^function! ale_linters#c#cc#GetExecutable(buffer) abort$/;"	f
ale_linters#c#clangd#GetCommand	plugged/ale/ale_linters/c/clangd.vim	/^function! ale_linters#c#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#c#clangtidy#GetCommand	plugged/ale/ale_linters/c/clangtidy.vim	/^function! ale_linters#c#clangtidy#GetCommand(buffer, output) abort$/;"	f
ale_linters#c#cppcheck#GetCommand	plugged/ale/ale_linters/c/cppcheck.vim	/^function! ale_linters#c#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#c#cquery#GetInitializationOptions	plugged/ale/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#c#cquery#GetProjectRoot	plugged/ale/ale_linters/c/cquery.vim	/^function! ale_linters#c#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#c#flawfinder#GetCommand	plugged/ale/ale_linters/c/flawfinder.vim	/^function! ale_linters#c#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#chef#cookstyle#GetCommand	plugged/ale/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#GetCommand(buffer) abort$/;"	f
ale_linters#chef#cookstyle#Handle	plugged/ale/ale_linters/chef/cookstyle.vim	/^function! ale_linters#chef#cookstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#chef#foodcritic#GetCommand	plugged/ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#GetCommand(buffer) abort$/;"	f
ale_linters#chef#foodcritic#Handle	plugged/ale/ale_linters/chef/foodcritic.vim	/^function! ale_linters#chef#foodcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#clojure#clj_kondo#HandleCljKondoFormat	plugged/ale/ale_linters/clojure/clj_kondo.vim	/^function! ale_linters#clojure#clj_kondo#HandleCljKondoFormat(buffer, lines) abort$/;"	f
ale_linters#clojure#joker#HandleJokerFormat	plugged/ale/ale_linters/clojure/joker.vim	/^function! ale_linters#clojure#joker#HandleJokerFormat(buffer, lines) abort$/;"	f
ale_linters#cloudformation#cfn_python_lint#Handle	plugged/ale/ale_linters/cloudformation/cfn_python_lint.vim	/^function! ale_linters#cloudformation#cfn_python_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#cmake#cmakelint#Command	plugged/ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Command(buffer) abort$/;"	f
ale_linters#cmake#cmakelint#Executable	plugged/ale/ale_linters/cmake/cmakelint.vim	/^function! ale_linters#cmake#cmakelint#Executable(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetCommand	plugged/ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffee#GetExecutable	plugged/ale/ale_linters/coffee/coffee.vim	/^function! ale_linters#coffee#coffee#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetCommand	plugged/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetCommand(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#GetExecutable	plugged/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#GetExecutable(buffer) abort$/;"	f
ale_linters#coffee#coffeelint#Handle	plugged/ale/ale_linters/coffee/coffeelint.vim	/^function! ale_linters#coffee#coffeelint#Handle(buffer, lines) abort$/;"	f
ale_linters#cpp#cc#GetCommand	plugged/ale/ale_linters/cpp/cc.vim	/^function! ale_linters#cpp#cc#GetCommand(buffer, output) abort$/;"	f
ale_linters#cpp#cc#GetExecutable	plugged/ale/ale_linters/cpp/cc.vim	/^function! ale_linters#cpp#cc#GetExecutable(buffer) abort$/;"	f
ale_linters#cpp#clangcheck#GetCommand	plugged/ale/ale_linters/cpp/clangcheck.vim	/^function! ale_linters#cpp#clangcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangd#GetCommand	plugged/ale/ale_linters/cpp/clangd.vim	/^function! ale_linters#cpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#clangtidy#GetCommand	plugged/ale/ale_linters/cpp/clangtidy.vim	/^function! ale_linters#cpp#clangtidy#GetCommand(buffer, output) abort$/;"	f
ale_linters#cpp#clazy#GetCommand	plugged/ale/ale_linters/cpp/clazy.vim	/^function! ale_linters#cpp#clazy#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cppcheck#GetCommand	plugged/ale/ale_linters/cpp/cppcheck.vim	/^function! ale_linters#cpp#cppcheck#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cpplint#GetCommand	plugged/ale/ale_linters/cpp/cpplint.vim	/^function! ale_linters#cpp#cpplint#GetCommand(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetInitializationOptions	plugged/ale/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#cpp#cquery#GetProjectRoot	plugged/ale/ale_linters/cpp/cquery.vim	/^function! ale_linters#cpp#cquery#GetProjectRoot(buffer) abort$/;"	f
ale_linters#cpp#flawfinder#GetCommand	plugged/ale/ale_linters/cpp/flawfinder.vim	/^function! ale_linters#cpp#flawfinder#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#ameba#GetCommand	plugged/ale/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#ameba#HandleAmebaOutput	plugged/ale/ale_linters/crystal/ameba.vim	/^function! ale_linters#crystal#ameba#HandleAmebaOutput(buffer, lines) abort$/;"	f
ale_linters#crystal#crystal#GetCommand	plugged/ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#GetCommand(buffer) abort$/;"	f
ale_linters#crystal#crystal#Handle	plugged/ale/ale_linters/crystal/crystal.vim	/^function! ale_linters#crystal#crystal#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#csc#GetCommand	plugged/ale/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#csc#Handle	plugged/ale/ale_linters/cs/csc.vim	/^function! ale_linters#cs#csc#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcs#GetCommand	plugged/ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcs#Handle	plugged/ale/ale_linters/cs/mcs.vim	/^function! ale_linters#cs#mcs#Handle(buffer, lines) abort$/;"	f
ale_linters#cs#mcsc#GetCommand	plugged/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#GetCommand(buffer) abort$/;"	f
ale_linters#cs#mcsc#Handle	plugged/ale/ale_linters/cs/mcsc.vim	/^function! ale_linters#cs#mcsc#Handle(buffer, lines) abort$/;"	f
ale_linters#css#csslint#GetCommand	plugged/ale/ale_linters/css/csslint.vim	/^function! ale_linters#css#csslint#GetCommand(buffer) abort$/;"	f
ale_linters#css#stylelint#GetCommand	plugged/ale/ale_linters/css/stylelint.vim	/^function! ale_linters#css#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#GetCommand	plugged/ale/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#GetCommand(buffer) abort$/;"	f
ale_linters#cucumber#cucumber#Handle	plugged/ale/ale_linters/cucumber/cucumber.vim	/^function! ale_linters#cucumber#cucumber#Handle(buffer, lines) abort$/;"	f
ale_linters#cuda#nvcc#GetCommand	plugged/ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#GetCommand(buffer) abort$/;"	f
ale_linters#cuda#nvcc#HandleNVCCFormat	plugged/ale/ale_linters/cuda/nvcc.vim	/^function! ale_linters#cuda#nvcc#HandleNVCCFormat(buffer, lines) abort$/;"	f
ale_linters#cypher#cypher_lint#Handle	plugged/ale/ale_linters/cypher/cypher_lint.vim	/^function! ale_linters#cypher#cypher_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dls#FindProjectRoot	plugged/ale/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#d#dls#GetExecutable	plugged/ale/ale_linters/d/dls.vim	/^function! ale_linters#d#dls#GetExecutable(buffer) abort$/;"	f
ale_linters#d#dmd#DMDCommand	plugged/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#DMDCommand(buffer, dub_output, meta) abort$/;"	f
ale_linters#d#dmd#GetDUBCommand	plugged/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#GetDUBCommand(buffer) abort$/;"	f
ale_linters#d#dmd#Handle	plugged/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#Handle(buffer, lines) abort$/;"	f
ale_linters#d#dmd#RunDUBCommand	plugged/ale/ale_linters/d/dmd.vim	/^function! ale_linters#d#dmd#RunDUBCommand(buffer) abort$/;"	f
ale_linters#dafny#dafny#Handle	plugged/ale/ale_linters/dafny/dafny.vim	/^function! ale_linters#dafny#dafny#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#dartanalyzer#GetCommand	plugged/ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#dart#dartanalyzer#Handle	plugged/ale/ale_linters/dart/dartanalyzer.vim	/^function! ale_linters#dart#dartanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#dart#language_server#GetProjectRoot	plugged/ale/ale_linters/dart/language_server.vim	/^function! ale_linters#dart#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetCommand	plugged/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#GetType	plugged/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#GetType(type) abort$/;"	f
ale_linters#dockerfile#dockerfile_lint#Handle	plugged/ale/ale_linters/dockerfile/dockerfile_lint.vim	/^function! ale_linters#dockerfile#dockerfile_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#dockerfile#hadolint#GetCommand	plugged/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetCommand(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#GetExecutable	plugged/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#GetExecutable(buffer) abort$/;"	f
ale_linters#dockerfile#hadolint#Handle	plugged/ale/ale_linters/dockerfile/hadolint.vim	/^function! ale_linters#dockerfile#hadolint#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#credo#GetCommand	plugged/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#credo#GetMode	plugged/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#GetMode() abort$/;"	f
ale_linters#elixir#credo#Handle	plugged/ale/ale_linters/elixir/credo.vim	/^function! ale_linters#elixir#credo#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dialyxir#GetCommand	plugged/ale/ale_linters/elixir/dialyxir.vim	/^function! ale_linters#elixir#dialyxir#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#dialyxir#Handle	plugged/ale/ale_linters/elixir/dialyxir.vim	/^function! ale_linters#elixir#dialyxir#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#dogma#GetCommand	plugged/ale/ale_linters/elixir/dogma.vim	/^function! ale_linters#elixir#dogma#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#dogma#Handle	plugged/ale/ale_linters/elixir/dogma.vim	/^function! ale_linters#elixir#dogma#Handle(buffer, lines) abort$/;"	f
ale_linters#elixir#elixir_ls#GetExecutable	plugged/ale/ale_linters/elixir/elixir_ls.vim	/^function! ale_linters#elixir#elixir_ls#GetExecutable(buffer) abort$/;"	f
ale_linters#elixir#mix#GetCommand	plugged/ale/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#GetCommand(buffer) abort$/;"	f
ale_linters#elixir#mix#Handle	plugged/ale/ale_linters/elixir/mix.vim	/^function! ale_linters#elixir#mix#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#FileIsBuffer	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#FileIsBuffer(path) abort$/;"	f
ale_linters#elm#make#GetCommand	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetCommand(buffer) abort$/;"	f
ale_linters#elm#make#GetExecutable	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetExecutable(buffer) abort$/;"	f
ale_linters#elm#make#GetPackageFile	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetPackageFile(buffer) abort$/;"	f
ale_linters#elm#make#GetRootDir	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#GetRootDir(buffer) abort$/;"	f
ale_linters#elm#make#Handle	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#Handle(buffer, lines) abort$/;"	f
ale_linters#elm#make#HandleElm018Line	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm018Line(line, output) abort$/;"	f
ale_linters#elm#make#HandleElm019Line	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#HandleElm019Line(line, output) abort$/;"	f
ale_linters#elm#make#IsTest	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsTest(buffer) abort$/;"	f
ale_linters#elm#make#IsVersionGte19	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#IsVersionGte19(buffer) abort$/;"	f
ale_linters#elm#make#ParseMessage	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessage(message) abort$/;"	f
ale_linters#elm#make#ParseMessageItem	plugged/ale/ale_linters/elm/make.vim	/^function! ale_linters#elm#make#ParseMessageItem(item) abort$/;"	f
ale_linters#erlang#dialyzer#FindPlt	plugged/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#FindPlt(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetCommand	plugged/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetExecutable	plugged/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetPlt	plugged/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetPlt(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#GetRebar3Profile	plugged/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#GetRebar3Profile(buffer) abort$/;"	f
ale_linters#erlang#dialyzer#Handle	plugged/ale/ale_linters/erlang/dialyzer.vim	/^function! ale_linters#erlang#dialyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#elvis#Handle	plugged/ale/ale_linters/erlang/elvis.vim	/^function! ale_linters#erlang#elvis#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#erlc#GetCommand	plugged/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#GetCommand(buffer) abort$/;"	f
ale_linters#erlang#erlc#Handle	plugged/ale/ale_linters/erlang/erlc.vim	/^function! ale_linters#erlang#erlc#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#GetCommand	plugged/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#erlang#syntaxerl#Handle	plugged/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#Handle(buffer, lines) abort$/;"	f
ale_linters#erlang#syntaxerl#RunHelpCommand	plugged/ale/ale_linters/erlang/syntaxerl.vim	/^function! ale_linters#erlang#syntaxerl#RunHelpCommand(buffer) abort$/;"	f
ale_linters#eruby#erb#GetCommand	plugged/ale/ale_linters/eruby/erb.vim	/^function! ale_linters#eruby#erb#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#erubi#GetCommand	plugged/ale/ale_linters/eruby/erubi.vim	/^function! ale_linters#eruby#erubi#GetCommand(buffer, output, meta) abort$/;"	f
ale_linters#eruby#erubis#GetCommand	plugged/ale/ale_linters/eruby/erubis.vim	/^function! ale_linters#eruby#erubis#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetCommand	plugged/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetCommand(buffer) abort$/;"	f
ale_linters#eruby#ruumba#GetType	plugged/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#GetType(severity) abort$/;"	f
ale_linters#eruby#ruumba#Handle	plugged/ale/ale_linters/eruby/ruumba.vim	/^function! ale_linters#eruby#ruumba#Handle(buffer, lines) abort$/;"	f
ale_linters#fish#fish#Handle	plugged/ale/ale_linters/fish/fish.vim	/^function! ale_linters#fish#fish#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#gcc#GetCommand	plugged/ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#GetCommand(buffer) abort$/;"	f
ale_linters#fortran#gcc#Handle	plugged/ale/ale_linters/fortran/gcc.vim	/^function! ale_linters#fortran#gcc#Handle(buffer, lines) abort$/;"	f
ale_linters#fortran#language_server#GetProjectRoot	plugged/ale/ale_linters/fortran/language_server.vim	/^function! ale_linters#fortran#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#GetCommand	plugged/ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#GetCommand(buffer) abort$/;"	f
ale_linters#fuse#fusionlint#Handle	plugged/ale/ale_linters/fuse/fusionlint.vim	/^function! ale_linters#fuse#fusionlint#Handle(buffer, lines) abort$/;"	f
ale_linters#gitcommit#gitlint#GetCommand	plugged/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetCommand(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#GetExecutable	plugged/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#GetExecutable(buffer) abort$/;"	f
ale_linters#gitcommit#gitlint#Handle	plugged/ale/ale_linters/gitcommit/gitlint.vim	/^function! ale_linters#gitcommit#gitlint#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslang#GetCommand	plugged/ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslang#Handle	plugged/ale/ale_linters/glsl/glslang.vim	/^function! ale_linters#glsl#glslang#Handle(buffer, lines) abort$/;"	f
ale_linters#glsl#glslls#GetCommand	plugged/ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetCommand(buffer) abort$/;"	f
ale_linters#glsl#glslls#GetProjectRoot	plugged/ale/ale_linters/glsl/glslls.vim	/^function! ale_linters#glsl#glslls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#FindProjectRoot	plugged/ale/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#bingo#GetCommand	plugged/ale/ale_linters/go/bingo.vim	/^function! ale_linters#go#bingo#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetCommand	plugged/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetCommand(buffer) abort$/;"	f
ale_linters#go#gobuild#GetMatches	plugged/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#GetMatches(lines) abort$/;"	f
ale_linters#go#gobuild#Handler	plugged/ale/ale_linters/go/gobuild.vim	/^function! ale_linters#go#gobuild#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gofmt#GetCommand	plugged/ale/ale_linters/go/gofmt.vim	/^function! ale_linters#go#gofmt#GetCommand(buffer) abort$/;"	f
ale_linters#go#golangci_lint#GetCommand	plugged/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetCommand(buffer) abort$/;"	f
ale_linters#go#golangci_lint#GetMatches	plugged/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#GetMatches(lines) abort$/;"	f
ale_linters#go#golangci_lint#Handler	plugged/ale/ale_linters/go/golangci_lint.vim	/^function! ale_linters#go#golangci_lint#Handler(buffer, lines) abort$/;"	f
ale_linters#go#golint#GetCommand	plugged/ale/ale_linters/go/golint.vim	/^function! ale_linters#go#golint#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetCommand	plugged/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetCommand(buffer) abort$/;"	f
ale_linters#go#gometalinter#GetMatches	plugged/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#GetMatches(lines) abort$/;"	f
ale_linters#go#gometalinter#Handler	plugged/ale/ale_linters/go/gometalinter.vim	/^function! ale_linters#go#gometalinter#Handler(buffer, lines) abort$/;"	f
ale_linters#go#gopls#FindProjectRoot	plugged/ale/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#go#gopls#GetCommand	plugged/ale/ale_linters/go/gopls.vim	/^function! ale_linters#go#gopls#GetCommand(buffer) abort$/;"	f
ale_linters#go#gosimple#GetCommand	plugged/ale/ale_linters/go/gosimple.vim	/^function! ale_linters#go#gosimple#GetCommand(buffer) abort$/;"	f
ale_linters#go#gotype#GetCommand	plugged/ale/ale_linters/go/gotype.vim	/^function! ale_linters#go#gotype#GetCommand(buffer) abort$/;"	f
ale_linters#go#govet#GetCommand	plugged/ale/ale_linters/go/govet.vim	/^function! ale_linters#go#govet#GetCommand(buffer) abort$/;"	f
ale_linters#go#langserver#GetCommand	plugged/ale/ale_linters/go/langserver.vim	/^function! ale_linters#go#langserver#GetCommand(buffer) abort$/;"	f
ale_linters#go#revive#GetCommand	plugged/ale/ale_linters/go/revive.vim	/^function! ale_linters#go#revive#GetCommand(buffer) abort$/;"	f
ale_linters#go#staticcheck#GetCommand	plugged/ale/ale_linters/go/staticcheck.vim	/^function! ale_linters#go#staticcheck#GetCommand(buffer) abort$/;"	f
ale_linters#graphql#gqlint#GetCommand	plugged/ale/ale_linters/graphql/gqlint.vim	/^function! ale_linters#graphql#gqlint#GetCommand(buffer) abort$/;"	f
ale_linters#hack#hack#GetExecutable	plugged/ale/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hack#GetProjectRoot	plugged/ale/ale_linters/hack/hack.vim	/^function! ale_linters#hack#hack#GetProjectRoot(buffer) abort$/;"	f
ale_linters#hack#hhast#GetExecutable	plugged/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetExecutable(buffer) abort$/;"	f
ale_linters#hack#hhast#GetInitializationOptions	plugged/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetInitializationOptions(buffer) abort$/;"	f
ale_linters#hack#hhast#GetProjectRoot	plugged/ale/ale_linters/hack/hhast.vim	/^function! ale_linters#hack#hhast#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetCommand	plugged/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetCommand(buffer) abort$/;"	f
ale_linters#haml#hamllint#GetExecutable	plugged/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#GetExecutable(buffer) abort$/;"	f
ale_linters#haml#hamllint#Handle	plugged/ale/ale_linters/haml/hamllint.vim	/^function! ale_linters#haml#hamllint#Handle(buffer, lines) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommand	plugged/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommand(buffer, version) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetCommandWithVersionCheck	plugged/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetCommandWithVersionCheck(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#GetExecutable	plugged/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#GetExecutable(buffer) abort$/;"	f
ale_linters#handlebars#embertemplatelint#Handle	plugged/ale/ale_linters/handlebars/embertemplatelint.vim	/^function! ale_linters#handlebars#embertemplatelint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#cabal_ghc#GetCommand	plugged/ale/ale_linters/haskell/cabal_ghc.vim	/^function! ale_linters#haskell#cabal_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc#GetCommand	plugged/ale/ale_linters/haskell/ghc.vim	/^function! ale_linters#haskell#ghc#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#ghc_mod#GetCommand	plugged/ale/ale_linters/haskell/ghc_mod.vim	/^function! ale_linters#haskell#ghc_mod#GetCommand (buffer) abort$/;"	f
ale_linters#haskell#hdevtools#GetCommand	plugged/ale/ale_linters/haskell/hdevtools.vim	/^function! ale_linters#haskell#hdevtools#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetCommand	plugged/ale/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hie#GetProjectRoot	plugged/ale/ale_linters/haskell/hie.vim	/^function! ale_linters#haskell#hie#GetProjectRoot(buffer) abort$/;"	f
ale_linters#haskell#hlint#GetCommand	plugged/ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#hlint#Handle	plugged/ale/ale_linters/haskell/hlint.vim	/^function! ale_linters#haskell#hlint#Handle(buffer, lines) abort$/;"	f
ale_linters#haskell#stack_build#GetCommand	plugged/ale/ale_linters/haskell/stack_build.vim	/^function! ale_linters#haskell#stack_build#GetCommand(buffer) abort$/;"	f
ale_linters#haskell#stack_ghc#GetCommand	plugged/ale/ale_linters/haskell/stack_ghc.vim	/^function! ale_linters#haskell#stack_ghc#GetCommand(buffer) abort$/;"	f
ale_linters#html#htmlhint#GetCommand	plugged/ale/ale_linters/html/htmlhint.vim	/^function! ale_linters#html#htmlhint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetCommand	plugged/ale/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#html#stylelint#GetExecutable	plugged/ale/ale_linters/html/stylelint.vim	/^function! ale_linters#html#stylelint#GetExecutable(buffer) abort$/;"	f
ale_linters#html#tidy#GetCommand	plugged/ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#GetCommand(buffer) abort$/;"	f
ale_linters#html#tidy#Handle	plugged/ale/ale_linters/html/tidy.vim	/^function! ale_linters#html#tidy#Handle(buffer, lines) abort$/;"	f
ale_linters#idris#idris#GetCommand	plugged/ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#GetCommand(buffer) abort$/;"	f
ale_linters#idris#idris#Handle	plugged/ale/ale_linters/idris/idris.vim	/^function! ale_linters#idris#idris#Handle(buffer, lines) abort$/;"	f
ale_linters#ink#ls#FindProjectRoot	plugged/ale/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#ink#ls#GetCommand	plugged/ale/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#GetCommand(buffer) abort$/;"	f
ale_linters#ink#ls#GetExecutable	plugged/ale/ale_linters/ink/ls.vim	/^function! ale_linters#ink#ls#GetExecutable(buffer) abort$/;"	f
ale_linters#ispc#ispc#GetCommand	plugged/ale/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#GetCommand(buffer) abort$/;"	f
ale_linters#ispc#ispc#Handle	plugged/ale/ale_linters/ispc/ispc.vim	/^function! ale_linters#ispc#ispc#Handle(buffer, lines) abort$/;"	f
ale_linters#java#checkstyle#GetCommand	plugged/ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#GetCommand(buffer) abort$/;"	f
ale_linters#java#checkstyle#Handle	plugged/ale/ale_linters/java/checkstyle.vim	/^function! ale_linters#java#checkstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#java#eclipselsp#Command	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Command(buffer, version) abort$/;"	f
ale_linters#java#eclipselsp#CommandWithVersion	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#CommandWithVersion(buffer, version_lines, meta) abort$/;"	f
ale_linters#java#eclipselsp#ConfigurationPath	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#ConfigurationPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#Executable	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Executable(buffer) abort$/;"	f
ale_linters#java#eclipselsp#JarPath	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#JarPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#Javaagent	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#Javaagent(buffer) abort$/;"	f
ale_linters#java#eclipselsp#RunWithVersionCheck	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#java#eclipselsp#TargetPath	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#TargetPath(buffer) abort$/;"	f
ale_linters#java#eclipselsp#VersionCheck	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#VersionCheck(version_lines) abort$/;"	f
ale_linters#java#eclipselsp#WorkspacePath	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! ale_linters#java#eclipselsp#WorkspacePath(buffer) abort$/;"	f
ale_linters#java#javac#GetCommand	plugged/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#java#javac#Handle	plugged/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#Handle(buffer, lines) abort$/;"	f
ale_linters#java#javac#RunWithImportPaths	plugged/ale/ale_linters/java/javac.vim	/^function! ale_linters#java#javac#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#java#javalsp#Command	plugged/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Command(buffer) abort$/;"	f
ale_linters#java#javalsp#Config	plugged/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Config(buffer) abort$/;"	f
ale_linters#java#javalsp#Executable	plugged/ale/ale_linters/java/javalsp.vim	/^function! ale_linters#java#javalsp#Executable(buffer) abort$/;"	f
ale_linters#java#pmd#GetCommand	plugged/ale/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#GetCommand(buffer) abort$/;"	f
ale_linters#java#pmd#Handle	plugged/ale/ale_linters/java/pmd.vim	/^function! ale_linters#java#pmd#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow#GetCommand	plugged/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetCommand(buffer, version) abort$/;"	f
ale_linters#javascript#flow#GetExecutable	plugged/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#flow#Handle	plugged/ale/ale_linters/javascript/flow.vim	/^function! ale_linters#javascript#flow#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#flow_ls#FindProjectRoot	plugged/ale/ale_linters/javascript/flow_ls.vim	/^function! ale_linters#javascript#flow_ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#javascript#jscs#GetCommand	plugged/ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#jscs#Handle	plugged/ale/ale_linters/javascript/jscs.vim	/^function! ale_linters#javascript#jscs#Handle(buffer, lines) abort$/;"	f
ale_linters#javascript#jshint#GetCommand	plugged/ale/ale_linters/javascript/jshint.vim	/^function! ale_linters#javascript#jshint#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetCommand	plugged/ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#standard#GetExecutable	plugged/ale/ale_linters/javascript/standard.vim	/^function! ale_linters#javascript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#javascript#xo#GetCommand	plugged/ale/ale_linters/javascript/xo.vim	/^function! ale_linters#javascript#xo#GetCommand(buffer) abort$/;"	f
ale_linters#javascript#xo#GetExecutable	plugged/ale/ale_linters/javascript/xo.vim	/^function! ale_linters#javascript#xo#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jsonlint#GetCommand	plugged/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetCommand(buffer) abort$/;"	f
ale_linters#json#jsonlint#GetExecutable	plugged/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#GetExecutable(buffer) abort$/;"	f
ale_linters#json#jsonlint#Handle	plugged/ale/ale_linters/json/jsonlint.vim	/^function! ale_linters#json#jsonlint#Handle(buffer, lines) abort$/;"	f
ale_linters#julia#languageserver#GetCommand	plugged/ale/ale_linters/julia/languageserver.vim	/^function! ale_linters#julia#languageserver#GetCommand(buffer) abort$/;"	f
ale_linters#kotlin#kotlinc#GetCommand	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#GetCommand(buffer, import_paths, meta) abort$/;"	f
ale_linters#kotlin#kotlinc#Handle	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#Handle(buffer, lines) abort$/;"	f
ale_linters#kotlin#kotlinc#RunWithImportPaths	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^function! ale_linters#kotlin#kotlinc#RunWithImportPaths(buffer) abort$/;"	f
ale_linters#kotlin#languageserver#GetProjectRoot	plugged/ale/ale_linters/kotlin/languageserver.vim	/^function! ale_linters#kotlin#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#less#lessc#GetCommand	plugged/ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#GetCommand(buffer) abort$/;"	f
ale_linters#less#lessc#Handle	plugged/ale/ale_linters/less/lessc.vim	/^function! ale_linters#less#lessc#Handle(buffer, lines) abort$/;"	f
ale_linters#less#stylelint#GetCommand	plugged/ale/ale_linters/less/stylelint.vim	/^function! ale_linters#less#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#llvm#llc#HandleErrors	plugged/ale/ale_linters/llvm/llc.vim	/^function! ale_linters#llvm#llc#HandleErrors(buffer, lines) abort$/;"	f
ale_linters#lua#luac#Handle	plugged/ale/ale_linters/lua/luac.vim	/^function! ale_linters#lua#luac#Handle(buffer, lines) abort$/;"	f
ale_linters#lua#luacheck#GetCommand	plugged/ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#GetCommand(buffer) abort$/;"	f
ale_linters#lua#luacheck#Handle	plugged/ale/ale_linters/lua/luacheck.vim	/^function! ale_linters#lua#luacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#make#checkmake#Handle	plugged/ale/ale_linters/make/checkmake.vim	/^function! ale_linters#make#checkmake#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#markdownlint#GetCommand	plugged/ale/ale_linters/markdown/markdownlint.vim	/^function! ale_linters#markdown#markdownlint#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#mdl#GetCommand	plugged/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#mdl#GetExecutable	plugged/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#GetExecutable(buffer) abort$/;"	f
ale_linters#markdown#mdl#Handle	plugged/ale/ale_linters/markdown/mdl.vim	/^function! ale_linters#markdown#mdl#Handle(buffer, lines) abort$/;"	f
ale_linters#markdown#remark_lint#GetCommand	plugged/ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#GetCommand(buffer) abort$/;"	f
ale_linters#markdown#remark_lint#Handle	plugged/ale/ale_linters/markdown/remark_lint.vim	/^function! ale_linters#markdown#remark_lint#Handle(buffer, lines) abort$/;"	f
ale_linters#matlab#mlint#Handle	plugged/ale/ale_linters/matlab/mlint.vim	/^function! ale_linters#matlab#mlint#Handle(buffer, lines) abort$/;"	f
ale_linters#mercury#mmc#GetCommand	plugged/ale/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#GetCommand(buffer) abort$/;"	f
ale_linters#mercury#mmc#Handle	plugged/ale/ale_linters/mercury/mmc.vim	/^function! ale_linters#mercury#mmc#Handle(buffer, lines) abort$/;"	f
ale_linters#nasm#nasm#GetCommand	plugged/ale/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#GetCommand(buffer) abort$/;"	f
ale_linters#nasm#nasm#Handle	plugged/ale/ale_linters/nasm/nasm.vim	/^function! ale_linters#nasm#nasm#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimcheck#GetCommand	plugged/ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimcheck#Handle	plugged/ale/ale_linters/nim/nimcheck.vim	/^function! ale_linters#nim#nimcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#nim#nimlsp#GetCommand	plugged/ale/ale_linters/nim/nimlsp.vim	/^function! ale_linters#nim#nimlsp#GetCommand(buffer) abort$/;"	f
ale_linters#nim#nimlsp#GetProjectRoot	plugged/ale/ale_linters/nim/nimlsp.vim	/^function! ale_linters#nim#nimlsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#nix#nix#Handle	plugged/ale/ale_linters/nix/nix.vim	/^function! ale_linters#nix#nix#Handle(buffer, lines) abort$/;"	f
ale_linters#objc#clang#GetCommand	plugged/ale/ale_linters/objc/clang.vim	/^function! ale_linters#objc#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objc#clangd#GetCommand	plugged/ale/ale_linters/objc/clangd.vim	/^function! ale_linters#objc#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clang#GetCommand	plugged/ale/ale_linters/objcpp/clang.vim	/^function! ale_linters#objcpp#clang#GetCommand(buffer) abort$/;"	f
ale_linters#objcpp#clangd#GetCommand	plugged/ale/ale_linters/objcpp/clangd.vim	/^function! ale_linters#objcpp#clangd#GetCommand(buffer) abort$/;"	f
ale_linters#ocaml#merlin#Handle	plugged/ale/ale_linters/ocaml/merlin.vim	/^function! ale_linters#ocaml#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perl#GetCommand	plugged/ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perl#Handle	plugged/ale/ale_linters/perl/perl.vim	/^function! ale_linters#perl#perl#Handle(buffer, lines) abort$/;"	f
ale_linters#perl#perlcritic#GetCommand	plugged/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetCommand(buffer) abort$/;"	f
ale_linters#perl#perlcritic#GetProfile	plugged/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#GetProfile(buffer) abort$/;"	f
ale_linters#perl#perlcritic#Handle	plugged/ale/ale_linters/perl/perlcritic.vim	/^function! ale_linters#perl#perlcritic#Handle(buffer, lines) abort$/;"	f
ale_linters#perl6#perl6#ExtractError	plugged/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#ExtractError(dict, item, type, buffer) abort$/;"	f
ale_linters#perl6#perl6#GetCommand	plugged/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetCommand(buffer) abort$/;"	f
ale_linters#perl6#perl6#GetExecutable	plugged/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#GetExecutable(buffer) abort$/;"	f
ale_linters#perl6#perl6#Handle	plugged/ale/ale_linters/perl6/perl6.vim	/^function! ale_linters#perl6#perl6#Handle(buffer, lines) abort$/;"	f
ale_linters#php#intelephense#GetInitializationOptions	plugged/ale/ale_linters/php/intelephense.vim	/^function! ale_linters#php#intelephense#GetInitializationOptions() abort$/;"	f
ale_linters#php#intelephense#GetProjectRoot	plugged/ale/ale_linters/php/intelephense.vim	/^function! ale_linters#php#intelephense#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#langserver#GetProjectRoot	plugged/ale/ale_linters/php/langserver.vim	/^function! ale_linters#php#langserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#phan#GetCommand	plugged/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetCommand(buffer) abort$/;"	f
ale_linters#php#phan#GetExecutable	plugged/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#GetExecutable(buffer) abort$/;"	f
ale_linters#php#phan#Handle	plugged/ale/ale_linters/php/phan.vim	/^function! ale_linters#php#phan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#php#Handle	plugged/ale/ale_linters/php/php.vim	/^function! ale_linters#php#php#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpcs#GetCommand	plugged/ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpcs#Handle	plugged/ale/ale_linters/php/phpcs.vim	/^function! ale_linters#php#phpcs#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpmd#GetCommand	plugged/ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#GetCommand(buffer) abort$/;"	f
ale_linters#php#phpmd#Handle	plugged/ale/ale_linters/php/phpmd.vim	/^function! ale_linters#php#phpmd#Handle(buffer, lines) abort$/;"	f
ale_linters#php#phpstan#GetCommand	plugged/ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#GetCommand(buffer, version) abort$/;"	f
ale_linters#php#phpstan#Handle	plugged/ale/ale_linters/php/phpstan.vim	/^function! ale_linters#php#phpstan#Handle(buffer, lines) abort$/;"	f
ale_linters#php#psalm#GetCommand	plugged/ale/ale_linters/php/psalm.vim	/^function! ale_linters#php#psalm#GetCommand(buffer) abort$/;"	f
ale_linters#php#psalm#GetProjectRoot	plugged/ale/ale_linters/php/psalm.vim	/^function! ale_linters#php#psalm#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#tlint#GetCommand	plugged/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetCommand(buffer) abort$/;"	f
ale_linters#php#tlint#GetExecutable	plugged/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetExecutable(buffer) abort$/;"	f
ale_linters#php#tlint#GetProjectRoot	plugged/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#GetProjectRoot(buffer) abort$/;"	f
ale_linters#php#tlint#Handle	plugged/ale/ale_linters/php/tlint.vim	/^function! ale_linters#php#tlint#Handle(buffer, lines) abort$/;"	f
ale_linters#po#msgfmt#Handle	plugged/ale/ale_linters/po/msgfmt.vim	/^function! ale_linters#po#msgfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#pony#ponyc#GetCommand	plugged/ale/ale_linters/pony/ponyc.vim	/^function! ale_linters#pony#ponyc#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetCommand	plugged/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#powershell#GetExecutable	plugged/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#powershell#Handle	plugged/ale/ale_linters/powershell/powershell.vim	/^function! ale_linters#powershell#powershell#Handle(buffer, lines) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetCommand	plugged/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetCommand(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#GetExecutable	plugged/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#GetExecutable(buffer) abort$/;"	f
ale_linters#powershell#psscriptanalyzer#Handle	plugged/ale/ale_linters/powershell/psscriptanalyzer.vim	/^function! ale_linters#powershell#psscriptanalyzer#Handle(buffer, lines) abort$/;"	f
ale_linters#prolog#swipl#GetCommand	plugged/ale/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#GetCommand(buffer) abort$/;"	f
ale_linters#prolog#swipl#Handle	plugged/ale/ale_linters/prolog/swipl.vim	/^function! ale_linters#prolog#swipl#Handle(buffer, lines) abort$/;"	f
ale_linters#proto#protoc_gen_lint#GetCommand	plugged/ale/ale_linters/proto/protoc_gen_lint.vim	/^function! ale_linters#proto#protoc_gen_lint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#GetCommand	plugged/ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#GetCommand(buffer) abort$/;"	f
ale_linters#pug#puglint#Handle	plugged/ale/ale_linters/pug/puglint.vim	/^function! ale_linters#pug#puglint#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#languageserver#GetProjectRoot	plugged/ale/ale_linters/puppet/languageserver.vim	/^function! ale_linters#puppet#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#puppet#puppet#GetCommand	plugged/ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#GetCommand(buffer) abort$/;"	f
ale_linters#puppet#puppet#Handle	plugged/ale/ale_linters/puppet/puppet.vim	/^function! ale_linters#puppet#puppet#Handle(buffer, lines) abort$/;"	f
ale_linters#puppet#puppetlint#GetCommand	plugged/ale/ale_linters/puppet/puppetlint.vim	/^function! ale_linters#puppet#puppetlint#GetCommand(buffer) abort$/;"	f
ale_linters#purescript#ls#FindProjectRoot	plugged/ale/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#purescript#ls#GetCommand	plugged/ale/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#GetCommand(buffer) abort$/;"	f
ale_linters#purescript#ls#GetExecutable	plugged/ale/ale_linters/purescript/ls.vim	/^function! ale_linters#purescript#ls#GetExecutable(buffer) abort$/;"	f
ale_linters#pyrex#cython#GetCommand	plugged/ale/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#GetCommand(buffer) abort$/;"	f
ale_linters#pyrex#cython#Handle	plugged/ale/ale_linters/pyrex/cython.vim	/^function! ale_linters#pyrex#cython#Handle(buffer, lines) abort$/;"	f
ale_linters#python#bandit#GetCommand	plugged/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetCommand(buffer) abort$/;"	f
ale_linters#python#bandit#GetExecutable	plugged/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#GetExecutable(buffer) abort$/;"	f
ale_linters#python#bandit#Handle	plugged/ale/ale_linters/python/bandit.vim	/^function! ale_linters#python#bandit#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#GetCdString	plugged/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCdString(buffer) abort$/;"	f
ale_linters#python#flake8#GetCommand	plugged/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#flake8#GetExecutable	plugged/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#GetExecutable(buffer) abort$/;"	f
ale_linters#python#flake8#Handle	plugged/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#Handle(buffer, lines) abort$/;"	f
ale_linters#python#flake8#RunWithVersionCheck	plugged/ale/ale_linters/python/flake8.vim	/^function! ale_linters#python#flake8#RunWithVersionCheck(buffer) abort$/;"	f
ale_linters#python#jedils#GetCommand	plugged/ale/ale_linters/python/jedils.vim	/^function! ale_linters#python#jedils#GetCommand(buffer) abort$/;"	f
ale_linters#python#jedils#GetExecutable	plugged/ale/ale_linters/python/jedils.vim	/^function! ale_linters#python#jedils#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#GetCommand	plugged/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetCommand(buffer) abort$/;"	f
ale_linters#python#mypy#GetExecutable	plugged/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#GetExecutable(buffer) abort$/;"	f
ale_linters#python#mypy#Handle	plugged/ale/ale_linters/python/mypy.vim	/^function! ale_linters#python#mypy#Handle(buffer, lines) abort$/;"	f
ale_linters#python#prospector#GetCommand	plugged/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetCommand(buffer) abort$/;"	f
ale_linters#python#prospector#GetExecutable	plugged/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#GetExecutable(buffer) abort$/;"	f
ale_linters#python#prospector#Handle	plugged/ale/ale_linters/python/prospector.vim	/^function! ale_linters#python#prospector#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pycodestyle#GetCommand	plugged/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pycodestyle#GetExecutable	plugged/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pycodestyle#Handle	plugged/ale/ale_linters/python/pycodestyle.vim	/^function! ale_linters#python#pycodestyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pydocstyle#GetCommand	plugged/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetCommand(buffer) abort$/;"	f
ale_linters#python#pydocstyle#GetExecutable	plugged/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pydocstyle#Handle	plugged/ale/ale_linters/python/pydocstyle.vim	/^function! ale_linters#python#pydocstyle#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyflakes#GetCommand	plugged/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyflakes#GetExecutable	plugged/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyflakes#Handle	plugged/ale/ale_linters/python/pyflakes.vim	/^function! ale_linters#python#pyflakes#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylama#GetCommand	plugged/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetCommand(buffer) abort$/;"	f
ale_linters#python#pylama#GetExecutable	plugged/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylama#Handle	plugged/ale/ale_linters/python/pylama.vim	/^function! ale_linters#python#pylama#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pylint#GetCommand	plugged/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetCommand(buffer, version) abort$/;"	f
ale_linters#python#pylint#GetExecutable	plugged/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pylint#Handle	plugged/ale/ale_linters/python/pylint.vim	/^function! ale_linters#python#pylint#Handle(buffer, lines) abort$/;"	f
ale_linters#python#pyls#GetCommand	plugged/ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyls#GetExecutable	plugged/ale/ale_linters/python/pyls.vim	/^function! ale_linters#python#pyls#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyre#GetCommand	plugged/ale/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetCommand(buffer) abort$/;"	f
ale_linters#python#pyre#GetExecutable	plugged/ale/ale_linters/python/pyre.vim	/^function! ale_linters#python#pyre#GetExecutable(buffer) abort$/;"	f
ale_linters#python#pyright#GetConfig	plugged/ale/ale_linters/python/pyright.vim	/^function! ale_linters#python#pyright#GetConfig(buffer) abort$/;"	f
ale_linters#python#vulture#GetCommand	plugged/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetCommand(buffer) abort$/;"	f
ale_linters#python#vulture#GetExecutable	plugged/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#GetExecutable(buffer) abort$/;"	f
ale_linters#python#vulture#Handle	plugged/ale/ale_linters/python/vulture.vim	/^function! ale_linters#python#vulture#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmlfmt#Handle	plugged/ale/ale_linters/qml/qmlfmt.vim	/^function! ale_linters#qml#qmlfmt#Handle(buffer, lines) abort$/;"	f
ale_linters#qml#qmllint#Handle	plugged/ale/ale_linters/qml/qmllint.vim	/^function! ale_linters#qml#qmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#r#languageserver#GetCommand	plugged/ale/ale_linters/r/languageserver.vim	/^function! ale_linters#r#languageserver#GetCommand(buffer) abort$/;"	f
ale_linters#r#languageserver#GetProjectRoot	plugged/ale/ale_linters/r/languageserver.vim	/^function! ale_linters#r#languageserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#r#lintr#GetCommand	plugged/ale/ale_linters/r/lintr.vim	/^function! ale_linters#r#lintr#GetCommand(buffer) abort$/;"	f
ale_linters#racket#raco#Handle	plugged/ale/ale_linters/racket/raco.vim	/^function! ale_linters#racket#raco#Handle(buffer, lines) abort$/;"	f
ale_linters#reason#ls#FindProjectRoot	plugged/ale/ale_linters/reason/ls.vim	/^function! ale_linters#reason#ls#FindProjectRoot(buffer) abort$/;"	f
ale_linters#reason#merlin#Handle	plugged/ale/ale_linters/reason/merlin.vim	/^function! ale_linters#reason#merlin#Handle(buffer, lines) abort$/;"	f
ale_linters#rst#rstcheck#GetCommand	plugged/ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#GetCommand(buffer) abort$/;"	f
ale_linters#rst#rstcheck#Handle	plugged/ale/ale_linters/rst/rstcheck.vim	/^function! ale_linters#rst#rstcheck#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#brakeman#GetCommand	plugged/ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#brakeman#Handle	plugged/ale/ale_linters/ruby/brakeman.vim	/^function! ale_linters#ruby#brakeman#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#debride#GetCommand	plugged/ale/ale_linters/ruby/debride.vim	/^function! ale_linters#ruby#debride#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#debride#HandleOutput	plugged/ale/ale_linters/ruby/debride.vim	/^function! ale_linters#ruby#debride#HandleOutput(buffer, lines) abort$/;"	f
ale_linters#ruby#rails_best_practices#GetCommand	plugged/ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rails_best_practices#Handle	plugged/ale/ale_linters/ruby/rails_best_practices.vim	/^function! ale_linters#ruby#rails_best_practices#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#reek#GetCommand	plugged/ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#GetCommand(buffer, version) abort$/;"	f
ale_linters#ruby#reek#Handle	plugged/ale/ale_linters/ruby/reek.vim	/^function! ale_linters#ruby#reek#Handle(buffer, lines) abort$/;"	f
ale_linters#ruby#rubocop#GetCommand	plugged/ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#rubocop#GetType	plugged/ale/ale_linters/ruby/rubocop.vim	/^function! ale_linters#ruby#rubocop#GetType(severity) abort$/;"	f
ale_linters#ruby#solargraph#GetCommand	plugged/ale/ale_linters/ruby/solargraph.vim	/^function! ale_linters#ruby#solargraph#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#sorbet#GetCommand	plugged/ale/ale_linters/ruby/sorbet.vim	/^function! ale_linters#ruby#sorbet#GetCommand(buffer) abort$/;"	f
ale_linters#ruby#standardrb#GetCommand	plugged/ale/ale_linters/ruby/standardrb.vim	/^function! ale_linters#ruby#standardrb#GetCommand(buffer) abort$/;"	f
ale_linters#rust#analyzer#GetCommand	plugged/ale/ale_linters/rust/analyzer.vim	/^function! ale_linters#rust#analyzer#GetCommand(buffer) abort$/;"	f
ale_linters#rust#analyzer#GetProjectRoot	plugged/ale/ale_linters/rust/analyzer.vim	/^function! ale_linters#rust#analyzer#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#cargo#GetCargoExecutable	plugged/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCargoExecutable(bufnr) abort$/;"	f
ale_linters#rust#cargo#GetCommand	plugged/ale/ale_linters/rust/cargo.vim	/^function! ale_linters#rust#cargo#GetCommand(buffer, version) abort$/;"	f
ale_linters#rust#rls#GetCommand	plugged/ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetCommand(buffer) abort$/;"	f
ale_linters#rust#rls#GetProjectRoot	plugged/ale/ale_linters/rust/rls.vim	/^function! ale_linters#rust#rls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#rust#rustc#RustcCommand	plugged/ale/ale_linters/rust/rustc.vim	/^function! ale_linters#rust#rustc#RustcCommand(buffer) abort$/;"	f
ale_linters#sass#sasslint#GetCommand	plugged/ale/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#sass#sasslint#GetExecutable	plugged/ale/ale_linters/sass/sasslint.vim	/^function! ale_linters#sass#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scala#metals#GetCommand	plugged/ale/ale_linters/scala/metals.vim	/^function! ale_linters#scala#metals#GetCommand(buffer) abort$/;"	f
ale_linters#scala#metals#GetProjectRoot	plugged/ale/ale_linters/scala/metals.vim	/^function! ale_linters#scala#metals#GetProjectRoot(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetAddress	plugged/ale/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetAddress(buffer) abort$/;"	f
ale_linters#scala#sbtserver#GetProjectRoot	plugged/ale/ale_linters/scala/sbtserver.vim	/^function! ale_linters#scala#sbtserver#GetProjectRoot(buffer) abort$/;"	f
ale_linters#scala#scalastyle#GetCommand	plugged/ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#GetCommand(buffer) abort$/;"	f
ale_linters#scala#scalastyle#Handle	plugged/ale/ale_linters/scala/scalastyle.vim	/^function! ale_linters#scala#scalastyle#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#sasslint#GetCommand	plugged/ale/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetCommand(buffer) abort$/;"	f
ale_linters#scss#sasslint#GetExecutable	plugged/ale/ale_linters/scss/sasslint.vim	/^function! ale_linters#scss#sasslint#GetExecutable(buffer) abort$/;"	f
ale_linters#scss#scsslint#Handle	plugged/ale/ale_linters/scss/scsslint.vim	/^function! ale_linters#scss#scsslint#Handle(buffer, lines) abort$/;"	f
ale_linters#scss#stylelint#GetCommand	plugged/ale/ale_linters/scss/stylelint.vim	/^function! ale_linters#scss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sh#bashate#GetCommand	plugged/ale/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#GetCommand(buffer) abort$/;"	f
ale_linters#sh#bashate#GetExecutable	plugged/ale/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#bashate#Handle	plugged/ale/ale_linters/sh/bashate.vim	/^function! ale_linters#sh#bashate#Handle(buffer, lines) abort$/;"	f
ale_linters#sh#language_server#GetCommand	plugged/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetCommand(buffer) abort$/;"	f
ale_linters#sh#language_server#GetExecutable	plugged/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#language_server#GetProjectRoot	plugged/ale/ale_linters/sh/language_server.vim	/^function! ale_linters#sh#language_server#GetProjectRoot(buffer) abort$/;"	f
ale_linters#sh#shell#GetCommand	plugged/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetCommand(buffer) abort$/;"	f
ale_linters#sh#shell#GetExecutable	plugged/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#GetExecutable(buffer) abort$/;"	f
ale_linters#sh#shell#Handle	plugged/ale/ale_linters/sh/shell.vim	/^function! ale_linters#sh#shell#Handle(buffer, lines) abort$/;"	f
ale_linters#slim#slimlint#GetCommand	plugged/ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#GetCommand(buffer) abort$/;"	f
ale_linters#slim#slimlint#Handle	plugged/ale/ale_linters/slim/slimlint.vim	/^function! ale_linters#slim#slimlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sml#smlnj_cm#GetCommand	plugged/ale/ale_linters/sml/smlnj_cm.vim	/^function! ale_linters#sml#smlnj_cm#GetCommand(buffer) abort$/;"	f
ale_linters#solidity#solc#GetCommand	plugged/ale/ale_linters/solidity/solc.vim	/^function! ale_linters#solidity#solc#GetCommand(buffer) abort$/;"	f
ale_linters#solidity#solc#Handle	plugged/ale/ale_linters/solidity/solc.vim	/^function! ale_linters#solidity#solc#Handle(buffer, lines) abort$/;"	f
ale_linters#solidity#solhint#Handle	plugged/ale/ale_linters/solidity/solhint.vim	/^function! ale_linters#solidity#solhint#Handle(buffer, lines) abort$/;"	f
ale_linters#spec#rpmlint#GetCommand	plugged/ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#GetCommand(buffer) abort$/;"	f
ale_linters#spec#rpmlint#Handle	plugged/ale/ale_linters/spec/rpmlint.vim	/^function! ale_linters#spec#rpmlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqlint#Handle	plugged/ale/ale_linters/sql/sqlint.vim	/^function! ale_linters#sql#sqlint#Handle(buffer, lines) abort$/;"	f
ale_linters#sql#sqllint#Handle	plugged/ale/ale_linters/sql/sqllint.vim	/^function! ale_linters#sql#sqllint#Handle(buffer, lines) abort$/;"	f
ale_linters#stylus#stylelint#GetCommand	plugged/ale/ale_linters/stylus/stylelint.vim	/^function! ale_linters#stylus#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#sugarss#stylelint#GetCommand	plugged/ale/ale_linters/sugarss/stylelint.vim	/^function! ale_linters#sugarss#stylelint#GetCommand(buffer) abort$/;"	f
ale_linters#swift#swiftformat#GetCommand	plugged/ale/ale_linters/swift/swiftformat.vim	/^function! ale_linters#swift#swiftformat#GetCommand(buffer) abort$/;"	f
ale_linters#swift#swiftformat#GetExecutable	plugged/ale/ale_linters/swift/swiftformat.vim	/^function! ale_linters#swift#swiftformat#GetExecutable(buffer) abort$/;"	f
ale_linters#swift#swiftformat#Handle	plugged/ale/ale_linters/swift/swiftformat.vim	/^function! ale_linters#swift#swiftformat#Handle(buffer, lines) abort$/;"	f
ale_linters#swift#swiftformat#UseSwift	plugged/ale/ale_linters/swift/swiftformat.vim	/^function! ale_linters#swift#swiftformat#UseSwift(buffer) abort$/;"	f
ale_linters#swift#swiftlint#GetCommand	plugged/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetCommand(buffer) abort$/;"	f
ale_linters#swift#swiftlint#GetExecutable	plugged/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#GetExecutable(buffer) abort$/;"	f
ale_linters#swift#swiftlint#Handle	plugged/ale/ale_linters/swift/swiftlint.vim	/^function! ale_linters#swift#swiftlint#Handle(buffer, lines) abort$/;"	f
ale_linters#tcl#nagelfar#GetCommand	plugged/ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#GetCommand(buffer) abort$/;"	f
ale_linters#tcl#nagelfar#Handle	plugged/ale/ale_linters/tcl/nagelfar.vim	/^function! ale_linters#tcl#nagelfar#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#terraform#GetCommand	plugged/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform#GetExecutable	plugged/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#GetExecutable(buffer) abort$/;"	f
ale_linters#terraform#terraform#Handle	plugged/ale/ale_linters/terraform/terraform.vim	/^function! ale_linters#terraform#terraform#Handle(buffer, lines) abort$/;"	f
ale_linters#terraform#terraform_lsp#GetCommand	plugged/ale/ale_linters/terraform/terraform_lsp.vim	/^function! ale_linters#terraform#terraform_lsp#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#terraform_lsp#GetProjectRoot	plugged/ale/ale_linters/terraform/terraform_lsp.vim	/^function! ale_linters#terraform#terraform_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#terraform#tflint#GetCommand	plugged/ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#GetCommand(buffer) abort$/;"	f
ale_linters#terraform#tflint#Handle	plugged/ale/ale_linters/terraform/tflint.vim	/^function! ale_linters#terraform#tflint#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#chktex#GetCommand	plugged/ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#GetCommand(buffer) abort$/;"	f
ale_linters#tex#chktex#Handle	plugged/ale/ale_linters/tex/chktex.vim	/^function! ale_linters#tex#chktex#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#lacheck#Handle	plugged/ale/ale_linters/tex/lacheck.vim	/^function! ale_linters#tex#lacheck#Handle(buffer, lines) abort$/;"	f
ale_linters#tex#texlab#GetCommand	plugged/ale/ale_linters/tex/texlab.vim	/^function! ale_linters#tex#texlab#GetCommand(buffer) abort$/;"	f
ale_linters#tex#texlab#GetProjectRoot	plugged/ale/ale_linters/tex/texlab.vim	/^function! ale_linters#tex#texlab#GetProjectRoot(buffer) abort$/;"	f
ale_linters#thrift#thrift#GetCommand	plugged/ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#GetCommand(buffer) abort$/;"	f
ale_linters#thrift#thrift#Handle	plugged/ale/ale_linters/thrift/thrift.vim	/^function! ale_linters#thrift#thrift#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#standard#GetCommand	plugged/ale/ale_linters/typescript/standard.vim	/^function! ale_linters#typescript#standard#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#standard#GetExecutable	plugged/ale/ale_linters/typescript/standard.vim	/^function! ale_linters#typescript#standard#GetExecutable(buffer) abort$/;"	f
ale_linters#typescript#tslint#GetCommand	plugged/ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#tslint#Handle	plugged/ale/ale_linters/typescript/tslint.vim	/^function! ale_linters#typescript#tslint#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#typecheck#Handle	plugged/ale/ale_linters/typescript/typecheck.vim	/^function! ale_linters#typescript#typecheck#Handle(buffer, lines) abort$/;"	f
ale_linters#typescript#xo#GetCommand	plugged/ale/ale_linters/typescript/xo.vim	/^function! ale_linters#typescript#xo#GetCommand(buffer) abort$/;"	f
ale_linters#typescript#xo#GetExecutable	plugged/ale/ale_linters/typescript/xo.vim	/^function! ale_linters#typescript#xo#GetExecutable(buffer) abort$/;"	f
ale_linters#verilog#iverilog#GetCommand	plugged/ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#iverilog#Handle	plugged/ale/ale_linters/verilog/iverilog.vim	/^function! ale_linters#verilog#iverilog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#verilator#GetCommand	plugged/ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#verilator#Handle	plugged/ale/ale_linters/verilog/verilator.vim	/^function! ale_linters#verilog#verilator#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#vlog#GetCommand	plugged/ale/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#vlog#Handle	plugged/ale/ale_linters/verilog/vlog.vim	/^function! ale_linters#verilog#vlog#Handle(buffer, lines) abort$/;"	f
ale_linters#verilog#xvlog#GetCommand	plugged/ale/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#GetCommand(buffer) abort$/;"	f
ale_linters#verilog#xvlog#Handle	plugged/ale/ale_linters/verilog/xvlog.vim	/^function! ale_linters#verilog#xvlog#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#ghdl#GetCommand	plugged/ale/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#ghdl#Handle	plugged/ale/ale_linters/vhdl/ghdl.vim	/^function! ale_linters#vhdl#ghdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#vcom#GetCommand	plugged/ale/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#vcom#Handle	plugged/ale/ale_linters/vhdl/vcom.vim	/^function! ale_linters#vhdl#vcom#Handle(buffer, lines) abort$/;"	f
ale_linters#vhdl#xvhdl#GetCommand	plugged/ale/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#GetCommand(buffer) abort$/;"	f
ale_linters#vhdl#xvhdl#Handle	plugged/ale/ale_linters/vhdl/xvhdl.vim	/^function! ale_linters#vhdl#xvhdl#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetCommand	plugged/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetCommand(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#GetExecutable	plugged/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#GetExecutable(buffer) abort$/;"	f
ale_linters#vim#ale_custom_linting_rules#Handle	plugged/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! ale_linters#vim#ale_custom_linting_rules#Handle(buffer, lines) abort$/;"	f
ale_linters#vim#vimls#GetProjectRoot	plugged/ale/ale_linters/vim/vimls.vim	/^function! ale_linters#vim#vimls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#vim#vint#GetCommand	plugged/ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#GetCommand(buffer, version) abort$/;"	f
ale_linters#vim#vint#Handle	plugged/ale/ale_linters/vim/vint.vim	/^function! ale_linters#vim#vint#Handle(buffer, lines) abort$/;"	f
ale_linters#vue#vls#GetProjectRoot	plugged/ale/ale_linters/vue/vls.vim	/^function! ale_linters#vue#vls#GetProjectRoot(buffer) abort$/;"	f
ale_linters#xml#xmllint#GetCommand	plugged/ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#GetCommand(buffer) abort$/;"	f
ale_linters#xml#xmllint#Handle	plugged/ale/ale_linters/xml/xmllint.vim	/^function! ale_linters#xml#xmllint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#swaglint#Handle	plugged/ale/ale_linters/yaml/swaglint.vim	/^function! ale_linters#yaml#swaglint#Handle(buffer, lines) abort$/;"	f
ale_linters#yaml#yamllint#GetCommand	plugged/ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#GetCommand(buffer) abort$/;"	f
ale_linters#yaml#yamllint#Handle	plugged/ale/ale_linters/yaml/yamllint.vim	/^function! ale_linters#yaml#yamllint#Handle(buffer, lines) abort$/;"	f
ale_linters#yang#yang_lsp#GetProjectRoot	plugged/ale/ale_linters/yang/yang_lsp.vim	/^function! ale_linters#yang#yang_lsp#GetProjectRoot(buffer) abort$/;"	f
ale_linters#zig#zls#GetProjectRoot	plugged/ale/ale_linters/zig/zls.vim	/^function! ale_linters#zig#zls#GetProjectRoot(buffer) abort$/;"	f
ale_module	plugged/ale/test/python/test_deoplete_source.py	/^ale_module = imp.load_source($/;"	v
all_done_event	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    HANDLE          all_done_event;$/;"	m	struct:FeCircularQueue	typeref:typename:HANDLE	file:
am	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
am	plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
anon	plugged/vista.vim/test/data/175.cpp	/^} anon;$/;"	v	typeref:struct:__anon517ee2f20108
ansi-colors	plugged/onedark.vim/build/package-lock.json	/^        "ansi-colors": "^4.1.1"$/;"	s	object:dependencies.enquirer.requires
ansi-colors	plugged/onedark.vim/build/package-lock.json	/^    "ansi-colors": {$/;"	o	object:dependencies
ansi-regex	plugged/onedark.vim/build/package-lock.json	/^            "ansi-regex": "^4.1.0"$/;"	s	object:dependencies.string-width.dependencies.strip-ansi.requires
ansi-regex	plugged/onedark.vim/build/package-lock.json	/^        "ansi-regex": "^5.0.0"$/;"	s	object:dependencies.strip-ansi.requires
ansi-regex	plugged/onedark.vim/build/package-lock.json	/^        "ansi-regex": {$/;"	o	object:dependencies.string-width.dependencies
ansi-regex	plugged/onedark.vim/build/package-lock.json	/^    "ansi-regex": {$/;"	o	object:dependencies
ansi-styles	plugged/onedark.vim/build/package-lock.json	/^            "ansi-styles": "^3.2.1",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk.requires
ansi-styles	plugged/onedark.vim/build/package-lock.json	/^        "ansi-styles": "^3.2.0",$/;"	s	object:dependencies.slice-ansi.requires
ansi-styles	plugged/onedark.vim/build/package-lock.json	/^        "ansi-styles": "^4.1.0",$/;"	s	object:dependencies.chalk.requires
ansi-styles	plugged/onedark.vim/build/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.chalk.dependencies
ansi-styles	plugged/onedark.vim/build/package-lock.json	/^    "ansi-styles": {$/;"	o	object:dependencies
answer	plugged/ale/test/json_files/testfile.json	/^{"answer":42}$/;"	n
anyHub	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^anyHub = AnyHub()$/;"	v
append	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def append(self, line, line_number=-1):$/;"	m	class:VimBufferProxy
appendBuffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def appendBuffer(self, content):$/;"	m	class:LfInstance
appendLine	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def appendLine(self, line):$/;"	m	class:LfInstance
applyChanges	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def applyChanges(self):$/;"	m	class:RgExplManager
apply_additional_text_edits	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/utils.py	/^def apply_additional_text_edits(completed):$/;"	f
apply_lsp_additional_text_edits	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/utils.py	/^def apply_lsp_additional_text_edits(user_data, lspitem):$/;"	f
argparse	plugged/onedark.vim/build/package-lock.json	/^        "argparse": "^1.0.7",$/;"	s	object:dependencies.js-yaml.requires
argparse	plugged/onedark.vim/build/package-lock.json	/^    "argparse": {$/;"	o	object:dependencies
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = ""$/;"	v	class:_AnonBase
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
args	plugged/ultisnips/test/test_Autocommands.py	/^    args = ""$/;"	v	class:Autocommands
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = ""$/;"	v	class:_AddFuncBase
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, widget_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = global_states_and_properties$/;"	v
aria_attributes_value	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
astral-regex	plugged/onedark.vim/build/package-lock.json	/^        "astral-regex": "^1.0.0",$/;"	s	object:dependencies.slice-ansi.requires
astral-regex	plugged/onedark.vim/build/package-lock.json	/^    "astral-regex": {$/;"	o	object:dependencies
asyncomplete#sources#ale#completor	plugged/ale/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#completor(options, context) abort$/;"	f
asyncomplete#sources#ale#get_source_options	plugged/ale/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#get_source_options(...) abort$/;"	f
asyncomplete#sources#ale#get_triggers	plugged/ale/autoload/asyncomplete/sources/ale.vim	/^function! asyncomplete#sources#ale#get_triggers() abort$/;"	f
at	plugged/vim-polyglot/syntax/sed.vim	/^let __at = char2nr("@")$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
author	plugged/gruvbox/package.json	/^  "author": "Pavel Pertsev <morhetz@gmail.com>",$/;"	s
author	plugged/onedark.vim/build/package.json	/^  "author": {$/;"	o
author	plugged/vim-snippets/addon-info.json	/^  "author" : "community",$/;"	s
autofill_tokens	plugged/vim-polyglot/autoload/xml/html5.vim	/^let autofill_tokens = ['on', 'off', 'name', 'honorific-prefix', 'given-name', 'additional-name',/;"	v
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "", ""$/;"	v	class:TestEmptyString
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "Hello", "Hello\\nWorld\\nWorld\\nWorld"$/;"	v	class:TestLotsaNewlines
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abc", "def"$/;"	v	class:TestNoSubstring
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "abcdef", "abcdef"$/;"	v	class:TestAllMatch
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = "hasomelongertextbl", "hol"$/;"	v	class:TestCommonCharacters
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello   World"]$/;"	v	class:TestGuessing_InsertOneChar1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_BackspaceOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a, b = ["Hello  World"], ["Hello World"]$/;"	v	class:TestGuessing_DeleteOneChar
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne Hinten"$/;"	v	class:TestCheapDelete
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne hallo  Hinten"$/;"	v	class:TestRealLife1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hallo Blah mitte=sdfdsfsd\\nhallo b mittekjshdkfhkhsdfdsf"$/;"	v	class:TestCrash
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hallo End t"$/;"	v	class:TestRealLife
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hi first line\\nsecond line k world"$/;"	v	class:MultiLine
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "n"$/;"	v	class:TestWithNewline
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "s"$/;"	v	class:MatchIsTooCheap
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "this is it a this is it"$/;"	v	class:TestUltiSnipsProblem
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b: List[str] = []$/;"	v	class:TestGuessing_Noop0
b.get_group	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_group	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_group(i) dict$/;"	f
b.get_posttitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_posttitle(i) dict$/;"	f
b.get_pretitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_pretitle(i) dict$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_title(i) dict$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_title(i) dict$/;"	f
b:	plugged/vim-polyglot/syntax/liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:AutoPairs	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:AutoPairs = { '{%': '%}' }$/;"	v
b:AutoPairs	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:AutoPairs = {$/;"	v
b:AutoPairs	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:AutoPairs = {'(':')', '[':']', '{':'}','"':'"', '`':'`'}$/;"	v
b:Xsl_SyntaxFold_by	plugged/vim-polyglot/syntax/xsl.vim	/^	let b:Xsl_SyntaxFold_by=''$/;"	v
b:ale_fixers	plugged/vim-polyglot/ftplugin/svelte.vim	/^    let b:ale_fixers = ['eslint', 'prettier', 'prettier_standard']$/;"	v
b:ale_linter_aliases	plugged/vim-polyglot/ftplugin/svelte.vim	/^    let b:ale_linter_aliases = ['css', 'javascript']$/;"	v
b:ale_linters	plugged/vim-polyglot/ftplugin/svelte.vim	/^    let b:ale_linters = ['stylelint', 'eslint']$/;"	v
b:bdf_minlines	plugged/vim-polyglot/syntax/bdf.vim	/^  let b:bdf_minlines = 30$/;"	v
b:bdf_minlines	plugged/vim-polyglot/syntax/bdf.vim	/^  let b:bdf_minlines = bdf_minlines$/;"	v
b:block_begin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_begin = '\\<\\(do$\\|fn\\>\\)'$/;"	v
b:block_end	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_end = '\\<end\\>'$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/abap.vim	/^  let b:browsefilter = "ABAP Source Files (*.abap)\\t*.abap\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:browsefilter = "Abaqus Input Files (*.inp *.inc)\\t*.inp;*.inc\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ant.vim	/^    let b:browsefilter = "Build Files (build.xml)\\tbuild.xml\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let  b:browsefilter="ASP Files (*.asp)\\t*.asp\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/awk.vim	/^  let b:browsefilter = "Awk Source Files (*.awk,*.gawk)\\t*.awk;*.gawk\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:browsefilter = "Clojure Source Files (*.clj)\\t*.clj\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/cobol.vim	/^  let b:browsefilter = "COBOL Source Files (*.cbl, *.cob)\\t*.cbl;*.cob;*.lib\\n".$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/config.vim	/^    let  b:browsefilter="Configure Scripts (configure.*, config.*)\\tconfigure*;config.*\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/cs.vim	/^    let b:browsefilter = "C# Source Files (*.cs)\\t*.cs\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^  let b:browsefilter = "DOS Batch Files (*.bat, *.cmd)\\t*.bat;*.cmd\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/dtd.vim	/^    let  b:browsefilter="DTD Files (*.dtd)\\t*.dtd\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:browsefilter='eCrystal Files (*.ecr)\\t*.ecr\\n' . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:browsefilter = "Falcon Source Files (*.fal *.ftd)\\t*.fal;*.ftd\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:browsefilter = "Fortran Files (*.f;*.for;*.f77;*.f90;*.f95;*.f03;*.f08;*.fpp;*.ftn)\\t*./;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browse/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/html.vim	/^    let  b:browsefilter="HTML Files (*.html,*.htm)\\t*.htm;*.html\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:browsefilter = "J Script Files (*.ijs)\\t*.ijs\\n"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/java.vim	/^    let  b:browsefilter="Java Files (*.java)\\t*.java\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let  b:browsefilter="JSP Files (*.jsp)\\t*.jsp\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:browsefilter = "Julia Source Files (*.jl)\\t*.jl\\n"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:browsefilter = "Kimwitu\/Kimwitu++ Files (*.k)\\t*.k\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/occam.vim	/^  let b:browsefilter = "All Occam Files (*.occ *.inc)\\t*.occ;*.inc\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:browsefilter = "PostScript Files (*.ps)\\t*.ps\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ps1.vim	/^	let b:browsefilter =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^  let b:browsefilter = $/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:browsefilter="Pug Files (*.pug)\\t*.pug\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/pyrex.vim	/^    let  b:browsefilter = "Pyrex files (*.pyx,*.pxd)\\t*.pyx;*.pxd\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/qml.vim	/^   let b:browsefilter =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:browsefilter = "SQL Files (*.sql)\\t*.sql\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:browsefilter="Stylus Files (*.styl)\\t*.styl\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/tcl.vim	/^    let b:browsefilter = "Tcl Source Files (.tcl)\\t*.tcl\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/vala.vim	/^  let b:browsefilter = "Vala Source Files (*.vala)\\t*.vala\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:browsefilter = "Verilog Source Files (*.v)\\t*.v\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let  b:browsefilter="XHTML files (*.xhtml, *.xhtm)\\t*.xhtml;*.xhtm\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/xsd.vim	/^    let  b:browsefilter="XSD Files (*.xsd)\\t*.xsd\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/xslt.vim	/^    let  b:browsefilter="XSLT Files (*.xsl,*.xslt)\\t*.xsl;*.xslt\\n" . b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/syntax/lpc.vim	/^    let b:browsefilter = "LPC Source Files (*.c *.d *.h)\\t*.c;*.d;*.h\\n" .$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/autodoc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/autodoc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/autodoc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/calendar.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/calendar.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/calendar.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/indent.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/indent.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/indent.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/lpc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/lpc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/lpc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/pike.vim	/^    let b:c_minlines = 200	" mostly for multiline strings$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/pike.vim	/^    let b:c_minlines = 400	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/pike.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:comment_end	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_end = '\\(^\\s*'.b:comment_leader.'.*\\n\\)'.$/;"	v
b:comment_jump_over	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_jump_over  = "call search('".$/;"	v
b:comment_leader	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_leader = '\\(--\\\\|\\\/\\\/\\\\|\\*\\\\|\\\/\\*\\\\|\\*\\\/\\)'$/;"	v
b:comment_skip_back	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_skip_back  = "call search('".$/;"	v
b:comment_start	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_start  = '^\\(\\s*'.b:comment_leader.'.*\\n\\)\\@<!'.$/;"	v
b:commentary_format	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:commentary_format = "# %s"           " for tpope\/vim-commentary$/;"	v
b:control_statement	plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:crystal_no_expensive	plugged/vim-polyglot/syntax/crystal.vim	/^  let b:crystal_no_expensive = 1$/;"	v
b:csv_end	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_end   = get(g:, 'csv_end', line('$'))$/;"	v
b:csv_result	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_result = ''$/;"	v
b:csv_start	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_start = get(g:, 'csv_start', 1)$/;"	v
b:cucumber_root	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:cucumber_steps_glob	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:cucumber_steps_glob = b:cucumber_root.'\/**\/*.rb'$/;"	v
b:current_ftplugin	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:current_ftplugin = 'sql'$/;"	v
b:current_indent	plugged/vim-polyglot/indent/pgsql.vim	/^let b:current_indent = "pgsql"$/;"	v
b:current_syntax	plugged/LeaderF/syntax/leaderf.vim	/^let b:current_syntax = "leaderf"$/;"	v
b:current_syntax	plugged/ale/syntax/ale-fix-suggest.vim	/^let b:current_syntax = 'ale-fix-suggest'$/;"	v
b:current_syntax	plugged/ale/syntax/ale-preview-selection.vim	/^let b:current_syntax = 'ale-preview-selection'$/;"	v
b:current_syntax	plugged/tagbar/syntax/tagbar.vim	/^let b:current_syntax = 'tagbar'$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	plugged/vim-fugitive/syntax/fugitiveblame.vim	/^let b:current_syntax = "fugitiveblame"$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/coffee.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/haskell.vim	/^let b:current_syntax = old_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/javascript/sql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^let b:current_syntax = 'javascript.jsx'$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/mdx.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/php/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/rspec.vim	/^let b:current_syntax = 'rspec'$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/tsx.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/tsx.vim	/^let b:current_syntax = 'typescript.tsx'$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/8th.vim	/^let b:current_syntax = "8th"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/Jenkinsfile.vim	/^let b:current_syntax = 'Jenkinsfile'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/a2ps.vim	/^let b:current_syntax = "a2ps"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/a65.vim	/^let b:current_syntax = "a65"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aap.vim	/^let b:current_syntax = "aap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abap.vim	/^let b:current_syntax = "abap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abaqus.vim	/^let b:current_syntax = "abaqus"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abc.vim	/^let b:current_syntax = "abc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abel.vim	/^let b:current_syntax = "abel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/acedb.vim	/^let b:current_syntax = "acedb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ada.vim	/^let b:current_syntax = "ada"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ahdl.vim	/^let b:current_syntax = "ahdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aidl.vim	/^let b:current_syntax = "aidl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/alsaconf.vim	/^let b:current_syntax = "alsaconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aml.vim	/^let b:current_syntax = "aml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ampl.vim	/^let b:current_syntax = "ampl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^let b:current_syntax = "ansible"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible_hosts.vim	/^let b:current_syntax = "ansible_hosts"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ant.vim	/^let b:current_syntax = "ant"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apache.vim	/^let b:current_syntax = "apache"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apachestyle.vim	/^let b:current_syntax = "apachestyle"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apiblueprint.vim	/^let b:current_syntax = 'apiblueprint'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/applescript.vim	/^let b:current_syntax = "applescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aptconf.vim	/^let b:current_syntax = "aptconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/arch.vim	/^let b:current_syntax = "arch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/art.vim	/^let b:current_syntax = "art"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asciidoc.vim	/^let b:current_syntax = "asciidoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asl.vim	/^let b:current_syntax = "asl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asn.vim	/^let b:current_syntax = "asn"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aspperl.vim	/^let b:current_syntax = "aspperl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aspvbs.vim	/^let b:current_syntax = "aspvbs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asterisk.vim	/^let b:current_syntax = "asterisk" $/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asteriskvm.vim	/^let b:current_syntax = "asteriskvm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/atlas.vim	/^let b:current_syntax = "atlas"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/autodoc.vim	/^let b:current_syntax = "autodoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/autoit.vim	/^let b:current_syntax = "autoit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/automake.vim	/^let b:current_syntax = 'automake'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ave.vim	/^let b:current_syntax = "ave"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/awk.vim	/^let b:current_syntax = "awk"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/b.vim	/^let b:current_syntax = "b"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/basic.vim	/^let b:current_syntax = "basic"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bc.vim	/^let b:current_syntax = "bc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bdf.vim	/^let b:current_syntax = "bdf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bib.vim	/^let b:current_syntax = "bib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bindzone.vim	/^let b:current_syntax = "bindzone"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/blade.vim	/^let b:current_syntax = 'blade'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/blank.vim	/^let b:current_syntax = "blank"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/brewfile.vim	/^let b:current_syntax = "brewfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bsdl.vim	/^let b:current_syntax = "bsdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bst.vim	/^let b:current_syntax = "bst"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bzl.vim	/^let b:current_syntax = 'bzl'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bzr.vim	/^let b:current_syntax = "bzr"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cabal-1.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cabal-2.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/caddyfile.vim	/^let b:current_syntax = "caddyfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/calendar.vim	/^let b:current_syntax = "calendar"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/carp.vim	/^let b:current_syntax = "carp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/catalog.vim	/^let b:current_syntax = "catalog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cdl.vim	/^let b:current_syntax = "cdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cdrdaoconf.vim	/^let b:current_syntax = "cdrdaoconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let b:current_syntax = "cdrtoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cf.vim	/^let b:current_syntax = "cfml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cfg.vim	/^let b:current_syntax = "cfg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ch.vim	/^let b:current_syntax = "ch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/chaiscript.vim	/^let b:current_syntax = "chaiscript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/chill.vim	/^let b:current_syntax = "chill"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/chordpro.vim	/^let b:current_syntax = "chordpro"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cl.vim	/^let b:current_syntax = "cl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/clean.vim	/^let b:current_syntax = "clean"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/clojure.vim	/^let b:current_syntax = "clojure"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmod.vim	/^let b:current_syntax = "cmod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmusrc.vim	/^let b:current_syntax = "cmusrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cobol.vim	/^let b:current_syntax = "cobol"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/conaryrecipe.vim	/^let b:current_syntax = "conaryrecipe"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/conf.vim	/^let b:current_syntax = "conf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/config.vim	/^let b:current_syntax = "config"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cql.vim	/^let b:current_syntax = "cql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crm.vim	/^let b:current_syntax = "crm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crontab.vim	/^let b:current_syntax = "crontab"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cryptol.vim	/^let b:current_syntax = "cryptol"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crystal.vim	/^let b:current_syntax = 'crystal'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cs.vim	/^let b:current_syntax = 'cs'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csc.vim	/^let b:current_syntax = "csc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csdl.vim	/^let b:current_syntax = "csdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csp.vim	/^let b:current_syntax = "csp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csv.vim	/^let b:current_syntax="csv"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cterm.vim	/^let b:current_syntax = "cterm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cuda.vim	/^let b:current_syntax = "cuda"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cuesheet.vim	/^let b:current_syntax='cuesheet'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cupl.vim	/^let b:current_syntax = "cupl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cuplsim.vim	/^let b:current_syntax = "cuplsim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cvs.vim	/^let b:current_syntax = "cvs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cvsrc.vim	/^let b:current_syntax = "cvsrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cynpp.vim	/^let b:current_syntax = "cynpp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/d.vim	/^let b:current_syntax = "d"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dart.vim	/^let b:current_syntax = 'dart'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/datascript.vim	/^let b:current_syntax = "datascript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dcd.vim	/^let b:current_syntax = "dcd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dcov.vim	/^let b:current_syntax = "dcov"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ddoc.vim	/^    let b:current_syntax = "ddoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debchangelog.vim	/^let b:current_syntax = 'debchangelog'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debcontrol.vim	/^let b:current_syntax = 'debcontrol'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debcopyright.vim	/^let b:current_syntax = 'debcopyright'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debsources.vim	/^let b:current_syntax = 'debsources'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/def.vim	/^let b:current_syntax = "def"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/denyhosts.vim	/^let b:current_syntax = "denyhosts"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/desc.vim	/^let b:current_syntax = "desc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/desktop.vim	/^let b:current_syntax = "desktop"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dhall.vim	/^let b:current_syntax = 'dhall'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dictconf.vim	/^let b:current_syntax = "dictconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dictdconf.vim	/^let b:current_syntax = "dictdconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/diff.vim	/^let b:current_syntax = "diff"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dircolors.vim	/^let b:current_syntax = "dircolors"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/django.vim	/^let b:current_syntax = "django"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dnsmasq.vim	/^let b:current_syntax = "dnsmasq"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/docker-compose.vim	/^let b:current_syntax = "dockercompose"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dockerfile.vim	/^let b:current_syntax = "dockerfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dosbatch.vim	/^let b:current_syntax = "dosbatch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dosini.vim	/^let b:current_syntax = "dosini"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dot.vim	/^let b:current_syntax = "dot"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dracula.vim	/^let b:current_syntax = "dracula"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dsdl.vim	/^let b:current_syntax = "dsdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dsl.vim	/^let b:current_syntax = "dsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dtd.vim	/^let b:current_syntax = "dtd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dune.vim	/^let b:current_syntax = "dune"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dylan.vim	/^let b:current_syntax = "dylan"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dylanintr.vim	/^let b:current_syntax = "dylanintr"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dylanlid.vim	/^let b:current_syntax = "dylanlid"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ecd.vim	/^let b:current_syntax = "ecd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ecrystal.vim	/^let b:current_syntax = 'ecrystal'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/edif.vim	/^let b:current_syntax = "edif"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eelixir.vim	/^let b:current_syntax = 'eelixir'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elf.vim	/^let b:current_syntax = "elf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elinks.vim	/^let b:current_syntax = "elinks"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elixir.vim	/^let b:current_syntax = "elixir"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elm.vim	/^let b:current_syntax = 'elm'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elmfilt.vim	/^let b:current_syntax = "elmfilt"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/embeddedpuppet.vim	/^let b:current_syntax = "embeddedpuppet"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ember-script.vim	/^let b:current_syntax = 'ember-script'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/emblem.vim	/^let b:current_syntax = 'emblem'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eruby.vim	/^let b:current_syntax = matchstr(&syntax, '^.*\\<eruby\\>')$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/esmtprc.vim	/^let b:current_syntax = "esmtprc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/esqlc.vim	/^let b:current_syntax = "esqlc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/esterel.vim	/^let b:current_syntax = "esterel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eterm.vim	/^let b:current_syntax = "eterm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/exim.vim	/^let b:current_syntax = "exim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/expect.vim	/^let b:current_syntax = "expect"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/exports.vim	/^let b:current_syntax = "exports"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/falcon.vim	/^let b:current_syntax = "falcon"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fan.vim	/^let b:current_syntax = "fan"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fbs.vim	/^let b:current_syntax = "fbs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fennel.vim	/^let b:current_syntax = "fennel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ferm.vim	/^let b:current_syntax = "ferm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fetchmail.vim	/^let b:current_syntax = "fetchmail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fgl.vim	/^let b:current_syntax = "fgl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fish.vim	/^let b:current_syntax = 'fish'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/focexec.vim	/^let b:current_syntax = "focexec"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/forth.vim	/^let b:current_syntax = "forth"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fortran.vim	/^let b:current_syntax = "fortran"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/framescript.vim	/^let b:current_syntax = "framescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/freebasic.vim	/^let b:current_syntax = "freebasic"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fsharp.vim	/^let b:current_syntax = 'fsharp'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fstab.vim	/^let b:current_syntax = "fstab"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fvwm.vim	/^let b:current_syntax = "fvwm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gdmo.vim	/^let b:current_syntax = "gdmo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gdscript3.vim	/^let b:current_syntax = "gdscript3"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gedcom.vim	/^let b:current_syntax = "gedcom"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitignore.vim	/^let b:current_syntax = 'gitignore'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitolite.vim	/^let b:current_syntax = "gitolite"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gkrellmrc.vim	/^let b:current_syntax = "gkrellmrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/glsl.vim	/^  let b:current_syntax = "glsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gmpl.vim	/^let b:current_syntax = "gmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gnash.vim	/^let b:current_syntax = "gnash"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugoutput.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugstacktrace.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugvariables.vim	/^let b:current_syntax = "godebugvariables"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gomod.vim	/^let b:current_syntax = "gomod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gp.vim	/^let b:current_syntax = "gp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gpg.vim	/^let b:current_syntax = "gpg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/grads.vim	/^let b:current_syntax = "grads"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/graphql.vim	/^let b:current_syntax = 'graphql'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gretl.vim	/^let b:current_syntax="gretl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/group.vim	/^let b:current_syntax = "group"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/grub.vim	/^let b:current_syntax = "grub"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gsl.vim	/^let b:current_syntax = "gsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gsp.vim	/^let b:current_syntax = "gsp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gtkrc.vim	/^let b:current_syntax = "gtkrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hamster.vim	/^let b:current_syntax = "hamster"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/handlebars.vim	/^let b:current_syntax = "handlebars"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haproxy.vim	/^let b:current_syntax = "haproxy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haste.vim	/^let b:current_syntax = "haste"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hastepreproc.vim	/^let b:current_syntax = "hastepreproc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haxe.vim	/^let b:current_syntax = "haxe"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hb.vim	/^let b:current_syntax = "hb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hcl.vim	/^let b:current_syntax = "hcl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/helm.vim	/^let b:current_syntax = "helm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/helm.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/help.vim	/^let b:current_syntax = "help"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hercules.vim	/^let b:current_syntax = "hercules"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hex.vim	/^let b:current_syntax = "hex"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hgcommit.vim	/^let b:current_syntax = "hgcommit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hive.vim	/^let b:current_syntax = "hive"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hog.vim	/^let b:current_syntax = "hog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hollywood.vim	/^let b:current_syntax = "hollywood"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hostconf.vim	/^let b:current_syntax = "hostconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hostsaccess.vim	/^let b:current_syntax = "hostsaccess"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/htmldjango.vim	/^let b:current_syntax = "htmldjango"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/htmlm4.vim	/^let b:current_syntax = "htmlm4"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/i3config.vim	/^let b:current_syntax = "i3config"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ibasic.vim	/^let b:current_syntax = "ibasic"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/icalendar.vim	/^let b:current_syntax = "icalendar"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/icemenu.vim	/^let b:current_syntax = "IceMenu"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/icon.vim	/^let b:current_syntax = "icon"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/idris.vim	/^let b:current_syntax = "idris"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/idris2.vim	/^let b:current_syntax = "idris2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/indent.vim	/^let b:current_syntax = "indent"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/inform.vim	/^let b:current_syntax = "inform"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/initng.vim	/^let b:current_syntax = "initng"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/inittab.vim	/^let b:current_syntax = "inittab"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/iss.vim	/^let b:current_syntax = "iss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ist.vim	/^let b:current_syntax = "ist"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/j.vim	/^let b:current_syntax = 'j'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jal.vim	/^let b:current_syntax = "jal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jam.vim	/^let b:current_syntax = "jam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jess.vim	/^let b:current_syntax = "jess"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jgraph.vim	/^let b:current_syntax = "jgraph"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = "jinja2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jovial.vim	/^let b:current_syntax = "jovial"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jproperties.vim	/^let b:current_syntax = "jproperties"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/json5.vim	/^  let b:current_syntax = 'json5'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jsp.vim	/^let b:current_syntax = "jsp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jst.vim	/^let b:current_syntax = 'jst'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/julia.vim	/^let b:current_syntax = "julia"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/juliadoc.vim	/^let b:current_syntax = "juliadoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kconfig.vim	/^let b:current_syntax = "kconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kivy.vim	/^let b:current_syntax = "kivy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kix.vim	/^let b:current_syntax = "kix"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kotlin.vim	/^let b:current_syntax = 'kotlin'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kscript.vim	/^let b:current_syntax = "kscript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kwt.vim	/^let b:current_syntax = "kwt"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lace.vim	/^let b:current_syntax = "lace"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/latte.vim	/^let b:current_syntax = "latte"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ldif.vim	/^let b:current_syntax = "ldif"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ledger.vim	/^let b:current_syntax = b:is_hledger ? 'hledger' : 'ledger'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lftp.vim	/^let b:current_syntax = "lftp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lhaskell.vim	/^let b:current_syntax = "lhaskell"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/libao.vim	/^let b:current_syntax = "libao"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lidris.vim	/^let b:current_syntax = "lidris"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lidris2.vim	/^let b:current_syntax = "lidris2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lifelines.vim	/^let b:current_syntax = "lifelines"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lilo.vim	/^let b:current_syntax = "lilo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lilypond.vim	/^let b:current_syntax = "lilypond"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/limits.vim	/^let b:current_syntax = "limits"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lisp.vim	/^let b:current_syntax = "lisp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/litcoffee.vim	/^let b:current_syntax = "litcoffee"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lite.vim	/^let b:current_syntax = "lite"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/litestep.vim	/^let b:current_syntax = "litestep"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/llvm.vim	/^let b:current_syntax = "llvm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/log.vim	/^let b:current_syntax = 'log'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/loginaccess.vim	/^let b:current_syntax = "loginaccess"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/logindefs.vim	/^let b:current_syntax = "logindefs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/logtalk.vim	/^let b:current_syntax = "logtalk"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lotos.vim	/^let b:current_syntax = "lotos"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lout.vim	/^let b:current_syntax = "lout"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lpc.vim	/^let b:current_syntax = "lpc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lprolog.vim	/^let b:current_syntax = "lprolog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ls.vim	/^  let b:current_syntax = 'livescript'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ls.vim	/^let b:current_syntax = "ls"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lsl.vim	/^let b:current_syntax = "lsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lss.vim	/^let b:current_syntax = "lss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lynx.vim	/^let b:current_syntax = "lynx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/m4.vim	/^let b:current_syntax = "m4"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mail.vim	/^let b:current_syntax = "mail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mailaliases.vim	/^let b:current_syntax = "mailaliases"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mailcap.vim	/^let b:current_syntax = "mailcap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mako.vim	/^let b:current_syntax = b:mako_outer_lang$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mallard.vim	/^let b:current_syntax = "mallard"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/manconf.vim	/^let b:current_syntax = "manconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/maple.vim	/^let b:current_syntax = "maple"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/markdown.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/master.vim	/^let b:current_syntax = "master"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mel.vim	/^let b:current_syntax = "mel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/merlin.vim	/^let b:current_syntax = "merlin"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/meson.vim	/^let b:current_syntax = "meson"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/messages.vim	/^let b:current_syntax = "messages"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mf.vim	/^let b:current_syntax = "mf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mgl.vim	/^let b:current_syntax = "mgl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mgp.vim	/^let b:current_syntax = "mgp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mib.vim	/^let b:current_syntax = "mib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mix.vim	/^let b:current_syntax = "mix"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mmp.vim	/^let b:current_syntax = "mmp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/modconf.vim	/^let b:current_syntax = "modconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/modula2.vim	/^let b:current_syntax = "modula2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/modula3.vim	/^let b:current_syntax = "modula3"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/monk.vim	/^let b:current_syntax = "monk"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/moo.vim	/^let b:current_syntax = "moo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/moon.vim	/^  let b:current_syntax = 'moon'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mp.vim	/^let b:current_syntax = "mp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mplayerconf.vim	/^let b:current_syntax = "mplayerconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mrxvtrc.vim	/^let b:current_syntax = "mrxvtrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/msidl.vim	/^let b:current_syntax = "msidl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/msql.vim	/^let b:current_syntax = "msql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/murphi.vim	/^let b:current_syntax = "murphi"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mush.vim	/^let b:current_syntax = "mush"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/muttrc.vim	/^let b:current_syntax = "muttrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mysql.vim	/^let b:current_syntax = "mysql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/n1ql.vim	/^let b:current_syntax = "n1ql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/named.vim	/^let b:current_syntax = "named"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nanorc.vim	/^let b:current_syntax = "nanorc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/natural.vim	/^let b:current_syntax = "natural"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ncf.vim	/^let b:current_syntax = "ncf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/neomuttrc.vim	/^let b:current_syntax = "neomuttrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/netrc.vim	/^let b:current_syntax = "netrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nim.vim	/^let b:current_syntax = 'nim'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ninja.vim	/^let b:current_syntax = "ninja"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nix.vim	/^let b:current_syntax = "nix"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nqc.vim	/^let b:current_syntax = "nqc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nroff.vim	/^let b:current_syntax = "nroff"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nsis.vim	/^let b:current_syntax = "nsis"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/oasis.vim	/^let b:current_syntax = "oasis"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/obj.vim	/^let b:current_syntax = "obj"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocamlbuild_tags.vim	/^let b:current_syntax = "ocamlbuild_tags"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/occam.vim	/^let b:current_syntax = "occam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocpbuild.vim	/^let b:current_syntax = "ocpbuild"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocpbuildroot.vim	/^let b:current_syntax = "ocpbuildroot"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/octave.vim	/^let b:current_syntax = "octave"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/odin.vim	/^let b:current_syntax = "odin"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/omake.vim	/^let b:current_syntax = "omake"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/omnimark.vim	/^let b:current_syntax = "omnimark"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opam.vim	/^let b:current_syntax = "opam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opencl.vim	/^let b:current_syntax = "opencl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/openroad.vim	/^let b:current_syntax = "openroad"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opl.vim	/^let b:current_syntax = "opl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ora.vim	/^let b:current_syntax = "ora"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pamconf.vim	/^let b:current_syntax = "pamconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pamenv.vim	/^let b:current_syntax = "pamenv"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/papp.vim	/^let b:current_syntax = "papp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pascal.vim	/^let b:current_syntax = "pascal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/passwd.vim	/^let b:current_syntax = "passwd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pccts.vim	/^let b:current_syntax = "pccts"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pdf.vim	/^let b:current_syntax = "pdf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pf.vim	/^let b:current_syntax = "pf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pfmain.vim	/^let b:current_syntax = "pfmain"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pgsql.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pike.vim	/^let b:current_syntax = "pike"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pilrc.vim	/^let b:current_syntax = "pilrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pine.vim	/^let b:current_syntax = "pine"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pinfo.vim	/^let b:current_syntax = "pinfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plantuml.vim	/^let b:current_syntax = 'plantuml'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pli.vim	/^let b:current_syntax = "pl1"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plm.vim	/^let b:current_syntax = "plm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plp.vim	/^let b:current_syntax = "plp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plsql.vim	/^let b:current_syntax = "plsql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/po.vim	/^let b:current_syntax = "po"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pony.vim	/^let b:current_syntax = 'pony'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/postscr.vim	/^let b:current_syntax = "postscr"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pov.vim	/^let b:current_syntax = "pov"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/povini.vim	/^let b:current_syntax = "povini"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ppd.vim	/^let b:current_syntax = "ppd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ppwiz.vim	/^let b:current_syntax = "ppwiz"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/privoxy.vim	/^let b:current_syntax = "privoxy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/procmail.vim	/^let b:current_syntax = "procmail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/prolog.vim	/^let b:current_syntax = "prolog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/promela.vim	/^let b:current_syntax = "promela"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/proto.vim	/^let b:current_syntax = "proto"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/protocols.vim	/^let b:current_syntax = "protocols"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ps1.vim	/^let b:current_syntax = "ps1"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ps1xml.vim	/^let b:current_syntax = "ps1xml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/psf.vim	/^let b:current_syntax = "psf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pug.vim	/^let b:current_syntax = "pug"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/puppet.vim	/^let b:current_syntax = "puppet"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/purescript.vim	/^let b:current_syntax = "purescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/python.vim	/^let b:current_syntax = 'python'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/qmake.vim	/^let b:current_syntax = "qmake"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/qml.vim	/^let b:current_syntax = "qml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/quake.vim	/^let b:current_syntax = "quake"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/racket.vim	/^let b:current_syntax = "racket"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/radiance.vim	/^let b:current_syntax = "radiance"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ragel.vim	/^let b:current_syntax = "ragel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/raku.vim	/^let b:current_syntax = "raku"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/raml.vim	/^let b:current_syntax = "raml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ratpoison.vim	/^let b:current_syntax = "ratpoison"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/razor.vim	/^let b:current_syntax = "razor"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rcs.vim	/^let b:current_syntax = "rcs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/readline.vim	/^let b:current_syntax = 'readline'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/reason.vim	/^let b:current_syntax = "reason"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rego.vim	/^let b:current_syntax = 'rego'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/remind.vim	/^let b:current_syntax = "remind"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/requirements.vim	/^let b:current_syntax = "requirements"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/resolv.vim	/^let b:current_syntax = "resolv"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/reva.vim	/^let b:current_syntax = "reva"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rexx.vim	/^let b:current_syntax = "rexx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rib.vim	/^let b:current_syntax = "rib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rmd.vim	/^  let b:current_syntax = "rmd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rmd.vim	/^let b:current_syntax = "rmd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnc.vim	/^let b:current_syntax = "rnc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rng.vim	/^let b:current_syntax = 'rng'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnoweb-1.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnoweb-2.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/robots.vim	/^let b:current_syntax = "robots"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rpcgen.vim	/^let b:current_syntax = "rpcgen"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rpl.vim	/^let b:current_syntax = "rpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rrst.vim	/^let b:current_syntax = "rrst"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rst.vim	/^let b:current_syntax = "rst"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rtf.vim	/^let b:current_syntax = "rtf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/samba.vim	/^let b:current_syntax = "samba"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sas.vim	/^let b:current_syntax = "sas"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sather.vim	/^let b:current_syntax = "sather"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = 'scala'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scheme.vim	/^let b:current_syntax = 'scheme'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scilab.vim	/^let b:current_syntax = "scilab"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/screen.vim	/^let b:current_syntax = "screen"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sd.vim	/^let b:current_syntax = "sd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sdc.vim	/^let b:current_syntax = "sdc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sdl.vim	/^let b:current_syntax = "sdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sed.vim	/^let b:current_syntax = "sed"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sensors.vim	/^let b:current_syntax = "sensors"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/services.vim	/^let b:current_syntax = "services"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/setserial.vim	/^let b:current_syntax = "setserial"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sexplib.vim	/^let b:current_syntax = "sexplib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sieve.vim	/^let b:current_syntax = "sieve"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sil.vim	/^let b:current_syntax = "sil"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/simula.vim	/^let b:current_syntax = "simula"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sinda.vim	/^let b:current_syntax = "sinda"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sisu.vim	/^let b:current_syntax = "sisu"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/skill.vim	/^let b:current_syntax = "skill"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slang.vim	/^let b:current_syntax = "slang"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slice.vim	/^let b:current_syntax = "slice"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slim.vim	/^let b:current_syntax = "slim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slime.vim	/^let b:current_syntax = "slime"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slpconf.vim	/^let b:current_syntax = "slpconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slpreg.vim	/^let b:current_syntax = "slpreg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slpspi.vim	/^let b:current_syntax = "slpspi"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slrnrc.vim	/^let b:current_syntax = "slrnrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slrnsc.vim	/^let b:current_syntax = "slrnsc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sm.vim	/^let b:current_syntax = "sm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smarty.vim	/^let b:current_syntax = "smarty"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smcl.vim	/^let b:current_syntax = "smcl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smith.vim	/^let b:current_syntax = "smith"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sml.vim	/^let b:current_syntax = "sml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smt2.vim	/^let b:current_syntax = "smt2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/snobol4.vim	/^let b:current_syntax = "snobol4"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spec.vim	/^let b:current_syntax = "spec"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spice.vim	/^let b:current_syntax = "spice"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spup.vim	/^let b:current_syntax = "spup"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spyce.vim	/^let b:current_syntax = "spyce"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sqlj.vim	/^let b:current_syntax = "sqlj"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sqloracle.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sqr.vim	/^let b:current_syntax = "sqr"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/squid.vim	/^let b:current_syntax = "squid"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/srec.vim	/^let b:current_syntax = "srec"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sshconfig.vim	/^let b:current_syntax = "sshconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sshdconfig.vim	/^let b:current_syntax = "sshdconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/st.vim	/^let b:current_syntax = "st"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/stata.vim	/^let b:current_syntax = "stata"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/stp.vim	/^let b:current_syntax = "stp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/stylus.vim	/^let b:current_syntax = "stylus"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sudoers.vim	/^let b:current_syntax = "sudoers"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/svelte.vim	/^let b:current_syntax = "svelte"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/svg.vim	/^let b:current_syntax = "svg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/swift.vim	/^let b:current_syntax = "swift"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/swiftgyb.vim	/^let b:current_syntax = "swiftgyb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sxhkdrc.vim	/^let b:current_syntax = "sxhkdrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sysctl.vim	/^let b:current_syntax = "sysctl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/systemd.vim	/^let b:current_syntax = "systemd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/systemverilog.vim	/^let b:current_syntax = "systemverilog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tablegen.vim	/^let b:current_syntax = "tablegen"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tads.vim	/^let b:current_syntax = "tads"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tags.vim	/^let b:current_syntax = "tags"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tak.vim	/^let b:current_syntax = "tak"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tap.vim	/^let b:current_syntax="tapVerboseOutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/taskdata.vim	/^let b:current_syntax = "taskdata"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/taskedit.vim	/^let b:current_syntax = "taskedit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tcl.vim	/^let b:current_syntax = "tcl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/teraterm.vim	/^let b:current_syntax = "teraterm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/terminfo.vim	/^let b:current_syntax = "terminfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/terraform.vim	/^let b:current_syntax = 'terraform'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tex.vim	/^let   b:current_syntax = "tex"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/texinfo.vim	/^let b:current_syntax = "texinfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/texmf.vim	/^let b:current_syntax = "texmf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tf.vim	/^let b:current_syntax = "tf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/thrift.vim	/^let b:current_syntax = "thrift"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tidy.vim	/^let b:current_syntax = "tidy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tilde.vim	/^let b:current_syntax = "tilde"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tli.vim	/^let b:current_syntax = "tli"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tmux.vim	/^let b:current_syntax = "tmux"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/toml.vim	/^let b:current_syntax = 'toml'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tpp.vim	/^let b:current_syntax = 'tpp'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tptp.vim	/^let b:current_syntax = "tptp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/trasys.vim	/^let b:current_syntax = "trasys"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/treetop.vim	/^let b:current_syntax = 'treetop'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tsalt.vim	/^let b:current_syntax = "tsalt"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tsscl.vim	/^let b:current_syntax = "tsscl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tssgm.vim	/^let b:current_syntax = "tssgm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tssop.vim	/^let b:current_syntax = "tssop"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2.vim	/^let b:current_syntax = "tt2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2html.vim	/^let b:current_syntax = "tt2html"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2js.vim	/^let b:current_syntax = "tt2js"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/typescriptreact.vim	/^let b:current_syntax = "typescriptreact"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/uc.vim	/^let b:current_syntax = "uc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/udevconf.vim	/^let b:current_syntax = "udevconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/udevperm.vim	/^let b:current_syntax = "udevperm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/uil.vim	/^let b:current_syntax = "uil"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/unison.vim	/^let b:current_syntax = "unison"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/updatedb.vim	/^let b:current_syntax = "updatedb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstart.vim	/^let b:current_syntax = "upstart"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstreamdat.vim	/^let b:current_syntax = "upstreamdat"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstreaminstalllog.vim	/^let b:current_syntax = "upstreaminstalllog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstreamlog.vim	/^let b:current_syntax = "upstreamlog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/usserverlog.vim	/^let b:current_syntax = "usserverlog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/usw2kagtlog.vim	/^let b:current_syntax = "usw2kagentlog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vala.vim	/^let b:current_syntax = "vala"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vb.vim	/^let b:current_syntax = "vb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vbnet.vim	/^let b:current_syntax = "vbnet"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/velocity.vim	/^let b:current_syntax = "velocity"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vera.vim	/^let b:current_syntax = "vera"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/verilog.vim	/^let b:current_syntax = "verilog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/verilogams.vim	/^let b:current_syntax = "verilogams"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vgrindefs.vim	/^let b:current_syntax = "vgrindefs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vhdl.vim	/^let b:current_syntax = "vhdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/viminfo.vim	/^let b:current_syntax = "viminfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vlang.vim	/^let b:current_syntax = 'vlang'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vmasm.vim	/^let b:current_syntax = "vmasm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/voscm.vim	/^let b:current_syntax = "voscm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vrml.vim	/^let b:current_syntax = "vrml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vroom.vim	/^let b:current_syntax = 'vroom'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vue.vim	/^let b:current_syntax = "vue"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wast.vim	/^let b:current_syntax = "wast"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/webmacro.vim	/^let b:current_syntax = "webmacro"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wget.vim	/^let b:current_syntax = "wget"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/winbatch.vim	/^let b:current_syntax = "winbatch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wml.vim	/^let b:current_syntax = "wml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wsh.vim	/^let b:current_syntax = "wsh"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wsml.vim	/^let b:current_syntax = "wsml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wvdial.vim	/^let b:current_syntax = "wvdial"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xdc.vim	/^let b:current_syntax = "xdc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xdefaults.vim	/^let b:current_syntax = "xdefaults"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xf86conf.vim	/^let b:current_syntax = "xf86conf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xhtml.vim	/^let b:current_syntax = "xhtml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xinetd.vim	/^let b:current_syntax = "xinetd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xmath.vim	/^let b:current_syntax = "xmath"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xml.vim	/^let b:current_syntax = "xml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xmodmap.vim	/^let b:current_syntax = "xmodmap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xpm.vim	/^let b:current_syntax = "xpm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xpm2.vim	/^let b:current_syntax = "xpm2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xquery.vim	/^let b:current_syntax = "xquery"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xsl.vim	/^let b:current_syntax = "xsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/yaml.vim	/^let b:current_syntax = "yaml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/z8a.vim	/^let b:current_syntax = "z8a"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zephir.vim	/^let b:current_syntax = "zephir"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zig.vim	/^let b:current_syntax = "zig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zimbu.vim	/^let b:current_syntax = "zimbu"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zir.vim	/^let b:current_syntax = "zir"$/;"	v
b:current_syntax	plugged/vim-translator/syntax/translator.vim	/^let b:current_syntax = 'translator'$/;"	v
b:current_syntax	plugged/vim-which-key/syntax/which_key.vim	/^let b:current_syntax = 'which_key'$/;"	v
b:current_syntax	plugged/vista.vim/syntax/vista.vim	/^let b:current_syntax = 'vista'$/;"	v
b:current_syntax	plugged/vista.vim/syntax/vista_kind.vim	/^let b:current_syntax = 'vista_kind'$/;"	v
b:current_syntax	plugged/vista.vim/syntax/vista_markdown.vim	/^let b:current_syntax = 'vista_markdown'$/;"	v
b:current_syntax_embed	plugged/vim-polyglot/syntax/rust.vim	/^    let b:current_syntax_embed = 1$/;"	v
b:dc_next_index	plugged/vim-polyglot/syntax/dircolors.vim	/^let b:dc_next_index = 0$/;"	v
b:dhall_ftplugin	plugged/vim-polyglot/ftplugin/dhall.vim	/^let b:dhall_ftplugin = 1$/;"	v
b:did_8thplugin	plugged/vim-polyglot/ftplugin/8th.vim	/^let b:did_8thplugin = 1$/;"	v
b:did_after_plugin_ultisnips_after	plugged/ultisnips/after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:did_autoload_ultisnips	plugged/ultisnips/autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
b:did_autoload_ultisnips_map_keys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
b:did_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/a2ps.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/aap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/abap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ada.vim	/^let b:did_ftplugin = 45$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/arch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/bdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/blade.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/bst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/calendar.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cfg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cobol.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/crm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/crystal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/csc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/css.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dart.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dictconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/diff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dircolors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dockerfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dosini.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dtd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dune.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/elinks.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/erlang.vim	/^	let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eterm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/falcon.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fennel.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fortran.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/framescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fvwm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gdb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitignore.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gpg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/graphql.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/groovy.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/group.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/grub.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hamster.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/help.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hgcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hostconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/html.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/idris.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/idris2.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/indent.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ion.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/java.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/jproperties.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/kconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/kotlin.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lftp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/libao.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lilypond.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/limits.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lisp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/llvm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/logcheck.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/logindefs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/logtalk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lprolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ls.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/m4.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mailcap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/make.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mako.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/manconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/meson.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mma.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/modconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/moon.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mrxvtrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/muttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nanorc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/netrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nix.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nroff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nsis.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/occam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/omake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/opencl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pamconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pascal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/passwd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pinfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/postscr.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/procmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/prolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/protocols.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/puppet.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/qml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/quake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/racket.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/raku.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/razor.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/readline.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/reva.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rmd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rnc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rrst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sbt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/scala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/screen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sensors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/services.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/setserial.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sexplib.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sieve.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slpconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slpreg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slpspi.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:did_ftplugin     = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sudoers.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/svelte.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sysctl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/systemd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tablegen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/terminfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/text.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tmux.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/toml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/treetop.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/udevconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/udevperm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/updatedb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/verilog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vhdl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vroom.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/wast.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xinetd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xslt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/yaml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/zig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/jsx.vim	/^  let b:did_indent = s:did_indent$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/tsx.vim	/^  let b:did_indent = s:did_indent$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ada.vim	/^let b:did_indent = 45$/;"	v
b:did_indent	plugged/vim-polyglot/indent/arduino.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/autohotkey.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/awk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/bib.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/blade.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/bst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/bzl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cabal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/caddyfile.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/chaiscript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/clojure.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cmake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cobol.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/crystal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cs.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/css.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cuda.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cython.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/d.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dart.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dictconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dictdconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dosbatch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dune.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dylan.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ecrystal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eelixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/elixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/elm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ember-script.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/erlang.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/falcon.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/fennel.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/fortran.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/framescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/fsharp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/gdscript3.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/gitolite.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/graphql.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/hamster.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/haskell.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/hcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/hog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/idris.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/idris2.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/j.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/java.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/json.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/jst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/kotlin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ledger.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lifelines.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lilypond.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lisp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/litcoffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/llvm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/logtalk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ls.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/mail.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/make.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/mako.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/markdown.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/meson.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/moon.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/mp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nginx.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nix.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nsis.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/occam.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/octave.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/odin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/omake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/opencl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pascal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pgsql.vim	/^let b:did_indent     = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/plantuml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pony.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/postscr.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pov.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/prolog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/proto.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ps1.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pug.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/puppet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/purescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/qml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/racket.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/raku.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/readline.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/reason.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rmd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rnoweb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rpl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rrst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rust.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sas.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/scala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/scss.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/slim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/slime.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/solidity.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/sshconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/stylus.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/svelte.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/svg.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/swift.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/systemverilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/teraterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/terraform.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tex.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tilde.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/treetop.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/typescriptreact.vim	/^  let b:did_indent=s:did_indent$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/verilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vhdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vroom.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vue.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/wast.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/xf86conf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/xinetd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/yacc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/yaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/zig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/zimbu.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/syntax/spyce.vim	/^let b:did_indent = 1	     " don't perform HTML indentation!$/;"	v
b:did_indent_hbs	plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent_hbs = 1$/;"	v
b:did_scheme_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:did_scheme_ftplugin = 1$/;"	v
b:did_scheme_syntax	plugged/vim-polyglot/syntax/scheme.vim	/^let b:did_scheme_syntax = 1$/;"	v
b:dnsmasq_backrgound_light	plugged/vim-polyglot/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = 0$/;"	v
b:dnsmasq_backrgound_light	plugged/vim-polyglot/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = dnsmasq_backrgound_light$/;"	v
b:done_vimsnippets	plugged/vim-snippets/plugin/vimsnippets.vim	/^let b:done_vimsnippets = 1$/;"	v
b:ecrystal_align_end	plugged/vim-polyglot/indent/ecrystal.vim	/^    let b:ecrystal_align_end = b:ecrystal_subtype !=# 'html' && b:ecrystal_subtype !=# 'xml'$/;"	v
b:ecrystal_align_end	plugged/vim-polyglot/indent/ecrystal.vim	/^    let b:ecrystal_align_end = g:ecrystal_align_end$/;"	v
b:ecrystal_indent_multiline	plugged/vim-polyglot/indent/ecrystal.vim	/^  let b:ecrystal_indent_multiline = get(g:, 'ecrystal_indent_multiline', 1)$/;"	v
b:ecrystal_subtype_indentexpr	plugged/vim-polyglot/indent/ecrystal.vim	/^let b:ecrystal_subtype_indentexpr = &l:indentexpr$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.leex\\|\\.eeli/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.leex\\|\\.eeli/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype_indentexpr	plugged/vim-polyglot/indent/eelixir.vim	/^let b:eelixir_subtype_indentexpr = &l:indentexpr$/;"	v
b:elixir_no_expensive	plugged/vim-polyglot/syntax/slime.vim	/^let b:elixir_no_expensive = 1$/;"	v
b:endwise_addition	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_addition = 'end'$/;"	v
b:endwise_addition	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_addition = '\\=index(["dot","mindmap","uml","salt","wbs"], submatch(0))!=-1 ? "@en/;"	v
b:endwise_pattern	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_pattern = '^\\s*\\zs\\(loop\\|group\\|alt\\|note\\ze[^:]*$\\|legend\\|@start\\zs\\/;"	v
b:endwise_syngroups	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_syngroups = 'fishKeyword,fishConditional,fishRepeat'$/;"	v
b:endwise_syngroups	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_syngroups = 'plantumlKeyword,plantumlPreProc'$/;"	v
b:endwise_words	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_words = 'begin,function,if,switch,while,for'$/;"	v
b:endwise_words	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_words = 'loop,group,alt,note,legend,startdot,startmindmap,startuml,startsalt,start/;"	v
b:erlang_syntax_synced	plugged/vim-polyglot/syntax/erlang.vim	/^let b:erlang_syntax_synced = 1$/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(&filetype,'\\C\\<eruby\\>','@','g'),'[/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubi/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubi/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^.\\{-\\}\\ze\\.eruby\\>')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/nginx.vim	/^let b:eruby_subtype = ''$/;"	v
b:eruby_subtype_indentexpr	plugged/vim-polyglot/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:eterm_minlines	plugged/vim-polyglot/syntax/eterm.vim	/^  let b:eterm_minlines = 50$/;"	v
b:eterm_minlines	plugged/vim-polyglot/syntax/eterm.vim	/^  let b:eterm_minlines = eterm_minlines$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_dialect = "f08"$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_dialect = g:fortran_dialect$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^  let b:fortran_dialect = "F"$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^  let b:fortran_dialect = "f08"$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^        let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_retype	plugged/vim-polyglot/syntax/fortran.vim	/^let b:fortran_retype = getline(1)." ".getline(2)." ".getline(3)$/;"	v
b:framescript_minlines	plugged/vim-polyglot/syntax/framescript.vim	/^let b:framescript_minlines = exists("framescript_minlines")$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git[\\\/]worktrees[\\\/][^\\\/]\\+\\>')$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:handlebars_subtype_indentexpr	plugged/vim-polyglot/indent/handlebars.vim	/^let b:handlebars_subtype_indentexpr = &l:indentexpr$/;"	v
b:hi_indent	plugged/vim-polyglot/after/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
b:hi_indent	plugged/vim-polyglot/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
b:hi_lasttick	plugged/vim-polyglot/after/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_lasttick	plugged/vim-polyglot/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_newstate	plugged/vim-polyglot/after/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
b:hi_newstate	plugged/vim-polyglot/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
b:hs_chs	plugged/vim-polyglot/syntax/chaskell.vim	/^let b:hs_chs=1$/;"	v
b:html_indent_usestate	plugged/vim-polyglot/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:html_indent_usestate	plugged/vim-polyglot/indent/handlebars.vim	/^let b:html_indent_usestate = 0$/;"	v
b:indent_use_syntax	plugged/vim-polyglot/indent/perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indent_use_syntax	plugged/vim-polyglot/indent/raku.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indentexpr_base	plugged/vim-polyglot/after/indent/javascript-2.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:indentexpr_base	plugged/vim-polyglot/after/indent/php.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:indentexpr_base	plugged/vim-polyglot/after/indent/typescript.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:is_hledger	plugged/vim-polyglot/syntax/ledger.vim	/^    let b:is_hledger = 0$/;"	v
b:is_hledger	plugged/vim-polyglot/syntax/ledger.vim	/^    let b:is_hledger = 1$/;"	v
b:jst_nest_level	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = 1$/;"	v
b:jst_nest_level	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'haml'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'javascript'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'ruby'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'text'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'yaml'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = g:jst_default_subtype$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.jst\\)\\+$','',''),'\\.\\zs/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(&filetype,'^jst\\.\\zs\\w\\+')$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(s:lines,'jst_subtype=\\zs\\w\\+')$/;"	v
b:jst_subtype_indentexpr	plugged/vim-polyglot/indent/jst.vim	/^let b:jst_subtype_indentexpr = &l:indentexpr$/;"	v
b:jsx_pretty_old_cms	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^let b:jsx_pretty_old_cms = &l:commentstring$/;"	v
b:jsx_pretty_old_cms	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^let b:jsx_pretty_old_cms = &l:commentstring$/;"	v
b:julia_begin_keywords	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywords = '\\%(\\%(\\.\\s*\\)\\@<!\\|\\%(@\\s*.\\s*\\)\\@<=\\)\\<\\%(functi/;"	v
b:julia_begin_keywordsm	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywordsm = '\\%(' . s:yesmacro . b:julia_begin_keywords . '\\)\\|'$/;"	v
b:julia_end_keywords	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_end_keywords = '\\<end\\>'$/;"	v
b:julia_vim_loaded	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:julia_vim_loaded = 1$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	    let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	    let b:lhs_markup = matchstr(lhs_markup,'\\<\\%(tex\\|none\\)\\>')$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "plain"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "tex"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	plugged/vim-polyglot/indent/liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:loaded_mustache_handlebars	plugged/vim-polyglot/ftplugin/handlebars.vim	/^let b:loaded_mustache_handlebars = 1$/;"	v
b:loaded_plantuml_plugin	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:loaded_plantuml_plugin = 1$/;"	v
b:main_syntax	plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = 'twig'$/;"	v
b:main_syntax	plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = b:current_syntax$/;"	v
b:mako_outer_lang	plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = "html"$/;"	v
b:mako_outer_lang	plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = g:mako_default_outer_lang$/;"	v
b:match_ignorecase	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/hamster.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/html.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/mako.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/nsis.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_ignorecase = 1 " (pascal is case-insensitive)$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/svelte.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/vb.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let b:match_ignorecase=1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_skip	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_skip = 's:comment\\|string'$/;"	v
b:match_skip	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_skip = 's:comment\\|string'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_skip = 'synIDattr(synID(line("."), col("."), 0), "name") !=# "bladeKeyword"'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_skip = 's:comment\\|string\\|regex\\|character'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_skip =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/hog.vim	/^    let b:match_skip = 'r:\\\\.\\{-}$\\|^\\s*#.\\{-}$\\|^\\s*$'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_skip = 'synIDattr(synID(line("."),col("."),1),"name") =~ '$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_skip = 's:comment\\|string\\|perlQQ\\|perlShellCommand\\|perlHereDoc\\|perlSubstitut/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_skip = 's:Comment\\|String\\|Character\\|CaseGuard'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:match_skip = 's:comment\\|string\\|rustCharacter\\|rustArrow'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/vala.vim	/^let b:match_skip = 's:comment\\|string\\|character\\|special'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:match_skip = 's:comment\\|string\\|zimbuchar'$/;"	v
b:match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = s:set_match_words()$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '<\\@<=\\([^\/][^ \\t>]*\\)\\g{hlend}[^>]*\\%(\/\\@<!>\\|$\\):<\\@<=\/\\1>/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_words = '<\\@<=\\([^\/][^ \\t>]*\\)\\g{hlend}[^>]*\\%(\/\\@<!>\\|$\\):<\\@<=\/\\1>/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:match_words = $/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ada.vim	/^   let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_words .= ',' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_words = &matchpairs$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:match_words=$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/csc.vim	/^    let b:match_words=$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/dtd.vim	/^    let b:match_words = '<!--:-->,<!:>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_words = '\\:\\@<!\\<\\%(do\\|fn\\)\\:\\@!\\>' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/framescript.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/hamster.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  let b:match_words = b:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/hog.vim	/^    let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/html.vim	/^    let b:match_words = '<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:match_words = '^\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|v/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_words = 'JuliaGetMatchWords()'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/kconfig.vim	/^  let b:match_words = '^\\<menu\\>:\\<endmenu\\>,^\\<if\\>:\\<endif\\>,^\\<choice\\>:\\<endchoic/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\</;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/make.vim	/^  let b:match_words = '^ *ifn\\=\\(eq\\|def\\)\\>:^ *else\\(\\s\\+ifn\\=\\(eq\\|def\\)\\)\\=\\>:/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mako.vim	/^  let b:match_words = "<:>," .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/nsis.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words .= ',\\<if\\>:\\<else\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words .= ',\\<repeat\\>:\\<until\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words .= ':\\<^\\s*\\%(except\\|finally\\)\\>:\\<end\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words = '\\<\\%(begin\\|case\\|record\\|object\\|try\\)\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pdf.vim	/^    let b:match_words = '\\<\\%(\\d\\+\\s\\+\\d\\+\\s\\+\\)obj\\>:\\<endobj\\>,\\<stream$:\\<end/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_words = '\\<if\\>:\\<elsif\\>:\\<else\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_words = '\\v<%(ifdef|if|match|while|for|repeat|try|with|recover|object|lambda|iftype/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:match_words = '<<:>>,\\<begin\\>:\\<end\\>,\\<save\\>:\\<restore\\>,\\<gsave\\>:\\<grest/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:match_words = &matchpairs .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/svelte.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/tex.vim	/^  let b:match_words .= ',\\\\begin\\s*\\({\\a\\+\\*\\=}\\):\\\\end\\s*\\1'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/twig.vim	/^        let b:match_words .= ',' . s:pattern$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:match_words = exists('b:match_words')$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vala.vim	/^let b:match_words = '^\\s*#\\s*if\\(\\|def\\|ndef\\)\\>:^\\s*#\\s*elif\\>:^\\s*#\\s*else\\>:^\\s/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vb.vim	/^    let b:match_words=$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:match_words=$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:match_words = '\\(^\\s*\\)\\@<=\\(MODULE\\|CLASS\\|INTERFACE\\|BITS\\|ENUM\\|SHARED\\|FUNC/;"	v
b:match_words	plugged/vim-polyglot/syntax/cdl.vim	/^let b:match_words='\\<if\\>:\\<then\\>:\\<elseif\\>:\\<else\\>:\\<endif\\>'$/;"	v
b:match_words	plugged/vim-polyglot/syntax/cmod.vim	/^let b:match_words = "({:}\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\)\\|else\\|el\\%(se\\)\\?if\\|en/;"	v
b:match_words	plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_words = '<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/syntax/pike.vim	/^let b:match_words = "({:}\\\\@1<=),(\\\\[:]\\\\@1<=),(<:>\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw =         '\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:pdf_tagstack	plugged/vim-polyglot/ftplugin/pdf.vim	/^    let b:pdf_tagstack = []$/;"	v
b:php_version_id	plugged/vim-polyglot/syntax/php.vim	/^  let b:php_version_id = g:php_version_id$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'cpp'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'objc'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'ruby'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = g:ragel_default_subtype$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.rl\\|\\.ragel\\)\\+$','',/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^  let b:ragel_subtype = matchstr(s:lines, 'ragel_subtype=\\zs\\w\\+')$/;"	v
b:ran_once	plugged/vim-polyglot/indent/twig.vim	/^let b:ran_once = 1$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/slim.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:rust_last_args	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_last_args = []$/;"	v
b:rust_last_rustc_args	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_last_rustc_args = []$/;"	v
b:rust_original_delimitMate_excluded_regions	plugged/vim-polyglot/ftplugin/rust.vim	/^        let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
b:rust_set_conceallevel	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_conceallevel=1$/;"	v
b:rust_set_foldmethod	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_foldmethod=1$/;"	v
b:rust_set_style	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_style = 1$/;"	v
b:smartcomment_force_linemode	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:smartcomment_force_linemode = 1      " for carlobaldassi\/vim-smartcomment$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/dart.vim	/^let b:spell_options = 'contained'$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/haxe.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/java.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/wsml.vim	/^let b:spell_options="contained"$/;"	v
b:sql_compl_savefunc	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:sql_compl_savefunc = &omnifunc$/;"	v
b:sql_type_override	plugged/vim-polyglot/syntax/php.vim	/^    let b:sql_type_override='mysql'$/;"	v
b:sql_vis	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:sql_vis = 1$/;"	v
b:surround_35	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_35 = "<%# \\r %>"$/;"	v
b:surround_45	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_45 = "<% \\r %>"$/;"	v
b:surround_5	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_5 = "<% \\r %>\\n<% end %>"$/;"	v
b:surround_61	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_61 = "<%= \\r %>"$/;"	v
b:svg_indent_close	plugged/vim-polyglot/indent/svg.vim	/^  let b:svg_indent_close = '.\\{-}<\/'$/;"	v
b:svg_indent_open	plugged/vim-polyglot/indent/svg.vim	/^  let b:svg_indent_open = '.\\{-}<\\a'$/;"	v
b:tex_isk	plugged/vim-polyglot/syntax/tex.vim	/^  let b:tex_isk= '@,'.g:tex_isk$/;"	v
b:tex_isk	plugged/vim-polyglot/syntax/tex.vim	/^  let b:tex_isk= g:tex_isk$/;"	v
b:tex_isk	plugged/vim-polyglot/syntax/tex.vim	/^ let b:tex_isk="48-57,a-z,A-Z,192-255"$/;"	v
b:tex_isk	plugged/vim-polyglot/syntax/tex.vim	/^ let b:tex_isk="@,48-57,a-z,A-Z,192-255"$/;"	v
b:tex_stylish	plugged/vim-polyglot/syntax/tex.vim	/^  let b:tex_stylish= 0$/;"	v
b:tex_stylish	plugged/vim-polyglot/syntax/tex.vim	/^  let b:tex_stylish= 1$/;"	v
b:tex_stylish	plugged/vim-polyglot/syntax/tex.vim	/^ let b:tex_stylish= g:tex_stylish$/;"	v
b:tsx_match_words	plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:tsx_match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:tsx_ts_indentexpr	plugged/vim-polyglot/indent/typescriptreact.vim	/^let b:tsx_ts_indentexpr = &indentexpr$/;"	v
b:tt2_syn_inc_perl	plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_inc_perl = 1$/;"	v
b:tt2_syn_tags	plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_tags = '\\[% %]'$/;"	v
b:twigMatchWords	plugged/vim-polyglot/ftplugin/twig.vim	/^    let b:twigMatchWords = [$/;"	v
b:ultisnips_override_snipmate	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:undo_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/javascript-1.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/javascript-1.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/a2ps.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/aap.vim	/^let b:undo_ftplugin = "setl fo< com< et<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin .= "|unmap <buffer> [[|unmap <buffer> ]]"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "let s:cpo_save = &cpoptions|"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "setlocal include< includeexpr< isfname<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^let b:undo_ftplugin = "setl comments< commentstring< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/arch.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase b:browsefilter | " . s:undo_ftplu/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^    let b:undo_ftplugin .= " | setl fp<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^  let b:undo_ftplugin .= " | setl inc< path<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^let b:undo_ftplugin = "setl fo< com< cms< def< sua<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/bdf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/bst.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/calendar.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cfg.vim	/^let b:undo_ftplugin = "setl cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let b:undo_ftplugin .= ' | setlocal ' . s:setting . '<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | setlocal path<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:match_words b:match_skip'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< define< formatoptions< comments< commentstring< lispw/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cobol.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo< et< tw<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/crm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/csc.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/css.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo< ofu<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dart.vim	/^let b:undo_ftplugin = 'setl et< fo< sw< sts< com< cms< inex< isf<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let b:undo_ftplugin = 'setlocal tw< comments< foldmethod< foldexpr< foldtext<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^let b:undo_ftplugin = 'setlocal tw< foldmethod< foldexpr< foldtext<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dictconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/diff.vim	/^let b:undo_ftplugin = "setl modeline<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dircolors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dockerfile.vim	/^let b:undo_ftplugin = "setl commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions< keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dosini.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dtd.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring< shiftwidth<' .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/elinks.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:undo_ftplugin = 'setlocal sw< sts< et< isk< com< cms< path< inex< sua< def< fo<'.$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/erlang.vim	/^let b:undo_ftplugin = "setlocal foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eterm.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/falcon.vim	/^let b:undo_ftplugin = "setlocal tabstop< shiftwidth< expandtab< fileencoding<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fortran.vim	/^let b:undo_ftplugin = "setl fo< com< tw< cms< et< inc< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/framescript.vim	/^let b:undo_ftplugin = "setl com< cms< fo< inc< | unlet! b:matchwords"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fvwm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gdb.vim	/^let b:undo_ftplugin = "setlocal cms<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline< tabstop< formatoptions< tw< com< cms< formatlistpat<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|delc DiffGitCached"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitignore.vim	/^let b:undo_ftplugin = 'setlocal commentstring<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|exe 'nunmap <buffer> K'|exe 'nunmap <buffer> <C-A>'|ex/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo< ml<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gpg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/graphql.vim	/^let b:undo_ftplugin = 'setlocal com< cms< fo< isk< sts< sw< et<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/groovy.vim	/^let b:undo_ftplugin = 'setlocal commentstring<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/group.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/grub.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl def< cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hamster.vim	/^let b:undo_ftplugin = "setl fo< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/help.vim	/^let b:undo_ftplugin = "setl fo< tw< cole< cocu< keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hgcommit.vim	/^let b:undo_ftplugin = 'setl modeline<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hostconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/html.vim	/^let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/indent.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:match_ignorecase b:match_words'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^let b:undo_ftplugin .= ' | silent! execute "unmap <buffer> ]]"'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^let b:undo_ftplugin = 'setlocal suffixesadd< includeexpr< include< path< matchpairs< formatoptio/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/java.vim	/^let b:undo_ftplugin = "setlocal suffixes< suffixesadd<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/jproperties.vim	/^let b:undo_ftplugin = "setl cms< com< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^    let b:undo_ftplugin .= " | call julia_blocks#remove_mappings()"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . " | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin .= " | delcommand JuliaDoc | delcommand JuliaDocKeywordprg"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin .= " | setlocal keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin = "setlocal include< suffixesadd< comments< commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= " | delcommand JuliaDoc | delcommand JuliaDocKeywordprg"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= " | setlocal keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= 'setlocal conceallevel< concealcursor< wrap<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:undo_ftplugin = "setlocal efm<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:undo_ftplugin = b:undo_ftplugin . " | setlocal efm<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/lftp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/libao.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/limits.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/lisp.vim	/^let b:undo_ftplugin = "setlocal comments< define< formatoptions< iskeyword< lisp< commentstring</;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/logcheck.vim	/^let b:undo_ftplugin = 'setl fo<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/logindefs.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/logtalk.vim	/^let b:undo_ftplugin = "setl ts< sw< fdm< fdc< ai< dict<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/m4.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mail.vim	/^let b:undo_ftplugin = "setl modeline< tw< fo< comments<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mailcap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/make.vim	/^let b:undo_ftplugin = "setl et< sts< sw< fo< com< cms< inc<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/manconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mf.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/modconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/moon.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mp.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mrxvtrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/muttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nanorc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/netrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nsis.vim	/^let b:undo_ftplugin = "setl com< cms< fo< def< inc<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:undo_ftplugin = "setlocal efm< foldmethod< foldexpr<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/occam.vim	/^let b:undo_ftplugin = "setlocal shiftwidth< softtabstop< expandtab<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pamconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pascal.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/passwd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:undo_ftplugin .= " | silent! nunmap <buffer> <C-]> | silent! nunmap <buffer> <C-T>"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:undo_ftplugin = "setlocal cms< com< | unlet! b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk< isf< kp< path<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pinfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:undo_ftplugin = 'set comments< commentstring< formatoptions< path< include< includeexpr< d/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/postscr.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/procmail.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/prolog.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/protocols.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo< iskeyword< keywordprg<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/puppet.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/qml.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/quake.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/racket.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/raku.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< isk< kp< path<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/readline.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rnc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin .= " | setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin = "setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rpl.vim	/^let b:undo_ftplugin = "setlocal fo< comments<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rst.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= "| setl bexpr="$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= ' | setl sw< sts< et<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><ctag>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl inc= sua= path= tags= fo< com< cms< kp="$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sass.vim	/^  let b:undo_ftplugin .= ' isk<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:undo_ftplugin = 'setl lisp< comments< commentstring< define< iskeyword<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:undo_ftplugin = b:undo_ftplugin . ' lispwords<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/screen.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sensors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/services.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/setserial.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sieve.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let b:undo_ftplugin = "setl isk<" . " | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slpconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slpreg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slpspi.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:undo_ftplugin = "unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:undo_ftplugin = "setl comments< formatoptions< define< omnifunc<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sudoers.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sysctl.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/systemd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/tcl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terminfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let b:undo_ftplugin .= ' foldmethod<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let b:undo_ftplugin .= ' iskeyword<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let b:undo_ftplugin .= '|iunmap <buffer> ='$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin .= ' commentstring<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin .= '|delcommand Terraform|delcommand TerraformFmt'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin = 'setlocal formatoptions<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/tex.vim	/^let b:undo_ftplugin .= "| setl inex<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/text.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/tmux.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/toml.vim	/^let b:undo_ftplugin = 'setlocal commentstring< comments<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/treetop.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin .= "|setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/udevconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/udevperm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/updatedb.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/verilog.vim	/^let b:undo_ftplugin = "setlocal fo< com< tw<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vroom.vim	/^let b:undo_ftplugin = 'setlocal formatoptions< shiftwidth< softtabstop<' .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/wast.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring< formatoptions< iskeyword<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xinetd.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/yaml.vim	/^  let b:undo_ftplugin .= " sw< sts<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/yaml.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/zig.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< efm< tw< et< sts< sw< | if has('vms') | setl isk< | en/;"	v
b:undo_indent	plugged/vim-polyglot/after/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/arduino.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/autohotkey.vim	/^let b:undo_indent = 'setlocal '.join([$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/bib.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/clojure.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/clojure.vim	/^let b:undo_indent = 'setlocal autoindent< smartindent< expandtab< softtabstop< shiftwidth< inden/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cs.vim	/^let b:undo_indent = 'setlocal indentexpr<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/css.vim	/^let b:undo_indent = "setl smartindent< indentkeys< indentexpr<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cuda.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/dart.vim	/^let b:undo_indent = 'setl cin< cino<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/fennel.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/hog.vim	/^let b:undo_indent = 'setlocal smartindent< indentexpr< indentkeys<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/j.vim	/^let b:undo_indent = 'setlocal indentkeys< indentexpr<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/java.vim	/^let b:undo_indent = "set cin< cino< indentkeys< indentexpr<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/lifelines.vim	/^let b:undo_indent = "setl cin< cino< cinw<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/lisp.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/mp.vim	/^let b:undo_indent = "setl indentkeys< indentexpr<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/pony.vim	/^let b:undo_indent = 'set lisp< cindent< autoindent< smartindent< indentexpr< indentkeys< cinkeys/;"	v
b:undo_indent	plugged/vim-polyglot/indent/proto.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/ps1.vim	/^let b:undo_indent = "setl si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/puppet.vim	/^let b:undo_indent = "$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/racket.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/rpl.vim	/^let b:undo_indent = "set ai< indentkeys< indentexpr<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/scss.vim	/^let b:undo_indent = 'setl smartindent< indentkeys< indentexpr<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/sshconfig.vim	/^let b:undo_indent = "setlocal autoindent< indentexpr< indentkeys<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/terraform.vim	/^let b:undo_indent = 'setlocal lisp< autoindent< shiftwidth< tabstop< softtabstop<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/vb.vim	/^let b:undo_indent = "set ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/vroom.vim	/^let b:undo_indent = 'setlocal autoindent<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/wast.vim	/^let b:undo_indent = "setl lisp< indentexpr<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/yaml.vim	/^let b:undo_indent = 'setlocal indentexpr< indentkeys< smartindent<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/zimbu.vim	/^let b:undo_indent = "setl et< sw< ai< indentkeys< indentexpr="$/;"	v
b:vala_minlines	plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = 50$/;"	v
b:vala_minlines	plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = vala_minlines$/;"	v
b:vera_minlines	plugged/vim-polyglot/syntax/vera.vim	/^    let b:vera_minlines = 15	" mostly for () constructs$/;"	v
b:vera_minlines	plugged/vim-polyglot/syntax/vera.vim	/^    let b:vera_minlines = 50	" #if 0 constructs can be long$/;"	v
b:vera_minlines	plugged/vim-polyglot/syntax/vera.vim	/^  let b:vera_minlines = vera_minlines$/;"	v
b:vhdl_explore	plugged/vim-polyglot/ftplugin/vhdl.vim	/^let b:vhdl_explore = '\\%(architecture\\|block\\|configuration\\|component\\|entity\\|function\\/;"	v
b:xf86conf_xfree86_version	plugged/vim-polyglot/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = 4$/;"	v
b:xf86conf_xfree86_version	plugged/vim-polyglot/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = xf86conf_xfree86_version$/;"	v
b:yaml_schema	plugged/vim-polyglot/syntax/yaml.vim	/^    let b:yaml_schema = 'core'$/;"	v
b:yaml_schema	plugged/vim-polyglot/syntax/yaml.vim	/^    let b:yaml_schema = g:yaml_schema$/;"	v
balanced-match	plugged/onedark.vim/build/package-lock.json	/^        "balanced-match": "^1.0.0",$/;"	s	object:dependencies.brace-expansion.requires
balanced-match	plugged/onedark.vim/build/package-lock.json	/^    "balanced-match": {$/;"	o	object:dependencies
bar	plugged/vista.vim/test/data/123.cpp	/^namespace foo::bar {$/;"	n	namespace:foo	file:
bar	plugged/vista.vim/test/data/175.cpp	/^		int bar;$/;"	m	struct:example::__anon517ee2f20308	typeref:typename:int	file:
bar	plugged/vista.vim/test/data/175.cpp	/^	int bar;$/;"	m	struct:__anon517ee2f20108	typeref:typename:int	file:
base	plugged/vim-polyglot/ftdetect/polyglot.vim	/^    let base = split(pkg, '\\.')$/;"	v
basename	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
baz	plugged/vista.vim/test/data/70.py	/^        def baz(self):$/;"	m	class:Foo.Bar
bclose_multiple	plugged/bclose.vim/plugin/bclose.vim	/^  let bclose_multiple = 1$/;"	v
beg	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    uint16_t beg;$/;"	m	struct:ValueElements	typeref:typename:uint16_t	file:
beg	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    uint16_t beg;$/;"	m	struct:HighlightGroup	typeref:typename:uint16_t
bindeval	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def bindeval(text):$/;"	f
bmenu_priority	plugged/vim-polyglot/extras/menu.vim	/^  let bmenu_priority = 60$/;"	v
body_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblu/;"	v
body_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
brace-expansion	plugged/onedark.vim/build/package-lock.json	/^        "brace-expansion": "^1.1.7"$/;"	s	object:dependencies.minimatch.requires
brace-expansion	plugged/onedark.vim/build/package-lock.json	/^    "brace-expansion": {$/;"	o	object:dependencies
brace_expansion	plugged/vim-polyglot/scripts/build	/^def brace_expansion(s)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
brace_expansion	plugged/vim-polyglot/scripts/import_vim	/^def brace_expansion(s)$/;"	f
buf	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
buf	plugged/vim-quickui/test/test_nvim_popup.vim	/^let buf = nvim_create_buf(v:false, v:true)$/;"	v
bufExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^bufExplManager = BufExplManager()$/;"	v
bufTagExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^bufTagExplManager = BufTagExplManager()$/;"	v
buf_path	plugged/ncm2-path/pythonx/ncm2_path.py	/^buf_path = BufPath(vim)$/;"	v
buffer	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    FeResult* buffer;$/;"	m	struct:MergeTaskItem	typeref:typename:FeResult *	file:
buffer	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    void**          buffer;$/;"	m	struct:FeCircularQueue	typeref:typename:void **	file:
buffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def buffer(self):$/;"	m	class:FloatWindow
buffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def buffer(self):$/;"	m	class:LfInstance
buffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def buffer(self):$/;"	m	class:PopupWindow
buffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def buffer(self, buffer):$/;"	m	class:FloatWindow
buffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def buffer(self, buffer):$/;"	m	class:PopupWindow
buffer	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
buffer-from	plugged/onedark.vim/build/package-lock.json	/^        "buffer-from": "^1.0.0",$/;"	s	object:dependencies.concat-stream.requires
buffer-from	plugged/onedark.vim/build/package-lock.json	/^    "buffer-from": {$/;"	o	object:dependencies
buffer_list	plugged/vim-polyglot/extras/menu.vim	/^  aug buffer_list$/;"	a
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("", "")$/;"	v	class:_SelectModeMappings
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("H", "blah")$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
build	plugged/onedark.vim/build/package.json	/^    "build": "node build.js",$/;"	s	object:scripts
build	plugged/vim-polyglot/Makefile	/^build:$/;"	t
buildPopupPrompt	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def buildPopupPrompt(self):$/;"	m	class:LfCli
byte2col	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def byte2col(line, nbyte):$/;"	f
c	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> c             :exec g:Lf_py "fileExplManager.clearSelections()"<C/;"	m
c	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> c             :exec g:Lf_py "mruExplManager.clearSelections()"<CR/;"	m
c	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
c	plugged/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
cache_cleanup	plugged/ncm2/pythonx/ncm2_core.py	/^    def cache_cleanup(self, *args):$/;"	m	class:Ncm2Core
cache_cleanup	plugged/ncm2/pythonx/ncm2_core.py	/^cache_cleanup = ncm2_core.cache_cleanup$/;"	v
cache_cleanup_check	plugged/ncm2/pythonx/ncm2_core.py	/^    def cache_cleanup_check(self, ctx):$/;"	m	class:Ncm2Core
call	plugged/ale/test/python/test_deoplete_source.py	/^    def call(self, function, *args):$/;"	m	class:VimMock
callsig_pat	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^callsig_pat = re.compile(r'^\\s*(?!from|import).*?[(,]\\s*$')$/;"	v
callsites	plugged/onedark.vim/build/package-lock.json	/^        "callsites": "^3.0.0"$/;"	s	object:dependencies.parent-module.requires
callsites	plugged/onedark.vim/build/package-lock.json	/^    "callsites": {$/;"	o	object:dependencies
camelize	plugged/vim-polyglot/scripts/build	/^def camelize(str)$/;"	f
cancel_tests	plugged/ale/run-tests	/^cancel_tests() {$/;"	f
capacity	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t        capacity;$/;"	m	struct:FeCircularQueue	typeref:typename:uint32_t	file:
cargo#Load	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#Load()$/;"	f
cargo#bench	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#bench(args)$/;"	f
cargo#build	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#build(args)$/;"	f
cargo#check	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#check(args)$/;"	f
cargo#clean	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#clean(args)$/;"	f
cargo#cmd	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#cmd(args) abort$/;"	f
cargo#doc	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#doc(args)$/;"	f
cargo#init	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#init(args)$/;"	f
cargo#install	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#install(args)$/;"	f
cargo#nearestCargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestCargo(is_getcwd) abort$/;"	f
cargo#nearestRootCargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestRootCargo(is_getcwd) abort$/;"	f
cargo#nearestWorkspaceCargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestWorkspaceCargo(is_getcwd) abort$/;"	f
cargo#new	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#new(args)$/;"	f
cargo#publish	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#publish(args)$/;"	f
cargo#quickfix#CmdPost	plugged/vim-polyglot/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPost() abort$/;"	f
cargo#quickfix#CmdPre	plugged/vim-polyglot/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPre() abort$/;"	f
cargo#run	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#run(args)$/;"	f
cargo#runtarget	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#runtarget(args)$/;"	f
cargo#search	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#search(args)$/;"	f
cargo#test	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#test(args)$/;"	f
cargo#update	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#update(args)$/;"	f
carp_syntax_init	plugged/vim-polyglot/syntax/carp.vim	/^    let carp_syntax_init = 1$/;"	v
case classes	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
case objects	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
catchException	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^def catchException(func):$/;"	f
chalk	plugged/onedark.vim/build/package-lock.json	/^        "chalk": "^2.0.0",$/;"	s	object:dependencies.@babel/highlight.requires
chalk	plugged/onedark.vim/build/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.eslint.requires
chalk	plugged/onedark.vim/build/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.husky.requires
chalk	plugged/onedark.vim/build/package-lock.json	/^        "chalk": {$/;"	o	object:dependencies.@babel/highlight.dependencies
chalk	plugged/onedark.vim/build/package-lock.json	/^    "chalk": {$/;"	o	object:dependencies
changelogMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^augroup changelogMenu$/;"	a
chars	plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = substitute(chars, '.$', '', '')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = substitute(s, '"\\(.\\{'.cpp.'}\\s\\).*"', '\\1', '')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^let chars  = ""$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(chars, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(chars, '\\\\s\\\\+$', '', '')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(s, '\\(.\\{'.cpp.'}\\s\\+\\).*', '\\1', '')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^  let chars  = ""$/;"	v
charset	plugged/vim-polyglot/autoload/xml/html5.vim	/^let charset = [$/;"	v
chcmp_case	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^chcmp_case = lambda a,b: a == b$/;"	f
chcmp_case	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def chcmp_case(a, b): return a == b$/;"	f
chcmp_icase	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^chcmp_icase = lambda a,b: a.lower() == b.lower()$/;"	f
chcmp_icase	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def chcmp_icase(a, b): return a.lower() == b.lower()$/;"	f
chcmp_smartcase	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^chcmp_smartcase = lambda a,b: a == b if a.isupper() else a == b.lower()$/;"	f
chcmp_smartcase	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def chcmp_smartcase(a, b): return a == b if a.isupper() else a == b.lower()$/;"	f
check	plugged/ncm2-go/pythonx/ncm2_go.py	/^    def check(self):$/;"	m	class:Source
check_errors	plugged/ale/test/script/custom-linting-rules	/^check_errors() {$/;"	f
check_lines	plugged/ale/test/script/block-padding-checker	/^def check_lines(line_iter):$/;"	f
check_patterns	plugged/ncm2/pythonx/ncm2_core.py	/^    def check_patterns(self, data, sr, ctx):$/;"	m	class:Ncm2Core
check_required_vim_version	plugged/ultisnips/test/test_Autotrigger.py	/^def check_required_vim_version(test):$/;"	f
check_required_vim_version	plugged/ultisnips/test/test_Editing.py	/^def check_required_vim_version(test):$/;"	f
check_source_notify	plugged/ncm2/pythonx/ncm2_core.py	/^    def check_source_notify(self, data, sr, ctx, contexts):$/;"	m	class:Ncm2Core
check_word_pattern	plugged/ncm2/pythonx/ncm2_core.py	/^    def check_word_pattern(self, data, sr, ctx):$/;"	m	class:Ncm2Core
children	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def children(self):$/;"	m	class:EditableTextObject
chill_minlines	plugged/vim-polyglot/syntax/chill.vim	/^  let chill_minlines = 15$/;"	v
choice_pat	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^choice_pat = re.compile(r'^\\$\\{(\\d+)\\|(.*?[^\\\\])?\\|\\}')$/;"	v
ci-info	plugged/onedark.vim/build/package-lock.json	/^        "ci-info": "^2.0.0",$/;"	s	object:dependencies.husky.requires
ci-info	plugged/onedark.vim/build/package-lock.json	/^    "ci-info": {$/;"	o	object:dependencies
class	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*class[[:space:]]*([a-z][a-zA-Z0-9_:\\-]+)\/\\1\/c,class\/$/;"	k	langdef:puppet
classes	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
classes	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*class[ \\t]+([a-zA-Z0-9_]+)\/\\2\/c,classes\/$/;"	k	langdef:typescript
cleanup	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def cleanup(self):$/;"	m	class:AnyExplorer
cleanup	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def cleanup(self):$/;"	m	class:BufTagExplorer
cleanup	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^    def cleanup(self):$/;"	m	class:Explorer
cleanup	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer3.py	/^    def cleanup(self):$/;"	m	class:Explorer
cleanup	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def cleanup(self):$/;"	m	class:FileExplorer
cleanup	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def cleanup(self):$/;"	m	class:FunctionExplorer
cleanup	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def cleanup(self):$/;"	m	class:GtagsExplorer
cleanup	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def cleanup(self):$/;"	m	class:RgExplorer
clear	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def clear(self):$/;"	m	class:LfCli
clearBuffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def clearBuffer(self):$/;"	m	class:LfInstance
clearSelections	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def clearSelections(self):$/;"	m	class:Manager
clear_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def clear_snippets(self, priority, triggers):$/;"	m	class:SnippetDictionary
clear_temp	plugged/ultisnips/test/vim_interface.py	/^    def clear_temp(self):$/;"	m	class:TempFileManager
clojurecomplete#Complete	plugged/vim-polyglot/autoload/clojurecomplete.vim	/^function! clojurecomplete#Complete(findstart, base)$/;"	f
clone_plugin	plugged/ultisnips/test_all.py	/^def clone_plugin(plugin):$/;"	f
close	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def close(self):$/;"	m	class:FloatWindow
close	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def close(self):$/;"	m	class:LfPopupInstance
close	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def close(self):$/;"	m	class:PopupWindow
closeFuzzyEngine	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^void closeFuzzyEngine(FuzzyEngine* pEngine)$/;"	f	typeref:typename:void
close_translator_window	plugged/vim-translator/autoload/translator/window/float.vim	/^  augroup close_translator_window$/;"	a
close_translator_window	plugged/vim-translator/autoload/translator/window/preview.vim	/^  augroup close_translator_window$/;"	a
closure.Process	plugged/vim-polyglot/autoload/RstFold.vim	/^  function closure.Process(match) dict$/;"	f
cls	plugged/ncm2/pythonx/ncm2.py	/^    cls = Popen$/;"	v
clz_table_8bit	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    static uint8_t clz_table_8bit[256] =$/;"	v	typeref:typename:uint8_t[256]	file:
cm#sources#necovim#refresh	plugged/neco-vim/autoload/cm/sources/necovim.vim	/^function! cm#sources#necovim#refresh(opt, ctx)$/;"	f
code	plugged/ale/run-tests.bat	/^set code=%ERRORLEVEL%$/;"	v
code	plugged/onedark.vim/build/build.js	/^		const code = [$/;"	C
code	plugged/vim-quickui/test/test_listbox.vim	/^		let code = quickui#listbox#inputlist(lines, opts)$/;"	v
coffee#CoffeeSetUpErrorFormat	plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
col	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    uint16_t col;$/;"	m	struct:HighlightPos	typeref:typename:uint16_t
col2byte	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def col2byte(line, col):$/;"	f
col_num	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    uint16_t col_num;$/;"	m	struct:TextContext	typeref:typename:uint16_t	file:
color	plugged/vim-polyglot/syntax/xpm.vim	/^		     let color = ""$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^		  let color = substitute(s, '".*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	       let color = substitute(s, '".*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*"', '\\1', /;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(s, '".*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*"', /;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	 let color = substitute(s, '".*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*"', /;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^let color  = ""$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^		let color = ""$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	      let color = substitute(s, '.*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	    let color = substitute(s, '.*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(s, '.*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*', '\\1/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	let color = substitute(s, '.*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*', '\\/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^  let color  = ""$/;"	v
color-convert	plugged/onedark.vim/build/package-lock.json	/^            "color-convert": "^2.0.1"$/;"	s	object:dependencies.chalk.dependencies.ansi-styles.requires
color-convert	plugged/onedark.vim/build/package-lock.json	/^        "color-convert": "^1.9.0"$/;"	s	object:dependencies.ansi-styles.requires
color-convert	plugged/onedark.vim/build/package-lock.json	/^        "color-convert": {$/;"	o	object:dependencies.chalk.dependencies
color-convert	plugged/onedark.vim/build/package-lock.json	/^    "color-convert": {$/;"	o	object:dependencies
color-name	plugged/onedark.vim/build/package-lock.json	/^            "color-name": "~1.1.4"$/;"	s	object:dependencies.chalk.dependencies.color-convert.requires
color-name	plugged/onedark.vim/build/package-lock.json	/^        "color-name": "1.1.3"$/;"	s	object:dependencies.color-convert.requires
color-name	plugged/onedark.vim/build/package-lock.json	/^        "color-name": {$/;"	o	object:dependencies.chalk.dependencies
color-name	plugged/onedark.vim/build/package-lock.json	/^    "color-name": {$/;"	o	object:dependencies
color-vader-output	plugged/ale/test/script/run-vader-tests	/^function color-vader-output() {$/;"	f
colors	plugged/vim-airline/t/themes.vim	/^      let colors = airline#themes#get_highlight('Foo')$/;"	v
colors	plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors	plugged/vim-polyglot/syntax/xpm.vim	/^	 let colors = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
colors	plugged/vim-polyglot/syntax/xpm.vim	/^let colors = 0$/;"	v
colors	plugged/vim-polyglot/syntax/xpm2.vim	/^	let colors = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
colors	plugged/vim-polyglot/syntax/xpm2.vim	/^  let colors = 0$/;"	v
colorschemeExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^colorschemeExplManager = ColorschemeExplManager()$/;"	v
colr	plugged/onedark.vim/build/package-lock.json	/^        "colr": "^1.2.2",$/;"	s	object:dependencies.termcolors.requires
colr	plugged/onedark.vim/build/package-lock.json	/^    "colr": {$/;"	o	object:dependencies
colr-convert	plugged/onedark.vim/build/package-lock.json	/^        "colr-convert": "^1.0.5"$/;"	s	object:dependencies.colr.requires
colr-convert	plugged/onedark.vim/build/package-lock.json	/^    "colr-convert": {$/;"	o	object:dependencies
comma_expanson	plugged/vim-polyglot/scripts/build	/^def comma_expanson(s)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
comma_expanson	plugged/vim-polyglot/scripts/import_vim	/^def comma_expanson(s)$/;"	f
command	plugged/ale/test/python/test_deoplete_source.py	/^    def command(self, command):$/;"	m	class:VimMock
command	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def command(cmd):$/;"	f
commandExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^commandExplManager = CommandExplManager()$/;"	v
commander	plugged/onedark.vim/build/package-lock.json	/^        "commander": "^4.0.1",$/;"	s	object:dependencies.termcolors.requires
commander	plugged/onedark.vim/build/package-lock.json	/^    "commander": {$/;"	o	object:dependencies
commands	plugged/vim-polyglot/syntax/sh.vim	/^let commands = [ 'arch', 'awk', 'b2sum', 'base32', 'base64', 'basename', 'basenc', 'bash', 'brew/;"	v
commands	plugged/vim-polyglot/syntax/zsh.vim	/^let commands = [ 'arch', 'awk', 'b2sum', 'base32', 'base64', 'basename', 'basenc', 'bash', 'brew/;"	v
commentstring	plugged/vim-polyglot/ftplugin/ld.vim	/^setlocal comments=s1:\/*,mb:*,ex:*\/ commentstring=\/*%s*\/ include=^\\\\s*INCLUDE$/;"	s
compare	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static int compare(const void* a, const void* b)$/;"	f	typeref:typename:int	file:
compare-versions	plugged/onedark.vim/build/package-lock.json	/^        "compare-versions": "^3.6.0",$/;"	s	object:dependencies.husky.requires
compare-versions	plugged/onedark.vim/build/package-lock.json	/^    "compare-versions": {$/;"	o	object:dependencies
compare2	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static int compare2(const void* a, const void* b)$/;"	f	typeref:typename:int	file:
complete	plugged/ncm2/pythonx/ncm2.py	/^    def complete(self, ctx, startccol, matches, refresh=False):$/;"	m	class:Ncm2Source
complete	plugged/ncm2/pythonx/ncm2_core.py	/^    def complete(self, data, sctx, startccol, matches, refresh):$/;"	m	class:Ncm2Core
complete	plugged/ncm2/pythonx/ncm2_core.py	/^complete = ncm2_core.complete$/;"	v
complete	plugged/vim-snippets/pythonx/vimsnippets.py	/^def complete(tab, opts):$/;"	f
concat-map	plugged/onedark.vim/build/package-lock.json	/^        "concat-map": "0.0.1"$/;"	s	object:dependencies.brace-expansion.requires
concat-map	plugged/onedark.vim/build/package-lock.json	/^    "concat-map": {$/;"	o	object:dependencies
concat-stream	plugged/onedark.vim/build/package-lock.json	/^        "concat-stream": "^2.0.0",$/;"	s	object:dependencies.termcolors.requires
concat-stream	plugged/onedark.vim/build/package-lock.json	/^    "concat-stream": {$/;"	o	object:dependencies
conserve	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conserve_placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve_placeholder(self, placeholder):$/;"	m	class:VisualContentPreserver
consts,static constants	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?(static|const)[ \\t]+([a-zA-Z0-9_]+)\/\\3\/c,consts,static c/;"	k	langdef:Rust
contained	plugged/vim-polyglot/syntax/plantuml.vim	/^let contained = []$/;"	v
content	plugged/vim-quickui/test/test_listbox.vim	/^	let content = [$/;"	v
content	plugged/vim-quickui/test/test_nvim_list.vim	/^		let content += ['line: ' . ix]$/;"	v
content	plugged/vim-quickui/test/test_nvim_list.vim	/^	let content = [$/;"	v
content_win	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def content_win(self):$/;"	m	class:LfPopupInstance
content_win	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def content_win(self, content_win):$/;"	m	class:LfPopupInstance
context	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def context(self):$/;"	m	class:SnippetDefinition
context	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def context(self):$/;"	m	class:SnippetUtil
conv	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def conv(obj):$/;"	f	function:escape	file:
convert_keys	plugged/ultisnips/test/vim_interface.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
convertor	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^    def convertor(pattern, _, glyph):$/;"	f	function:matchaddDevIconsDefault	file:
copy_file	plugged/vim-polyglot/scripts/build	/^def copy_file(name, src, dest)$/;"	f
core_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], '/;"	v
cosmiconfig	plugged/onedark.vim/build/package-lock.json	/^        "cosmiconfig": "^7.0.0",$/;"	s	object:dependencies.husky.requires
cosmiconfig	plugged/onedark.vim/build/package-lock.json	/^    "cosmiconfig": {$/;"	o	object:dependencies
could_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def could_match(self, before):$/;"	m	class:SnippetDefinition
cpp	plugged/vim-polyglot/syntax/xpm.vim	/^	 let cpp = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm.vim	/^let cpp    = 0$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm2.vim	/^	let cpp = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm2.vim	/^  let cpp    = 0$/;"	v
cpu_count	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t        cpu_count;$/;"	m	struct:FuzzyEngine	typeref:typename:uint32_t	file:
cpu_count	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    cpu_count = multiprocessing.cpu_count()$/;"	v
createFuzzyEngine	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^FuzzyEngine* createFuzzyEngine(uint32_t cpu_count)$/;"	f	typeref:typename:FuzzyEngine *
createWeights	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* createWeights(void* weights)$/;"	f	typeref:typename:PyObject *	file:
create_directory	plugged/ultisnips/test/vim_interface.py	/^def create_directory(dirname):$/;"	f
cross-spawn	plugged/onedark.vim/build/package-lock.json	/^        "cross-spawn": "^7.0.2",$/;"	s	object:dependencies.eslint.requires
cross-spawn	plugged/onedark.vim/build/package-lock.json	/^    "cross-spawn": {$/;"	o	object:dependencies
crossorigin	plugged/vim-polyglot/autoload/xml/html5.vim	/^let crossorigin = ['anonymous', 'use-credentials']$/;"	v
cry_minlines	plugged/vim-polyglot/syntax/cryptol.vim	/^  let cry_minlines = 50$/;"	v
crystal#indent#AfterBlockOpening	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterBlockOpening(pline_info) abort$/;"	f
crystal#indent#AfterEndKeyword	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterEndKeyword(pline_info) abort$/;"	f
crystal#indent#AfterEndMacroTag	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterEndMacroTag(pline_info) abort$/;"	f
crystal#indent#AfterIndentKeyword	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterIndentKeyword(pline_info) abort$/;"	f
crystal#indent#AfterIndentMacroTag	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterIndentMacroTag(pline_info) abort$/;"	f
crystal#indent#AfterLeadingOperator	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterLeadingOperator(pline_info) abort$/;"	f
crystal#indent#AfterLinkAttribute	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterLinkAttribute(pline_info) abort$/;"	f
crystal#indent#AfterTypeDeclaration	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterTypeDeclaration(pline_info) abort$/;"	f
crystal#indent#AfterUnbalancedBracket	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterUnbalancedBracket(pline_info) abort$/;"	f
crystal#indent#ClosingBracketOnEmptyLine	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
crystal#indent#ContinuedHangingOperator	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ContinuedHangingOperator(msl_info) abort$/;"	f
crystal#indent#ContinuedLine	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ContinuedLine(pline_info) abort$/;"	f
crystal#indent#DeindentingKeyword	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#DeindentingKeyword(cline_info) abort$/;"	f
crystal#indent#DeindentingMacroTag	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#DeindentingMacroTag(cline_info) abort$/;"	f
crystal#indent#EmptyInsideString	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#EmptyInsideString(pline_info) abort$/;"	f
crystal#indent#ExtraBrackets	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ExtraBrackets(lnum) abort$/;"	f
crystal#indent#GetMSL	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#GetMSL(lnum) abort$/;"	f
crystal#indent#IndentingKeywordInMSL	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IndentingKeywordInMSL(msl_info) abort$/;"	f
crystal#indent#IsAssignment	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsAssignment(str, pos) abort$/;"	f
crystal#indent#IsInString	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInString(lnum, col) abort$/;"	f
crystal#indent#IsInStringDelimiter	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringDelimiter(lnum, col) abort$/;"	f
crystal#indent#IsInStringOrComment	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringOrComment(lnum, col) abort$/;"	f
crystal#indent#IsInStringOrCommentOrDelimiter	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringOrCommentOrDelimiter(lnum, col) abort$/;"	f
crystal#indent#IsLineComment	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsLineComment(lnum) abort$/;"	f
crystal#indent#LeadingOperator	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#LeadingOperator(cline_info) abort$/;"	f
crystal#indent#Match	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#Match(lnum, regex) abort$/;"	f
crystal#indent#MultilineString	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#MultilineString(cline_info) abort$/;"	f
crystal#indent#PrevNonBlank	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#PrevNonBlank(lnum) abort$/;"	f
crystal#indent#PreviousNotMSL	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#PreviousNotMSL(msl_info) abort$/;"	f
crystal#indent#RelativeMacroDepth	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#RelativeMacroDepth(a, b) abort$/;"	f
crystal#indent#StartOfFile	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#StartOfFile(pline_info) abort$/;"	f
crystal_lang#complete	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#complete(findstart, base) abort$/;"	f
crystal_lang#context	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#context(file, pos, option_str) abort$/;"	f
crystal_lang#entrypoint_for	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#entrypoint_for(file_path) abort$/;"	f
crystal_lang#expand	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#expand(file, pos, ...) abort$/;"	f
crystal_lang#format	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format(option_str, ...) abort$/;"	f
crystal_lang#format_string	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format_string(code, ...) abort$/;"	f
crystal_lang#get_spec_switched_path	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#get_spec_switched_path(absolute_path) abort$/;"	f
crystal_lang#impl	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#impl(file, pos, option_str) abort$/;"	f
crystal_lang#jump_to_definition	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#jump_to_definition(file, pos) abort$/;"	f
crystal_lang#run_all_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_all_spec(...) abort$/;"	f
crystal_lang#run_current_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_current_spec(...) abort$/;"	f
crystal_lang#switch_spec_file	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#switch_spec_file(...) abort$/;"	f
crystal_lang#tool	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#tool(name, file, pos, option_str) abort$/;"	f
crystal_lang#type_hierarchy	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#type_hierarchy(file, option_str) abort$/;"	f
cs	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    CRITICAL_SECTION cs;$/;"	m	struct:FeCircularQueue	typeref:typename:CRITICAL_SECTION	file:
csc_minlines	plugged/vim-polyglot/syntax/csc.vim	/^	let csc_minlines = 50	" mostly for () constructs$/;"	v
csv#AddColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AddColumn(start, stop, ...) range "{{{3$/;"	f
csv#AnalyzeColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AnalyzeColumn(...) "{{{3$/;"	f
csv#ArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ArrangeCol(first, last, bang, limit, ...) range "{{{3$/;"	f
csv#AvgColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AvgColumn(list) "{{{3$/;"	f
csv#CSVArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSVArrangeCol(first, last, bang, limit) range "{{{2$/;"	f
csv#CSVMappings	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSVMappings() "{{{3$/;"	f
csv#CSVSortValues	plugged/vim-polyglot/autoload/csv.vim	/^  fu! csv#CSVSortValues(i1, i2) "{{{3$/;"	f
csv#CSV_SetOption	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSV_SetOption(csvfile, header, option, value) "{{{3$/;"	f
csv#CalculateColumnWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CalculateColumnWidth(row, silent) "{{{3$/;"	f
csv#CheckDuplicates	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CheckDuplicates(list) "{{{3$/;"	f
csv#CheckHeaderLine	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CheckHeaderLine() "{{{3$/;"	f
csv#ColWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColWidth(colnr, row, silent) "{{{3$/;"	f
csv#ColumnMode	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColumnMode() "{{{3$/;"	f
csv#ColumnWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColumnWidth()$/;"	f
csv#Columnize	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Columnize(field) "{{{3$/;"	f
csv#CommandDefinitions	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CommandDefinitions() "{{{3$/;"	f
csv#CompleteColumnNr	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CompleteColumnNr(A,L,P) "{{{3$/;"	f
csv#CopyCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CopyCol(reg, col, cnt) "{{{3$/;"	f
csv#CountColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CountColumn(list) "{{{3$/;"	f
csv#DelColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DelColumn(colnr) "{{{3$/;"	f
csv#DeleteColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DeleteColumn(arg) "{{{3$/;"	f
csv#DisableFolding	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DisableFolding() "{{{3$/;"	f
csv#DoAutoCommands	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DoAutoCommands() "{{{3$/;"	f
csv#DoForEachColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DoForEachColumn(start, stop, bang) range "{{{3$/;"	f
csv#DupColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DupColumn(start, stop, ...) range "{{{3$/;"	f
csv#DuplicateRows	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DuplicateRows(columnlist) "{{{3$/;"	f
csv#EscapeValue	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#EscapeValue(val) "{{{3$/;"	f
csv#EvalColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#EvalColumn(nr, func, first, last, ...) range "{{{3$/;"	f
csv#FoldValue	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#FoldValue(lnum, filter) "{{{3$/;"	f
csv#GetCells	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetCells(list) "{{{3$/;"	f
csv#GetColPat	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetColPat(colnr, zs_flag) "{{{3$/;"	f
csv#GetColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetColumn(line, col, strip) "{{{3$/;"	f
csv#GetCursorChar	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetCursorChar() "{{{3$/;"	f
csv#GetDelimiter	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetDelimiter(first, last, ...) "{{{3$/;"	f
csv#GetPat	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetPat(colnr, maxcolnr, pat, allowmore) "{{{3$/;"	f
csv#HiCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#HiCol(colnr, bang) "{{{3$/;"	f
csv#IN	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#IN(list, value) "{{{3$/;"	f
csv#Init	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Init(start, end, ...) "{{{3$/;"	f
csv#InitCSVFixedWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#InitCSVFixedWidth() "{{{3$/;"	f
csv#LocalCmd	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#LocalCmd(name, definition, args) "{{{3$/;"	f
csv#LocalSettings	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#LocalSettings(type) "{{{3$/;"	f
csv#Map	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Map(map, name, definition, ...) "{{{3$/;"	f
csv#MaxColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MaxColumn(list) "{{{3$/;"	f
csv#MaxColumns	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MaxColumns(...) "{{{3$/;"	f
csv#Menu	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Menu(enable) "{{{3$/;"	f
csv#MoveCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveCol(forward, line, ...) "{{{3$/;"	f
csv#MoveColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveColumn(start, stop, ...) range "{{{3$/;"	f
csv#MoveOver	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveOver(outer) "{{{3$/;"	f
csv#NewDelimiter	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NewDelimiter(newdelimiter, firstl, lastl) "{{{3$/;"	f
csv#NewRecord	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NewRecord(line1, line2, count) "{{{3$/;"	f
csv#NrColumns	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NrColumns(bang) "{{{3$/;"	f
csv#NumberFormat	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NumberFormat() "{{{3$/;"	f
csv#OutputFilters	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#OutputFilters(bang) "{{{3$/;"	f
csv#PopStdDevColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PopStdDevColumn(list) "{{{2$/;"	f
csv#PopVarianceColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PopVarianceColumn(list) "{{{2$/;"	f
csv#PrepUnArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepUnArrangeCol(first, last) "{{{3$/;"	f
csv#PrepareDoForEachColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepareDoForEachColumn(start, stop, bang) range"{{{3$/;"	f
csv#PrepareFolding	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepareFolding(add, match)  "{{{3$/;"	f
csv#ProcessFieldValue	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ProcessFieldValue(field) "{{{3$/;"	f
csv#ProgressBar	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ProgressBar(cnt, max) "{{{3$/;"	f
csv#RemoveLastItem	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#RemoveLastItem(count) "{{{3$/;"	f
csv#SameFieldRegion	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SameFieldRegion() "{{{3$/;"	f
csv#SaveOptions	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SaveOptions(list) "{{{3$/;"	f
csv#SearchColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SearchColumn(arg) "{{{3$/;"	f
csv#SetupAutoCmd	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SetupAutoCmd(window,bufnr) "{{{3$/;"	f
csv#SmplStdDevColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SmplStdDevColumn(list) "{{{2$/;"	f
csv#SmplVarianceColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SmplVarianceColumn(list) "{{{2$/;"	f
csv#Sort	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Sort(bang, line1, line2, colnr) range "{{{3$/;"	f
csv#SortComplete	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SortComplete(A,L,P) "{{{3$/;"	f
csv#SortFilter	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SortFilter(a, b) "{{{3$/;"	f
csv#SplitHeaderLine	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SplitHeaderLine(lines, bang, hor) "{{{3$/;"	f
csv#SplitHeaderToggle	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SplitHeaderToggle(hor) "{{{3$/;"	f
csv#SubstituteInColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SubstituteInColumn(command, line1, line2) range "{{{3$/;"	f
csv#SumCSVRow	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SumCSVRow(line, nr) "{{{3$/;"	f
csv#SumColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SumColumn(list) "{{{3$/;"	f
csv#Tabularize	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Tabularize(bang, first, last) "{{{3$/;"	f
csv#Timeout	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Timeout(start) "{{{3$/;"	f
csv#Transpose	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Transpose(line1, line2) "{{{3$/;"	f
csv#UnArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#UnArrangeCol(match) "{{{3$/;"	f
csv#VarianceColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#VarianceColumn(list, is_population) "{{{3$/;"	f
csv#Vertfold	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Vertfold(bang, col) "{{{3$/;"	f
csv#WColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#WColumn(...) "{{{3$/;"	f
csv#Warn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Warn(mess) "{{{3$/;"	f
curr_dir	plugged/vim-translator/test/test_translator.py	/^curr_dir = os.path.dirname(curr_filename)$/;"	v
curr_filename	plugged/vim-translator/test/test_translator.py	/^curr_filename = os.path.abspath(__file__)$/;"	v
currentLine	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def currentLine(self):$/;"	m	class:LfInstance
current_compiler	plugged/vim-polyglot/compiler/ant.vim	/^let current_compiler = "ant"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/bdf.vim	/^let current_compiler = "bdf"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cargo.vim	/^let current_compiler = "cargo"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/credo.vim	/^let current_compiler = 'credo'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cryptol.vim	/^let current_compiler = "cryptol"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cs.vim	/^let current_compiler = "cs"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/dot.vim	/^let current_compiler = "dot"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/exunit.vim	/^let current_compiler = "exunit"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/fish.vim	/^let current_compiler = 'fish'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/gradle.vim	/^let current_compiler = "gradle"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/gradlew.vim	/^let current_compiler = "gradlew"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ledger.vim	/^let current_compiler = g:ledger_bin$/;"	v
current_compiler	plugged/vim-polyglot/compiler/lilypond.vim	/^let current_compiler = "lilypond"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ls.vim	/^let current_compiler = 'ls'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/mix.vim	/^let current_compiler = 'mix'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/nim.vim	/^let current_compiler = 'nim'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/nix-build.vim	/^let current_compiler = 'nix-build'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ocaml.vim	/^let current_compiler = "ocaml"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/powershell.vim	/^let current_compiler = "powershell"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/python.vim	/^let current_compiler = "python"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rustc.vim	/^let current_compiler = "rustc"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/sbt.vim	/^let current_compiler = 'sbt'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/swift.vim	/^let current_compiler = "swiftc"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/tcl.vim	/^let current_compiler = "tcl"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/tex.vim	/^		let current_compiler = "latex"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/tex.vim	/^		let current_compiler = b:tex_flavor$/;"	v
current_compiler	plugged/vim-polyglot/compiler/tex.vim	/^		let current_compiler = g:tex_flavor$/;"	v
current_compiler	plugged/vim-polyglot/compiler/tex.vim	/^	let current_compiler = 'make'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/tidy.vim	/^let current_compiler = "tidy"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/typescript.vim	/^let current_compiler='typescript'$/;"	v
current_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def current_text(self):$/;"	m	class:TextObject
cursor	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def cursor(self):$/;"	m	class:FloatWindow
cursor	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def cursor(self):$/;"	m	class:PopupWindow
cursor	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def cursor(self, cursor):$/;"	m	class:FloatWindow
cursor	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def cursor(self, cursor):$/;"	m	class:PopupWindow
cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self, pos):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursorController	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^def cursorController(func):$/;"	f
cursorRow	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def cursorRow(self):$/;"	m	class:LfInstance
cursorRow	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def cursorRow(self, row):$/;"	m	class:LfInstance
cwd_path	plugged/ncm2-path/pythonx/ncm2_path.py	/^cwd_path = CwdPath(vim)$/;"	v
d	autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
d	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> d             :exec g:Lf_py "bufExplManager.deleteBuffer(1)"<CR>$/;"	m
d	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> d             :exec g:Lf_py "gtagsExplManager.deleteCurrentLine()/;"	m
d	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> d             :exec g:Lf_py "mruExplManager.deleteMru()"<CR>$/;"	m
d	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> d             :exec g:Lf_py "rgExplManager.deleteCurrentLine()"<C/;"	m
d	plugged/LeaderF/autoload/leaderf/Window.vim	/^    nnoremap <buffer> <silent> d             :exec g:Lf_py "windowExplManager.deleteWindow()"<CR/;"	m
dart#ToggleFormatOnSave	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#ToggleFormatOnSave() abort$/;"	f
dart#analyzer	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#analyzer(q_args) abort$/;"	f
dart#fmt	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#fmt(...) abort$/;"	f
dart#resolveUri	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#resolveUri(uri) abort$/;"	f
dart#setModifiable	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#setModifiable() abort$/;"	f
dart#tojs	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#tojs(q_args) abort$/;"	f
db#adapter#ecto#canonicalize	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#canonicalize(url) abort$/;"	f
db#adapter#ecto#complete_opaque	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#complete_opaque(url) abort$/;"	f
dd	autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
deBruijn	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^static uint64_t deBruijn = 0x022FDD63CC95386D;$/;"	v	typeref:typename:uint64_t	file:
debug	plugged/onedark.vim/build/package-lock.json	/^        "debug": "^4.0.1",$/;"	s	object:dependencies.eslint.requires
debug	plugged/onedark.vim/build/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.@eslint/eslintrc.requires
debug	plugged/onedark.vim/build/package-lock.json	/^    "debug": {$/;"	o	object:dependencies
debug	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
deco	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def deco(*args, **kwargs):$/;"	f	function:cursorController	file:
deco	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^    def deco(*args, **kwargs):$/;"	f	function:removeDevIcons	file:
deco	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def deco(*args, **kwargs):$/;"	f	function:showDevIcons	file:
deco	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def deco(*args, **kwargs):$/;"	f	function:showRelativePath	file:
deco	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^        def deco(self, *args, **kwargs):$/;"	f	function:ignoreEvent.wrapper	file:
deco	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def deco(self, *args, **kwargs):$/;"	f	function:catchException	file:
deco	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def deco(self, *args, **kwargs):$/;"	f	function:modifiableController	file:
deco	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def deco(self, *args, **kwargs):$/;"	f	function:workingDirectory	file:
decorate	plugged/ncm2-ultisnips/ncm2-plugin/ncm2_ultisnips.py	/^    def decorate(data, matches):$/;"	f	function:wrap	file:
deep-is	plugged/onedark.vim/build/package-lock.json	/^        "deep-is": "^0.1.3",$/;"	s	object:dependencies.optionator.requires
deep-is	plugged/onedark.vim/build/package-lock.json	/^    "deep-is": {$/;"	o	object:dependencies
default	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/([A-Z][a-zA-Z0-9_:]+)[[:space:]]*\\{\/\\1\/f,default\/$/;"	k	langdef:puppet
default_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
definition	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*define[[:space:]]*([a-z][a-zA-Z0-9_:\\-]+)\/\\1\/d,definition\/$/;"	k	langdef:puppet
delFromCache	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def delFromCache(self, name):$/;"	m	class:MruExplorer
delFuzzyEngine	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static void delFuzzyEngine(PyObject* obj)$/;"	f	typeref:typename:void	file:
delMruBufnr	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^    def delMruBufnr(self, buf_number):$/;"	m	class:Mru
delParamObj	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static void delParamObj(PyObject* obj)$/;"	f	typeref:typename:void	file:
delPatternContext	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static void delPatternContext(PyObject* obj)$/;"	f	typeref:typename:void	file:
delPatternContext	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^static void delPatternContext(PyObject* obj)$/;"	f	typeref:typename:void	file:
delWeights	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static void delWeights(PyObject* obj)$/;"	f	typeref:typename:void	file:
deleteBuffer	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def deleteBuffer(self, wipe=0):$/;"	m	class:BufExplManager
deleteCurrentLine	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def deleteCurrentLine(self):$/;"	m	class:GtagsExplManager
deleteCurrentLine	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def deleteCurrentLine(self):$/;"	m	class:RgExplManager
deleteMru	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def deleteMru(self):$/;"	m	class:MruExplManager
deleteWindow	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def deleteWindow(self):$/;"	m	class:WindowExplManager
delete_mark	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def delete_mark(name):$/;"	f
delta	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
dependencies	plugged/onedark.vim/build/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/highlight
dependencies	plugged/onedark.vim/build/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.chalk
dependencies	plugged/onedark.vim/build/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.eslint-utils
dependencies	plugged/onedark.vim/build/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.espree
dependencies	plugged/onedark.vim/build/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.esquery
dependencies	plugged/onedark.vim/build/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.esrecurse
dependencies	plugged/onedark.vim/build/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.string-width
dependencies	plugged/onedark.vim/build/package-lock.json	/^  "dependencies": {$/;"	o
dependencies	plugged/onedark.vim/build/package.json	/^  "dependencies": {$/;"	o
dependencies	plugged/vim-snippets/addon-info.json	/^  "dependencies" : {$/;"	o
description	plugged/onedark.vim/build/package.json	/^  "description": "Builds the onedark.vim Vim colorscheme and associated files",$/;"	s
description	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
description	plugged/vim-snippets/addon-info.json	/^  "description" : "community driven set of snippets for snipmate"$/;"	s
detect_filetypes	plugged/vim-polyglot/scripts/build	/^def detect_filetypes(glob)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
detect_filetypes_str	plugged/vim-polyglot/scripts/build	/^def detect_filetypes_str(contents)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
detect_subscopes	plugged/ncm2/pythonx/ncm2_core.py	/^    def detect_subscopes(self, data):$/;"	m	class:Ncm2Core
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.chalk.dependencies.color-name
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.chalk.dependencies.has-flag
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.espree.dependencies.eslint-visitor-keys
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.esquery.dependencies.estraverse
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.esrecurse.dependencies.estraverse
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.string-width.dependencies.ansi-regex
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.@babel/highlight.dependencies.chalk
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.chalk.dependencies.ansi-styles
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.chalk.dependencies.color-convert
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.chalk.dependencies.supports-color
dev	plugged/onedark.vim/build/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.string-width.dependencies.strip-ansi
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/helper-validator-identifier
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/parse-json
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.acorn
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.acorn-jsx
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ansi-colors
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ansi-regex
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.astral-regex
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.balanced-match
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.callsites
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ci-info
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.color-name
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.compare-versions
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.concat-map
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.deep-is
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.emoji-regex
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.escape-string-regexp
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.eslint-visitor-keys
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.estraverse
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.esutils
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-deep-equal
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-json-stable-stringify
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-levenshtein
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.flatted
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fs.realpath
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.functional-red-black-tree
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.has-flag
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ignore
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.imurmurhash
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-arrayish
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-extglob
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-fullwidth-code-point
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.isexe
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.js-tokens
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.json-parse-even-better-errors
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.json-schema-traverse
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.json-stable-stringify-without-jsonify
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.lines-and-columns
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.minimist
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ms
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.natural-compare
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.opencollective-postinstall
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.p-try
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-exists
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-is-absolute
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-key
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-type
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.prelude-ls
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.progress
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.punycode
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.regexpp
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.resolve-from
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.semver-compare
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.semver-regex
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.shebang-regex
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.slash
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-json-comments
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.text-table
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.type-fest
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.v8-compile-cache
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.which-pm-runs
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.word-wrap
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.wrappy
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.yallist
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.yaml
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/code-frame
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/highlight
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@eslint/eslintrc
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.ajv
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.ansi-styles
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.brace-expansion
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.chalk
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.color-convert
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cosmiconfig
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cross-spawn
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.debug
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.doctrine
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.enquirer
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.error-ex
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-scope
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-utils
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.espree
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.esquery
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.esrecurse
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.file-entry-cache
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.find-up
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.find-versions
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.flat-cache
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.glob
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.glob-parent
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.globals
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.husky
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.import-fresh
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.inflight
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-glob
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.levn
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.locate-path
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.lru-cache
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.minimatch
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.mkdirp
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.once
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.optionator
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.p-limit
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.p-locate
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.parent-module
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.parse-json
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pkg-dir
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.please-upgrade-node
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.rimraf
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.semver
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.shebang-command
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.slice-ansi
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.string-width
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.strip-ansi
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.supports-color
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.table
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.type-check
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.uri-js
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.which
dev	plugged/onedark.vim/build/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.write
dev	plugged/vim-polyglot/Makefile	/^dev:$/;"	t
devDependencies	plugged/onedark.vim/build/package.json	/^  "devDependencies": {$/;"	o
devicons#plugins#ctrlp#init	plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^function! devicons#plugins#ctrlp#init() abort$/;"	f
devicons#plugins#denite#init	plugged/vim-devicons/autoload/devicons/plugins/denite.vim	/^function! devicons#plugins#denite#init() abort$/;"	f
devicons#plugins#flagship#init	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^function! devicons#plugins#flagship#init() abort$/;"	f
devicons#plugins#startify#init	plugged/vim-devicons/autoload/devicons/plugins/startify.vim	/^function! devicons#plugins#startify#init() abort$/;"	f
devicons#plugins#unite#init	plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^function! devicons#plugins#unite#init() abort$/;"	f
devicons#plugins#vimfiler#init	plugged/vim-devicons/autoload/devicons/plugins/vimfiler.vim	/^function! devicons#plugins#vimfiler#init() abort$/;"	f
devicons_palette	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^devicons_palette = {$/;"	v
did_c_syn_inits	plugged/vim-polyglot/syntax/llvm.vim	/^    let did_c_syn_inits = 1$/;"	v
did_c_syn_inits	plugged/vim-polyglot/syntax/tablegen.vim	/^    let did_c_syn_inits = 1$/;"	v
did_cql_syn_inits	plugged/vim-polyglot/syntax/cql.vim	/^    let did_cql_syn_inits = 1$/;"	v
did_cry_syntax_inits	plugged/vim-polyglot/syntax/cryptol.vim	/^    let did_cry_syntax_inits = 1$/;"	v
did_css_syn_inits	plugged/vim-polyglot/syntax/stylus.vim	/^    let did_css_syn_inits = 1$/;"	v
did_eighth_syntax_inits	plugged/vim-polyglot/syntax/8th.vim	/^    let did_eighth_syntax_inits=1$/;"	v
did_fs_syntax_inits	plugged/vim-polyglot/syntax/fsharp.vim	/^        let did_fs_syntax_inits = 1$/;"	v
did_gnuplot_syntax_inits	plugged/vim-polyglot/syntax/gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
did_haxe_syn_inits	plugged/vim-polyglot/syntax/haxe.vim	/^    let did_haxe_syn_inits = 1$/;"	v
did_install_default_menus	plugged/vim-polyglot/extras/menu.vim	/^let did_install_default_menus = 1$/;"	v
did_install_syntax_menu	plugged/vim-polyglot/extras/menu.vim	/^  let did_install_syntax_menu = 1$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_lily_syn_inits	plugged/vim-polyglot/syntax/lilypond.vim	/^    let did_lily_syn_inits = 1$/;"	v
did_load_filetypes	plugged/vim-polyglot/extras/filetype.vim	/^let did_load_filetypes = 1$/;"	v
did_load_filetypes	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let did_load_filetypes = 1$/;"	v
did_load_polyglot	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let did_load_polyglot = 1$/;"	v
did_lua_syn_inits	plugged/vim-polyglot/syntax/lua.vim	/^    let did_lua_syn_inits = 1$/;"	v
did_mako_syn_inits	plugged/vim-polyglot/syntax/mako.vim	/^    let did_mako_syn_inits = 1$/;"	v
did_mmp_syntax_inits	plugged/vim-polyglot/syntax/mmp.vim	/^  let did_mmp_syntax_inits=1$/;"	v
did_nim_syn_inits	plugged/vim-polyglot/syntax/nim.vim	/^    let did_nim_syn_inits = 1$/;"	v
did_octave_syntax_inits	plugged/vim-polyglot/syntax/octave.vim	/^    let did_octave_syntax_inits = 1$/;"	v
did_plugin_ultisnips	plugged/ultisnips/plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
did_proto_syn_inits	plugged/vim-polyglot/syntax/fbs.vim	/^    let did_proto_syn_inits = 1$/;"	v
did_proto_syn_inits	plugged/vim-polyglot/syntax/proto.vim	/^    let did_proto_syn_inits = 1$/;"	v
did_ps1_syn_inits	plugged/vim-polyglot/syntax/ps1.vim	/^		let did_ps1_syn_inits = 1$/;"	v
did_python_syn_inits	plugged/vim-polyglot/syntax/python.vim	/^        let did_python_syn_inits = 1$/;"	v
did_qml_syn_inits	plugged/vim-polyglot/syntax/qml.vim	/^    let did_qml_syn_inits = 1$/;"	v
did_racket_syntax_inits	plugged/vim-polyglot/syntax/racket.vim	/^    let did_racket_syntax_inits = 1$/;"	v
did_raku_syntax_inits	plugged/vim-polyglot/syntax/raku.vim	/^        let did_raku_syntax_inits = 1$/;"	v
did_reva_syntax_inits	plugged/vim-polyglot/syntax/reva.vim	/^    let did_reva_syntax_inits=1$/;"	v
did_rhelp_syntax_inits	plugged/vim-polyglot/syntax/rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_sexplib_syntax_inits	plugged/vim-polyglot/syntax/sexplib.vim	/^    let did_sexplib_syntax_inits = 1$/;"	v
did_tapverboseoutput_syntax_inits	plugged/vim-polyglot/syntax/tap.vim	/^  let did_tapverboseoutput_syntax_inits = 1$/;"	v
did_thrift_syn_inits	plugged/vim-polyglot/syntax/thrift.vim	/^    let did_thrift_syn_inits = 1$/;"	v
did_toolbar_tmenu	plugged/vim-polyglot/extras/menu.vim	/^  let did_toolbar_tmenu = 1$/;"	v
did_tptp_syntax_inits	plugged/vim-polyglot/syntax/tptp.vim	/^    let did_tptp_syntax_inits = 1$/;"	v
did_twig_syn_inits	plugged/vim-polyglot/syntax/twig.vim	/^    let did_twig_syn_inits = 1$/;"	v
did_txt_syn_inits	plugged/vim-polyglot/syntax/textile.vim	/^        let did_txt_syn_inits = 1$/;"	v
did_typescript_hilink	plugged/vim-polyglot/syntax/common.vim	/^let did_typescript_hilink = 1$/;"	v
did_u_syntax_inits	plugged/vim-polyglot/syntax/unison.vim	/^    let did_u_syntax_inits = 1$/;"	v
did_vbnet_syntax_inits	plugged/vim-polyglot/syntax/vbnet.vim	/^        let did_vbnet_syntax_inits = 1$/;"	v
did_velocity_syn_inits	plugged/vim-polyglot/syntax/velocity.vim	/^    let did_velocity_syn_inits = 1$/;"	v
diff	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def diff(a, b, sline=0):$/;"	f
diff_in_buffer_length	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
dirname	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^            const char* dirname;$/;"	m	struct:FuzzyEngine::__anon07ea32bd030a::__anon07ea32bd0508	typeref:typename:const char *	file:
displayMulti	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def displayMulti(self):$/;"	m	class:RgExplorer
display_multi	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t display_multi;$/;"	m	struct:RgParameter	typeref:typename:uint32_t	file:
display_width	plugged/vim-snippets/pythonx/vimsnippets.py	/^def display_width(str):$/;"	f
do_on_complete	plugged/ncm2/pythonx/ncm2_core.py	/^    def do_on_complete(self, data, manual=0, names=None):$/;"	m	class:Ncm2Core
do_post_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_expand(self, start, end, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_jump	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_jump($/;"	m	class:SnippetDefinition
do_pre_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_pre_expand(self, visual_content, snippets_stack):$/;"	m	class:SnippetDefinition
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
doctrine	plugged/onedark.vim/build/package-lock.json	/^        "doctrine": "^3.0.0",$/;"	s	object:dependencies.eslint.requires
doctrine	plugged/onedark.vim/build/package-lock.json	/^    "doctrine": {$/;"	o	object:dependencies
document_structure	plugged/vim-polyglot/autoload/xml/aria.vim	/^let document_structure = [$/;"	v
document_structure	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let document_structure = ['article', 'cell', 'columnheader', 'definition', 'directory', 'doc/;"	v
done_num	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t        done_num;$/;"	m	struct:FeCircularQueue	typeref:typename:uint32_t	file:
dosbatch_cmdextversion	plugged/vim-polyglot/syntax/dosbatch.vim	/^  let dosbatch_cmdextversion = 2$/;"	v
dot	plugged/onedark.vim/build/package-lock.json	/^        "dot": "^1.1.3",$/;"	s	object:dependencies.termcolors.requires
dot	plugged/onedark.vim/build/package-lock.json	/^    "dot": {$/;"	o	object:dependencies
download	plugged/vim-polyglot/scripts/build	/^def download(packages)$/;"	f	method:copy_file
dpub_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let dpub_role = [$/;"	v
dpub_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let dpub_role = ['dpub-abstract', 'dpub-afterword', 'dpub-appendix', 'dpub-biblioentry', 'dp/;"	v
dracula#should_abort	plugged/vim/autoload/dracula.vim	/^func! dracula#should_abort(...)$/;"	f
drag_and_drop_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {$/;"	v
e	plugged/LeaderF/autoload/leaderf/Command.vim	/^    nnoremap <buffer> <silent> e             :exec g:Lf_py "commandExplManager.editCommand()"<CR/;"	m
e	plugged/LeaderF/autoload/leaderf/History.vim	/^    nnoremap <buffer> <silent> e             :exec g:Lf_py "historyExplManager.editHistory()"<CR/;"	m
each_hash	plugged/vim-polyglot/scripts/build	/^def each_hash(data, &block)$/;"	f
echo_to_hierarchy	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
ecrystal#SetSubtype	plugged/vim-polyglot/autoload/ecrystal.vim	/^function! ecrystal#SetSubtype() abort$/;"	f
editCommand	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def editCommand(self):$/;"	m	class:CommandExplManager
editHistory	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def editHistory(self):$/;"	m	class:HistoryExplManager
elixir#indent	plugged/vim-polyglot/indent/elixir.vim	/^function! elixir#indent(lnum)$/;"	f
elixir#indent#handle_follow_prev_nb	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_follow_prev_nb(context)$/;"	f
elixir#indent#handle_following_trailing_binary_operator	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_binary_operator(context)$/;"	f
elixir#indent#handle_inside_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_block(context)$/;"	f
elixir#indent#handle_inside_generic_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_generic_block(context)$/;"	f
elixir#indent#handle_starts_with_binary_operator	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_binary_operator(context)$/;"	f
elixir#indent#handle_starts_with_end	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_end(context)$/;"	f
elixir#indent#handle_starts_with_pipe	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_pipe(context)$/;"	f
elixir#indent#handle_starts_with_string_continuation	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_string_continuation(context)$/;"	f
elixir#indent#handle_top_of_file	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_top_of_file(context)$/;"	f
elixir#indent#indent	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#indent(lnum)$/;"	f
elixir#indent#searchpair_back_skip	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#searchpair_back_skip()$/;"	f
elixir#util#get_filename	plugged/vim-polyglot/autoload/elixir/util.vim	/^function! elixir#util#get_filename(word) abort$/;"	f
elm_ls#GetOptions	plugged/ale/ale_linters/elm/elm_ls.vim	/^function! elm_ls#GetOptions(buffer) abort$/;"	f
elm_ls#GetRootDir	plugged/ale/ale_linters/elm/elm_ls.vim	/^function! elm_ls#GetRootDir(buffer) abort$/;"	f
email	plugged/onedark.vim/build/package.json	/^    "email": "josh@joshdick.net",$/;"	s	object:author
emoji-regex	plugged/onedark.vim/build/package-lock.json	/^        "emoji-regex": "^7.0.1",$/;"	s	object:dependencies.string-width.requires
emoji-regex	plugged/onedark.vim/build/package-lock.json	/^    "emoji-regex": {$/;"	o	object:dependencies
empty	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def empty(self):$/;"	m	class:LfInstance
end	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    uint16_t end;$/;"	m	struct:ValueElements	typeref:typename:uint16_t	file:
end	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    uint16_t end;$/;"	m	struct:HighlightGroup	typeref:typename:uint16_t
end	plugged/LeaderF/install.bat	/^:end$/;"	l
end	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def end(self):$/;"	m	class:TextObject
end_index	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    uint16_t end_index;$/;"	m	struct:HighlightGroup	typeref:typename:uint16_t
enquirer	plugged/onedark.vim/build/package-lock.json	/^        "enquirer": "^2.3.5",$/;"	s	object:dependencies.eslint.requires
enquirer	plugged/onedark.vim/build/package-lock.json	/^    "enquirer": {$/;"	o	object:dependencies
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetSource
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetFileSource
enterBuffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def enterBuffer(self, win_pos, clear):$/;"	m	class:LfInstance
enum,enumeration names	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?enum[ \\t]+([a-zA-Z0-9_]+)\/\\2\/g,enum,enumeration names\/$/;"	k	langdef:Rust
enums	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*enum[ \\t]+([a-zA-Z0-9_]+)\/\\2\/e,enums\/$/;"	k	langdef:typescript
env	plugged/onedark.vim/build/.eslintrc.json	/^    "env": {$/;"	o
environment	plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### environment$/;"	t
envlist	plugged/ale/test/command_callback/python_paths/namespace_package_tox/tox.ini	/^envlist =$/;"	k	section:tox
equal	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^def equal(str1, str2, ignorecase=True):$/;"	f
eregex#toggle	plugged/vim-polyglot/scripts/eregex.vim	/^function! eregex#toggle(...)$/;"	f
error-ex	plugged/onedark.vim/build/package-lock.json	/^        "error-ex": "^1.3.1",$/;"	s	object:dependencies.parse-json.requires
error-ex	plugged/onedark.vim/build/package-lock.json	/^    "error-ex": {$/;"	o	object:dependencies
es6	plugged/onedark.vim/build/.eslintrc.json	/^        "es6": true,$/;"	b	object:env
escQuote	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^def escQuote(str):$/;"	f
escSpecial	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^def escSpecial(str):$/;"	f
escape	plugged/ncm2/lua/ncm2/init.lua	/^local function escape(chars)$/;"	f
escape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
escape	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def escape(inp):$/;"	f
escape-string-regexp	plugged/onedark.vim/build/package-lock.json	/^            "escape-string-regexp": "^1.0.5",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk.requires
escape-string-regexp	plugged/onedark.vim/build/package-lock.json	/^    "escape-string-regexp": {$/;"	o	object:dependencies
eslint	plugged/onedark.vim/build/package-lock.json	/^    "eslint": {$/;"	o	object:dependencies
eslint	plugged/onedark.vim/build/package.json	/^    "eslint": "^7.14.0",$/;"	s	object:devDependencies
eslint-scope	plugged/onedark.vim/build/package-lock.json	/^        "eslint-scope": "^5.1.1",$/;"	s	object:dependencies.eslint.requires
eslint-scope	plugged/onedark.vim/build/package-lock.json	/^    "eslint-scope": {$/;"	o	object:dependencies
eslint-utils	plugged/onedark.vim/build/package-lock.json	/^        "eslint-utils": "^2.1.0",$/;"	s	object:dependencies.eslint.requires
eslint-utils	plugged/onedark.vim/build/package-lock.json	/^    "eslint-utils": {$/;"	o	object:dependencies
eslint-visitor-keys	plugged/onedark.vim/build/package-lock.json	/^        "eslint-visitor-keys": "^1.1.0"$/;"	s	object:dependencies.eslint-utils.requires
eslint-visitor-keys	plugged/onedark.vim/build/package-lock.json	/^        "eslint-visitor-keys": "^1.3.0"$/;"	s	object:dependencies.espree.requires
eslint-visitor-keys	plugged/onedark.vim/build/package-lock.json	/^        "eslint-visitor-keys": "^2.0.0",$/;"	s	object:dependencies.eslint.requires
eslint-visitor-keys	plugged/onedark.vim/build/package-lock.json	/^        "eslint-visitor-keys": {$/;"	o	object:dependencies.eslint-utils.dependencies
eslint-visitor-keys	plugged/onedark.vim/build/package-lock.json	/^        "eslint-visitor-keys": {$/;"	o	object:dependencies.espree.dependencies
eslint-visitor-keys	plugged/onedark.vim/build/package-lock.json	/^    "eslint-visitor-keys": {$/;"	o	object:dependencies
espree	plugged/onedark.vim/build/package-lock.json	/^        "espree": "^7.3.0",$/;"	s	object:dependencies.@eslint/eslintrc.requires
espree	plugged/onedark.vim/build/package-lock.json	/^        "espree": "^7.3.0",$/;"	s	object:dependencies.eslint.requires
espree	plugged/onedark.vim/build/package-lock.json	/^    "espree": {$/;"	o	object:dependencies
esprima	plugged/onedark.vim/build/package-lock.json	/^        "esprima": "^4.0.0"$/;"	s	object:dependencies.js-yaml.requires
esprima	plugged/onedark.vim/build/package-lock.json	/^    "esprima": {$/;"	o	object:dependencies
esquery	plugged/onedark.vim/build/package-lock.json	/^        "esquery": "^1.2.0",$/;"	s	object:dependencies.eslint.requires
esquery	plugged/onedark.vim/build/package-lock.json	/^    "esquery": {$/;"	o	object:dependencies
esrecurse	plugged/onedark.vim/build/package-lock.json	/^        "esrecurse": "^4.3.0",$/;"	s	object:dependencies.eslint-scope.requires
esrecurse	plugged/onedark.vim/build/package-lock.json	/^    "esrecurse": {$/;"	o	object:dependencies
estraverse	plugged/onedark.vim/build/package-lock.json	/^        "estraverse": "^4.1.1"$/;"	s	object:dependencies.eslint-scope.requires
estraverse	plugged/onedark.vim/build/package-lock.json	/^        "estraverse": "^5.1.0"$/;"	s	object:dependencies.esquery.requires
estraverse	plugged/onedark.vim/build/package-lock.json	/^        "estraverse": "^5.2.0"$/;"	s	object:dependencies.esrecurse.requires
estraverse	plugged/onedark.vim/build/package-lock.json	/^        "estraverse": {$/;"	o	object:dependencies.esquery.dependencies
estraverse	plugged/onedark.vim/build/package-lock.json	/^        "estraverse": {$/;"	o	object:dependencies.esrecurse.dependencies
estraverse	plugged/onedark.vim/build/package-lock.json	/^    "estraverse": {$/;"	o	object:dependencies
esutils	plugged/onedark.vim/build/package-lock.json	/^        "esutils": "^2.0.2"$/;"	s	object:dependencies.doctrine.requires
esutils	plugged/onedark.vim/build/package-lock.json	/^        "esutils": "^2.0.2",$/;"	s	object:dependencies.eslint.requires
esutils	plugged/onedark.vim/build/package-lock.json	/^    "esutils": {$/;"	o	object:dependencies
eval	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def eval(text):$/;"	f
evaluate	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^ValueElements* evaluate(TextContext* pText_ctxt,$/;"	f	typeref:typename:ValueElements *
evaluate	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def evaluate(text, pattern, text_mask, j, pattern_mask, k, val):$/;"	m	class:FuzzyMatch
evaluateHighlights	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^HighlightGroup* evaluateHighlights(TextContext* pText_ctxt,$/;"	f	typeref:typename:HighlightGroup *
evaluateHighlights	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def evaluateHighlights(text, pattern, text_mask, j, pattern_mask, k, val):$/;"	m	class:FuzzyMatch
evaluateHighlights_nameOnly	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^HighlightGroup* evaluateHighlights_nameOnly(TextContext* pText_ctxt,$/;"	f	typeref:typename:HighlightGroup *
evaluateOneChar	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def evaluateOneChar(text, pattern):$/;"	m	class:FuzzyMatch
evaluateTwoChar	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def evaluateTwoChar(text, pattern, is_pattern_lower):$/;"	m	class:FuzzyMatch
evaluate_nameOnly	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^ValueElements* evaluate_nameOnly(TextContext* pText_ctxt,$/;"	f	typeref:typename:ValueElements *
event_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythro/;"	v
events	plugged/ncm2/pythonx/ncm2_core.py	/^events = ['on_complete', 'cache_cleanup',$/;"	v
example	plugged/vista.vim/test/data/175.cpp	/^namespace example {$/;"	n	file:
except	plugged/vim-polyglot/scripts/build	/^def except(hash, *keys)$/;"	f
execute	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^    def execute(self, cmd, encoding=None, cleanup=None, env=None, raise_except=True, format_line/;"	m	class:AsyncExecutor
executor	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^    executor = AsyncExecutor()$/;"	v
exitBuffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def exitBuffer(self):$/;"	m	class:LfInstance
expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand_all	plugged/vim-polyglot/scripts/build	/^def expand_all(pattern, all = false)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
expand_anon	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon($/;"	m	class:SnippetManager
expand_anon	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def expand_anon(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
expand_or_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expected behavior	plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### expected behavior$/;"	t
expected_error	plugged/ultisnips/test/test_Choices.py	/^    expected_error = "Choices selection is not supported on \\$0"$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"IndexError: line number out of range"$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"NameError: name 'Tru' is not defined"$/;"	v	class:ContextSnippets_ReportError
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > \\s+qwe"$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > abc"$/;"	v	class:ParseSnippets_PrintPythonStacktrace
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Context: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Defined in: .*\/all.snippets"$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Post-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Pre-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Trigger: test"$/;"	v	class:ParseSnippets_PrintErroneousSnippet
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "changes are untrackable"$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "line under the cursor was modified"$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
expected_error	plugged/ultisnips/test/vim_test_case.py	/^    expected_error = ""$/;"	v	class:VimTestCase
expected_python_version	plugged/ultisnips/test/vim_test_case.py	/^    expected_python_version = ($/;"	v	class:VimTestCase
extends	plugged/onedark.vim/build/.eslintrc.json	/^    "extends": "eslint:recommended",$/;"	s
extract	plugged/vim-polyglot/scripts/build	/^def extract(packages)$/;"	f	method:copy_file.rules_to_code.rule_to_code
fast-deep-equal	plugged/onedark.vim/build/package-lock.json	/^        "fast-deep-equal": "^3.1.1",$/;"	s	object:dependencies.ajv.requires
fast-deep-equal	plugged/onedark.vim/build/package-lock.json	/^    "fast-deep-equal": {$/;"	o	object:dependencies
fast-json-stable-stringify	plugged/onedark.vim/build/package-lock.json	/^        "fast-json-stable-stringify": "^2.0.0",$/;"	s	object:dependencies.ajv.requires
fast-json-stable-stringify	plugged/onedark.vim/build/package-lock.json	/^    "fast-json-stable-stringify": {$/;"	o	object:dependencies
fast-levenshtein	plugged/onedark.vim/build/package-lock.json	/^        "fast-levenshtein": "^2.0.6",$/;"	s	object:dependencies.optionator.requires
fast-levenshtein	plugged/onedark.vim/build/package-lock.json	/^    "fast-levenshtein": {$/;"	o	object:dependencies
feedkeys	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def feedkeys(keys, mode="n"):$/;"	f
file-entry-cache	plugged/onedark.vim/build/package-lock.json	/^        "file-entry-cache": "^5.0.1",$/;"	s	object:dependencies.eslint.requires
file-entry-cache	plugged/onedark.vim/build/package-lock.json	/^    "file-entry-cache": {$/;"	o	object:dependencies
fileExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^fileExplManager = FileExplManager()$/;"	v
fileNodesDefaultSymbol	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^fileNodesDefaultSymbol = ''$/;"	v
fileNodesExactSymbols	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^fileNodesExactSymbols = {$/;"	v
fileNodesExtensionSymbols	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^fileNodesExtensionSymbols = {$/;"	v
file_getDigest	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static void file_getDigest(char** str, uint32_t* length, Parameter* param)$/;"	f	typeref:typename:void	file:
filename	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^            const char* filename;$/;"	m	struct:FuzzyEngine::__anon07ea32bd030a::__anon07ea32bd0508	typeref:typename:const char *	file:
filename	plugged/vim-polyglot/indent/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	plugged/vim-polyglot/indent/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	plugged/vim-polyglot/indent/sql.vim	/^let filename = 'sqlanywhere'$/;"	v
filename	plugged/vim-polyglot/syntax/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	plugged/vim-polyglot/syntax/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	plugged/vim-polyglot/syntax/sql.vim	/^let filename = 'sqloracle'$/;"	v
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchContext
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_CursorIsZeroBased
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ExpandOnTrue
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_PriorityKeyword
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportError
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SimpleSnippet
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SnippetPriority
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_UseContext
files	plugged/ultisnips/test/test_Format.py	/^    files = {$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearAll
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearOne
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearTwo
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Local_Python
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Python
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine1
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MissingEndSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_NoContainer
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_Quotes
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktrace
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_SimpleSnippet
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_UnknownDirective
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord_RE
files	plugged/ultisnips/test/test_Recursive.py	/^    files = {$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Disabled
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_EmptyLinesContinueSnippets
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Extends
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Interpolation
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_InterpolationWithSystem
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue658
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_MultiMatches
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_NoNestedTabstops
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OtherFiletype
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippet
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetSubDirectory
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrors
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstops
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Visual_Simple
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanModifyParentBody
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_EnsureIndent
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveVisual
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesBuffer
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PreActionModifiesBuffer
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_UseCorrectJumpActions
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByChild
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByParent
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear2
files	plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
files	plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
files	plugged/ultisnips/test/vim_test_case.py	/^    files = {}$/;"	v	class:VimTestCase
filetypeExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^filetypeExplManager = FiletypeExplManager()$/;"	v
filetypedetect	autoload/plug.vim	/^        augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/extras/filetype.vim	/^augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/ftdetect/polyglot.vim	/^augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/tests/native.vim	/^  augroup filetypedetect$/;"	a
filetypes	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def filetypes(self):$/;"	m	class:VimBuffer
fill_in_whitespace	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
filt	plugged/ncm2/pythonx/ncm2_filter/abbr_ellipsis.py	/^    def filt(data, sr, sctx, sccol, matches):$/;"	f	function:Filter	file:
filt	plugged/ncm2/pythonx/ncm2_filter/dedup.py	/^    def filt(data, sr, sctx, sccol, matches):$/;"	f	function:Filter	file:
filt	plugged/ncm2/pythonx/ncm2_filter/none.py	/^    def filt(data, sr, sctx, sccol, matches):$/;"	f	function:Filter	file:
filt	plugged/ncm2/pythonx/ncm2_filter/same_word.py	/^    def filt(data, sr, sctx, sccol, matches):$/;"	f	function:Filter	file:
filt	plugged/ncm2/pythonx/ncm2_filter/set_dup.py	/^    def filt(data, sr, sctx, sccol, matches):$/;"	f	function:Filter	file:
filt	plugged/ncm2/pythonx/ncm2_filter/substitute.py	/^    def filt(data, sr, sctx, sccol, matches):$/;"	f	function:Filter	file:
filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def filter(self, context):$/;"	m	class:Filter
filter-vader-output	plugged/ale/test/script/run-vader-tests	/^function filter-vader-output() {$/;"	f
filter_get	plugged/ncm2/pythonx/ncm2_core.py	/^    def filter_get(self, opts):$/;"	m	class:Ncm2Core
filter_opt_formalize	plugged/ncm2/pythonx/ncm2_core.py	/^    def filter_opt_formalize(self, opts):$/;"	m	class:Ncm2Core
filter_opt_get	plugged/ncm2/pythonx/ncm2_core.py	/^    def filter_opt_get(self, data, sr):$/;"	m	class:Ncm2Core
finalize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
find-up	plugged/onedark.vim/build/package-lock.json	/^        "find-up": "^4.0.0"$/;"	s	object:dependencies.pkg-dir.requires
find-up	plugged/onedark.vim/build/package-lock.json	/^    "find-up": {$/;"	o	object:dependencies
find-versions	plugged/onedark.vim/build/package-lock.json	/^        "find-versions": "^3.2.0",$/;"	s	object:dependencies.husky.requires
find-versions	plugged/onedark.vim/build/package-lock.json	/^    "find-versions": {$/;"	o	object:dependencies
find_all_snippet_directories	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_directories() -> List[str]:$/;"	f
find_all_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_files(ft) -> Set[str]:$/;"	f
find_parent_for_new_to	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_snippet_files(ft, directory: str) -> Set[str]:$/;"	f
fish#Complete	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Complete(findstart, base)$/;"	f
fish#Fold	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Fold()$/;"	f
fish#Format	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Format()$/;"	f
fish#Indent	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Indent()$/;"	f
fish#errorformat	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#errorformat()$/;"	f
fix_quotes	plugged/vim-polyglot/scripts/import_vim	/^def fix_quotes(a)$/;"	f
flat-cache	plugged/onedark.vim/build/package-lock.json	/^        "flat-cache": "^2.0.1"$/;"	s	object:dependencies.file-entry-cache.requires
flat-cache	plugged/onedark.vim/build/package-lock.json	/^    "flat-cache": {$/;"	o	object:dependencies
flatted	plugged/onedark.vim/build/package-lock.json	/^        "flatted": "^2.0.0",$/;"	s	object:dependencies.flat-cache.requires
flatted	plugged/onedark.vim/build/package-lock.json	/^    "flatted": {$/;"	o	object:dependencies
flatten_test_suite	plugged/ultisnips/test_all.py	/^    def flatten_test_suite(suite):$/;"	f
flow_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', /;"	v
fn	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
focus	plugged/ultisnips/test/vim_interface.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
folderNodesDefaultSymbol	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^folderNodesDefaultSymbol = ''$/;"	v
foldmarker	plugged/vim-snippets/pythonx/vimsnippets.py	/^def foldmarker():$/;"	f
foo	plugged/vista.vim/test/data/123.cpp	/^namespace foo::bar {$/;"	n	file:
foo	plugged/vista.vim/test/data/175.cpp	/^		int foo;$/;"	m	struct:example::__anon517ee2f20208	typeref:typename:int	file:
foobar	plugged/vim-polyglot/tests/indent/2.1/test.js	/^function foobar() {$/;"	f
foobar	plugged/vim-polyglot/tests/indent/4.1/test.js	/^function foobar() {$/;"	f
formalize	plugged/ncm2-ultisnips/ncm2-plugin/ncm2_ultisnips.py	/^    def formalize(ctx, item):$/;"	f	function:wrap	file:
format	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t format;$/;"	m	struct:GtagsParameter	typeref:typename:uint32_t	file:
format_line	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^def format_line(line):$/;"	f
fortran_free_source	plugged/vim-polyglot/syntax/sinda.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	plugged/vim-polyglot/syntax/tak.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	plugged/vim-polyglot/syntax/trasys.vim	/^let fortran_free_source=1$/;"	v
fs.realpath	plugged/onedark.vim/build/package-lock.json	/^        "fs.realpath": "^1.0.0",$/;"	s	object:dependencies.glob.requires
fs.realpath	plugged/onedark.vim/build/package-lock.json	/^    "fs.realpath": {$/;"	o	object:dependencies
fsharp#OnCursorMove	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#OnCursorMove()$/;"	f
fsharp#OnFSProjSave	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#OnFSProjSave()$/;"	f
fsharp#documentation	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#documentation(filePath, line, character, cont)$/;"	f
fsharp#getServerConfig	plugged/vim-polyglot/autoload/fsharp.vim	/^function! g:fsharp#getServerConfig()$/;"	f
fsharp#loadProject	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#loadProject(...)$/;"	f
fsharp#loadWorkspaceAuto	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#loadWorkspaceAuto()$/;"	f
fsharp#openFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#openFsi(returnFocus)$/;"	f
fsharp#quitFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#quitFsi()$/;"	f
fsharp#reloadProjects	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#reloadProjects()$/;"	f
fsharp#resetFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#resetFsi()$/;"	f
fsharp#sendAllToFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendAllToFsi()$/;"	f
fsharp#sendFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendFsi(text)$/;"	f
fsharp#sendLineToFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendLineToFsi()$/;"	f
fsharp#sendSelectionToFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendSelectionToFsi() range$/;"	f
fsharp#showF1Help	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showF1Help()$/;"	f
fsharp#showSignature	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showSignature()$/;"	f
fsharp#showTooltip	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showTooltip()$/;"	f
fsharp#toSnakeCase	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#toSnakeCase(str)$/;"	f
fsharp#toggleFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#toggleFsi()$/;"	f
fsharp#updateFSAC	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#updateFSAC(...)$/;"	f
fsharp#updateServerConfig	plugged/vim-polyglot/autoload/fsharp.vim	/^function! g:fsharp#updateServerConfig()$/;"	f
ft	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#BlameComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameComplete(A, L, P) abort$/;"	f
fugitive#BlameSyntax	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameSyntax() abort$/;"	f
fugitive#BrowseCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BrowseCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#BufReadCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus() abort$/;"	f
fugitive#BufWriteCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#Cd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cd(path, ...) abort$/;"	f
fugitive#CdComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CdComplete(A, L, P) abort$/;"	f
fugitive#Cfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#Command	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Command(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#CommitComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommitComplete(A, L, P, ...) abort$/;"	f
fugitive#CommonDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommonDir(dir) abort$/;"	f
fugitive#Complete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(lead, ...) abort$/;"	f
fugitive#CompleteForWorkingDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteForWorkingDir(A, L, P, ...) abort$/;"	f
fugitive#CompleteObject	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteObject(base, ...) abort$/;"	f
fugitive#CompletePath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompletePath(base, ...) abort$/;"	f
fugitive#Config	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#Cwindow	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#DeleteCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DeleteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#DiffClose	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DiffClose() abort$/;"	f
fugitive#Diffsplit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Diffsplit(autodir, keepfocus, mods, arg, args) abort$/;"	f
fugitive#EditComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EditComplete(A, L, P) abort$/;"	f
fugitive#EfmDir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EfmDir(...) abort$/;"	f
fugitive#Expand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#FetchComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FetchComplete(A, L, P, ...) abort$/;"	f
fugitive#FileReadCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GitVersion	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#GrepCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepCommand(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#GrepComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepComplete(A, L, P) abort$/;"	f
fugitive#Head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#LogCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogCommand(line1, count, range, bang, mods, args, type) abort$/;"	f
fugitive#LogComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogComplete(A, L, P) abort$/;"	f
fugitive#MapCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MergeComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MergeComplete(A, L, P, ...) abort$/;"	f
fugitive#MessageCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#MoveCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#Object	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Open	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Open(cmd, bang, mods, arg, args) abort$/;"	f
fugitive#PagerFor	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PagerFor(argv, ...) abort$/;"	f
fugitive#Path	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(...) abort$/;"	f
fugitive#Prepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#PrepareDirEnvArgv	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareDirEnvArgv(...) abort$/;"	f
fugitive#PullComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PullComplete(A, L, P, ...) abort$/;"	f
fugitive#PushComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PushComplete(A, L, P, ...) abort$/;"	f
fugitive#ReadCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#ReadComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadComplete(A, L, P) abort$/;"	f
fugitive#Real	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#RebaseComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RebaseComplete(A, L, P, ...) abort$/;"	f
fugitive#ReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#RemoteUrl	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RemoveCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameComplete(A,L,P) abort$/;"	f
fugitive#Resume	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Resume() abort$/;"	f
fugitive#RevParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#RevertComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevertComplete(A, L, P, ...) abort$/;"	f
fugitive#SourceCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#StatusCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#StatusCfile() abort$/;"	f
fugitive#Statusline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#WqCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WqCommand(...) abort$/;"	f
fugitive#WriteCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WriteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#buffer	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive.vim	plugged/vim-fugitive/README.markdown	/^# fugitive.vim$/;"	c
fugitive_blame	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_diff	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_job	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_job$/;"	a
fugitive_status	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
func_pat	plugged/ncm2-go/pythonx/ncm2_go.py	/^func_pat = re.compile(r'func\\((.*?)\\)')$/;"	v
function	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t function;$/;"	m	struct:MergeTaskItem	typeref:typename:uint32_t	file:
function	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t function;$/;"	m	struct:PySetTaskItem	typeref:typename:uint32_t	file:
function	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t function;$/;"	m	struct:TaskItem	typeref:typename:uint32_t	file:
function	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*function[[:space:]]*([a-zA-Z0-9_:]*)[[:space:]]*\/\\1\/u,function\/$/;"	k	langdef:puppet
functionExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^functionExplManager = FunctionExplManager()$/;"	v
functional-red-black-tree	plugged/onedark.vim/build/package-lock.json	/^        "functional-red-black-tree": "^1.0.1",$/;"	s	object:dependencies.eslint.requires
functional-red-black-tree	plugged/onedark.vim/build/package-lock.json	/^    "functional-red-black-tree": {$/;"	o	object:dependencies
functions	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*function[ \\t]+([a-zA-Z0-9_]+)\/\\2\/f,functions\/$/;"	k	langdef:typescript
functions,function definitions	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(#\\[[^\\]]\\][ \\t]*)*(pub[ \\t]+)?(extern[ \\t]+)?("[^"]+"[ \\t]+)?(uns/;"	k	langdef:Rust
fuzzyEngine_Methods	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyMethodDef fuzzyEngine_Methods[] =$/;"	v	typeref:typename:PyMethodDef[]	file:
fuzzyEngine_closeFuzzyEngine	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_closeFuzzyEngine(PyObject* self, PyObject* args)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_createFuzzyEngine	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_createFuzzyEngine(PyObject* self, PyObject* args, PyObject* kwargs)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_createGtagsParameter	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_createGtagsParameter(PyObject* self, PyObject* args)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_createParameter	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_createParameter(PyObject* self, PyObject* args)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_createRgParameter	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_createRgParameter(PyObject* self, PyObject* args)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_fuzzyMatch	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_fuzzyMatch(PyObject* self, PyObject* args, PyObject* kwargs)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_fuzzyMatchEx	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_fuzzyMatchEx(PyObject* self, PyObject* args, PyObject* kwargs)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_fuzzyMatchPart	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_fuzzyMatchPart(PyObject* self, PyObject* args, PyObject* kwargs)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_getHighlights	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_getHighlights(PyObject* self, PyObject* args, PyObject* kwargs)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_guessMatch	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_guessMatch(PyObject* self, PyObject* args, PyObject* kwargs)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_initPattern	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_initPattern(PyObject* self, PyObject* args)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_merge	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static PyObject* fuzzyEngine_merge(PyObject* self, PyObject* args)$/;"	f	typeref:typename:PyObject *	file:
fuzzyEngine_module	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static struct PyModuleDef fuzzyEngine_module =$/;"	v	typeref:struct:PyModuleDef	file:
fuzzyMatchC_Methods	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^static PyMethodDef fuzzyMatchC_Methods[] =$/;"	v	typeref:typename:PyMethodDef[]	file:
fuzzyMatchC_getHighlights	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^static PyObject* fuzzyMatchC_getHighlights(PyObject* self, PyObject* args, PyObject* kwargs)$/;"	f	typeref:typename:PyObject *	file:
fuzzyMatchC_getWeight	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^static PyObject* fuzzyMatchC_getWeight(PyObject* self, PyObject* args, PyObject* kwargs)$/;"	f	typeref:typename:PyObject *	file:
fuzzyMatchC_initPattern	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^static PyObject* fuzzyMatchC_initPattern(PyObject* self, PyObject* args)$/;"	f	typeref:typename:PyObject *	file:
fuzzyMatchC_module	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^static struct PyModuleDef fuzzyMatchC_module =$/;"	v	typeref:struct:PyModuleDef	file:
fuzzy_match	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^def fuzzy_match(b, s, chcmp):$/;"	f
fuzzy_match	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def fuzzy_match(b, s, chcmp):$/;"	f
fzf_gitignore#run	plugged/vim-polyglot/autoload/fzf_gitignore.vim	/^function! fzf_gitignore#run() abort$/;"	f
g:	plugged/ale/autoload/ale.vim	/^        let g:[l:full_name] = a:default$/;"	v
g:	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:CtrlSpaceStatuslineFunction	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^  let g:CtrlSpaceStatuslineFunction = "airline#extensions#ctrlspace#statusline()"$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFolderPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderPatternMatching = 1$/;"	v
g:DevIconsEnableFoldersOpenClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFoldersOpenClose = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 1$/;"	v
g:Ferm_SpecialDelimiters	plugged/vim-polyglot/syntax/ferm.vim	/^    let   g:Ferm_SpecialDelimiters = g:fermSpecialDelimiters$/;"	v
g:Lf_	plugged/LeaderF/autoload/leaderf.vim	/^            let g:Lf_{a:id}_is_g_pressed = 0$/;"	v
g:Lf_	plugged/LeaderF/autoload/leaderf.vim	/^            let g:Lf_{a:id}_is_g_pressed = 1$/;"	v
g:Lf_Arguments	plugged/LeaderF/autoload/leaderf/Any.vim	/^let g:Lf_Arguments = {$/;"	v
g:Lf_Buffer_is_g_pressed	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^            let g:Lf_Buffer_is_g_pressed = 0$/;"	v
g:Lf_Buffer_is_g_pressed	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^            let g:Lf_Buffer_is_g_pressed = 1$/;"	v
g:Lf_CacheDirectory	plugged/LeaderF/autoload/lfMru.vim	/^let g:Lf_CacheDirectory = substitute(g:Lf_CacheDirectory, '[\\\/]$', '', '')$/;"	v
g:Lf_Command_is_g_pressed	plugged/LeaderF/autoload/leaderf/Command.vim	/^            let g:Lf_Command_is_g_pressed = 0$/;"	v
g:Lf_Command_is_g_pressed	plugged/LeaderF/autoload/leaderf/Command.vim	/^            let g:Lf_Command_is_g_pressed = 1$/;"	v
g:Lf_CommonArguments	plugged/LeaderF/autoload/leaderf/Any.vim	/^let g:Lf_CommonArguments = [$/;"	v
g:Lf_File_is_g_pressed	plugged/LeaderF/autoload/leaderf/File.vim	/^            let g:Lf_File_is_g_pressed = 0$/;"	v
g:Lf_File_is_g_pressed	plugged/LeaderF/autoload/leaderf/File.vim	/^            let g:Lf_File_is_g_pressed = 1$/;"	v
g:Lf_Gtags_is_g_pressed	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^            let g:Lf_Gtags_is_g_pressed = 0$/;"	v
g:Lf_Gtags_is_g_pressed	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^            let g:Lf_Gtags_is_g_pressed = 1$/;"	v
g:Lf_Helps	plugged/LeaderF/autoload/leaderf/Any.vim	/^let g:Lf_Helps = {$/;"	v
g:Lf_History_is_g_pressed	plugged/LeaderF/autoload/leaderf/History.vim	/^            let g:Lf_History_is_g_pressed = 0$/;"	v
g:Lf_History_is_g_pressed	plugged/LeaderF/autoload/leaderf/History.vim	/^            let g:Lf_History_is_g_pressed = 1$/;"	v
g:Lf_KeyDict	plugged/LeaderF/autoload/leaderf.vim	/^            let g:Lf_KeyDict[toupper(i)] = toupper(key)$/;"	v
g:Lf_KeyDict	plugged/LeaderF/autoload/leaderf.vim	/^    let g:Lf_KeyDict = {}$/;"	v
g:Lf_KeyMap	plugged/LeaderF/autoload/leaderf.vim	/^let g:Lf_KeyMap = {$/;"	v
g:Lf_Line_is_g_pressed	plugged/LeaderF/autoload/leaderf/Line.vim	/^            let g:Lf_Line_is_g_pressed = 0$/;"	v
g:Lf_Line_is_g_pressed	plugged/LeaderF/autoload/leaderf/Line.vim	/^            let g:Lf_Line_is_g_pressed = 1$/;"	v
g:Lf_MruCacheFileName	plugged/LeaderF/autoload/lfMru.vim	/^let g:Lf_MruCacheFileName = g:Lf_CacheDirectory . '\/.LfCache\/tempMru'$/;"	v
g:Lf_Mru_is_g_pressed	plugged/LeaderF/autoload/leaderf/Mru.vim	/^            let g:Lf_Mru_is_g_pressed = 0$/;"	v
g:Lf_Mru_is_g_pressed	plugged/LeaderF/autoload/leaderf/Mru.vim	/^            let g:Lf_Mru_is_g_pressed = 1$/;"	v
g:Lf_PythonExtensions	plugged/LeaderF/plugin/leaderf.vim	/^    let g:Lf_PythonExtensions[a:name] = a:dict$/;"	v
g:Lf_PythonVersion	plugged/LeaderF/autoload/leaderf.vim	/^        let g:Lf_PythonVersion = 2$/;"	v
g:Lf_PythonVersion	plugged/LeaderF/autoload/leaderf.vim	/^        let g:Lf_PythonVersion = 3$/;"	v
g:Lf_QfLocList_is_g_pressed	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^            let g:Lf_QfLocList_is_g_pressed = 0$/;"	v
g:Lf_QfLocList_is_g_pressed	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^            let g:Lf_QfLocList_is_g_pressed = 1$/;"	v
g:Lf_Rg_is_g_pressed	plugged/LeaderF/autoload/leaderf/Rg.vim	/^            let g:Lf_Rg_is_g_pressed = 0$/;"	v
g:Lf_Rg_is_g_pressed	plugged/LeaderF/autoload/leaderf/Rg.vim	/^            let g:Lf_Rg_is_g_pressed = 1$/;"	v
g:Lf_SelfContent	plugged/LeaderF/plugin/leaderf.vim	/^    let g:Lf_SelfContent[a:cmd] = a:description$/;"	v
g:Lf_ShortcutB	settings/finder.vim	/^let g:Lf_ShortcutB = "<leader>fb"$/;"	v
g:Lf_ShortcutF	settings/finder.vim	/^let g:Lf_ShortcutF = "<leader>ff"$/;"	v
g:Lf_Window_is_g_pressed	plugged/LeaderF/autoload/leaderf/Window.vim	/^            let g:Lf_Window_is_g_pressed = 0$/;"	v
g:Lf_Window_is_g_pressed	plugged/LeaderF/autoload/leaderf/Window.vim	/^            let g:Lf_Window_is_g_pressed = 1$/;"	v
g:Lf_py	plugged/LeaderF/autoload/leaderf.vim	/^            let g:Lf_py = "py "$/;"	v
g:Lf_py	plugged/LeaderF/autoload/leaderf.vim	/^            let g:Lf_py = "py3 "$/;"	v
g:Lf_py	plugged/LeaderF/autoload/leaderf.vim	/^        let g:Lf_py = "py "$/;"	v
g:Lf_py	plugged/LeaderF/autoload/leaderf.vim	/^        let g:Lf_py = "py3 "$/;"	v
g:Lf_rg_apply_changes_and_save	plugged/LeaderF/autoload/leaderf/Rg.vim	/^            let g:Lf_rg_apply_changes_and_save = 1$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^	let g:NERDCustomDelimiters = {'caddyfile': s:delimiters}$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/hcl.vim	/^        let g:NERDCustomDelimiters.hcl = s:delims$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/hcl.vim	/^    let g:NERDCustomDelimiters = { 'hcl': s:delims }$/;"	v
g:NERDCustomDelimiters	settings/comment.vim	/^let g:NERDCustomDelimiters = {$/;"	v
g:NERDDefaultAlign	settings/comment.vim	/^let g:NERDDefaultAlign = 'left'$/;"	v
g:NERDDelimiterMap	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let g:NERDDelimiterMap = s:delimiterMap$/;"	v
g:NERDDelimiterMap	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^		let g:NERDDelimiterMap.caddyfile = s:delimiters$/;"	v
g:NERDDelimiterMap	plugged/vim-polyglot/ftplugin/hcl.vim	/^        let g:NERDDelimiterMap.hcl = s:delims$/;"	v
g:NERDSpaceDelims	settings/comment.vim	/^let g:NERDSpaceDelims = 1$/;"	v
g:NERDToggleCheckAllLines	settings/comment.vim	/^let g:NERDToggleCheckAllLines = 1$/;"	v
g:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoCenter	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenter            = get(g:, 'NERDTreeAutoCenter',            1)$/;"	v
g:NERDTreeAutoCenterThreshold	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenterThreshold   = get(g:, 'NERDTreeAutoCenterThreshold',   3)$/;"	v
g:NERDTreeAutoDeleteBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeBookmarks = []$/;"	v
g:NERDTreeBookmarksFile	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksFile         = get(g:, 'NERDTreeBookmarksFile',         expand('$HOME') ./;"	v
g:NERDTreeBookmarksSort	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksSort         = get(g:, 'NERDTreeBookmarksSort',         1)$/;"	v
g:NERDTreeCascadeOpenSingleChildDir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeOpenSingleChildDir = get(g:, 'NERDTreeCascadeOpenSingleChildDir', 1)$/;"	v
g:NERDTreeCascadeSingleChildDir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeSingleChildDir     = get(g:, 'NERDTreeCascadeSingleChildDir',     1)$/;"	v
g:NERDTreeCaseSensitiveSort	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCaseSensitiveSort     = get(g:, 'NERDTreeCaseSensitiveSort',     0)$/;"	v
g:NERDTreeChDirMode	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeChDirMode             = get(g:, 'NERDTreeChDirMode',             0)$/;"	v
g:NERDTreeCopyCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyCmd      = get(g:, 'NERDTreeCopyCmd',      'cp -r ')$/;"	v
g:NERDTreeCopyDirCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyDirCmd   = get(g:, 'NERDTreeCopyDirCmd',   'xcopy \/s \/e \/i \/y \/q ')$/;"	v
g:NERDTreeCopyFileCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyFileCmd  = get(g:, 'NERDTreeCopyFileCmd',  'copy \/y ')$/;"	v
g:NERDTreeCreatePrefix	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCreatePrefix          = get(g:, 'NERDTreeCreatePrefix',          'silent')$/;"	v
g:NERDTreeCreator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeCustomOpenArgs	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^    let g:NERDTreeCustomOpenArgs = get(g:, 'NERDTreeCustomOpenArgs', {})$/;"	v
g:NERDTreeDirArrowCollapsible	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '~')$/;"	v
g:NERDTreeDirArrowCollapsible	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '▾')$/;"	v
g:NERDTreeDirArrowExpandable	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '+')$/;"	v
g:NERDTreeDirArrowExpandable	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '▸')$/;"	v
g:NERDTreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeGitStatusIndicatorMapCustom	plugged/nerdtree-git-plugin/tests/test_all.vim	/^    let g:NERDTreeGitStatusIndicatorMapCustom = {'Untracked': '~'}$/;"	v
g:NERDTreeGlyphReadOnly	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeGlyphReadOnly = get(g:, 'NERDTreeGlyphReadOnly', 'RO')$/;"	v
g:NERDTreeHighlightCursorline	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHighlightCursorline   = get(g:, 'NERDTreeHighlightCursorline',   1)$/;"	v
g:NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHijackNetrw           = get(g:, 'NERDTreeHijackNetrw',           1)$/;"	v
g:NERDTreeIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeIgnore                = get(g:, 'NERDTreeIgnore',                ['\\~$'])$/;"	v
g:NERDTreeInvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeInvalidBookmarks = []$/;"	v
g:NERDTreeKeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapActivateNode	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapActivateNode    = get(g:, 'NERDTreeMapActivateNode',    'o')$/;"	v
g:NERDTreeMapCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCWD             = get(g:, 'NERDTreeMapCWD',             'CD')$/;"	v
g:NERDTreeMapChangeRoot	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChangeRoot      = get(g:, 'NERDTreeMapChangeRoot',      'C')$/;"	v
g:NERDTreeMapChdir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChdir           = get(g:, 'NERDTreeMapChdir',           'cd')$/;"	v
g:NERDTreeMapCloseChildren	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseChildren   = get(g:, 'NERDTreeMapCloseChildren',   'X')$/;"	v
g:NERDTreeMapCloseDir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseDir        = get(g:, 'NERDTreeMapCloseDir',        'x')$/;"	v
g:NERDTreeMapCustomOpen	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCustomOpen      = get(g:, 'NERDTreeMapCustomOpen',      '<CR>')$/;"	v
g:NERDTreeMapDeleteBookmark	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapDeleteBookmark  = get(g:, 'NERDTreeMapDeleteBookmark',  'D')$/;"	v
g:NERDTreeMapHelp	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapHelp            = get(g:, 'NERDTreeMapHelp',            '?')$/;"	v
g:NERDTreeMapJumpFirstChild	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpFirstChild  = get(g:, 'NERDTreeMapJumpFirstChild',  'K')$/;"	v
g:NERDTreeMapJumpLastChild	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpLastChild   = get(g:, 'NERDTreeMapJumpLastChild',   'J')$/;"	v
g:NERDTreeMapJumpNextSibling	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpNextSibling = get(g:, 'NERDTreeMapJumpNextSibling', '<C-j>')$/;"	v
g:NERDTreeMapJumpParent	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpParent      = get(g:, 'NERDTreeMapJumpParent',      'p')$/;"	v
g:NERDTreeMapJumpPrevSibling	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpPrevSibling = get(g:, 'NERDTreeMapJumpPrevSibling', '<C-k>')$/;"	v
g:NERDTreeMapJumpRoot	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpRoot        = get(g:, 'NERDTreeMapJumpRoot',        'P')$/;"	v
g:NERDTreeMapMenu	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapMenu            = get(g:, 'NERDTreeMapMenu',            'm')$/;"	v
g:NERDTreeMapOpenExpl	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenExpl        = get(g:, 'NERDTreeMapOpenExpl',        'e')$/;"	v
g:NERDTreeMapOpenInTab	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTab       = get(g:, 'NERDTreeMapOpenInTab',       't')$/;"	v
g:NERDTreeMapOpenInTabSilent	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTabSilent = get(g:, 'NERDTreeMapOpenInTabSilent', 'T')$/;"	v
g:NERDTreeMapOpenRecursively	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenRecursively = get(g:, 'NERDTreeMapOpenRecursively', 'O')$/;"	v
g:NERDTreeMapOpenSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenSplit       = get(g:, 'NERDTreeMapOpenSplit',       'i')$/;"	v
g:NERDTreeMapOpenVSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenVSplit      = get(g:, 'NERDTreeMapOpenVSplit',      's')$/;"	v
g:NERDTreeMapPreview	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreview         = get(g:, 'NERDTreeMapPreview',         'g'.NERDTreeMapActivate/;"	v
g:NERDTreeMapPreviewSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewSplit    = get(g:, 'NERDTreeMapPreviewSplit',    'g'.NERDTreeMapOpenSpli/;"	v
g:NERDTreeMapPreviewVSplit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewVSplit   = get(g:, 'NERDTreeMapPreviewVSplit',   'g'.NERDTreeMapOpenVSpl/;"	v
g:NERDTreeMapQuit	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapQuit            = get(g:, 'NERDTreeMapQuit',            'q')$/;"	v
g:NERDTreeMapRefresh	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefresh         = get(g:, 'NERDTreeMapRefresh',         'r')$/;"	v
g:NERDTreeMapRefreshRoot	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefreshRoot     = get(g:, 'NERDTreeMapRefreshRoot',     'R')$/;"	v
g:NERDTreeMapToggleBookmarks	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleBookmarks = get(g:, 'NERDTreeMapToggleBookmarks', 'B')$/;"	v
g:NERDTreeMapToggleFiles	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFiles     = get(g:, 'NERDTreeMapToggleFiles',     'F')$/;"	v
g:NERDTreeMapToggleFilters	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFilters   = get(g:, 'NERDTreeMapToggleFilters',   'f')$/;"	v
g:NERDTreeMapToggleHidden	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleHidden    = get(g:, 'NERDTreeMapToggleHidden',    'I')$/;"	v
g:NERDTreeMapToggleZoom	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleZoom      = get(g:, 'NERDTreeMapToggleZoom',      'A')$/;"	v
g:NERDTreeMapUpdir	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdir           = get(g:, 'NERDTreeMapUpdir',           'u')$/;"	v
g:NERDTreeMapUpdirKeepOpen	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdirKeepOpen   = get(g:, 'NERDTreeMapUpdirKeepOpen',   'U')$/;"	v
g:NERDTreeMarkBookmarks	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMarkBookmarks         = get(g:, 'NERDTreeMarkBookmarks',         1)$/;"	v
g:NERDTreeMenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuDown	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuDown           = get(g:, 'NERDTreeMenuDown',           'j')$/;"	v
g:NERDTreeMenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMenuUp	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuUp             = get(g:, 'NERDTreeMenuUp',             'k')$/;"	v
g:NERDTreeMinimalMenu	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalMenu           = get(g:, 'NERDTreeMinimalMenu',           0)$/;"	v
g:NERDTreeMinimalUI	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalUI             = get(g:, 'NERDTreeMinimalUI',             0)$/;"	v
g:NERDTreeMouseMode	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMouseMode             = get(g:, 'NERDTreeMouseMode',             1)$/;"	v
g:NERDTreeNaturalSort	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNaturalSort           = get(g:, 'NERDTreeNaturalSort',           0)$/;"	v
g:NERDTreeNodeDelimiter	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00a0")$/;"	v
g:NERDTreeNodeDelimiter	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00b7")$/;"	v
g:NERDTreeNodeDelimiter	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\x07")$/;"	v
g:NERDTreeNotificationThreshold	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNotificationThreshold = get(g:, 'NERDTreeNotificationThreshold', 100)$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^    let g:NERDTreeOldSortOrder = g:NERDTreeSortOrder$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^                let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^        let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOldSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeQuitOnOpen	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeQuitOnOpen            = get(g:, 'NERDTreeQuitOnOpen',            0)$/;"	v
g:NERDTreeRemoveDirCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rm -rf ')$/;"	v
g:NERDTreeRemoveDirCmd	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rmdir \/s \/q ')$/;"	v
g:NERDTreeRespectWildIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeRespectWildIgnore     = get(g:, 'NERDTreeRespectWildIgnore',     0)$/;"	v
g:NERDTreeShowBookmarks	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowBookmarks         = get(g:, 'NERDTreeShowBookmarks',         0)$/;"	v
g:NERDTreeShowFiles	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowFiles             = get(g:, 'NERDTreeShowFiles',             1)$/;"	v
g:NERDTreeShowHidden	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowHidden            = get(g:, 'NERDTreeShowHidden',            0)$/;"	v
g:NERDTreeShowLineNumbers	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowLineNumbers       = get(g:, 'NERDTreeShowLineNumbers',       0)$/;"	v
g:NERDTreeSortDirs	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortDirs              = get(g:, 'NERDTreeSortDirs',              1)$/;"	v
g:NERDTreeSortHiddenFirst	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortHiddenFirst       = get(g:, 'NERDTreeSortHiddenFirst',       1)$/;"	v
g:NERDTreeSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortOrder    = get(g:, 'NERDTreeSortOrder', ['\\\/$', '*', '\\.swp$', '\\.bak$', '/;"	v
g:NERDTreeStatusline	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeStatusline = get(g:, 'NERDTreeStatusline', "%{exists('b:NERDTree')?b:NERDTree.root/;"	v
g:NERDTreeUI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUseTCD	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeUseTCD                = get(g:, 'NERDTreeUseTCD',                0)$/;"	v
g:NERDTreeWinPos	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinPos  = get(g:, 'NERDTreeWinPos', 'left')$/;"	v
g:NERDTreeWinSize	plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinSize = get(g:, 'NERDTreeWinSize', 31)$/;"	v
g:NTGitWorkdir	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NTGitWorkdir = split(join(a:job.chunks, ''), "\\n")[0]$/;"	v
g:TextileBrowser	plugged/vim-polyglot/ftplugin/textile.vim	/^    let g:TextileBrowser='Safari'$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEnableSnipMate	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsExpandTrigger	settings/complete.vim	/^let g:UltiSnipsExpandTrigger		= "<Plug>(ultisnips_expand)"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="1"$/;"	v
g:UltiSnipsJumpBackwardTrigger	settings/complete.vim	/^let g:UltiSnipsJumpBackwardTrigger	= "<c-k>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="2"$/;"	v
g:UltiSnipsJumpForwardTrigger	settings/complete.vim	/^let g:UltiSnipsJumpForwardTrigger	= "<c-j>"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsListSnippets="9"$/;"	v
g:UltiSnipsMappingsToIgnore	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsRemoveSelectModeMappings	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsRemoveSelectModeMappings	settings/complete.vim	/^let g:UltiSnipsRemoveSelectModeMappings = 0$/;"	v
g:UltiSnipsSnippetDirectories	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^      let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols[key] = val$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFileNodesPatternSymbols = {}$/;"	v
g:WhichKeyFormatFunc	plugged/vim-which-key/plugin/which_key.vim	/^let g:WhichKeyFormatFunc = get(g:, 'WhichKeyFormatFunc', function('which_key#format'))$/;"	v
g:__ale_c_project_filenames	plugged/ale/autoload/ale/c.vim	/^let g:__ale_c_project_filenames = ['.git\/HEAD', 'configure', 'Makefile', 'CMakeLists.txt']$/;"	v
g:__gutentags_vim_is_leaving	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:__gutentags_vim_is_leaving = 1$/;"	v
g:__gutentags_vim_is_leaving	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:__gutentags_vim_is_leaving = 0$/;"	v
g:__vital_color_echo_already_highlighted	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^        let g:__vital_color_echo_already_highlighted = 1$/;"	v
g:_fugitive_last_job	plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:_fugitive_last_job = state$/;"	v
g:_plug_bang	autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:_webdevicons_airline_orig_formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:_webdevicons_airline_orig_formatter = get(g:, 'airline#extensions#tabline#formatter', 'd/;"	v
g:_yarp_py	plugged/nvim-yarp/autoload/yarp/pyx.vim	/^        let g:_yarp_py = 'python2'$/;"	v
g:_yarp_py	plugged/nvim-yarp/autoload/yarp/pyx.vim	/^        let g:_yarp_py = pyeval('sys.executable')$/;"	v
g:_yarp_py	plugged/nvim-yarp/autoload/yarp/pyx.vim	/^    let g:_yarp_py = expand(get(g:, 'python_host_prog', ''), 1)$/;"	v
g:_yarp_py3	plugged/nvim-yarp/autoload/yarp/pyx.vim	/^        let g:_yarp_py3 = 'python3'$/;"	v
g:_yarp_py3	plugged/nvim-yarp/autoload/yarp/pyx.vim	/^        let g:_yarp_py3 = py3eval('sys.executable')$/;"	v
g:_yarp_py3	plugged/nvim-yarp/autoload/yarp/pyx.vim	/^    let g:_yarp_py3 = expand(get(g:, 'python3_host_prog', ''), 1)$/;"	v
g:ada#Comment	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Comment	   = "\\\\v^(\\"[^\\"]*\\"|'.'|[^\\"']){-}\\\\zs\\\\s*--.*"$/;"	v
g:ada#Ctags_Kinds	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Ctags_Kinds = {$/;"	v
g:ada#DotWordRegex	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#DotWordRegex	   = '\\a\\w*\\(\\_s*\\.\\_s*\\a\\w*\\)*'$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^       let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Keywords	   = []$/;"	v
g:ada#WordRegex	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#WordRegex	   = '\\a\\w*'$/;"	v
g:ada_	plugged/vim-polyglot/autoload/ada.vim	/^      let g:ada_{a:option}=1$/;"	v
g:ada_default_compiler	plugged/vim-polyglot/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'decada'$/;"	v
g:ada_default_compiler	plugged/vim-polyglot/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'gnat'$/;"	v
g:airline#extensions#default#layout	plugged/vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#localsearch#inverted	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#inverted = get(g:, 'airline#extensions#localsearch#inverted/;"	v
g:airline#extensions#localsearch#loaded	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#loaded = 001$/;"	v
g:airline#extensions#obsession#indicator_text	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
g:airline#extensions#quickfix#location_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#tabline#buffer_nr_show	settings/airline.vim	/^    let g:airline#extensions#tabline#buffer_nr_show = 1$/;"	v
g:airline#extensions#tabline#enabled	plugged/vim-airline/t/extensions_tabline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#enabled	settings/airline.vim	/^    let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#exclude_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#exclude_buffers = []$/;"	v
g:airline#extensions#tabline#exclude_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:airline#extensions#tabline#exclude_buffers = []$/;"	v
g:airline#extensions#tabline#formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:airline#extensions#tabline#formatter = 'webdevicons'$/;"	v
g:airline#extensions#tabline#formatter	settings/airline.vim	/^    let g:airline#extensions#tabline#formatter = 'unique_tail'$/;"	v
g:airline#extensions#tabline#left_alt_sep	settings/airline.vim	/^    let g:airline#extensions#tabline#left_alt_sep = '|'$/;"	v
g:airline#extensions#tabline#left_sep	settings/airline.vim	/^    let g:airline#extensions#tabline#left_sep = ' '$/;"	v
g:airline#extensions#tabline#show_tabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#show_tabs = 0$/;"	v
g:airline#extensions#tabline#show_tabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:airline#extensions#tabline#show_tabs = 1$/;"	v
g:airline#extensions#whitespace#enabled	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^    let g:airline#extensions#whitespace#enabled = s:enabled$/;"	v
g:airline#extensions#windowswap#indicator_text	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#extensions#wordcount#filetypes	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  let g:airline#extensions#wordcount#filetypes = filetypes$/;"	v
g:airline#highlighter#normal_fg_hi	plugged/vim-airline/autoload/airline/highlighter.vim	/^    let g:airline#highlighter#normal_fg_hi = synIDattr(synIDtrans(hlID('Normal')), 'fg', 'cterm'/;"	v
g:airline#init#bootstrapping	plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#bootstrapping = 1$/;"	v
g:airline#init#is_windows	plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#is_windows = has('win32') || has('win64')$/;"	v
g:airline#init#vim_async	plugged/vim-airline/autoload/airline/init.vim	/^  let g:airline#init#vim_async = (v:version >= 800 && has('job'))$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.commandline = airline#themes#generate_color_map(s:airline_a_co/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inact/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert,/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal,/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modifi/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.terminal = airline#themes#generate_color_map(s:airline_a_inser/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual,/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#dracula#palette	plugged/vim/autoload/airline/themes/dracula.vim	/^  let g:airline#themes#dracula#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dracula#palette	plugged/vim/autoload/airline/themes/dracula.vim	/^  let g:airline#themes#dracula#palette.tabline = {$/;"	v
g:airline#themes#dracula#palette	plugged/vim/autoload/airline/themes/dracula.vim	/^let g:airline#themes#dracula#palette = {$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.accents = { 'red': accents_group }$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, /;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.inactive_modified = { 'airline_c': modified_group }$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert.airline_error = g:airline#themes#gruvbox#palette.n/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert.airline_warning = g:airline#themes#gruvbox#palette/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert_modified = g:airline#themes#gruvbox#palette.normal/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert_modified.airline_error = g:airline#themes#gruvbox#/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.insert_modified.airline_warning = g:airline#themes#gruvbo/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal.airline_error = error_group$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal.airline_warning = warning_group$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal_modified = { 'airline_c': modified_group }$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal_modified.airline_error = error_group$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.normal_modified.airline_warning = warning_group$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace.airline_error = g:airline#themes#gruvbox#palette./;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace.airline_warning = g:airline#themes#gruvbox#palett/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace_modified = g:airline#themes#gruvbox#palette.norma/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace_modified.airline_error = g:airline#themes#gruvbox/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.replace_modified.airline_warning = g:airline#themes#gruvb/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.tabline = {$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual.airline_error = g:airline#themes#gruvbox#palette.n/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual.airline_warning = g:airline#themes#gruvbox#palette/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual_modified = { 'airline_c': [ s:V3[0], '', s:V3[2], /;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual_modified.airline_error = g:airline#themes#gruvbox#/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^  let g:airline#themes#gruvbox#palette.visual_modified.airline_warning = g:airline#themes#gruvbo/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^let g:airline#themes#gruvbox#palette = {}$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette = {}$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.accents = {$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.inactive_modified = {$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert.airline_error =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert.airline_warning =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert_modified = g:airline#themes#onedark#palette.normal/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal.airline_error = [$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal.airline_warning = [$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal_modified = {$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace.airline_error =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace.airline_warning =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace_modified = g:airline#themes#onedark#palette.norma/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual.airline_error =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual.airline_warning =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual_modified = g:airline#themes#onedark#palette.normal/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#onedark#palette	plugged/onedark.vim/autoload/airline/themes/onedark.vim	/^  let g:airline#themes#onedark#palette.visual_modified.airline_warning =$/;"	v
g:airline#visual_active	plugged/vim-airline/autoload/airline.vim	/^  let g:airline#visual_active = (mode() =~? '[vs]')$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_last_window_changed	plugged/vim-airline/plugin/airline.vim	/^  let g:airline_last_window_changed = l:key$/;"	v
g:airline_left_sep	settings/airline.vim	/^    let g:airline_left_sep=' '$/;"	v
g:airline_powerline_fonts	settings/airline.vim	/^    let g:airline_powerline_fonts = 1  " 支持 powerline 字体$/;"	v
g:airline_right_sep	settings/airline.vim	/^    let g:airline_right_sep=' '$/;"	v
g:airline_section_	plugged/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_a = airline#section#create_left(['mode', 'crypt', 'paste', 'keymap', '/;"	v
g:airline_section_a	plugged/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_section_b	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_b = airline#section#create(['hunks', 'branch', 'battery'])$/;"	v
g:airline_section_b	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_b = airline#section#create(['hunks', 'branch'])$/;"	v
g:airline_section_c	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'file', spc, 'readonly', 'coc_stat/;"	v
g:airline_section_c	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_c = airline#section#create(['%<', 'path', spc, 'readonly', 'coc_stat/;"	v
g:airline_section_error	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_error = airline#section#create(['ycm_error_count', 'syntastic-err', 'e/;"	v
g:airline_section_gutter	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_gutter = airline#section#create(['%='])$/;"	v
g:airline_section_warning	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^      let g:airline_section_warning .= airline#section#create(['whitespace'])$/;"	v
g:airline_section_warning	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_warning = airline#section#create(['ycm_warning_count',  'syntastic-war/;"	v
g:airline_section_x	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_x = airline#section#create_right(['bookmark', 'tagbar', 'vista', 'gute/;"	v
g:airline_section_y	plugged/vim-airline/autoload/airline/init.vim	/^    let g:airline_section_y = airline#section#create_right(['ffenc'])$/;"	v
g:airline_section_z	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['%p%%'.spc, 'linenr',  ':%v'])$/;"	v
g:airline_section_z	plugged/vim-airline/autoload/airline/init.vim	/^      let g:airline_section_z = airline#section#create(['windowswap', 'obsession', '%p%%'.spc, '/;"	v
g:airline_statusline_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	plugged/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_symbols	settings/airline.vim	/^        let g:airline_symbols = {}$/;"	v
g:airline_theme	plugged/vim-airline/autoload/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/autoload/airline.vim	/^      let g:airline_theme = a:name$/;"	v
g:airline_theme	plugged/vim-airline/autoload/airline.vim	/^  let g:airline_theme = get(g:, 'airline_theme', 'dark')$/;"	v
g:airline_theme	plugged/vim-airline/plugin/airline.vim	/^        let g:airline_theme=s:random_theme()$/;"	v
g:airline_theme	plugged/vim-airline/plugin/airline.vim	/^      let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/plugin/airline.vim	/^    let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:ale#util#error_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#error_priority = 5$/;"	v
g:ale#util#info_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#info_priority = 3$/;"	v
g:ale#util#nul_file	plugged/ale/autoload/ale/util.vim	/^        let g:ale#util#nul_file = 'nul'$/;"	v
g:ale#util#nul_file	plugged/ale/autoload/ale/util.vim	/^    let g:ale#util#nul_file = '\/dev\/null'$/;"	v
g:ale#util#style_error_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#style_error_priority = 2$/;"	v
g:ale#util#style_warning_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#style_warning_priority = 1$/;"	v
g:ale#util#warning_priority	plugged/ale/autoload/ale/util.vim	/^let g:ale#util#warning_priority = 4$/;"	v
g:ale_buffer_info	plugged/ale/autoload/ale/engine.vim	/^        let g:ale_buffer_info[a:buffer] = {$/;"	v
g:ale_buffer_info	plugged/ale/autoload/ale/engine.vim	/^        let g:ale_buffer_info[a:buffer].loclist = l:loclist$/;"	v
g:ale_buffer_info	plugged/ale/autoload/ale/statusline.vim	/^    let g:ale_buffer_info[a:buffer].count = l:count$/;"	v
g:ale_buffer_info	plugged/ale/autoload/ale/statusline.vim	/^    let g:ale_buffer_info[a:buffer].first_problems = l:first_problems$/;"	v
g:ale_buffer_info	plugged/ale/plugin/ale.vim	/^let g:ale_buffer_info = {}$/;"	v
g:ale_c_build_dir_names	plugged/ale/autoload/ale/c.vim	/^let g:ale_c_build_dir_names = get(g:, 'ale_c_build_dir_names', [$/;"	v
g:ale_change_sign_column_color	plugged/ale/autoload/ale/sign.vim	/^let g:ale_change_sign_column_color = get(g:, 'ale_change_sign_column_color', 0)$/;"	v
g:ale_close_preview_on_insert	plugged/ale/plugin/ale.vim	/^let g:ale_close_preview_on_insert = get(g:, 'ale_close_preview_on_insert', 0)$/;"	v
g:ale_cmake_cmakelint_executable	plugged/ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_executable =$/;"	v
g:ale_cmake_cmakelint_options	plugged/ale/ale_linters/cmake/cmakelint.vim	/^let g:ale_cmake_cmakelint_options =$/;"	v
g:ale_command_wrapper	plugged/ale/autoload/ale/job.vim	/^let g:ale_command_wrapper = get(g:, 'ale_command_wrapper', '')$/;"	v
g:ale_completion_autoimport	plugged/ale/autoload/ale/completion.vim	/^let g:ale_completion_autoimport = get(g:, 'ale_completion_autoimport', 0)$/;"	v
g:ale_completion_delay	plugged/ale/autoload/ale/completion.vim	/^let g:ale_completion_delay = get(g:, 'ale_completion_delay', 100)$/;"	v
g:ale_completion_enabled	plugged/ale/autoload/ale/completion.vim	/^    let g:ale_completion_enabled = 0$/;"	v
g:ale_completion_enabled	plugged/ale/autoload/ale/completion.vim	/^    let g:ale_completion_enabled = 1$/;"	v
g:ale_completion_enabled	plugged/ale/plugin/ale.vim	/^let g:ale_completion_enabled = get(g:, 'ale_completion_enabled', 0)$/;"	v
g:ale_completion_excluded_words	plugged/ale/autoload/ale/completion.vim	/^let g:ale_completion_excluded_words = get(g:, 'ale_completion_excluded_words', [])$/;"	v
g:ale_completion_max_suggestions	plugged/ale/autoload/ale/completion.vim	/^let g:ale_completion_max_suggestions = get(g:, 'ale_completion_max_suggestions', 50)$/;"	v
g:ale_completion_symbols	plugged/ale/autoload/ale/completion.vim	/^let g:ale_completion_symbols = get(g:, 'ale_completion_symbols', {$/;"	v
g:ale_completion_tsserver_remove_warnings	plugged/ale/autoload/ale/completion.vim	/^let g:ale_completion_tsserver_remove_warnings = get(g:, 'ale_completion_tsserver_remove_warnings/;"	v
g:ale_create_dummy_temporary_file	plugged/ale/autoload/ale/assert.vim	/^    let g:ale_create_dummy_temporary_file = 1$/;"	v
g:ale_cs_mcs_options	plugged/ale/ale_linters/cs/mcs.vim	/^let g:ale_cs_mcs_options = get(g:, 'ale_cs_mcs_options', '')$/;"	v
g:ale_cursor_detail	plugged/ale/plugin/ale.vim	/^let g:ale_cursor_detail = get(g:, 'ale_cursor_detail', 0)$/;"	v
g:ale_default_navigation	plugged/ale/autoload/ale/definition.vim	/^let g:ale_default_navigation = get(g:, 'ale_default_navigation', 'buffer')$/;"	v
g:ale_default_navigation	plugged/ale/autoload/ale/references.vim	/^let g:ale_default_navigation = get(g:, 'ale_default_navigation', 'buffer')$/;"	v
g:ale_disable_lsp	plugged/ale/autoload/ale.vim	/^let g:ale_disable_lsp = get(g:, 'ale_disable_lsp', 0)$/;"	v
g:ale_echo_cursor	plugged/ale/plugin/ale.vim	/^let g:ale_echo_cursor = get(g:, 'ale_echo_cursor', 1)$/;"	v
g:ale_echo_delay	plugged/ale/autoload/ale/cursor.vim	/^let g:ale_echo_delay = get(g:, 'ale_echo_delay', 10)$/;"	v
g:ale_echo_msg_error_str	plugged/ale/autoload/ale.vim	/^let g:ale_echo_msg_error_str = get(g:, 'ale_echo_msg_error_str', 'Error')$/;"	v
g:ale_echo_msg_format	plugged/ale/autoload/ale/cursor.vim	/^let g:ale_echo_msg_format = get(g:, 'ale_echo_msg_format', '%code: %%s')$/;"	v
g:ale_echo_msg_info_str	plugged/ale/autoload/ale.vim	/^let g:ale_echo_msg_info_str = get(g:, 'ale_echo_msg_info_str', 'Info')$/;"	v
g:ale_echo_msg_log_str	plugged/ale/autoload/ale.vim	/^let g:ale_echo_msg_log_str = get(g:, 'ale_echo_msg_log_str', 'Log')$/;"	v
g:ale_echo_msg_warning_str	plugged/ale/autoload/ale.vim	/^let g:ale_echo_msg_warning_str = get(g:, 'ale_echo_msg_warning_str', 'Warning')$/;"	v
g:ale_enabled	plugged/ale/autoload/ale/toggle.vim	/^    let g:ale_enabled = !get(g:, 'ale_enabled')$/;"	v
g:ale_enabled	plugged/ale/plugin/ale.vim	/^let g:ale_enabled = get(g:, 'ale_enabled', 1)$/;"	v
g:ale_erlang_dialyzer_executable	plugged/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_executable =$/;"	v
g:ale_erlang_dialyzer_plt_file	plugged/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_plt_file =$/;"	v
g:ale_erlang_dialyzer_rebar3_profile	plugged/ale/ale_linters/erlang/dialyzer.vim	/^let g:ale_erlang_dialyzer_rebar3_profile =$/;"	v
g:ale_erlang_erlc_options	plugged/ale/ale_linters/erlang/erlc.vim	/^let g:ale_erlang_erlc_options = get(g:, 'ale_erlang_erlc_options', '')$/;"	v
g:ale_exclude_highlights	plugged/ale/plugin/ale.vim	/^let g:ale_exclude_highlights = get(g:, 'ale_exclude_highlights', [])$/;"	v
g:ale_filename_mappings	plugged/ale/autoload/ale/engine.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filename_mappings	plugged/ale/autoload/ale/fix.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filename_mappings	plugged/ale/plugin/ale.vim	/^let g:ale_filename_mappings = get(g:, 'ale_filename_mappings', {})$/;"	v
g:ale_filetype_blacklist	plugged/ale/plugin/ale.vim	/^let g:ale_filetype_blacklist = [$/;"	v
g:ale_fix_buffer_data	plugged/ale/autoload/ale/fix.vim	/^        let g:ale_fix_buffer_data[a:buffer] = l:data$/;"	v
g:ale_fix_buffer_data	plugged/ale/autoload/ale/fix.vim	/^    let g:ale_fix_buffer_data[a:buffer] = {$/;"	v
g:ale_fix_buffer_data	plugged/ale/plugin/ale.vim	/^let g:ale_fix_buffer_data = {}$/;"	v
g:ale_fix_on_save	plugged/ale/plugin/ale.vim	/^let g:ale_fix_on_save = get(g:, 'ale_fix_on_save', 0)$/;"	v
g:ale_fix_on_save_ignore	plugged/ale/autoload/ale/fix.vim	/^let g:ale_fix_on_save_ignore = get(g:, 'ale_fix_on_save_ignore', {})$/;"	v
g:ale_fixers	plugged/ale/plugin/ale.vim	/^let g:ale_fixers = get(g:, 'ale_fixers', {})$/;"	v
g:ale_go_go111module	plugged/ale/plugin/ale.vim	/^let g:ale_go_go111module = get(g:, 'ale_go_go111module', '')$/;"	v
g:ale_history_enabled	plugged/ale/plugin/ale.vim	/^let g:ale_history_enabled = get(g:, 'ale_history_enabled', 1)$/;"	v
g:ale_history_log_output	plugged/ale/plugin/ale.vim	/^let g:ale_history_log_output = get(g:, 'ale_history_log_output', 1)$/;"	v
g:ale_hover_cursor	plugged/ale/plugin/ale.vim	/^let g:ale_hover_cursor = get(g:, 'ale_hover_cursor', 1)$/;"	v
g:ale_hover_to_preview	plugged/ale/plugin/ale.vim	/^let g:ale_hover_to_preview = get(g:, 'ale_hover_to_preview', 0)$/;"	v
g:ale_html_tidy_executable	plugged/ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_executable = get(g:, 'ale_html_tidy_executable', 'tidy')$/;"	v
g:ale_html_tidy_options	plugged/ale/ale_linters/html/tidy.vim	/^let g:ale_html_tidy_options = get(g:, 'ale_html_tidy_options', '-q -e -language en')$/;"	v
g:ale_ignore_2_4_warnings	plugged/ale/test/.config/nvim/init.vim	/^let g:ale_ignore_2_4_warnings = 1$/;"	v
g:ale_ignore_2_4_warnings	plugged/ale/test/vimrc	/^let g:ale_ignore_2_4_warnings = 1$/;"	v
g:ale_java_pmd_options	plugged/ale/ale_linters/java/pmd.vim	/^    let g:ale_java_pmd_options = '-R category\/java\/bestpractices.xml'$/;"	v
g:ale_keep_list_window_open	plugged/ale/autoload/ale/list.vim	/^let g:ale_keep_list_window_open = get(g:, 'ale_keep_list_window_open', 0)$/;"	v
g:ale_kotlin_kotlinc_classpath	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_classpath = get(g:, 'ale_kotlin_kotlinc_classpath', '')$/;"	v
g:ale_kotlin_kotlinc_config_file	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_config_file = get(g:, 'ale_kotlin_kotlinc_config_file', '.ale_kotlinc_c/;"	v
g:ale_kotlin_kotlinc_enable_config	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_enable_config = get(g:, 'ale_kotlin_kotlinc_enable_config', 0)$/;"	v
g:ale_kotlin_kotlinc_module_filename	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_module_filename = get(g:, 'ale_kotlin_kotlinc_module_filename', 'module/;"	v
g:ale_kotlin_kotlinc_options	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_options = get(g:, 'ale_kotlin_kotlinc_options', '')$/;"	v
g:ale_kotlin_kotlinc_sourcepath	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_sourcepath = get(g:, 'ale_kotlin_kotlinc_sourcepath', '')$/;"	v
g:ale_kotlin_kotlinc_use_module_file	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let g:ale_kotlin_kotlinc_use_module_file = get(g:, 'ale_kotlin_kotlinc_use_module_file', 0)$/;"	v
g:ale_lint_delay	plugged/ale/plugin/ale.vim	/^let g:ale_lint_delay = get(g:, 'ale_lint_delay', 200)$/;"	v
g:ale_lint_on_enter	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_enter = get(g:, 'ale_lint_on_enter', 1)$/;"	v
g:ale_lint_on_filetype_changed	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_filetype_changed = get(g:, 'ale_lint_on_filetype_changed', 1)$/;"	v
g:ale_lint_on_insert_leave	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_insert_leave = get(g:, 'ale_lint_on_insert_leave', 1)$/;"	v
g:ale_lint_on_save	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_save = get(g:, 'ale_lint_on_save', 1)$/;"	v
g:ale_lint_on_text_changed	plugged/ale/plugin/ale.vim	/^let g:ale_lint_on_text_changed = get(g:, 'ale_lint_on_text_changed', 'normal')$/;"	v
g:ale_linter_aliases	plugged/ale/plugin/ale.vim	/^let g:ale_linter_aliases = get(g:, 'ale_linter_aliases', {})$/;"	v
g:ale_linters	plug.vim	/^    let g:ale_linters = {'python': ['pylint', 'pycodestyle']}$/;"	v
g:ale_linters	plugged/ale/plugin/ale.vim	/^let g:ale_linters = get(g:, 'ale_linters', {})$/;"	v
g:ale_linters_explicit	plugged/ale/plugin/ale.vim	/^let g:ale_linters_explicit = get(g:, 'ale_linters_explicit', 0)$/;"	v
g:ale_linters_ignore	plugged/ale/autoload/ale.vim	/^let g:ale_linters_ignore = get(g:, 'ale_linters_ignore', {})$/;"	v
g:ale_list_vertical	plugged/ale/autoload/ale/list.vim	/^let g:ale_list_vertical = get(g:, 'ale_list_vertical', 0)$/;"	v
g:ale_list_window_size	plugged/ale/autoload/ale/list.vim	/^let g:ale_list_window_size = get(g:, 'ale_list_window_size', 10)$/;"	v
g:ale_loclist_msg_format	plugged/ale/autoload/ale/list.vim	/^let g:ale_loclist_msg_format = get(g:, 'ale_loclist_msg_format',$/;"	v
g:ale_lsp_error_messages	plugged/ale/autoload/ale/lsp_linter.vim	/^        let g:ale_lsp_error_messages[a:linter_name] = []$/;"	v
g:ale_lsp_error_messages	plugged/ale/autoload/ale/lsp_linter.vim	/^    let g:ale_lsp_error_messages = get(g:, 'ale_lsp_error_messages', {})$/;"	v
g:ale_lsp_next_message_id	plugged/ale/autoload/ale/lsp.vim	/^        let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_message_id	plugged/ale/autoload/ale/lsp.vim	/^    let g:ale_lsp_next_message_id += 1$/;"	v
g:ale_lsp_next_message_id	plugged/ale/autoload/ale/lsp.vim	/^let g:ale_lsp_next_message_id = 1$/;"	v
g:ale_lsp_next_version_id	plugged/ale/autoload/ale/lsp/message.vim	/^        let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lsp_next_version_id	plugged/ale/autoload/ale/lsp/message.vim	/^    let g:ale_lsp_next_version_id += 1$/;"	v
g:ale_lsp_next_version_id	plugged/ale/autoload/ale/lsp/message.vim	/^let g:ale_lsp_next_version_id = 1$/;"	v
g:ale_lsp_root	plugged/ale/autoload/ale/assert.vim	/^    let g:ale_lsp_root = {}$/;"	v
g:ale_lsp_root	plugged/ale/plugin/ale.vim	/^let g:ale_lsp_root = get(g:, 'ale_lsp_root', {})$/;"	v
g:ale_lsp_show_message_format	plugged/ale/autoload/ale.vim	/^let g:ale_lsp_show_message_format = get(g:, 'ale_lsp_show_message_format', '%severity%:%linter%:/;"	v
g:ale_lsp_show_message_severity	plugged/ale/autoload/ale.vim	/^let g:ale_lsp_show_message_severity = get(g:, 'ale_lsp_show_message_severity', 'error')$/;"	v
g:ale_lsp_types	plugged/ale/autoload/ale/completion.vim	/^let g:ale_lsp_types = {$/;"	v
g:ale_max_buffer_history_size	plugged/ale/autoload/ale/history.vim	/^let g:ale_max_buffer_history_size = get(g:, 'ale_max_buffer_history_size', 20)$/;"	v
g:ale_max_signs	plugged/ale/autoload/ale/sign.vim	/^let g:ale_max_signs = get(g:, 'ale_max_signs', -1)$/;"	v
g:ale_objc_clang_options	plugged/ale/ale_linters/objc/clang.vim	/^    let g:ale_objc_clang_options = '-std=c11 -Wall'$/;"	v
g:ale_objcpp_clang_options	plugged/ale/ale_linters/objcpp/clang.vim	/^    let g:ale_objcpp_clang_options = '-std=c++14 -Wall'$/;"	v
g:ale_open_list	plugged/ale/autoload/ale/list.vim	/^let g:ale_open_list = get(g:, 'ale_open_list', 0)$/;"	v
g:ale_perl6_perl6_executable	plugged/ale/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_executable =$/;"	v
g:ale_perl6_perl6_options	plugged/ale/ale_linters/perl6/perl6.vim	/^let g:ale_perl6_perl6_options =$/;"	v
g:ale_php_phan_executable	plugged/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_executable = get(g:, 'ale_php_phan_executable', 'phan')$/;"	v
g:ale_php_phan_minimum_severity	plugged/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_minimum_severity = get(g:, 'ale_php_phan_minimum_severity', 0)$/;"	v
g:ale_php_phan_use_client	plugged/ale/ale_linters/php/phan.vim	/^let g:ale_php_phan_use_client = get(g:, 'ale_php_phan_use_client', 0)$/;"	v
g:ale_php_phpcs_standard	plugged/ale/ale_linters/php/phpcs.vim	/^let g:ale_php_phpcs_standard = get(g:, 'ale_php_phpcs_standard', '')$/;"	v
g:ale_php_phpmd_executable	plugged/ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_executable = get(g:, 'ale_php_phpmd_executable', 'phpmd')$/;"	v
g:ale_php_phpmd_ruleset	plugged/ale/ale_linters/php/phpmd.vim	/^let g:ale_php_phpmd_ruleset = get(g:, 'ale_php_phpmd_ruleset', 'cleancode,codesize,controversial/;"	v
g:ale_php_phpstan_autoload	plugged/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_autoload = get(g:, 'ale_php_phpstan_autoload', '')$/;"	v
g:ale_php_phpstan_configuration	plugged/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_configuration = get(g:, 'ale_php_phpstan_configuration', '')$/;"	v
g:ale_php_phpstan_executable	plugged/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_executable = get(g:, 'ale_php_phpstan_executable', 'phpstan')$/;"	v
g:ale_php_phpstan_level	plugged/ale/ale_linters/php/phpstan.vim	/^let g:ale_php_phpstan_level = get(g:, 'ale_php_phpstan_level', '')$/;"	v
g:ale_popup_menu_enabled	plugged/ale/plugin/ale.vim	/^let g:ale_popup_menu_enabled = get(g:, 'ale_popup_menu_enabled', has('gui_running'))$/;"	v
g:ale_puppet_puppetlint_executable	plugged/ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_executable = 'puppet-lint'$/;"	v
g:ale_puppet_puppetlint_options	plugged/ale/autoload/ale/fixers/puppetlint.vim	/^    let g:ale_puppet_puppetlint_options = ''$/;"	v
g:ale_python_auto_pipenv	plugged/ale/plugin/ale.vim	/^let g:ale_python_auto_pipenv = get(g:, 'ale_python_auto_pipenv', 0)$/;"	v
g:ale_python_prospector_executable	plugged/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_executable =$/;"	v
g:ale_python_prospector_options	plugged/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_options =$/;"	v
g:ale_python_prospector_use_global	plugged/ale/ale_linters/python/prospector.vim	/^let g:ale_python_prospector_use_global = get(g:, 'ale_python_prospector_use_global', get(g:, 'al/;"	v
g:ale_r_lintr_lint_package	plugged/ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_lint_package = get(g:, 'ale_r_lintr_lint_package', 0)$/;"	v
g:ale_r_lintr_options	plugged/ale/ale_linters/r/lintr.vim	/^let g:ale_r_lintr_options = get(g:, 'ale_r_lintr_options', 'with_defaults()')$/;"	v
g:ale_rename_tsserver_find_in_comments	plugged/ale/autoload/ale/rename.vim	/^let g:ale_rename_tsserver_find_in_comments = get(g:, 'ale_rename_tsserver_find_in_comments')$/;"	v
g:ale_rename_tsserver_find_in_strings	plugged/ale/autoload/ale/rename.vim	/^let g:ale_rename_tsserver_find_in_strings = get(g:, 'ale_rename_tsserver_find_in_strings')$/;"	v
g:ale_run_synchronously	plugged/ale/autoload/ale/assert.vim	/^    let g:ale_run_synchronously = 1$/;"	v
g:ale_run_synchronously_callbacks	plugged/ale/autoload/ale/command.vim	/^            let g:ale_run_synchronously_callbacks = []$/;"	v
g:ale_run_synchronously_emulate_commands	plugged/ale/autoload/ale/assert.vim	/^    let g:ale_run_synchronously_emulate_commands = 1$/;"	v
g:ale_rust_ignore_error_codes	plugged/ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_error_codes = []$/;"	v
g:ale_rust_ignore_secondary_spans	plugged/ale/autoload/ale/handlers/rust.vim	/^    let g:ale_rust_ignore_secondary_spans = 0$/;"	v
g:ale_set_balloons	plugged/ale/plugin/ale.vim	/^let g:ale_set_balloons = get(g:, 'ale_set_balloons', has('balloon_eval') && has('gui_running'))$/;"	v
g:ale_set_highlights	plugged/ale/plugin/ale.vim	/^let g:ale_set_highlights = get(g:, 'ale_set_highlights', has('syntax'))$/;"	v
g:ale_set_lists_synchronously	plugged/ale/test/.config/nvim/init.vim	/^let g:ale_set_lists_synchronously = 1$/;"	v
g:ale_set_lists_synchronously	plugged/ale/test/vimrc	/^let g:ale_set_lists_synchronously = 1$/;"	v
g:ale_set_loclist	plugged/ale/plugin/ale.vim	/^let g:ale_set_loclist = get(g:, 'ale_set_loclist', 1)$/;"	v
g:ale_set_quickfix	plugged/ale/plugin/ale.vim	/^let g:ale_set_quickfix = get(g:, 'ale_set_quickfix', 0)$/;"	v
g:ale_set_signs	plugged/ale/plugin/ale.vim	/^let g:ale_set_signs = get(g:, 'ale_set_signs', has('signs'))$/;"	v
g:ale_sh_shell_default_shell	plugged/ale/ale_linters/sh/shell.vim	/^        let g:ale_sh_shell_default_shell = 'bash'$/;"	v
g:ale_sh_shell_default_shell	plugged/ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = fnamemodify($SHELL, ':t')$/;"	v
g:ale_sh_shell_default_shell	plugged/ale/ale_linters/sh/shell.vim	/^    let g:ale_sh_shell_default_shell = g:ale_linters_sh_shell_default_shell$/;"	v
g:ale_sign_column_always	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_column_always = get(g:, 'ale_sign_column_always', 0)$/;"	v
g:ale_sign_error	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_error = get(g:, 'ale_sign_error', '>>')$/;"	v
g:ale_sign_highlight_linenrs	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_highlight_linenrs = get(g:, 'ale_sign_highlight_linenrs', 0)$/;"	v
g:ale_sign_info	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_info = get(g:, 'ale_sign_info', g:ale_sign_warning)$/;"	v
g:ale_sign_offset	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_offset = get(g:, 'ale_sign_offset', 1000000)$/;"	v
g:ale_sign_priority	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_priority = get(g:, 'ale_sign_priority', 30)$/;"	v
g:ale_sign_style_error	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_style_error = get(g:, 'ale_sign_style_error', g:ale_sign_error)$/;"	v
g:ale_sign_style_warning	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_style_warning = get(g:, 'ale_sign_style_warning', g:ale_sign_warning)$/;"	v
g:ale_sign_warning	plugged/ale/autoload/ale/sign.vim	/^let g:ale_sign_warning = get(g:, 'ale_sign_warning', '--')$/;"	v
g:ale_tex_chktex_executable	plugged/ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_executable =$/;"	v
g:ale_tex_chktex_options	plugged/ale/ale_linters/tex/chktex.vim	/^let g:ale_tex_chktex_options =$/;"	v
g:ale_tsserver_types	plugged/ale/autoload/ale/completion.vim	/^let g:ale_tsserver_types = {$/;"	v
g:ale_type_map	plugged/ale/autoload/ale/engine.vim	/^let g:ale_type_map = get(g:, 'ale_type_map', {})$/;"	v
g:ale_update_tagstack	plugged/ale/autoload/ale/definition.vim	/^let g:ale_update_tagstack = get(g:, 'ale_update_tagstack', 1)$/;"	v
g:ale_verilog_verilator_options	plugged/ale/ale_linters/verilog/verilator.vim	/^    let g:ale_verilog_verilator_options = ''$/;"	v
g:ale_virtualenv_dir_names	plugged/ale/autoload/ale/python.vim	/^let g:ale_virtualenv_dir_names = get(g:, 'ale_virtualenv_dir_names', [$/;"	v
g:ale_virtualtext_cursor	plugged/ale/plugin/ale.vim	/^let g:ale_virtualtext_cursor = get(g:, 'ale_virtualtext_cursor', 0)$/;"	v
g:ale_virtualtext_delay	plugged/ale/autoload/ale/virtualtext.vim	/^let g:ale_virtualtext_delay = get(g:, 'ale_virtualtext_delay', 10)$/;"	v
g:ale_want_results_buffer	plugged/ale/autoload/ale.vim	/^    let g:ale_want_results_buffer = a:buffer$/;"	v
g:ale_warn_about_trailing_blank_lines	plugged/ale/plugin/ale.vim	/^let g:ale_warn_about_trailing_blank_lines = get(g:, 'ale_warn_about_trailing_blank_lines', 1)$/;"	v
g:ale_warn_about_trailing_whitespace	plugged/ale/plugin/ale.vim	/^let g:ale_warn_about_trailing_whitespace = get(g:, 'ale_warn_about_trailing_whitespace', 1)$/;"	v
g:ale_xml_xmllint_executable	plugged/ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_executable = get(g:, 'ale_xml_xmllint_executable', 'xmllint')$/;"	v
g:ale_xml_xmllint_options	plugged/ale/ale_linters/xml/xmllint.vim	/^let g:ale_xml_xmllint_options = get(g:, 'ale_xml_xmllint_options', '')$/;"	v
g:aria_attributes_complete	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^        let g:aria_attributes_complete = 0$/;"	v
g:aria_attributes_complete	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^  let g:aria_attributes_complete = 1$/;"	v
g:autoloaded_fugitive	plugged/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:b	plugged/vim-translator/autoload/translator/window/float.vim	/^  let g:b = bottomline$/;"	v
g:battery#update_statusline	plugged/vim-airline/autoload/airline/extensions/battery.vim	/^    let g:battery#update_statusline = 1$/;"	v
g:beginword	plugged/vim-polyglot/indent/cobol.vim	/^            let g:beginword = beginword$/;"	v
g:bmenu_max_pathlen	plugged/vim-polyglot/extras/menu.vim	/^  let g:bmenu_max_pathlen = 35$/;"	v
g:bmenu_priority	plugged/vim-polyglot/extras/menu.vim	/^    let g:bmenu_priority = a:1$/;"	v
g:bufferline_active_buffer_left	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_left = ''$/;"	v
g:bufferline_active_buffer_right	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_buffer_right = ''$/;"	v
g:bufferline_active_highlight	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_active_highlight = 'bufferline_selected'$/;"	v
g:bufferline_inactive_highlight	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_inactive_highlight = 'airline_c'$/;"	v
g:bufferline_separator	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^    let g:bufferline_separator = g:airline_symbols.space$/;"	v
g:c_syntax_for_h	plugged/vim-polyglot/tests/extensions.vim	/^let g:c_syntax_for_h = 1$/;"	v
g:cabal_indent_section	plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 2$/;"	v
g:cabal_indent_section	plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 4$/;"	v
g:ch_syntax_for_h	plugged/vim-polyglot/tests/extensions.vim	/^let g:ch_syntax_for_h = 1$/;"	v
g:clojure_align_multiline_strings	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_multiline_strings = 0$/;"	v
g:clojure_align_subforms	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_subforms = 0$/;"	v
g:clojure_fuzzy_indent	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent = 1$/;"	v
g:clojure_fuzzy_indent_blacklist	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_blacklist = ['-fn$', '\\v^with-%(meta|out-str|loading-context)$']$/;"	v
g:clojure_fuzzy_indent_patterns	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let']$/;"	v
g:clojure_maxlines	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_maxlines = 100$/;"	v
g:clojure_special_indent_words	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protoco/;"	v
g:cobol_inline_comment	plugged/vim-polyglot/syntax/cobol.vim	/^   let g:cobol_inline_comment=0$/;"	v
g:coc_stl_format	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = _backup$/;"	v
g:coc_stl_format	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = get(g:, 'airline#extensions#coc#stl_format_err', '%E{[%e(#%fe)]}')$/;"	v
g:coc_stl_format	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^    let g:coc_stl_format = get(g:, 'airline#extensions#coc#stl_format_warn', '%W{[%w(#%fw)]}')$/;"	v
g:coffee_cake	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_cake = 'cake'$/;"	v
g:coffee_cake_options	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_cake_options = ''$/;"	v
g:coffee_compiler	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_compiler = 'coffee'$/;"	v
g:coffee_lint_options	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_lint_options = ''$/;"	v
g:coffee_linter	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_linter = 'coffeelint'$/;"	v
g:coffee_make_options	plugged/vim-polyglot/autoload/coffee.vim	/^    let g:coffee_make_options = ''$/;"	v
g:colors_name	plugged/gruvbox/colors/gruvbox.vim	/^let g:colors_name='gruvbox'$/;"	v
g:colors_name	plugged/onedark.vim/colors/onedark.vim	/^let g:colors_name="onedark"$/;"	v
g:colors_name	plugged/vim/colors/dracula.vim	/^let g:colors_name = 'dracula'$/;"	v
g:context_menu_k	plugged/vim-quickui/test/menu_example.vim	/^let g:context_menu_k = [$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^  let g:count += 1$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^  let g:count += 2$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^  let g:count = a:0$/;"	v
g:crystal#indent#block_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#block_continuation_regex =$/;"	v
g:crystal#indent#block_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#block_regex =$/;"	v
g:crystal#indent#bracket_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#bracket_continuation_regex =$/;"	v
g:crystal#indent#bracket_switch_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#bracket_switch_continuation_regex =$/;"	v
g:crystal#indent#continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#continuation_regex =$/;"	v
g:crystal#indent#crystal_deindent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_deindent_keywords =$/;"	v
g:crystal#indent#crystal_indent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_indent_keywords =$/;"	v
g:crystal#indent#crystal_macro_deindent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_macro_deindent_keywords =$/;"	v
g:crystal#indent#crystal_macro_indent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_macro_indent_keywords =$/;"	v
g:crystal#indent#curr_line_callbacks	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#curr_line_callbacks = [$/;"	v
g:crystal#indent#dot_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#dot_continuation_regex = '\\.'.g:crystal#indent#eol$/;"	v
g:crystal#indent#end_end_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_end_regex =$/;"	v
g:crystal#indent#end_middle_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_middle_regex =$/;"	v
g:crystal#indent#end_start_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_start_regex =$/;"	v
g:crystal#indent#eol	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#eol = '\\ze\\s*\\%(#.*\\)\\=\\%(\\_$\\|;\\)'$/;"	v
g:crystal#indent#hanging_assignment_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#hanging_assignment_regex =$/;"	v
g:crystal#indent#leading_operator_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#leading_operator_regex = g:crystal#indent#sol.'\\.'$/;"	v
g:crystal#indent#link_attribute_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#link_attribute_regex =$/;"	v
g:crystal#indent#macro_end_end_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_end_regex =$/;"	v
g:crystal#indent#macro_end_middle_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_middle_regex =$/;"	v
g:crystal#indent#macro_end_start_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_start_regex =$/;"	v
g:crystal#indent#macro_hanging_assignment_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_hanging_assignment_regex =$/;"	v
g:crystal#indent#msl_callbacks	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#msl_callbacks = [$/;"	v
g:crystal#indent#non_bracket_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#non_bracket_continuation_regex =$/;"	v
g:crystal#indent#operator_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#operator_regex =$/;"	v
g:crystal#indent#prev_line_callbacks	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#prev_line_callbacks = [$/;"	v
g:crystal#indent#skip_expr	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#skip_expr =$/;"	v
g:crystal#indent#sol	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#sol = '\\%(\\_^\\|;\\)\\s*\\zs'$/;"	v
g:crystal#indent#syng_delim	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_delim =$/;"	v
g:crystal#indent#syng_strcom	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_strcom =$/;"	v
g:crystal#indent#syng_strcomdelim	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_strcomdelim =$/;"	v
g:crystal#indent#syng_string	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_string =$/;"	v
g:crystal#indent#type_declaration_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#type_declaration_regex =$/;"	v
g:crystal_auto_format	plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_auto_format = get(g:, 'crystal_auto_format', 0)$/;"	v
g:crystal_compiler_command	plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_compiler_command = get(g:, 'crystal_compiler_command', 'crystal')$/;"	v
g:crystal_minlines	plugged/vim-polyglot/syntax/crystal.vim	/^    let g:crystal_minlines = 500$/;"	v
g:csv_convert	plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_convert=input("Converted text, use %s for column input:\\n", convert)$/;"	v
g:csv_delim	plugged/vim-polyglot/autoload/csv.vim	/^        let g:csv_delim = _delim$/;"	v
g:csv_delim	plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_delim = delimiter$/;"	v
g:csv_highlight_column	plugged/vim-polyglot/autoload/csv.vim	/^      let g:csv_highlight_column = csv_highlight_column$/;"	v
g:csv_no_conceal	plugged/vim-polyglot/autoload/csv.vim	/^            let g:csv_no_conceal=1$/;"	v
g:csv_no_conceal	plugged/vim-polyglot/autoload/csv.vim	/^        let g:csv_no_conceal=1$/;"	v
g:csv_post_convert	plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_post_convert=input('Post convert text: ', post)$/;"	v
g:csv_pre_convert	plugged/vim-polyglot/autoload/csv.vim	/^    let g:csv_pre_convert=input('Pre convert text: ', pre)$/;"	v
g:ctags_command	plugged/vim-polyglot/extras/menu.vim	/^    let g:ctags_command = "ctags -R ."$/;"	v
g:ctags_command	plugged/vim-polyglot/extras/menu.vim	/^    let g:ctags_command = "mc vim:ctags *.*"$/;"	v
g:ctrlp_formatline_func	plugged/vim-devicons/autoload/devicons/plugins/ctrlp.vim	/^        let g:ctrlp_formatline_func = 's:formatline(s:curtype() == "buf" ? v:val : WebDevIconsGe/;"	v
g:ctrlp_status_func	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^  let g:ctrlp_status_func = {$/;"	v
g:cucumber_languages	plugged/vim-polyglot/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:current_compiler	plugged/vim-polyglot/compiler/go.vim	/^let g:current_compiler = "go"$/;"	v
g:current_ulti_dict	plugged/ultisnips/autoload/UltiSnips.vim	/^    let g:current_ulti_dict = {}$/;"	v
g:current_ulti_dict_info	plugged/ultisnips/autoload/UltiSnips.vim	/^      let g:current_ulti_dict_info = {}$/;"	v
g:cursormode_exit_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^  let g:cursormode_exit_mode='n'$/;"	v
g:dart_format_on_save	plugged/vim-polyglot/autoload/dart.vim	/^    let g:dart_format_on_save = 0$/;"	v
g:dart_format_on_save	plugged/vim-polyglot/autoload/dart.vim	/^  let g:dart_format_on_save = 1$/;"	v
g:debchangelog_complete_mode	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^          let g:debchangelog_complete_mode = 'lp'$/;"	v
g:debchangelog_complete_mode	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^    let g:debchangelog_complete_mode = 'debbugs'$/;"	v
g:debchangelog_listbugs_severities	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^  let g:debchangelog_listbugs_severities = 'critical,grave,serious,important,normal,minor,wishli/;"	v
g:did_changelog_ftplugin	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let g:did_changelog_ftplugin = 1$/;"	v
g:did_cobol_ftplugin_functions	plugged/vim-polyglot/ftplugin/cobol.vim	/^let g:did_cobol_ftplugin_functions = 1$/;"	v
g:did_ocaml_switch	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	plugged/vim-polyglot/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:dir	plugged/ale/autoload/ale/test.vim	/^    let g:dir = getcwd() " no-custom-checks$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette           = {}$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.bg        = ['#282A36', 236]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.bgdark    = ['#21222C', 235]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.bgdarker  = ['#191A21', 234]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.bglight   = ['#343746', 237]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.bglighter = ['#424450', 238]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_0  = '#21222C'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_1  = '#FF5555'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_10 = '#69FF94'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_11 = '#FFFFA5'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_12 = '#D6ACFF'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_13 = '#FF92DF'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_14 = '#A4FFFF'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_15 = '#FFFFFF'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_2  = '#50FA7B'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_3  = '#F1FA8C'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_4  = '#BD93F9'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_5  = '#FF79C6'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_6  = '#8BE9FD'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_7  = '#F8F8F2'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_8  = '#6272A4'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.color_9  = '#FF6E6E'$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.comment   = ['#6272A4',  61]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.cyan      = ['#8BE9FD', 117]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.fg        = ['#F8F8F2', 253]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.green     = ['#50FA7B',  84]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.orange    = ['#FFB86C', 215]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.pink      = ['#FF79C6', 212]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.purple    = ['#BD93F9', 141]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.red       = ['#FF5555', 203]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.selection = ['#44475A', 239]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.subtle    = ['#424450', 238]$/;"	v
g:dracula#palette	plugged/vim/autoload/dracula.vim	/^let g:dracula#palette.yellow    = ['#F1FA8C', 228]$/;"	v
g:dracula_bold	plugged/vim/colors/dracula.vim	/^  let g:dracula_bold = 1$/;"	v
g:dracula_colorterm	plugged/vim/colors/dracula.vim	/^  let g:dracula_colorterm = 1$/;"	v
g:dracula_inverse	plugged/vim/colors/dracula.vim	/^  let g:dracula_inverse = 1$/;"	v
g:dracula_italic	plugged/vim/colors/dracula.vim	/^  let g:dracula_italic = 1$/;"	v
g:dracula_undercurl	plugged/vim/colors/dracula.vim	/^  let g:dracula_undercurl = g:dracula_underline$/;"	v
g:dracula_underline	plugged/vim/colors/dracula.vim	/^  let g:dracula_underline = 1$/;"	v
g:eelixir_default_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:eelixir_default_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:elixir_indent_max_lookbehind	plugged/vim-polyglot/autoload/elixir/indent.vim	/^  let g:elixir_indent_max_lookbehind = 30$/;"	v
g:elixir_use_markdown_for_docs	plugged/vim-polyglot/syntax/elixir.vim	/^  let g:elixir_use_markdown_for_docs = 0$/;"	v
g:eregex_backward_delim	plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_backward_delim = '?'$/;"	v
g:eregex_evaluater_cmd	plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_cmd = cmd$/;"	v
g:eregex_evaluater_cmd	plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_cmd = globalcmd$/;"	v
g:eregex_evaluater_how_exe	plugged/vim-polyglot/scripts/eregex.vim	/^        let g:eregex_evaluater_how_exe=1$/;"	v
g:eregex_evaluater_how_exe	plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_how_exe = s:eglobal_working$/;"	v
g:eregex_evaluater_how_exe	plugged/vim-polyglot/scripts/eregex.vim	/^    let g:eregex_evaluater_how_exe=2$/;"	v
g:eregex_force_case	plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_force_case = 0$/;"	v
g:eregex_forward_delim	plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_forward_delim = '\/'$/;"	v
g:erlang_folding	plugged/vim-polyglot/ftplugin/erlang.vim	/^	let g:erlang_folding = 0$/;"	v
g:erlang_indent_searchpair_timeout	plugged/vim-polyglot/indent/erlang.vim	/^let g:erlang_indent_searchpair_timeout = 2000$/;"	v
g:erlang_keywordprg	plugged/vim-polyglot/ftplugin/erlang.vim	/^	let g:erlang_keywordprg = 'erl -man'$/;"	v
g:erlang_unexpected_token_indent	plugged/vim-polyglot/indent/erlang.vim	/^  let g:erlang_unexpected_token_indent = -1$/;"	v
g:eruby_default_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:fennel_align_multiline_strings	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_align_multiline_strings = 0$/;"	v
g:fennel_align_subforms	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_align_subforms = 0$/;"	v
g:fennel_fuzzy_indent	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent = 1$/;"	v
g:fennel_fuzzy_indent_blacklist	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent_blacklist = []$/;"	v
g:fennel_fuzzy_indent_patterns	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent_patterns = ['^def', '^let', '^while', '^if', '^fn$', '^var$', '^case/;"	v
g:fennel_maxlines	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_maxlines = 100$/;"	v
g:fennel_special_indent_words	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_special_indent_words = ''$/;"	v
g:fern_force_overwrite_statusline	plugged/vim-airline/autoload/airline/extensions/fern.vim	/^  let g:fern_force_overwrite_statusline = 0$/;"	v
g:filetype_asa	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_asa = "fizfuz"$/;"	v
g:filetype_asp	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_asp = "fizfuz"$/;"	v
g:filetype_fs	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_fs = "fizfuz"$/;"	v
g:filetype_idr	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_idr = "fizfuz"$/;"	v
g:filetype_m	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_m = "fizfuz"$/;"	v
g:filetype_pl	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_pl = "fizfuz"$/;"	v
g:filetype_pm	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_pm = "fizfuz"$/;"	v
g:filetype_t	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_t = "fizfuz"$/;"	v
g:foo	plugged/vim-polyglot/indent/cobol.vim	/^        let g:foo = s:stripped(lastclause)$/;"	v
g:fsharp#	plugged/vim-polyglot/autoload/fsharp.vim	/^            let g:fsharp#{key.snake} = key.default$/;"	v
g:fsharp#languageserver_command	plugged/vim-polyglot/autoload/fsharp.vim	/^let g:fsharp#languageserver_command =$/;"	v
g:ft_ignore_pat	plugged/vim-polyglot/extras/filetype.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ft_ignore_pat	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ftplugin_sql_objects	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_objects = 'function,procedure,event,' .$/;"	v
g:ftplugin_sql_omni_key	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key = '<C-C>'$/;"	v
g:ftplugin_sql_omni_key_left	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_left = '<Left>'$/;"	v
g:ftplugin_sql_omni_key_right	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_right = '<Right>'$/;"	v
g:ftplugin_sql_statements	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_statements = 'create'$/;"	v
g:fugitive_event	plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:fugitive_event = dir$/;"	v
g:fugitive_git_executable	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'env ' . g:fugitive_git_executable$/;"	v
g:fugitive_git_executable	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fullDefMatcher	plugged/vim-polyglot/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSp/;"	v
g:fzf_colors	plugged/vim/after/plugin/dracula.vim	/^  let g:fzf_colors = {$/;"	v
g:fzf_colors	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^      let g:fzf_colors = old_fzf_colors$/;"	v
g:gina#component#repo#commit_length	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^      let g:gina#component#repo#commit_length = s:sha1size$/;"	v
g:gina_force_overwrite_statusline	plugged/vim-airline/autoload/airline/extensions/gina.vim	/^  let g:gina_force_overwrite_statusline = 0$/;"	v
g:gitgutter_override_sign_column_highlight	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:go_asmfmt_autosave	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_asmfmt_autosave = a:value$/;"	v
g:go_auto_sameids	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_auto_sameids = a:value$/;"	v
g:go_auto_type_info	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_auto_type_info = a:value$/;"	v
g:go_build_tags	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_build_tags = a:value$/;"	v
g:go_debug_commands	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_debug_commands = get(g:, 'go_debug_commands', [])$/;"	v
g:go_debug_diag	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_debug_diag = a:value$/;"	v
g:go_fmt_autosave	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_fmt_autosave = a:value$/;"	v
g:go_guru_scope	plugged/vim-polyglot/autoload/go/config.vim	/^    let g:go_guru_scope = a:scope$/;"	v
g:go_lsp_log	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_lsp_log = get(g:, 'go_lsp_log', [])$/;"	v
g:go_metalinter_autosave	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_metalinter_autosave = a:value$/;"	v
g:go_mod_fmt_autosave	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_mod_fmt_autosave = a:value$/;"	v
g:go_template_autocreate	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_template_autocreate = a:value$/;"	v
g:go_term_close_on_exit	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_term_close_on_exit = a:value$/;"	v
g:go_term_enabled	plugged/vim-polyglot/autoload/go/config.vim	/^  let g:go_term_enabled = a:value$/;"	v
g:got_char	plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = 1111$/;"	v
g:got_char	plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = 777$/;"	v
g:got_char	plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = 999$/;"	v
g:got_char	plugged/vim-polyglot/ftplugin/zimbu.vim	/^    let g:got_char = v:char$/;"	v
g:gruvbox_bold	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_bold=1$/;"	v
g:gruvbox_contrast_dark	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_dark='medium'$/;"	v
g:gruvbox_contrast_light	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_light='medium'$/;"	v
g:gruvbox_guisp_fallback	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_guisp_fallback='NONE'$/;"	v
g:gruvbox_improved_strings	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_strings=0$/;"	v
g:gruvbox_improved_warnings	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_warnings=0$/;"	v
g:gruvbox_inverse	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_inverse=1$/;"	v
g:gruvbox_invert_indent_guides	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_invert_indent_guides=0$/;"	v
g:gruvbox_invert_signs	plugged/gruvbox/autoload/gruvbox.vim	/^    let g:gruvbox_invert_signs=0$/;"	v
g:gruvbox_invert_signs	plugged/gruvbox/autoload/gruvbox.vim	/^    let g:gruvbox_invert_signs=1$/;"	v
g:gruvbox_italic	plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=0$/;"	v
g:gruvbox_italic	plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=1$/;"	v
g:gruvbox_termcolors	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_termcolors=256$/;"	v
g:gruvbox_undercurl	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_undercurl=1$/;"	v
g:gruvbox_underline	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_underline=1$/;"	v
g:gutentags_add_ctrlp_root_markers	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_build_inverted_index	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^            let g:gutentags_trace = l:prev_trace$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = 1$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:h	plugged/vim-translator/autoload/translator/window/float.vim	/^  let g:h = a:height$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/slim.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/slime.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haskell_indent_case	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_case = 2$/;"	v
g:haskell_indent_do	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_do = 3$/;"	v
g:haskell_indent_guard	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_guard = 2$/;"	v
g:haskell_indent_if	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_if = 3$/;"	v
g:haskell_indent_in	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_in = 1$/;"	v
g:haskell_indent_let	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_let = 4$/;"	v
g:haskell_indent_where	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_where = 6$/;"	v
g:html5_aria_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:html_indent_tags	plugged/vim-polyglot/indent/mako.vim	/^        let g:html_indent_tags = a:tag$/;"	v
g:html_indent_tags	plugged/vim-polyglot/indent/mako.vim	/^        let g:html_indent_tags = g:html_indent_tags.'\\|'.a:tag$/;"	v
g:idris_indent_case	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_case = 5$/;"	v
g:idris_indent_case	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_case = 5$/;"	v
g:idris_indent_do	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_do = 3$/;"	v
g:idris_indent_do	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_do = 3$/;"	v
g:idris_indent_if	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_if = 3$/;"	v
g:idris_indent_if	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_if = 3$/;"	v
g:idris_indent_let	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_let = 4$/;"	v
g:idris_indent_let	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_let = 4$/;"	v
g:idris_indent_rewrite	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_rewrite = 8$/;"	v
g:idris_indent_rewrite	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_rewrite = 8$/;"	v
g:idris_indent_where	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_where = 6$/;"	v
g:idris_indent_where	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_where = 6$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris.vim	/^    let g:idris_respwin = "active"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris.vim	/^  let g:idris_respwin = "active"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris.vim	/^  let g:idris_respwin = "hidden"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris2.vim	/^    let g:idris_respwin = "active"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris2.vim	/^  let g:idris_respwin = "active"$/;"	v
g:idris_respwin	plugged/vim-polyglot/ftplugin/idris2.vim	/^  let g:idris_respwin = "hidden"$/;"	v
g:indentLine_autoResetWidth	plugged/indentLine/after/plugin/indentLine.vim	/^    let g:indentLine_autoResetWidth = get(g:, 'indentLine_autoResetWidth', 1)$/;"	v
g:indentLine_bufNameExclude	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_bufNameExclude = get(g:, 'indentLine_bufNameExclude', [])$/;"	v
g:indentLine_bufTypeExclude	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_bufTypeExclude = get(g:, 'indentLine_bufTypeExclude', [])$/;"	v
g:indentLine_char	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_char = get(g:, 'indentLine_char', (&encoding ==# "utf-8" && &term isnot# "linux/;"	v
g:indentLine_char_list	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_char_list = get(g:, 'indentLine_char_list', [])$/;"	v
g:indentLine_color_gui	plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_term	plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_defaultGroup	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_defaultGroup = get(g:, 'indentLine_defaultGroup', "")$/;"	v
g:indentLine_enabled	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_enabled = get(g:, 'indentLine_enabled', 1)$/;"	v
g:indentLine_faster	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_faster = get(g:, 'indentLine_faster', 0)$/;"	v
g:indentLine_fileType	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileType = get(g:, 'indentLine_fileType', [])$/;"	v
g:indentLine_fileTypeExclude	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileTypeExclude = get(g:, 'indentLine_fileTypeExclude', ['leaderf'])$/;"	v
g:indentLine_first_char	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_first_char = get(g:, 'indentLine_first_char', (&encoding ==# "utf-8" && &term i/;"	v
g:indentLine_indentLevel	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_indentLevel = get(g:, 'indentLine_indentLevel', 20)$/;"	v
g:indentLine_leadingSpaceChar	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceChar = get(g:, 'indentLine_leadingSpaceChar', (&encoding ==# "utf-8/;"	v
g:indentLine_leadingSpaceEnabled	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceEnabled = get(g:, 'indentLine_leadingSpaceEnabled', 0)$/;"	v
g:indentLine_loaded	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_loaded = 1$/;"	v
g:indentLine_maxLines	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_maxLines = get(g:, 'indentLine_maxLines', 3000)$/;"	v
g:indentLine_mysyntaxfile	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_mysyntaxfile = fnamemodify(expand("<sfile>"), ":p:h:h")."\/syntax\/indentLine.v/;"	v
g:indentLine_newVersion	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_newVersion = get(g:,'indentLine_newVersion',v:version > 704 || v:version == 704/;"	v
g:indentLine_setColors	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_setColors = get(g:, 'indentLine_setColors', 1)$/;"	v
g:indentLine_setConceal	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_setConceal = get(g:, 'indentLine_setConceal', 1)$/;"	v
g:indentLine_showFirstIndentLevel	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_showFirstIndentLevel = get(g:, 'indentLine_showFirstIndentLevel', 0)$/;"	v
g:indent_guides_auto_colors	plugged/gruvbox/colors/gruvbox.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:io_fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^let g:io_fugitive = {$/;"	v
g:j_indent_definitions	plugged/vim-polyglot/indent/j.vim	/^  let g:j_indent_definitions = 0$/;"	v
g:jsonnet_command	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_command = "jsonnet"$/;"	v
g:jsonnet_fmt_command	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_command = "jsonnetfmt"$/;"	v
g:jsonnet_fmt_fail_silently	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_fail_silently = 1$/;"	v
g:jsonnet_fmt_options	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_options = ''$/;"	v
g:jst_default_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let g:jst_default_subtype = "html"$/;"	v
g:julia#doc#juliapath	plugged/vim-polyglot/autoload/julia/doc.vim	/^    let g:julia#doc#juliapath = 'julia'$/;"	v
g:julia#doc#juliapath	plugged/vim-polyglot/autoload/julia/doc.vim	/^    let g:julia#doc#juliapath = get(pathlist, -1, 'julia')$/;"	v
g:julia#doc#juliapath	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let g:julia#doc#juliapath = get(g:, 'julia#doc#juliapath', 'julia')$/;"	v
g:l	plugged/vim-translator/autoload/translator/window/float.vim	/^    let g:l = a:lines$/;"	v
g:l2u_did_global_setup	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  let g:l2u_did_global_setup = 1$/;"	v
g:l2u_symbols_dict	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^  let g:l2u_symbols_dict = julia_latex_symbols#get_dict()$/;"	v
g:latex_to_unicode_auto	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^      let g:latex_to_unicode_auto = 0$/;"	v
g:latex_to_unicode_suggestions	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^    let g:latex_to_unicode_suggestions = 0$/;"	v
g:latex_to_unicode_tab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^      let g:latex_to_unicode_tab = 0$/;"	v
g:leaderf#colorscheme#default#palette	plugged/LeaderF/autoload/leaderf/colorscheme/default.vim	/^let g:leaderf#colorscheme#default#palette = leaderf#colorscheme#mergePalette(s:palette)$/;"	v
g:leaderf#colorscheme#gruvbox_material#palette	plugged/LeaderF/autoload/leaderf/colorscheme/gruvbox_material.vim	/^let g:leaderf#colorscheme#gruvbox_material#palette = leaderf#colorscheme#mergePalette(s:palette)$/;"	v
g:leaderf#colorscheme#one#palette	plugged/LeaderF/autoload/leaderf/colorscheme/one.vim	/^let g:leaderf#colorscheme#one#palette = leaderf#colorscheme#mergePalette(s:palette)$/;"	v
g:leaderf#colorscheme#powerline#palette	plugged/LeaderF/autoload/leaderf/colorscheme/powerline.vim	/^let g:leaderf#colorscheme#powerline#palette = leaderf#colorscheme#mergePalette(s:palette)$/;"	v
g:leaderf#loaded	plugged/LeaderF/autoload/leaderf.vim	/^    let g:leaderf#loaded = 1$/;"	v
g:leaderf_loaded	plugged/LeaderF/plugin/leaderf.vim	/^    let g:leaderf_loaded = 1$/;"	v
g:ledger_main	plugged/vim-polyglot/compiler/ledger.vim	/^  let g:ledger_main = '%'$/;"	v
g:ledger_target_amount	plugged/vim-polyglot/autoload/ledger.vim	/^    let g:ledger_target_amount = a:target_amount$/;"	v
g:lightline#colorscheme#dracula#palette	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let g:lightline#colorscheme#dracula#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#gruvbox#palette	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let g:lightline#colorscheme#gruvbox#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#onedark#palette	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let g:lightline#colorscheme#onedark#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:liquid_default_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:llvm_ext_lli_executable	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let g:llvm_ext_lli_executable = get(g:, 'llvm_ext_lli_executable', 'lli')$/;"	v
g:llvm_ext_no_mapping	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let g:llvm_ext_no_mapping = get(g:, 'llvm_ext_no_mapping', 0)$/;"	v
g:loaded_airline	plugged/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_ale	plugged/ale/plugin/ale.vim	/^let g:loaded_ale = 1$/;"	v
g:loaded_ale_dont_use_this_in_other_plugins_please	plugged/ale/plugin/ale.vim	/^let g:loaded_ale_dont_use_this_in_other_plugins_please = 1$/;"	v
g:loaded_autoload_fsharp	plugged/vim-polyglot/autoload/fsharp.vim	/^let g:loaded_autoload_fsharp = 1$/;"	v
g:loaded_cursormode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let g:loaded_cursormode = 1$/;"	v
g:loaded_fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gutentags	plugged/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_necovim	plugged/neco-vim/plugin/necovim.vim	/^let g:loaded_necovim = 1$/;"	v
g:loaded_nerdtree_autoload	plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_git_status	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let g:loaded_nerdtree_git_status = 1$/;"	v
g:loaded_nerdtree_git_status_autoload	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^let g:loaded_nerdtree_git_status_autoload = 1$/;"	v
g:loaded_nerdtree_git_status_job	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let g:loaded_nerdtree_git_status_job = 1$/;"	v
g:loaded_nerdtree_git_status_listener	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^let g:loaded_nerdtree_git_status_listener = 1$/;"	v
g:loaded_nerdtree_git_status_log	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let g:loaded_nerdtree_git_status_log = 1$/;"	v
g:loaded_nerdtree_git_status_util	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^let g:loaded_nerdtree_git_status_util = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_signify	plugged/vim-signify/plugin/signify.vim	/^let g:loaded_signify = 1$/;"	v
g:loaded_sleuth	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:loaded_sleuth = 1$/;"	v
g:loaded_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_translator	plugged/vim-translator/plugin/translator.vim	/^let g:loaded_translator= 1$/;"	v
g:loaded_vim_airline_zoomwintab	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let g:loaded_vim_airline_zoomwintab = 1$/;"	v
g:loaded_vim_which_key	plugged/vim-which-key/plugin/which_key.vim	/^let g:loaded_vim_which_key = 1$/;"	v
g:loaded_vista	plugged/vista.vim/plugin/vista.vim	/^let g:loaded_vista = 1$/;"	v
g:loaded_webdevicons	plugged/vim-devicons/plugin/webdevicons.vim	/^let g:loaded_webdevicons = 1$/;"	v
g:loaded_xtabline	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:loaded_xtabline = 1$/;"	v
g:main_syntax	plugged/vim-polyglot/syntax/dart.vim	/^  let g:main_syntax = 'dart'$/;"	v
g:main_syntax	plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^  let g:main_syntax = 'html'$/;"	v
g:mako_indent_tags	plugged/vim-polyglot/indent/mako.vim	/^        let g:mako_indent_tags = a:tag$/;"	v
g:mako_indent_tags	plugged/vim-polyglot/indent/mako.vim	/^        let g:mako_indent_tags = g:mako_indent_tags.'\\|'.a:tag$/;"	v
g:mapleader	plugged/ale/test/.config/nvim/init.vim	/^let g:mapleader=','$/;"	v
g:mapleader	plugged/ale/test/vimrc	/^let g:mapleader=','$/;"	v
g:markdown_fenced_languages	plugged/vim-polyglot/syntax/rmd.vim	/^    let g:markdown_fenced_languages = []$/;"	v
g:menutrans_fileformat_choices	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Cancel"$/;"	v
g:menutrans_fileformat_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_fileformat_dialog = "Select format for writing the file"$/;"	v
g:menutrans_help_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_help_dialog = "Enter a command or word to find help on:\\n\\nPrepend i_ for /;"	v
g:menutrans_no_file	plugged/vim-polyglot/extras/menu.vim	/^      let g:menutrans_no_file = "[No Name]"$/;"	v
g:menutrans_path_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_path_dialog = "Enter search path for files.\\nSeparate directory names with /;"	v
g:menutrans_set_lang_to	plugged/vim-polyglot/extras/menu.vim	/^      let g:menutrans_set_lang_to = 'Set Language to'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	plugged/vim-polyglot/extras/menu.vim	/^	  let g:menutrans_spell_add_ARG_to_word_list = 'Add\\ "%s"\\ to\\ Word\\ List'$/;"	v
g:menutrans_spell_change_ARG_to	plugged/vim-polyglot/extras/menu.vim	/^	  let g:menutrans_spell_change_ARG_to = 'Change\\ "%s"\\ to'$/;"	v
g:menutrans_spell_ignore_ARG	plugged/vim-polyglot/extras/menu.vim	/^	  let g:menutrans_spell_ignore_ARG = 'Ignore\\ "%s"'$/;"	v
g:menutrans_tags_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_tags_dialog = "Enter names of tag files.\\nSeparate the names with a comma."$/;"	v
g:menutrans_textwidth_dialog	plugged/vim-polyglot/extras/menu.vim	/^    let g:menutrans_textwidth_dialog = "Enter new text width (0 to disable formatting): "$/;"	v
g:message	plugged/vim-polyglot/tests/extensions.vim	/^    let g:message = ""$/;"	v
g:mp_close_tag	plugged/vim-polyglot/indent/mp.vim	/^let g:mp_close_tag = ''$/;"	v
g:mp_open_tag	plugged/vim-polyglot/indent/mp.vim	/^let g:mp_open_tag = ''$/;"	v
g:mp_statement	plugged/vim-polyglot/indent/mp.vim	/^let g:mp_statement = ''$/;"	v
g:mustache_operators	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  let g:mustache_operators = 1$/;"	v
g:mysyntaxfile	plugged/indentLine/after/plugin/indentLine.vim	/^    let g:mysyntaxfile = g:indentLine_mysyntaxfile$/;"	v
g:ncm2_bufword#proc	plugged/ncm2-bufword/autoload/ncm2_bufword.vim	/^let g:ncm2_bufword#proc = yarp#py3({$/;"	v
g:ncm2_bufword#source	plugged/ncm2-bufword/autoload/ncm2_bufword.vim	/^let g:ncm2_bufword#source = extend(get(g:, 'ncm2_bufword#source', {}), {$/;"	v
g:ncm2_go#gocode_path	plugged/ncm2-go/autoload/ncm2_go.vim	/^let g:ncm2_go#gocode_path = get(g:, 'ncm2_go#gocode_path', 'gocode')$/;"	v
g:ncm2_go#proc	plugged/ncm2-go/autoload/ncm2_go.vim	/^let g:ncm2_go#proc = yarp#py3('ncm2_go')$/;"	v
g:ncm2_go#source	plugged/ncm2-go/autoload/ncm2_go.vim	/^let g:ncm2_go#source = extend($/;"	v
g:ncm2_jedi#call_sig_hint	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^let g:ncm2_jedi#call_sig_hint = get(g:,$/;"	v
g:ncm2_jedi#environment	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^let g:ncm2_jedi#environment = get(g:,$/;"	v
g:ncm2_jedi#proc	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^    let g:ncm2_jedi#proc = yarp#py('ncm2_jedi')$/;"	v
g:ncm2_jedi#proc	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^    let g:ncm2_jedi#proc = yarp#py3('ncm2_jedi')$/;"	v
g:ncm2_jedi#python_version	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^let g:ncm2_jedi#python_version = get(g:,$/;"	v
g:ncm2_jedi#python_version	settings/complete.vim	/^let g:ncm2_jedi#python_version=2$/;"	v
g:ncm2_jedi#settings	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^let g:ncm2_jedi#settings = get(g:,$/;"	v
g:ncm2_jedi#source	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^    let g:ncm2_jedi#source.ready = 1$/;"	v
g:ncm2_jedi#source	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^let g:ncm2_jedi#source = extend(get(g:, 'ncm2_jedi#source', {}), {$/;"	v
g:ncm2_loaded	plugged/ncm2/autoload/ncm2.vim	/^let g:ncm2_loaded = 1$/;"	v
g:ncm2_path#bufpath_source	plugged/ncm2-path/autoload/ncm2_path.vim	/^    let g:ncm2_path#bufpath_source.ready = 1$/;"	v
g:ncm2_path#bufpath_source	plugged/ncm2-path/autoload/ncm2_path.vim	/^let g:ncm2_path#bufpath_source = extend($/;"	v
g:ncm2_path#cwdpath_source	plugged/ncm2-path/autoload/ncm2_path.vim	/^    let g:ncm2_path#cwdpath_source.ready  = 1$/;"	v
g:ncm2_path#cwdpath_source	plugged/ncm2-path/autoload/ncm2_path.vim	/^let g:ncm2_path#cwdpath_source = extend($/;"	v
g:ncm2_path#path_pattern	plugged/ncm2-path/autoload/ncm2_path.vim	/^let g:ncm2_path#path_pattern = get(g:$/;"	v
g:ncm2_path#proc	plugged/ncm2-path/autoload/ncm2_path.vim	/^let g:ncm2_path#proc = yarp#py3('ncm2_path')$/;"	v
g:ncm2_path#proc	plugged/ncm2-path/autoload/ncm2_path.vim	/^let g:ncm2_path#proc.on_load = 'ncm2_path#on_load'$/;"	v
g:ncm2_path#rootpath_source	plugged/ncm2-path/autoload/ncm2_path.vim	/^    let g:ncm2_path#rootpath_source.ready  = 1$/;"	v
g:ncm2_path#rootpath_source	plugged/ncm2-path/autoload/ncm2_path.vim	/^let g:ncm2_path#rootpath_source = extend($/;"	v
g:ncm2_ultisnips#source	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^let g:ncm2_ultisnips#source = extend(get(g:, 'ncm2_ultisnips#source', {}), {$/;"	v
g:necovim#keyword_pattern	plugged/neco-vim/autoload/necovim.vim	/^let g:necovim#keyword_pattern =$/;"	v
g:neocomplcache_omni_patterns	plugged/vim-polyglot/autoload/nim.vim	/^  let g:neocomplcache_omni_patterns = {}$/;"	v
g:neocomplcache_omni_patterns	plugged/vim-polyglot/autoload/nim.vim	/^let g:neocomplcache_omni_patterns['nim'] = '[^. *\\t]\\.\\w*'$/;"	v
g:neocomplete#sources#omni#input_patterns	plugged/vim-polyglot/autoload/nim.vim	/^  let g:neocomplete#sources#omni#input_patterns = {}$/;"	v
g:neocomplete#sources#omni#input_patterns	plugged/vim-polyglot/autoload/nim.vim	/^let g:neocomplete#sources#omni#input_patterns['nim'] = '[^. *\\t]\\.\\w*'$/;"	v
g:netrw_force_overwrite_statusline	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^  let g:netrw_force_overwrite_statusline = 0$/;"	v
g:niji_dark_colours	plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:nim_caas_enabled	plugged/vim-polyglot/autoload/nim.vim	/^  let g:nim_caas_enabled = 0$/;"	v
g:nim_completion_callbacks	plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_completion_callbacks = {}$/;"	v
g:nim_log	plugged/vim-polyglot/autoload/nim.vim	/^  let g:nim_log = []$/;"	v
g:nim_log	plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_log = []$/;"	v
g:nim_symbol_types	plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_symbol_types = {$/;"	v
g:obsession_append	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:obsession_append = [string]$/;"	v
g:omni_syntax_group_exclude_lifelines	plugged/vim-polyglot/syntax/lifelines.vim	/^		let g:omni_syntax_group_exclude_lifelines = 'lifelinesError'$/;"	v
g:omni_syntax_group_exclude_mf	plugged/vim-polyglot/ftplugin/mf.vim	/^let g:omni_syntax_group_exclude_mf = 'mfTodoComment'$/;"	v
g:omni_syntax_group_exclude_mp	plugged/vim-polyglot/ftplugin/mp.vim	/^let g:omni_syntax_group_exclude_mp = 'mfTodoComment'$/;"	v
g:omni_syntax_group_include_mf	plugged/vim-polyglot/ftplugin/mf.vim	/^let g:omni_syntax_group_include_mf = 'mf\\w\\+'$/;"	v
g:omni_syntax_group_include_mp	plugged/vim-polyglot/ftplugin/mp.vim	/^let g:omni_syntax_group_include_mp = 'mf\\w\\+,mp\\w\\+'$/;"	v
g:onedark_termcolors	plugged/onedark.vim/colors/onedark.vim	/^  let g:onedark_termcolors = 256$/;"	v
g:onedark_terminal_italics	plugged/onedark.vim/colors/onedark.vim	/^  let g:onedark_terminal_italics = 0$/;"	v
g:other_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let g:other_mf_macros = s:other_mf_macros$/;"	v
g:other_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^let g:other_mf_macros = 0 " cmbase.mf, logo.mf, ... neither$/;"	v
g:pandoc#syntax#codeblocks#embeds#langs	plugged/vim-polyglot/syntax/rmd.vim	/^let g:pandoc#syntax#codeblocks#embeds#langs = get(g:, 'pandoc#syntax#codeblocks#embeds#langs', [/;"	v
g:php_syntax_extensions_disabled	plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_disabled = []$/;"	v
g:php_syntax_extensions_enabled	plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_enabled = ["bcmath", "bz2", "core", "curl", "date", "dom", "ereg/;"	v
g:php_version_id	plugged/vim-polyglot/syntax/php.vim	/^  let g:php_version_id = 70300$/;"	v
g:plain_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let g:plain_mf_macros = s:plain_mf_macros$/;"	v
g:plain_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^let g:plain_mf_macros = 0 " plain.mf has no special meaning for MetaPost$/;"	v
g:plain_mf_modes	plugged/vim-polyglot/syntax/mp.vim	/^  let g:plain_mf_modes = s:plain_mf_modes$/;"	v
g:plain_mf_modes	plugged/vim-polyglot/syntax/mp.vim	/^let g:plain_mf_modes  = 0 " No METAFONT modes$/;"	v
g:plantuml_executable_script	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let g:plantuml_executable_script='plantuml'$/;"	v
g:plug_home	autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:polyglot_disabled_not_set	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:polyglot_disabled_not_set = 1$/;"	v
g:polyglot_is_disabled	plugged/vim-polyglot/ftdetect/polyglot.vim	/^      let g:polyglot_is_disabled[pkg] = 1$/;"	v
g:polyglot_is_disabled	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let g:polyglot_is_disabled = {}$/;"	v
g:promptline_symbols	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^    let g:promptline_symbols = {$/;"	v
g:ps1_efm_show_error_categories	plugged/vim-polyglot/compiler/powershell.vim	/^let g:ps1_efm_show_error_categories = get(g:, 'ps1_efm_show_error_categories', 0)$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = ''$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'powershell.exe'$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'pwsh'$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'pwsh.exe'$/;"	v
g:pug_self_closing_tags	plugged/vim-polyglot/indent/pug.vim	/^  let g:pug_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
g:puppet_align_hashes	plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    let g:puppet_align_hashes = 1$/;"	v
g:purescript_indent_case	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_case = 5$/;"	v
g:purescript_indent_do	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_do = 3$/;"	v
g:purescript_indent_dot	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_dot = 1$/;"	v
g:purescript_indent_if	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_if = 3$/;"	v
g:purescript_indent_in	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_in = 1$/;"	v
g:purescript_indent_let	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_let = 4$/;"	v
g:purescript_indent_where	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_where = 6$/;"	v
g:pyindent_nested_paren	plugged/vim-polyglot/indent/bzl.vim	/^      let g:pyindent_nested_paren = l:pyindent_nested_paren$/;"	v
g:pyindent_nested_paren	plugged/vim-polyglot/indent/bzl.vim	/^    let g:pyindent_nested_paren = 'shiftwidth() * 2'$/;"	v
g:pyindent_open_paren	plugged/vim-polyglot/indent/bzl.vim	/^      let g:pyindent_open_paren = l:pyindent_open_paren$/;"	v
g:pyindent_open_paren	plugged/vim-polyglot/indent/bzl.vim	/^    let g:pyindent_open_paren = 'shiftwidth() * 2'$/;"	v
g:python3_host_prog	init.vim	/^    let g:python3_host_prog = '\/usr\/bin\/python3'$/;"	v
g:python3_host_skip_check	init.vim	/^    let g:python3_host_skip_check=1$/;"	v
g:python_host_prog	init.vim	/^    let g:python_host_prog = '\/usr\/bin\/python2'$/;"	v
g:python_host_skip_check	init.vim	/^    let g:python_host_skip_check=1$/;"	v
g:python_pep8_indent_hang_closing	plugged/vim-polyglot/indent/cython.vim	/^    let g:python_pep8_indent_hang_closing = 0$/;"	v
g:python_pep8_indent_hang_closing	plugged/vim-polyglot/indent/python.vim	/^    let g:python_pep8_indent_hang_closing = 0$/;"	v
g:python_pep8_indent_multiline_string	plugged/vim-polyglot/indent/cython.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_multiline_string	plugged/vim-polyglot/indent/python.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/cython.vim	/^        let g:python_pep8_indent_searchpair_timeout = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/cython.vim	/^        let g:python_pep8_indent_searchpair_timeout = 150$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 150$/;"	v
g:quickui#context#code	plugged/vim-quickui/autoload/quickui/context.vim	/^	let g:quickui#context#code = code$/;"	v
g:quickui#context#code	plugged/vim-quickui/autoload/quickui/context.vim	/^	let g:quickui#context#code = retval$/;"	v
g:quickui#context#current	plugged/vim-quickui/autoload/quickui/context.vim	/^	let g:quickui#context#current = hwnd$/;"	v
g:quickui#context#cursor	plugged/vim-quickui/autoload/quickui/context.vim	/^	let g:quickui#context#cursor = hwnd.index$/;"	v
g:quickui#context#cursor	plugged/vim-quickui/autoload/quickui/context.vim	/^let g:quickui#context#cursor = -1$/;"	v
g:quickui#core#__object_pool__	plugged/vim-quickui/autoload/quickui/core.vim	/^		let g:quickui#core#__object_pool__ = {}$/;"	v
g:quickui#core#__object_pool__	plugged/vim-quickui/autoload/quickui/core.vim	/^		let g:quickui#core#__object_pool__[a:name] = []$/;"	v
g:quickui#core#has_floating	plugged/vim-quickui/autoload/quickui/core.vim	/^let g:quickui#core#has_floating = has('nvim-0.4')$/;"	v
g:quickui#core#has_nvim	plugged/vim-quickui/autoload/quickui/core.vim	/^let g:quickui#core#has_nvim = has('nvim')$/;"	v
g:quickui#core#has_popup	plugged/vim-quickui/autoload/quickui/core.vim	/^let g:quickui#core#has_popup = exists('*popup_create') && v:version >= 800$/;"	v
g:quickui#listbox#current	plugged/vim-quickui/autoload/quickui/listbox.vim	/^	let g:quickui#listbox#current = hwnd$/;"	v
g:quickui#listbox#current	plugged/vim-quickui/test/test_nvim_list.vim	/^	let g:quickui#listbox#current = hwnd$/;"	v
g:quickui#listbox#cursor	plugged/vim-quickui/autoload/quickui/listbox.vim	/^	let g:quickui#listbox#cursor = quickui#utils#get_cursor(a:winid) - 1$/;"	v
g:quickui#listbox#cursor	plugged/vim-quickui/autoload/quickui/listbox.vim	/^	let g:quickui#listbox#cursor = quickui#utils#get_cursor(winid) - 1$/;"	v
g:quickui#listbox#cursor	plugged/vim-quickui/autoload/quickui/listbox.vim	/^let g:quickui#listbox#cursor = -1  $/;"	v
g:quickui#style#border	plugged/vim-quickui/autoload/quickui/style.vim	/^let g:quickui#style#border = get(g:, 'quickui#style#border', 1)$/;"	v
g:quickui#style#border	plugged/vim-quickui/plugin/quickui.vim	/^let g:quickui#style#border = get(g:, 'quickui_border_style', 1)$/;"	v
g:quickui#style#preview_bordercolor	plugged/vim-quickui/autoload/quickui/style.vim	/^let g:quickui#style#preview_bordercolor = ''$/;"	v
g:quickui#style#preview_h	plugged/vim-quickui/autoload/quickui/style.vim	/^let g:quickui#style#preview_h = 10$/;"	v
g:quickui#style#preview_number	plugged/vim-quickui/autoload/quickui/style.vim	/^let g:quickui#style#preview_number = 1$/;"	v
g:quickui#style#preview_w	plugged/vim-quickui/autoload/quickui/style.vim	/^let g:quickui#style#preview_w = 85$/;"	v
g:quickui#style#tip_head	plugged/vim-quickui/autoload/quickui/style.vim	/^let g:quickui#style#tip_head = '[tip]'$/;"	v
g:quickui#tags#elapse	plugged/vim-quickui/autoload/quickui/tags.vim	/^	let g:quickui#tags#elapse = reltimestr(reltime(start))$/;"	v
g:quickui#terminal#current	plugged/vim-quickui/autoload/quickui/terminal.vim	/^		let g:quickui#terminal#current = hwnd$/;"	v
g:quickui#textbox#current	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let g:quickui#textbox#current = local$/;"	v
g:quickui#textbox#topline	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let g:quickui#textbox#topline = topline$/;"	v
g:quickui#tools#hint	plugged/vim-quickui/autoload/quickui/tools.vim	/^	let g:quickui#tools#hint = item[1]$/;"	v
g:quickui#utils#__cursor_index__	plugged/vim-quickui/autoload/quickui/utils.vim	/^	let g:quickui#utils#__cursor_index__ = -1$/;"	v
g:quickui#utils#__cursor_topline__	plugged/vim-quickui/autoload/quickui/utils.vim	/^	let g:quickui#utils#__cursor_topline__ = -1$/;"	v
g:quickui#utils#shell_error	plugged/vim-quickui/autoload/quickui/utils.vim	/^	let g:quickui#utils#shell_error = s:shell_error$/;"	v
g:quickui_border_style	settings/menu.vim	/^let g:quickui_border_style = 2$/;"	v
g:quickui_color_scheme	settings/menu.vim	/^let g:quickui_color_scheme = 'papercol light'$/;"	v
g:quickui_show_tip	plugged/vim-quickui/test/demo_menu.vim	/^let g:quickui_show_tip = 1$/;"	v
g:ragel_default_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^  let g:ragel_default_subtype = 'c'$/;"	v
g:rainbow_conf	plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_ctermfgs	plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_guifgs	plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:ranger_map_keys	plug.vim	/^    let g:ranger_map_keys = 0$/;"	v
g:rbpt_colorpairs	plugged/gruvbox/colors/gruvbox.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:rmd_fenced_languages	plugged/vim-polyglot/syntax/rmd.vim	/^    let g:rmd_fenced_languages = deepcopy(g:markdown_fenced_languages)$/;"	v
g:rmd_fenced_languages	plugged/vim-polyglot/syntax/rmd.vim	/^  let g:rmd_fenced_languages = ['r']$/;"	v
g:rmd_syn_hl_chunk	plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_chunk = get(g:, 'g:rmd_syn_hl_chunk', 0)$/;"	v
g:rmd_syn_hl_citations	plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_citations = get(g:, 'rmd_syn_hl_citations', 1)$/;"	v
g:rmd_syn_hl_yaml	plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_yaml = get(g:, 'rmd_syn_hl_yaml', 1)$/;"	v
g:rst_fold_enabled	plugged/vim-polyglot/ftplugin/rst.vim	/^  let g:rst_fold_enabled = 0$/;"	v
g:rst_syntax_code_list	plugged/vim-polyglot/syntax/rst.vim	/^        let g:rst_syntax_code_list[s:elem] = [s:elem]$/;"	v
g:rst_syntax_code_list	plugged/vim-polyglot/syntax/rst.vim	/^    let g:rst_syntax_code_list = {$/;"	v
g:rst_syntax_code_list	plugged/vim-polyglot/syntax/rst.vim	/^    let g:rst_syntax_code_list = {}$/;"	v
g:ruby_default_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_assignment_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_assignment_style = 'hanging'$/;"	v
g:ruby_indent_block_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'do'$/;"	v
g:ruby_indent_hanging_elements	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_hanging_elements = 1$/;"	v
g:ruby_operators	plugged/vim/after/syntax/ruby.vim	/^    let g:ruby_operators=1$/;"	v
g:ruby_version_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'/;"	v
g:ruby_version_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_completions	plugged/vim-polyglot/autoload/rubycomplete.vim	/^        let g:rubycomplete_completions = []$/;"	v
g:rubycomplete_include_object	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rustfmt_autosave	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_emit_files	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_emit_files = s:rustfmt_version >= "0.8.2"$/;"	v
g:rustfmt_fail_silently	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_fail_silently = 0$/;"	v
g:rustfmt_file_lines	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_file_lines = s:rustfmt_help =~# "--file-lines JSON"$/;"	v
g:rustfmt_options	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_options = ""$/;"	v
g:signify_disable_by_default	plugged/vim-signify/autoload/sy.vim	/^  let g:signify_disable_by_default = 0$/;"	v
g:signify_disable_by_default	plugged/vim-signify/autoload/sy.vim	/^  let g:signify_disable_by_default = 1$/;"	v
g:signify_line_highlight	plugged/vim-signify/autoload/sy/highlight.vim	/^  let g:signify_line_highlight = 0$/;"	v
g:signify_line_highlight	plugged/vim-signify/autoload/sy/highlight.vim	/^  let g:signify_line_highlight = 1$/;"	v
g:signify_locked	plugged/vim-signify/plugin/signify.vim	/^let g:signify_locked = 0$/;"	v
g:signify_vcs_cmds	plugged/vim-signify/autoload/sy/repo.vim	/^  let g:signify_vcs_cmds = s:default_vcs_cmds$/;"	v
g:signify_vcs_cmds_diffmode	plugged/vim-signify/autoload/sy/repo.vim	/^  let g:signify_vcs_cmds_diffmode = s:default_vcs_cmds_diffmode$/;"	v
g:skim_colors	plugged/vista.vim/autoload/vista/finder/skim.vim	/^      let g:skim_colors = old_skim_colors$/;"	v
g:smt2_solver_command	plugged/vim-polyglot/ftplugin/smt2.vim	/^        let g:smt2_solver_command = "boolector"$/;"	v
g:smt2_solver_command	plugged/vim-polyglot/ftplugin/smt2.vim	/^        let g:smt2_solver_command = "z3"$/;"	v
g:smt2_solver_version_switch	plugged/vim-polyglot/ftplugin/smt2.vim	/^    let g:smt2_solver_version_switch = "--version"$/;"	v
g:snips_author	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_author = "yourname"$/;"	v
g:snips_email	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_email = "yourname@email.com"$/;"	v
g:snips_github	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_github = "https:\/\/github.com\/yourname"$/;"	v
g:spec_chglog_format	plugged/vim-polyglot/ftplugin/spec.vim	/^				let g:spec_chglog_format = "%a %b %d %Y " . l:email$/;"	v
g:spec_chglog_format	plugged/vim-polyglot/ftplugin/spec.vim	/^				let g:spec_chglog_format = a:format$/;"	v
g:svelte_indent_script	plugged/vim-polyglot/indent/svelte.vim	/^  let g:svelte_indent_script = 1$/;"	v
g:svelte_indent_style	plugged/vim-polyglot/indent/svelte.vim	/^  let g:svelte_indent_style = 1$/;"	v
g:syntastic_nim_checkers	plugged/vim-polyglot/compiler/nim.vim	/^let g:syntastic_nim_checkers = ['nim']$/;"	v
g:syntastic_stl_format	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = _backup$/;"	v
g:syntastic_stl_format	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_err', '%E{[%fe/;"	v
g:syntastic_stl_format	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^    let g:syntastic_stl_format = get(g:, 'airline#extensions#syntastic#stl_format_warn', '%W{[%f/;"	v
g:taboo_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
g:tagbar#icon_closed	plugged/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_closed = g:tagbar_iconchars[0]$/;"	v
g:tagbar#icon_open	plugged/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_open   = g:tagbar_iconchars[1]$/;"	v
g:tagbar_autoclose	plugged/tagbar/autoload/tagbar.vim	/^    let g:tagbar_autoclose = !g:tagbar_autoclose$/;"	v
g:tagbar_autoshowtag	settings/sidebar.vim	/^    let g:tagbar_autoshowtag = 1$/;"	v
g:tagbar_case_insensitive	plugged/tagbar/autoload/tagbar.vim	/^    let g:tagbar_case_insensitive = !g:tagbar_case_insensitive$/;"	v
g:tagbar_compact	settings/sidebar.vim	/^    let g:tagbar_compact = 1$/;"	v
g:tagbar_ctags_bin	plugged/tagbar/autoload/tagbar.vim	/^                let g:tagbar_ctags_bin = ctags$/;"	v
g:tagbar_ctags_bin	plugged/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = expand(g:tagbar_ctags_bin)$/;"	v
g:tagbar_height	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_height = g:tagbar_vertical$/;"	v
g:tagbar_hide_nonpublic	plugged/tagbar/autoload/tagbar.vim	/^    let g:tagbar_hide_nonpublic = !g:tagbar_hide_nonpublic$/;"	v
g:tagbar_iconchars	plugged/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	plugged/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_position	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_position = 'botright vertical'$/;"	v
g:tagbar_position	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_position = 'leftabove'$/;"	v
g:tagbar_position	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_position = 'rightbelow'$/;"	v
g:tagbar_position	plugged/tagbar/plugin/tagbar.vim	/^            let g:tagbar_position = 'topleft vertical'$/;"	v
g:tagbar_sort	plugged/tagbar/autoload/tagbar.vim	/^        let g:tagbar_sort = !g:tagbar_sort$/;"	v
g:tagbar_status_func	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^  let g:tagbar_status_func = 'airline#extensions#tagbar#get_status'$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.kind2scope = {$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.scope2kind = {$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.sro = '__'$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^let g:tagbar_type_puppet = {$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^let g:tagbar_type_puppet.deffile = puppet#ctags#OptionFile()$/;"	v
g:tagbar_type_rust	plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust = {$/;"	v
g:tagbar_type_rust	plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/rust.ctags'$/;"	v
g:tagbar_type_scala	plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^  let g:tagbar_type_scala.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/scala.ctags'$/;"	v
g:tagbar_type_scala	plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^let g:tagbar_type_scala = {$/;"	v
g:tagbar_type_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
g:tagbar_type_typescript	plugged/vim-polyglot/ftplugin/typescript.vim	/^  let g:tagbar_type_typescript.deffile = expand('<sfile>:p:h:h') . '\/ctags\/typescript.ctags'$/;"	v
g:tagbar_type_typescript	plugged/vim-polyglot/ftplugin/typescript.vim	/^let g:tagbar_type_typescript = {$/;"	v
g:tagbar_vertical	settings/sidebar.vim	/^    let g:tagbar_vertical = 25$/;"	v
g:terminal_ansi_colors	plugged/onedark.vim/colors/onedark.vim	/^let g:terminal_ansi_colors = [$/;"	v
g:terminal_ansi_colors	plugged/vim/colors/dracula.vim	/^  let g:terminal_ansi_colors = []$/;"	v
g:terminal_color_	plugged/vim/colors/dracula.vim	/^    let g:terminal_color_{s:i} = g:dracula#palette['color_' . s:i]$/;"	v
g:terminal_color_0	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_0 = s:bg0[0]$/;"	v
g:terminal_color_0	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_0 =  s:black.gui$/;"	v
g:terminal_color_1	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_1 = s:gb.neutral_red[0]$/;"	v
g:terminal_color_1	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_1 =  s:red.gui$/;"	v
g:terminal_color_10	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_10 = s:green[0]$/;"	v
g:terminal_color_10	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_10 = s:green.gui " No dark version$/;"	v
g:terminal_color_11	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_11 = s:yellow[0]$/;"	v
g:terminal_color_11	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_11 = s:dark_yellow.gui$/;"	v
g:terminal_color_12	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_12 = s:blue[0]$/;"	v
g:terminal_color_12	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_12 = s:blue.gui " No dark version$/;"	v
g:terminal_color_13	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_13 = s:purple[0]$/;"	v
g:terminal_color_13	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_13 = s:purple.gui " No dark version$/;"	v
g:terminal_color_14	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_14 = s:aqua[0]$/;"	v
g:terminal_color_14	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_14 = s:cyan.gui " No dark version$/;"	v
g:terminal_color_15	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_15 = s:fg1[0]$/;"	v
g:terminal_color_15	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_15 = s:comment_grey.gui$/;"	v
g:terminal_color_2	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_2 = s:gb.neutral_green[0]$/;"	v
g:terminal_color_2	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_2 =  s:green.gui$/;"	v
g:terminal_color_3	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_3 = s:gb.neutral_yellow[0]$/;"	v
g:terminal_color_3	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_3 =  s:yellow.gui$/;"	v
g:terminal_color_4	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_4 = s:gb.neutral_blue[0]$/;"	v
g:terminal_color_4	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_4 =  s:blue.gui$/;"	v
g:terminal_color_5	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_5 = s:gb.neutral_purple[0]$/;"	v
g:terminal_color_5	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_5 =  s:purple.gui$/;"	v
g:terminal_color_6	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_6 = s:gb.neutral_aqua[0]$/;"	v
g:terminal_color_6	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_6 =  s:cyan.gui$/;"	v
g:terminal_color_7	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_7 = s:fg4[0]$/;"	v
g:terminal_color_7	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_7 =  s:white.gui$/;"	v
g:terminal_color_8	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_8 = s:gray[0]$/;"	v
g:terminal_color_8	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_8 =  s:visual_grey.gui$/;"	v
g:terminal_color_9	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_9 = s:red[0]$/;"	v
g:terminal_color_9	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_9 =  s:dark_red.gui$/;"	v
g:terminal_color_background	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_background = g:terminal_color_0$/;"	v
g:terminal_color_foreground	plugged/onedark.vim/colors/onedark.vim	/^  let g:terminal_color_foreground = g:terminal_color_7$/;"	v
g:terraform_binary_path	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let g:terraform_binary_path='terraform'$/;"	v
g:tex_indent_brace	plugged/vim-polyglot/indent/tex.vim	/^    let g:tex_indent_brace = 1$/;"	v
g:tex_indent_items	plugged/vim-polyglot/indent/tex.vim	/^    let g:tex_indent_items = 1$/;"	v
g:tex_itemize_env	plugged/vim-polyglot/indent/tex.vim	/^        let g:tex_itemize_env = 'itemize\\|description\\|enumerate\\|thebibliography'$/;"	v
g:tex_items	plugged/vim-polyglot/indent/tex.vim	/^        let g:tex_items = '\\\\bibitem\\|\\\\item'$/;"	v
g:tex_items	plugged/vim-polyglot/indent/tex.vim	/^    let g:tex_items = ''$/;"	v
g:tex_items	plugged/vim-polyglot/indent/tex.vim	/^let g:tex_items = '^\\s*' . substitute(g:tex_items, '^\\(\\^\\\\s\\*\\)*', '', '')$/;"	v
g:tex_max_scan_line	plugged/vim-polyglot/indent/tex.vim	/^    let g:tex_max_scan_line = 60$/;"	v
g:tex_noindent_env	plugged/vim-polyglot/indent/tex.vim	/^    let g:tex_noindent_env = 'document\\|verbatim\\|lstlisting'$/;"	v
g:translator_default_engines	plugged/vim-translator/plugin/translator.vim	/^  let g:translator_default_engines = get(g:, 'translator_default_engines', ['bing', 'google', 'h/;"	v
g:translator_default_engines	plugged/vim-translator/plugin/translator.vim	/^  let g:translator_default_engines = get(g:, 'translator_default_engines', ['google'])$/;"	v
g:translator_history_enable	plugged/vim-translator/plugin/translator.vim	/^let g:translator_history_enable          = get(g:, 'translator_history_enable', v:false)$/;"	v
g:translator_proxy_url	plugged/vim-translator/plugin/translator.vim	/^let g:translator_proxy_url               = get(g:, 'translator_proxy_url', '')$/;"	v
g:translator_source_lang	plugged/vim-translator/plugin/translator.vim	/^let g:translator_source_lang             = get(g:, 'translator_source_lang', 'auto')$/;"	v
g:translator_status	plugged/vim-translator/autoload/translator/job.vim	/^  let g:translator_status = ''$/;"	v
g:translator_status	plugged/vim-translator/autoload/translator/job.vim	/^  let g:translator_status = 'translating'$/;"	v
g:translator_status	plugged/vim-translator/plugin/translator.vim	/^let g:translator_status = ''$/;"	v
g:translator_target_lang	plugged/vim-translator/plugin/translator.vim	/^let g:translator_target_lang             = get(g:, 'translator_target_lang', 'zh')$/;"	v
g:translator_translate_shell_options	plugged/vim-translator/plugin/translator.vim	/^let g:translator_translate_shell_options = get(g:, 'translator_translate_shell_options', [])$/;"	v
g:translator_window_borderchars	plugged/vim-translator/plugin/translator.vim	/^let g:translator_window_borderchars      = get(g:, 'translator_window_borderchars', ['─', '│/;"	v
g:translator_window_max_height	plugged/vim-translator/plugin/translator.vim	/^let g:translator_window_max_height       = get(g:, 'translator_window_max_height', 999)$/;"	v
g:translator_window_max_width	plugged/vim-translator/plugin/translator.vim	/^let g:translator_window_max_width        = get(g:, 'translator_window_max_width', 999)$/;"	v
g:translator_window_type	plugged/vim-translator/plugin/translator.vim	/^let g:translator_window_type             = get(g:, 'translator_window_type', 'popup')$/;"	v
g:typescript_compiler_binary	plugged/vim-polyglot/compiler/typescript.vim	/^  let g:typescript_compiler_binary = 'tsc'$/;"	v
g:typescript_compiler_options	plugged/vim-polyglot/compiler/typescript.vim	/^    let g:typescript_compiler_options = ''$/;"	v
g:typescript_compiler_options	plugged/vim-polyglot/compiler/typescript.vim	/^    let g:typescript_compiler_options = g:syntastic_typescript_tsc_args$/;"	v
g:unite_force_overwrite_statusline	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^  let g:unite_force_overwrite_statusline = 0$/;"	v
g:v_highlight_array_whitespace_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_array_whitespace_error = 1$/;"	v
g:v_highlight_chan_whitespace_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_chan_whitespace_error = 1$/;"	v
g:v_highlight_fields	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_fields = 1$/;"	v
g:v_highlight_function_calls	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_function_calls = 1$/;"	v
g:v_highlight_space_tab_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_space_tab_error = 1$/;"	v
g:v_highlight_trailing_whitespace_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_trailing_whitespace_error = 1$/;"	v
g:vhdl_indent_genportmap	plugged/vim-polyglot/indent/vhdl.vim	/^  let g:vhdl_indent_genportmap = 1$/;"	v
g:vhdl_indent_rhsassign	plugged/vim-polyglot/indent/vhdl.vim	/^  let g:vhdl_indent_rhsassign = 1$/;"	v
g:vim_json_syntax_conceal	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_conceal = 1$/;"	v
g:vim_json_syntax_concealcursor	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_concealcursor = ""$/;"	v
g:vim_json_warnings	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_warnings = 1$/;"	v
g:vimfiler_force_overwrite_statusline	plugged/vim-airline/autoload/airline/extensions.vim	/^    let g:vimfiler_force_overwrite_statusline = 0$/;"	v
g:vimshell_escape_colors	plugged/gruvbox/colors/gruvbox.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:virtual_scriptnames	plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:virtual_scriptnames = {}$/;"	v
g:virtual_scriptnames	plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:virtual_scriptnames[temp] = amatch$/;"	v
g:vista	plugged/vista.vim/autoload/vista.vim	/^        let g:vista.lnum = line('.')$/;"	v
g:vista	plugged/vista.vim/autoload/vista.vim	/^      let g:vista.lnum = line('.')$/;"	v
g:vista	plugged/vista.vim/autoload/vista.vim	/^    let g:vista.lnum = line('.')$/;"	v
g:vista	plugged/vista.vim/autoload/vista.vim	/^    let g:vista.skip_set_provider = v:false$/;"	v
g:vista	plugged/vista.vim/autoload/vista.vim	/^    let g:vista.sort = !g:vista.sort$/;"	v
g:vista	plugged/vista.vim/autoload/vista.vim	/^    let g:vista.sort = v:true$/;"	v
g:vista	plugged/vista.vim/autoload/vista.vim	/^  let g:vista.provider = a:provider$/;"	v
g:vista	plugged/vista.vim/autoload/vista.vim	/^  let g:vista.source.winid = win_getid()$/;"	v
g:vista	plugged/vista.vim/autoload/vista/autocmd.vim	/^  let g:vista.on_text_changed = 1$/;"	v
g:vista	plugged/vista.vim/autoload/vista/error.vim	/^    let g:vista.silent = v:true$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ale.vim	/^  let g:vista.silent = v:false$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/coc.vim	/^  let g:vista.functions = []$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/coc.vim	/^  let g:vista.raw = []$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/coc.vim	/^  let g:vista.silent = v:false$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^    let g:vista.on_text_changed = 0$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let g:vista = get(g:, 'vista', {})$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let g:vista.ctags_cmd = cmd$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let g:vista.functions = []$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let g:vista.kinds = []$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let g:vista.raw = []$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let g:vista.raw_by_kind = {}$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let g:vista.tree = {}$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let g:vista.with_scope = []$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let g:vista.without_scope = []$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^  let g:vista.silent = v:false$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^  let g:vista.silent = v:false$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^  let g:vista.silent = v:false$/;"	v
g:vista	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^  let g:vista.silent = v:false$/;"	v
g:vista	plugged/vista.vim/autoload/vista/finder.vim	/^    let g:vista.skip_set_provider = v:true$/;"	v
g:vista	plugged/vista.vim/autoload/vista/floating.vim	/^  let g:vista.floating_visible = v:false$/;"	v
g:vista	plugged/vista.vim/autoload/vista/floating.vim	/^  let g:vista.floating_visible = v:true$/;"	v
g:vista	plugged/vista.vim/autoload/vista/init.vim	/^  let g:vista = {}$/;"	v
g:vista	plugged/vista.vim/autoload/vista/init.vim	/^  let g:vista.source = source_handle$/;"	v
g:vista	plugged/vista.vim/autoload/vista/init.vim	/^  let g:vista.tmps = []$/;"	v
g:vista	plugged/vista.vim/autoload/vista/popup.vim	/^  let g:vista.popup_visible = v:false$/;"	v
g:vista	plugged/vista.vim/autoload/vista/popup.vim	/^  let g:vista.popup_visible = v:true$/;"	v
g:vista	plugged/vista.vim/autoload/vista/renderer.vim	/^  let g:vista.functions = []$/;"	v
g:vista	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^  let g:vista.vlnum_cache = s:vlnum_cache$/;"	v
g:vista	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^        let g:vista.vlnum2tagname[len(rendered)+2] = row.text$/;"	v
g:vista	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^      let g:vista.raw[idx].vlnum = len(rendered) + 2$/;"	v
g:vista	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^    let g:vista.vlnum2tagname[vlnum] = a:vs.row.text$/;"	v
g:vista	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^  let g:vista.raw[a:vs.idx].vlnum = vlnum$/;"	v
g:vista	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^  let g:vista.vlnum2tagname = {}$/;"	v
g:vista	plugged/vista.vim/autoload/vista/sidebar.vim	/^    let g:vista = get(g:, 'vista', {})$/;"	v
g:vista	plugged/vista.vim/autoload/vista/sidebar.vim	/^    let g:vista.bufnr = bufnr('%')$/;"	v
g:vista	plugged/vista.vim/autoload/vista/sidebar.vim	/^    let g:vista.pos = [winsaveview(), winnr(), winrestcmd()]$/;"	v
g:vista	plugged/vista.vim/autoload/vista/sidebar.vim	/^    let g:vista.winid = win_getid()$/;"	v
g:vista	plugged/vista.vim/autoload/vista/source.vim	/^    let g:vista.source.fname = a:1$/;"	v
g:vista	plugged/vista.vim/autoload/vista/source.vim	/^    let g:vista.source.fpath = a:2$/;"	v
g:vista	plugged/vista.vim/autoload/vista/source.vim	/^  let g:vista.source.bufnr = a:bufnr$/;"	v
g:vista	plugged/vista.vim/autoload/vista/source.vim	/^  let g:vista.source.winnr = a:winnr$/;"	v
g:vista#executive#ctags#support_json_format	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let g:vista#executive#ctags#support_json_format = s:support_json_format$/;"	v
g:vista#executives	plugged/vista.vim/autoload/vista.vim	/^let g:vista#executives = vista#FindItemsUnderDirectory(s:cur_dir.'\/vista\/executive')$/;"	v
g:vista#extensions	plugged/vista.vim/autoload/vista.vim	/^let g:vista#extensions = vista#FindItemsUnderDirectory(s:cur_dir.'\/vista\/extension')$/;"	v
g:vista#finders	plugged/vista.vim/autoload/vista.vim	/^let g:vista#finders = vista#FindItemsUnderDirectory(s:cur_dir.'\/vista\/finder')$/;"	v
g:vista#renderer#ctags	plugged/vista.vim/autoload/vista/renderer.vim	/^let g:vista#renderer#ctags = get(g:, 'vista#renderer#ctags', 'default')$/;"	v
g:vista#renderer#default#vlnum_offset	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^let g:vista#renderer#default#vlnum_offset = 3$/;"	v
g:vista#renderer#enable_icon	plugged/vista.vim/autoload/vista/renderer.vim	/^let g:vista#renderer#enable_icon = get(g:, 'vista#renderer#enable_icon',$/;"	v
g:vista#renderer#icons	plugged/vista.vim/autoload/vista/renderer.vim	/^let g:vista#renderer#icons = map(extend(s:icons, get(g:, 'vista#renderer#icons', {})), 'tolower(/;"	v
g:vista#types#uctags#	plugged/vista.vim/autoload/vista/types/uctags/lua.vim	/^let g:vista#types#uctags# = s:types$/;"	v
g:vista#types#uctags#ada#	plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let g:vista#types#uctags#ada# = s:types$/;"	v
g:vista#types#uctags#ant#	plugged/vista.vim/autoload/vista/types/uctags/ant.vim	/^let g:vista#types#uctags#ant# = s:types$/;"	v
g:vista#types#uctags#asm#	plugged/vista.vim/autoload/vista/types/uctags/asm.vim	/^let g:vista#types#uctags#asm# = s:types$/;"	v
g:vista#types#uctags#aspvbs#	plugged/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let g:vista#types#uctags#aspvbs# = s:types$/;"	v
g:vista#types#uctags#asy#	plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let g:vista#types#uctags#asy# = s:types$/;"	v
g:vista#types#uctags#automake#	plugged/vista.vim/autoload/vista/types/uctags/automake.vim	/^let g:vista#types#uctags#automake# = s:types$/;"	v
g:vista#types#uctags#awk#	plugged/vista.vim/autoload/vista/types/uctags/awk.vim	/^let g:vista#types#uctags#awk# = s:types$/;"	v
g:vista#types#uctags#basic#	plugged/vista.vim/autoload/vista/types/uctags/basic.vim	/^let g:vista#types#uctags#basic# = s:types$/;"	v
g:vista#types#uctags#beta#	plugged/vista.vim/autoload/vista/types/uctags/beta.vim	/^let g:vista#types#uctags#beta# = s:types$/;"	v
g:vista#types#uctags#c#	plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let g:vista#types#uctags#c# = s:types$/;"	v
g:vista#types#uctags#clojure#	plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let g:vista#types#uctags#clojure# = s:types$/;"	v
g:vista#types#uctags#cobol#	plugged/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let g:vista#types#uctags#cobol# = s:types$/;"	v
g:vista#types#uctags#config#	plugged/vista.vim/autoload/vista/types/uctags/config.vim	/^let g:vista#types#uctags#config# = s:types$/;"	v
g:vista#types#uctags#cpp#	plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let g:vista#types#uctags#cpp# = s:types$/;"	v
g:vista#types#uctags#cs#	plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let g:vista#types#uctags#cs# = s:types$/;"	v
g:vista#types#uctags#css#	plugged/vista.vim/autoload/vista/types/uctags/css.vim	/^let g:vista#types#uctags#css# = s:types$/;"	v
g:vista#types#uctags#ctags#	plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let g:vista#types#uctags#ctags# = s:types$/;"	v
g:vista#types#uctags#d#	plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let g:vista#types#uctags#d# = s:types$/;"	v
g:vista#types#uctags#dosbatch#	plugged/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let g:vista#types#uctags#dosbatch# = s:types$/;"	v
g:vista#types#uctags#eiffel#	plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let g:vista#types#uctags#eiffel# = s:types$/;"	v
g:vista#types#uctags#elm#	plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let g:vista#types#uctags#elm# = s:types$/;"	v
g:vista#types#uctags#erlang#	plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let g:vista#types#uctags#erlang# = s:types$/;"	v
g:vista#types#uctags#fortran#	plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let g:vista#types#uctags#fortran# = s:types$/;"	v
g:vista#types#uctags#go#	plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let g:vista#types#uctags#go# = type_go$/;"	v
g:vista#types#uctags#html#	plugged/vista.vim/autoload/vista/types/uctags/html.vim	/^let g:vista#types#uctags#html# = s:types$/;"	v
g:vista#types#uctags#java#	plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let g:vista#types#uctags#java# = s:types$/;"	v
g:vista#types#uctags#javascript#	plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let g:vista#types#uctags#javascript# = s:types$/;"	v
g:vista#types#uctags#lisp#	plugged/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let g:vista#types#uctags#lisp# = s:types$/;"	v
g:vista#types#uctags#make#	plugged/vista.vim/autoload/vista/types/uctags/make.vim	/^let g:vista#types#uctags#make# = s:types$/;"	v
g:vista#types#uctags#matlab#	plugged/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let g:vista#types#uctags#matlab# = s:types$/;"	v
g:vista#types#uctags#mxml#	plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let g:vista#types#uctags#mxml# = s:types$/;"	v
g:vista#types#uctags#objc#	plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let g:vista#types#uctags#objc# = s:types$/;"	v
g:vista#types#uctags#ocaml#	plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let g:vista#types#uctags#ocaml# = s:types$/;"	v
g:vista#types#uctags#pascal#	plugged/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let g:vista#types#uctags#pascal# = s:types$/;"	v
g:vista#types#uctags#perl#	plugged/vista.vim/autoload/vista/types/uctags/perl.vim	/^let g:vista#types#uctags#perl# = s:types$/;"	v
g:vista#types#uctags#perl6#	plugged/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let g:vista#types#uctags#perl6# = s:types6$/;"	v
g:vista#types#uctags#php#	plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let g:vista#types#uctags#php# = s:types$/;"	v
g:vista#types#uctags#proto#	plugged/vista.vim/autoload/vista/types/uctags/proto.vim	/^let g:vista#types#uctags#proto# = s:types$/;"	v
g:vista#types#uctags#python#	plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let g:vista#types#uctags#python# = s:types$/;"	v
g:vista#types#uctags#r#	plugged/vista.vim/autoload/vista/types/uctags/r.vim	/^let g:vista#types#uctags#r# = s:types$/;"	v
g:vista#types#uctags#rexx#	plugged/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let g:vista#types#uctags#rexx# = s:types$/;"	v
g:vista#types#uctags#ruby#	plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let g:vista#types#uctags#ruby# = s:types$/;"	v
g:vista#types#uctags#rust#	plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let g:vista#types#uctags#rust# = s:types$/;"	v
g:vista#types#uctags#scheme#	plugged/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let g:vista#types#uctags#scheme# = s:types$/;"	v
g:vista#types#uctags#sh#	plugged/vista.vim/autoload/vista/types/uctags/sh.vim	/^let g:vista#types#uctags#sh# = s:types$/;"	v
g:vista#types#uctags#slang#	plugged/vista.vim/autoload/vista/types/uctags/slang.vim	/^let g:vista#types#uctags#slang# = s:types$/;"	v
g:vista#types#uctags#sml#	plugged/vista.vim/autoload/vista/types/uctags/sml.vim	/^let g:vista#types#uctags#sml# = s:types$/;"	v
g:vista#types#uctags#sql#	plugged/vista.vim/autoload/vista/types/uctags/sql.vim	/^let g:vista#types#uctags#sql# = s:types$/;"	v
g:vista#types#uctags#tcl#	plugged/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let g:vista#types#uctags#tcl# = s:types$/;"	v
g:vista#types#uctags#tex#	plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let g:vista#types#uctags#tex# = s:types$/;"	v
g:vista#types#uctags#vala#	plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^  let g:vista#types#uctags#vala#.ctagsbin = 'anjuta-tags'$/;"	v
g:vista#types#uctags#vala#	plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let g:vista#types#uctags#vala# = s:types$/;"	v
g:vista#types#uctags#vera#	plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let g:vista#types#uctags#vera# = s:types$/;"	v
g:vista#types#uctags#verilog#	plugged/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let g:vista#types#uctags#verilog# = s:types$/;"	v
g:vista#types#uctags#vhdl#	plugged/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let g:vista#types#uctags#vhdl# = s:types$/;"	v
g:vista#types#uctags#vim#	plugged/vista.vim/autoload/vista/types/uctags/vim.vim	/^let g:vista#types#uctags#vim# = s:types$/;"	v
g:vista#types#uctags#yacc#	plugged/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let g:vista#types#uctags#yacc# = s:types$/;"	v
g:vista_blink	plugged/vista.vim/plugin/vista.vim	/^let g:vista_blink = get(g:, 'vista_blink', [2, 100])$/;"	v
g:vista_close_on_jump	plugged/vista.vim/plugin/vista.vim	/^let g:vista_close_on_jump =  get(g:, 'vista_close_on_jump', 0)$/;"	v
g:vista_cursor_delay	plugged/vista.vim/plugin/vista.vim	/^let g:vista_cursor_delay = get(g:, 'vista_cursor_delay', 400)$/;"	v
g:vista_default_executive	plugged/vista.vim/plugin/vista.vim	/^let g:vista_default_executive = get(g:, 'vista_default_executive', 'ctags')$/;"	v
g:vista_disable_statusline	plugged/vista.vim/plugin/vista.vim	/^let g:vista_disable_statusline = get(g:, 'vista_disable_statusline', exists('g:loaded_airline') /;"	v
g:vista_echo_cursor	plugged/vista.vim/plugin/vista.vim	/^let g:vista_echo_cursor = get(g:, 'vista_echo_cursor', 1)$/;"	v
g:vista_echo_cursor_strategy	settings/sidebar.vim	/^    let g:vista_echo_cursor_strategy = 'floating_win'$/;"	v
g:vista_executive_for	plugged/vista.vim/plugin/vista.vim	/^let g:vista_executive_for = get(g:, 'vista_executive_for', {})$/;"	v
g:vista_executive_nvim_lsp_fetching	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^let g:vista_executive_nvim_lsp_fetching = v:true$/;"	v
g:vista_executive_nvim_lsp_reload_only	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^  let g:vista_executive_nvim_lsp_reload_only = v:true$/;"	v
g:vista_executive_nvim_lsp_reload_only	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^let g:vista_executive_nvim_lsp_reload_only = v:false$/;"	v
g:vista_executive_nvim_lsp_should_display	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^  let g:vista_executive_nvim_lsp_should_display = a:should_display$/;"	v
g:vista_executive_nvim_lsp_should_display	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^let g:vista_executive_nvim_lsp_should_display = v:false$/;"	v
g:vista_find_absolute_nearest_method_or_function	plugged/vista.vim/plugin/vista.vim	/^let g:vista_find_absolute_nearest_method_or_function = get(g:, 'vista_find_absolute_nearest_meth/;"	v
g:vista_find_nearest_method_or_function_delay	plugged/vista.vim/plugin/vista.vim	/^let g:vista_find_nearest_method_or_function_delay = get(g:, 'vista_find_nearest_method_or_functi/;"	v
g:vista_fold_toggle_icons	plugged/vista.vim/plugin/vista.vim	/^let g:vista_fold_toggle_icons = get(g:, 'vista_fold_toggle_icons', ['▼', '▶'])$/;"	v
g:vista_fzf_preview	plugged/vista.vim/autoload/vista/finder.vim	/^      let g:vista_fzf_preview[idx] = g:vista_fzf_preview[idx] . ':+{-1}-5'$/;"	v
g:vista_fzf_preview	plugged/vista.vim/plugin/vista.vim	/^let g:vista_fzf_preview = get(g:, 'vista_fzf_preview', [])$/;"	v
g:vista_icon_indent	plugged/vista.vim/plugin/vista.vim	/^let g:vista_icon_indent = get(g:, 'vista_icon_indent', ['└ ', '│ '])$/;"	v
g:vista_ignore_kinds	plugged/vista.vim/plugin/vista.vim	/^let g:vista_ignore_kinds = get(g:, 'vista_ignore_kinds', [])$/;"	v
g:vista_no_mappings	plugged/vista.vim/plugin/vista.vim	/^let g:vista_no_mappings = get(g:, 'vista_no_mappings', 0)$/;"	v
g:vista_sidebar_position	plugged/vista.vim/plugin/vista.vim	/^let g:vista_sidebar_position = get(g:, 'vista_sidebar_position', 'vertical botright')$/;"	v
g:vista_sidebar_width	plugged/vista.vim/plugin/vista.vim	/^let g:vista_sidebar_width = get(g:, 'vista_sidebar_width', 30)$/;"	v
g:vista_stay_on_open	plugged/vista.vim/plugin/vista.vim	/^let g:vista_stay_on_open = get(g:, 'vista_stay_on_open', 1)$/;"	v
g:vista_top_level_blink	plugged/vista.vim/plugin/vista.vim	/^let g:vista_top_level_blink = get(g:, 'vista_top_level_blink', [2, 100])$/;"	v
g:vista_update_on_text_changed	plugged/vista.vim/plugin/vista.vim	/^let g:vista_update_on_text_changed = get(g:, 'vista_update_on_text_changed', 0)$/;"	v
g:vista_update_on_text_changed_delay	plugged/vista.vim/plugin/vista.vim	/^let g:vista_update_on_text_changed_delay = get(g:, 'vista_update_on_text_changed_delay', 500)$/;"	v
g:vue_pre_processors	plugged/vim-polyglot/syntax/vue.vim	/^  let g:vue_pre_processors = []$/;"	v
g:webdevicons_enable	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_tabline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^     let g:webdevicons_enable_nerdtree = 0$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 0$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 1$/;"	v
g:which_key#TYPE	plugged/vim-which-key/autoload/which_key.vim	/^let g:which_key#TYPE = s:TYPE$/;"	v
g:which_key_align_by_seperator	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_align_by_seperator = get(g:, 'which_key_align_by_seperator', 1)$/;"	v
g:which_key_default_group_name	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_default_group_name = get(g:, 'which_key_default_group_name', '+prefix')$/;"	v
g:which_key_disable_default_offset	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_disable_default_offset = get(g:, 'which_key_disable_default_offset', 0)$/;"	v
g:which_key_fallback_to_native_key	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_fallback_to_native_key = get(g:, 'which_key_fallback_to_native_key', 0)$/;"	v
g:which_key_flatten	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_flatten = get(g:, 'which_key_flatten', 1)$/;"	v
g:which_key_floating_relative_win	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_floating_relative_win = get(g:, 'which_key_floating_relative_win', 0)$/;"	v
g:which_key_hspace	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_hspace = get(g:, 'which_key_hspace', 5)$/;"	v
g:which_key_ignore_invalid_key	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_ignore_invalid_key = get(g:, 'which_key_ignore_invalid_key', 1)$/;"	v
g:which_key_max_size	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_max_size = get(g:, 'which_key_max_size', 0)$/;"	v
g:which_key_origin_winid	plugged/vim-which-key/autoload/which_key.vim	/^    let g:which_key_origin_winid = win_getid()$/;"	v
g:which_key_position	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_position = get(g:, 'which_key_position', 'botright')$/;"	v
g:which_key_run_map_on_popup	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_run_map_on_popup = get(g:, 'which_key_run_map_on_popup', 1)$/;"	v
g:which_key_sep	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_sep = get(g:, 'which_key_sep', '→')$/;"	v
g:which_key_sort_horizontal	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_sort_horizontal = get(g:, 'which_key_sort_horizontal', 0)$/;"	v
g:which_key_timeout	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_timeout = get(g:, 'which_key_timeout', &timeoutlen)$/;"	v
g:which_key_use_floating_win	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_use_floating_win = (exists('*nvim_open_win') || exists('*popup_create')) && get(/;"	v
g:which_key_vertical	plugged/vim-which-key/plugin/which_key.vim	/^let g:which_key_vertical = get(g:, 'which_key_vertical', 0)$/;"	v
g:xmldata_aria	plugged/vim-polyglot/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_html5	plugged/vim-polyglot/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g:xmldata_xsd	plugged/vim-polyglot/autoload/xml/xsd.vim	/^let g:xmldata_xsd = {$/;"	v
g:xtab_cwds	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:xtab_cwds[tabpagenr()-1] = t:cwd$/;"	v
g:xtabline_alt_action	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:xtabline_alt_action = get(g:, 'xtabline_alt_action', "buffer #")$/;"	v
g:xtabline_changing_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        let g:xtabline_changing_buffer = 1$/;"	v
g:xtabline_include_previews	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    let g:xtabline_include_previews = get(g:, 'xtabline_include_previews', 1)$/;"	v
g:xxdprogram	plugged/vim-polyglot/extras/menu.vim	/^	let g:xxdprogram = '"' .. g:xxdprogram .. '"'$/;"	v
g:xxdprogram	plugged/vim-polyglot/extras/menu.vim	/^      let g:xxdprogram = "xxd"$/;"	v
g:xxdprogram	plugged/vim-polyglot/extras/menu.vim	/^      let g:xxdprogram = $VIMRUNTIME . (&shellslash ? '\/' : '\\') . "xxd.exe"$/;"	v
g:zig_fmt_autosave	plugged/vim-polyglot/autoload/zig/config.vim	/^  let g:zig_fmt_autosave = a:value$/;"	v
g<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#Jump_Tag ('','stjump')<cr>$/;"	m
g<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#List_Tag ()<cr>$/;"	m
gO	plugged/vim-polyglot/ftplugin/help.vim	/^  nnoremap <silent><buffer> gO :call <sid>show_toc()<cr>$/;"	m
gather_candidates	plugged/ale/rplugin/python3/deoplete/sources/ale.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/neco-vim/rplugin/python3/deoplete/source/vim.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gc	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gc  <Plug>(crystal-show-context)$/;"	m
gd	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gd  <Plug>(crystal-jump-to-definition)$/;"	m
gdb_minlines	plugged/vim-polyglot/syntax/gdb.vim	/^  let gdb_minlines = 10$/;"	v
generate_fallback	plugged/vim-polyglot/scripts/build	/^def generate_fallback$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
generate_ftdetect	plugged/vim-polyglot/scripts/build	/^def generate_ftdetect(packages, heuristics)$/;"	f	method:copy_file.rules_to_code.rule_to_code
generate_packages_entries	plugged/vim-polyglot/scripts/import_vim	/^def generate_packages_entries(filetypes, comments)$/;"	f
generate_plugins	plugged/vim-polyglot/scripts/build	/^def generate_plugins(packages)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
generate_tests	plugged/vim-polyglot/scripts/build	/^def generate_tests(packages)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
generate_tests	plugged/vim-polyglot/scripts/import_vim	/^def generate_tests(autocommands)$/;"	f
getArguments	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def getArguments(self):$/;"	m	class:GtagsExplManager
getArguments	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def getArguments(self):$/;"	m	class:Manager
getBasename	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^    def getBasename(path):$/;"	f
getCacheFileName	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^    def getCacheFileName(self):$/;"	m	class:Mru
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:AnyExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:BufferExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:BufTagExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:ColorschemeExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:CommandExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:Explorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer3.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:Explorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:FileExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:FiletypeExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:FunctionExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:GtagsExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:HelpExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:HistoryExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:LineExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:MruExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:QfLocListExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:RgExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:SelfExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:TagExplorer
getContent	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def getContent(self, *args, **kwargs):$/;"	m	class:WindowExplorer
getContextSeparator	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def getContextSeparator(self):$/;"	m	class:RgExplorer
getCurrentPos	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def getCurrentPos(self):$/;"	m	class:LfInstance
getCwd	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def getCwd(self):$/;"	m	class:LfInstance
getDirname	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^    def getDirname(path):$/;"	f
getFreshContent	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def getFreshContent(self, *args, **kwargs):$/;"	m	class:ColorschemeExplorer
getFreshContent	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def getFreshContent(self, *args, **kwargs):$/;"	m	class:CommandExplorer
getFreshContent	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^    def getFreshContent(self, *args, **kwargs):$/;"	m	class:Explorer
getFreshContent	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer3.py	/^    def getFreshContent(self, *args, **kwargs):$/;"	m	class:Explorer
getFreshContent	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def getFreshContent(self, *args, **kwargs):$/;"	m	class:FileExplorer
getFreshContent	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def getFreshContent(self, *args, **kwargs):$/;"	m	class:FiletypeExplorer
getFreshContent	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def getFreshContent(self, *args, **kwargs):$/;"	m	class:HelpExplorer
getFreshContent	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def getFreshContent(self, *args, **kwargs):$/;"	m	class:QfLocListExplorer
getFreshContent	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def getFreshContent(self, *args, **kwargs):$/;"	m	class:TagExplorer
getHighlights	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^HighlightGroup* getHighlights(const char* text,$/;"	f	typeref:typename:HighlightGroup *
getHighlights	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def getHighlights(self, text):$/;"	m	class:FuzzyMatch
getHistoryType	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def getHistoryType(self):$/;"	m	class:HistoryExplorer
getInitialWinHeight	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def getInitialWinHeight(self):$/;"	m	class:LfInstance
getLastResultFormat	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def getLastResultFormat(self):$/;"	m	class:GtagsExplorer
getListType	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def getListType(self):$/;"	m	class:QfLocListExplorer
getLogger	plugged/ncm2/pythonx/ncm2.py	/^def getLogger(name):$/;"	f
getMaxBufnameLen	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def getMaxBufnameLen(self):$/;"	m	class:BufferExplorer
getMaxBufnameLen	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def getMaxBufnameLen(self):$/;"	m	class:MruExplorer
getMruBufnrs	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^    def getMruBufnrs(self):$/;"	m	class:Mru
getOriginalCursor	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def getOriginalCursor(self):$/;"	m	class:LfInstance
getOriginalPos	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def getOriginalPos(self):$/;"	m	class:LfInstance
getPathWeight	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^uint32_t getPathWeight(const char* filename,$/;"	f	typeref:typename:uint32_t
getPathWeight	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def getPathWeight(filename, suffix, dirname, path):$/;"	m	class:FuzzyMatch
getPatternRegex	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def getPatternRegex(self):$/;"	m	class:GtagsExplorer
getPatternRegex	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def getPatternRegex(self):$/;"	m	class:RgExplorer
getPopupInstance	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def getPopupInstance(self):$/;"	m	class:LfInstance
getPopupWinId	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def getPopupWinId(self):$/;"	m	class:LfInstance
getPrefixLength	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def getPrefixLength(self):$/;"	m	class:BufferExplorer
getPrefixLength	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def getPrefixLength(self):$/;"	m	class:MruExplorer
getPrefixLength	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def getPrefixLength(self):$/;"	m	class:WindowExplorer
getResultFormat	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def getResultFormat(self):$/;"	m	class:GtagsExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def getStlCategory(self):$/;"	m	class:AnyExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def getStlCategory(self):$/;"	m	class:BufferExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def getStlCategory(self):$/;"	m	class:BufTagExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def getStlCategory(self):$/;"	m	class:ColorschemeExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def getStlCategory(self):$/;"	m	class:CommandExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^    def getStlCategory(self):$/;"	m	class:Explorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer3.py	/^    def getStlCategory(self):$/;"	m	class:Explorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def getStlCategory(self):$/;"	m	class:FileExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def getStlCategory(self):$/;"	m	class:FiletypeExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def getStlCategory(self):$/;"	m	class:FunctionExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def getStlCategory(self):$/;"	m	class:GtagsExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def getStlCategory(self):$/;"	m	class:HelpExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def getStlCategory(self):$/;"	m	class:HistoryExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def getStlCategory(self):$/;"	m	class:LineExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def getStlCategory(self):$/;"	m	class:MruExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def getStlCategory(self):$/;"	m	class:QfLocListExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def getStlCategory(self):$/;"	m	class:RgExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def getStlCategory(self):$/;"	m	class:SelfExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def getStlCategory(self):$/;"	m	class:TagExplorer
getStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def getStlCategory(self):$/;"	m	class:WindowExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def getStlCurDir(self):$/;"	m	class:AnyExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def getStlCurDir(self):$/;"	m	class:BufferExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def getStlCurDir(self):$/;"	m	class:BufTagExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/colorschemeExpl.py	/^    def getStlCurDir(self):$/;"	m	class:ColorschemeExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/commandExpl.py	/^    def getStlCurDir(self):$/;"	m	class:CommandExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^    def getStlCurDir(self):$/;"	m	class:Explorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer3.py	/^    def getStlCurDir(self):$/;"	m	class:Explorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def getStlCurDir(self):$/;"	m	class:FileExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/filetypeExpl.py	/^    def getStlCurDir(self):$/;"	m	class:FiletypeExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def getStlCurDir(self):$/;"	m	class:FunctionExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def getStlCurDir(self):$/;"	m	class:GtagsExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^    def getStlCurDir(self):$/;"	m	class:HelpExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^    def getStlCurDir(self):$/;"	m	class:HistoryExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def getStlCurDir(self):$/;"	m	class:LineExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def getStlCurDir(self):$/;"	m	class:MruExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def getStlCurDir(self):$/;"	m	class:QfLocListExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def getStlCurDir(self):$/;"	m	class:RgExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^    def getStlCurDir(self):$/;"	m	class:SelfExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^    def getStlCurDir(self):$/;"	m	class:TagExplorer
getStlCurDir	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def getStlCurDir(self):$/;"	m	class:WindowExplorer
getWeight	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^float getWeight(const char* text, uint16_t text_len,$/;"	f	typeref:typename:float
getWeight	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def getWeight(self, text):$/;"	m	class:FuzzyMatch
getWeight2	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def getWeight2(self, text):$/;"	m	class:FuzzyMatch
getWeight3	plugged/LeaderF/autoload/leaderf/python/leaderf/fuzzyMatch.py	/^    def getWeight3(self, text):$/;"	m	class:FuzzyMatch
getWinIdList	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def getWinIdList(self):$/;"	m	class:LfPopupInstance
getWinPos	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def getWinPos(self):$/;"	m	class:LfInstance
getWindow	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^            def getWindow(number):$/;"	f	member:LfInstance._createPopupWindow	file:
get_abbrev	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^def get_abbrev(s):$/;"	f
get_abbrev	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def get_abbrev(s):$/;"	f
get_ast	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^    def get_ast(self, snippet):$/;"	m	class:Parser
get_buffer_data	plugged/ultisnips/test/vim_interface.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def get_buffer_filetypes(self):$/;"	m	class:SnippetManager
get_char_display_width	plugged/ncm2/pythonx/ncm2.py	/^        def get_char_display_width(unicode_str):$/;"	f	member:Ncm2Base.strdisplaywidth	file:
get_choice	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^    def get_choice(self, s, pos=0):$/;"	m	class:Parser
get_clear_priority	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_clear_priority(self, filetypes):$/;"	m	class:SnippetSource
get_cleared	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_cleared(self, filetypes):$/;"	m	class:SnippetSource
get_comment_format	plugged/vim-snippets/pythonx/vimsnippets.py	/^def get_comment_format():$/;"	f
get_comments	plugged/vim-polyglot/scripts/import_vim	/^def get_comments$/;"	f
get_complete_position	plugged/ale/rplugin/python3/deoplete/sources/ale.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/neco-vim/rplugin/python3/deoplete/source/vim.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_context	plugged/ncm2/pythonx/ncm2_core.py	/^    def get_context(self, data, name):$/;"	m	class:Ncm2Core
get_context	plugged/ncm2/pythonx/ncm2_core.py	/^get_context = ncm2_core.get_context$/;"	v
get_cursor_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_cursor_pos():$/;"	f
get_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
get_dictionary	plugged/vim-translator/script/translator.py	/^    def get_dictionary(self, sl, tl, text):$/;"	m	class:SdcvShell
get_dot_vim	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_dot_vim():$/;"	f
get_elements	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^    def get_elements(self, s, pos, escs=['$', '\\\\'], loose_escs=['}']):$/;"	m	class:Parser
get_env	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^    def get_env(self):$/;"	m	class:Source
get_explain	plugged/vim-translator/script/translator.py	/^    def get_explain(self, html):$/;"	m	class:BingTranslator
get_explain	plugged/vim-translator/script/translator.py	/^    def get_explain(self, html):$/;"	m	class:HaiciTranslator
get_explain	plugged/vim-translator/script/translator.py	/^    def get_explain(self, obj):$/;"	m	class:BaicizhanTranslator
get_explain	plugged/vim-translator/script/translator.py	/^    def get_explain(self, obj):$/;"	m	class:BasicTranslator
get_explain	plugged/vim-translator/script/translator.py	/^    def get_explain(self, obj):$/;"	m	class:GoogleTranslator
get_explain	plugged/vim-translator/script/translator.py	/^    def get_explain(self, obj):$/;"	m	class:ICibaTranslator
get_explain	plugged/vim-translator/script/translator.py	/^    def get_explain(self, obj):$/;"	m	class:YoudaoTranslator
get_filtered_sources	plugged/ncm2/pythonx/ncm2_core.py	/^    def get_filtered_sources(self, data, names=None):$/;"	m	class:Ncm2Core
get_gocode	plugged/ncm2-go/pythonx/ncm2_go.py	/^    def get_gocode(self, data):$/;"	m	class:Source
get_loglevel	plugged/ncm2/pythonx/ncm2.py	/^    def get_loglevel():$/;"	f	function:getLogger	file:
get_mark_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_mark_pos(name):$/;"	f
get_matching_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def get_matching_snippets($/;"	m	class:SnippetDictionary
get_md5	plugged/vim-translator/script/translator.py	/^    def get_md5(self, value):$/;"	m	class:YoudaoTranslator
get_option	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def get_option(snip, option, default=None):$/;"	f
get_paraphrase	plugged/vim-translator/script/translator.py	/^    def get_paraphrase(self, obj):$/;"	m	class:BasicTranslator
get_paraphrase	plugged/vim-translator/script/translator.py	/^    def get_paraphrase(self, obj):$/;"	m	class:GoogleTranslator
get_paraphrase	plugged/vim-translator/script/translator.py	/^    def get_paraphrase(self, obj):$/;"	m	class:ICibaTranslator
get_paraphrase	plugged/vim-translator/script/translator.py	/^    def get_paraphrase(self, obj):$/;"	m	class:YoudaoTranslator
get_phonetic	plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, html):$/;"	m	class:BingTranslator
get_phonetic	plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, html):$/;"	m	class:HaiciTranslator
get_phonetic	plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, obj):$/;"	m	class:BaicizhanTranslator
get_phonetic	plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, obj):$/;"	m	class:BasicTranslator
get_phonetic	plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, obj):$/;"	m	class:ICibaTranslator
get_placeholder	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^    def get_placeholder(self, s, pos):$/;"	m	class:Parser
get_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_snippets($/;"	m	class:SnippetSource
get_sources_for_popup	plugged/ncm2/pythonx/ncm2_core.py	/^    def get_sources_for_popup(self, data, names):$/;"	m	class:Ncm2Core
get_src	plugged/ncm2/pythonx/ncm2.py	/^    def get_src(self, src, ctx):$/;"	m	class:Ncm2Base
get_tabstop	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^    def get_tabstop(self, s, pos):$/;"	m	class:Parser
get_tabstops	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def get_tabstops(self):$/;"	m	class:SnippetInstance
get_text	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^    def get_text(self, s, pos, escs, loose_escs = []):$/;"	m	class:Parser
get_url	plugged/vim-translator/script/translator.py	/^    def get_url(self, sl, tl, qry):$/;"	m	class:GoogleTranslator
get_variable	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^    def get_variable(self, s, pos):$/;"	m	class:Parser
get_word_pattern	plugged/ncm2/pythonx/ncm2_core.py	/^    def get_word_pattern(self, ctx, sr):$/;"	m	class:Ncm2Core
gitstatus#doctor#Say	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! gitstatus#doctor#Say() abort$/;"	f
gitstatus#getIndicator	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#getIndicator(status) abort$/;"	f
gitstatus#isWin	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#isWin() abort$/;"	f
gitstatus#job#Spawn	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! gitstatus#job#Spawn(name, cmd, opts) abort$/;"	f
gitstatus#listener#New	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! gitstatus#listener#New(opts) abort$/;"	f
gitstatus#log#NewLogger	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! gitstatus#log#NewLogger(level) abort$/;"	f
gitstatus#shouldConceal	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#shouldConceal() abort$/;"	f
gitstatus#util#BuildGitStatusCommand	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#BuildGitStatusCommand(root, opts) abort$/;"	f
gitstatus#util#BuildGitWorkdirCommand	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#BuildGitWorkdirCommand(root, opts) abort$/;"	f
gitstatus#util#FormatPath	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^        function! gitstatus#util#FormatPath(path) abort$/;"	f
gitstatus#util#FormatPath	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^    function! gitstatus#util#FormatPath(path) abort$/;"	f
gitstatus#util#ParseGitStatusLine	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#ParseGitStatusLine(statusLine, opts) abort$/;"	f
gitstatus#util#ParseGitStatusLines	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#ParseGitStatusLines(root, statusLines, opts) abort$/;"	f
gitstatus#util#UpdateParentDirsStatus	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#UpdateParentDirsStatus(cache, root, pathStr, statusKey, opts) abort$/;"	f
glob	plugged/onedark.vim/build/package-lock.json	/^        "glob": "^7.1.3"$/;"	s	object:dependencies.rimraf.requires
glob	plugged/onedark.vim/build/package-lock.json	/^    "glob": {$/;"	o	object:dependencies
glob-parent	plugged/onedark.vim/build/package-lock.json	/^        "glob-parent": "^5.0.0",$/;"	s	object:dependencies.eslint.requires
glob-parent	plugged/onedark.vim/build/package-lock.json	/^    "glob-parent": {$/;"	o	object:dependencies
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
global_states_and_properties	plugged/vim-polyglot/autoload/xml/aria.vim	/^let global_states_and_properties = {$/;"	v
globals	plugged/onedark.vim/build/package-lock.json	/^        "globals": "^12.1.0",$/;"	s	object:dependencies.@eslint/eslintrc.requires
globals	plugged/onedark.vim/build/package-lock.json	/^        "globals": "^12.1.0",$/;"	s	object:dependencies.eslint.requires
globals	plugged/onedark.vim/build/package-lock.json	/^    "globals": {$/;"	o	object:dependencies
go#config#AddtagsSkipUnexported	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AddtagsSkipUnexported() abort$/;"	f
go#config#AddtagsTransform	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AddtagsTransform() abort$/;"	f
go#config#AlternateMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AlternateMode() abort$/;"	f
go#config#AsmfmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AsmfmtAutosave() abort$/;"	f
go#config#AutoSameids	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoSameids() abort$/;"	f
go#config#AutoTypeInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoTypeInfo() abort$/;"	f
go#config#BinPath	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BinPath() abort$/;"	f
go#config#BuildTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BuildTags() abort$/;"	f
go#config#CodeCompletionEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#CodeCompletionEnabled() abort$/;"	f
go#config#CodeCompletionIcase	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#CodeCompletionIcase() abort$/;"	f
go#config#Debug	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#Debug() abort$/;"	f
go#config#DebugAddress	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugAddress() abort$/;"	f
go#config#DebugBreakpointSignText	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugBreakpointSignText() abort$/;"	f
go#config#DebugCommands	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugCommands() abort$/;"	f
go#config#DebugLogOutput	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugLogOutput() abort$/;"	f
go#config#DebugMappings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugMappings() abort$/;"	f
go#config#DebugWindows	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugWindows() abort$/;"	f
go#config#DeclsIncludes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsIncludes() abort$/;"	f
go#config#DeclsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsMode() abort$/;"	f
go#config#DefMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefMode() abort$/;"	f
go#config#DefReuseBuffer	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefReuseBuffer() abort$/;"	f
go#config#DiagnosticsEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DiagnosticsEnabled() abort$/;"	f
go#config#DiagnosticsLevel	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DiagnosticsLevel() abort$/;"	f
go#config#DocMaxHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocMaxHeight() abort$/;"	f
go#config#DocPopupWindow	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocPopupWindow() abort$/;"	f
go#config#DocUrl	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocUrl() abort$/;"	f
go#config#EchoCommandInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#EchoCommandInfo() abort$/;"	f
go#config#EchoGoInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#EchoGoInfo() abort$/;"	f
go#config#ErrcheckBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ErrcheckBin() abort$/;"	f
go#config#FillStructMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FillStructMode() abort$/;"	f
go#config#FmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtAutosave() abort$/;"	f
go#config#FmtCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtCommand() abort$/;"	f
go#config#FmtExperimental	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtExperimental() abort$/;"	f
go#config#FmtFailSilently	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtFailSilently() abort$/;"	f
go#config#FmtOptions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtOptions() abort$/;"	f
go#config#FoldEnable	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FoldEnable(...) abort$/;"	f
go#config#GolintBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GolintBin() abort$/;"	f
go#config#GoplsAnalyses	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsAnalyses() abort$/;"	f
go#config#GoplsCompleteUnimported	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsCompleteUnimported() abort$/;"	f
go#config#GoplsDeepCompletion	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsDeepCompletion() abort$/;"	f
go#config#GoplsEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsEnabled() abort$/;"	f
go#config#GoplsGofumpt	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsGofumpt() abort$/;"	f
go#config#GoplsLocal	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsLocal() abort$/;"	f
go#config#GoplsMatcher	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsMatcher() abort$/;"	f
go#config#GoplsOptions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsOptions() abort$/;"	f
go#config#GoplsSettings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsSettings() abort$/;"	f
go#config#GoplsStaticCheck	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsStaticCheck() abort$/;"	f
go#config#GoplsTempModfile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsTempModfile() abort$/;"	f
go#config#GoplsUsePlaceholders	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsUsePlaceholders() abort$/;"	f
go#config#GorenameBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenameBin() abort$/;"	f
go#config#GorenamePrefill	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenamePrefill() abort$/;"	f
go#config#GuruScope	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GuruScope() abort$/;"	f
go#config#HighlightArrayWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightArrayWhitespaceError() abort$/;"	f
go#config#HighlightBuildConstraints	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightBuildConstraints() abort$/;"	f
go#config#HighlightChanWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightChanWhitespaceError() abort$/;"	f
go#config#HighlightDebug	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDebug() abort$/;"	f
go#config#HighlightDiagnosticErrors	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticErrors() abort$/;"	f
go#config#HighlightDiagnosticWarnings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticWarnings() abort$/;"	f
go#config#HighlightExtraTypes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightExtraTypes() abort$/;"	f
go#config#HighlightFields	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFields() abort$/;"	f
go#config#HighlightFormatStrings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFormatStrings() abort$/;"	f
go#config#HighlightFunctionCalls	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionCalls() abort$/;"	f
go#config#HighlightFunctionParameters	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionParameters() abort$/;"	f
go#config#HighlightFunctions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctions() abort$/;"	f
go#config#HighlightGenerateTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightGenerateTags() abort$/;"	f
go#config#HighlightOperators	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightOperators() abort$/;"	f
go#config#HighlightSpaceTabError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightSpaceTabError() abort$/;"	f
go#config#HighlightStringSpellcheck	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightStringSpellcheck() abort$/;"	f
go#config#HighlightTrailingWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTrailingWhitespaceError() abort$/;"	f
go#config#HighlightTypes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTypes() abort$/;"	f
go#config#HighlightVariableAssignments	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableAssignments() abort$/;"	f
go#config#HighlightVariableDeclarations	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableDeclarations() abort$/;"	f
go#config#ImplementsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImplementsMode() abort$/;"	f
go#config#ImportsAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImportsAutosave() abort$/;"	f
go#config#ImportsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImportsMode() abort$/;"	f
go#config#InfoMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#InfoMode() abort$/;"	f
go#config#ListAutoclose	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListAutoclose() abort$/;"	f
go#config#ListHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListHeight() abort$/;"	f
go#config#ListType	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListType() abort$/;"	f
go#config#ListTypeCommands	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListTypeCommands() abort$/;"	f
go#config#LspLog	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#LspLog() abort$/;"	f
go#config#MetalinterAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosave() abort$/;"	f
go#config#MetalinterAutosaveEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosaveEnabled() abort$/;"	f
go#config#MetalinterCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterCommand() abort$/;"	f
go#config#MetalinterDeadline	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterDeadline() abort$/;"	f
go#config#MetalinterEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterEnabled() abort$/;"	f
go#config#ModFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ModFmtAutosave() abort$/;"	f
go#config#PlayBrowserCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayBrowserCommand() abort$/;"	f
go#config#PlayOpenBrowser	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayOpenBrowser() abort$/;"	f
go#config#ReferrersMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ReferrersMode() abort$/;"	f
go#config#RenameCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#RenameCommand() abort$/;"	f
go#config#SearchBinPathFirst	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SearchBinPathFirst() abort$/;"	f
go#config#SetAsmfmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAsmfmtAutosave(value) abort$/;"	f
go#config#SetAutoSameids	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoSameids(value) abort$/;"	f
go#config#SetAutoTypeInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoTypeInfo(value) abort$/;"	f
go#config#SetBuildTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetBuildTags(value) abort$/;"	f
go#config#SetDebugDiag	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetDebugDiag(value) abort$/;"	f
go#config#SetFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetFmtAutosave(value) abort$/;"	f
go#config#SetGuruScope	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetGuruScope(scope) abort$/;"	f
go#config#SetMetalinterAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetMetalinterAutosave(value) abort$/;"	f
go#config#SetModFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetModFmtAutosave(value) abort$/;"	f
go#config#SetTemplateAutocreate	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTemplateAutocreate(value) abort$/;"	f
go#config#SetTermCloseOnExit	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTermCloseOnExit(value) abort$/;"	f
go#config#SetTermEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTermEnabled(value) abort$/;"	f
go#config#SnippetEngine	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SnippetEngine() abort$/;"	f
go#config#StatuslineDuration	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#StatuslineDuration() abort$/;"	f
go#config#TemplateAutocreate	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateAutocreate() abort$/;"	f
go#config#TemplateFile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateFile() abort$/;"	f
go#config#TemplateTestFile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateTestFile() abort$/;"	f
go#config#TemplateUsePkg	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateUsePkg() abort$/;"	f
go#config#TermCloseOnExit	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermCloseOnExit() abort$/;"	f
go#config#TermEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermEnabled() abort$/;"	f
go#config#TermHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermHeight() abort$/;"	f
go#config#TermMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermMode() abort$/;"	f
go#config#TermReuse	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermReuse() abort$/;"	f
go#config#TermWidth	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermWidth() abort$/;"	f
go#config#TestShowName	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestShowName() abort$/;"	f
go#config#TestTimeout	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestTimeout() abort$/;"	f
go#config#TextobjIncludeFunctionDoc	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeFunctionDoc() abort$/;"	f
go#config#TextobjIncludeVariable	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeVariable() abort$/;"	f
go#config#Updatetime	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#Updatetime() abort$/;"	f
go#config#VersionWarning	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#VersionWarning() abort$/;"	f
gotoOriginalWindow	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def gotoOriginalWindow(self):$/;"	m	class:LfInstance
graphic_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let graphic_role = [$/;"	v
graphql#has_syntax_group	plugged/vim-polyglot/autoload/graphql.vim	/^function! graphql#has_syntax_group(group) abort$/;"	f
graphql#javascript_tags	plugged/vim-polyglot/autoload/graphql.vim	/^function! graphql#javascript_tags() abort$/;"	f
groovy_minlines	plugged/vim-polyglot/syntax/groovy.vim	/^  let groovy_minlines = 10$/;"	v
gruvbox#hls_hide	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_hide()$/;"	f
gruvbox#hls_show	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_show()$/;"	f
gruvbox#hls_toggle	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_toggle()$/;"	f
gruvbox#invert_signs_toggle	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#invert_signs_toggle()$/;"	f
gsa	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsa <Plug>(crystal-spec-run-all)$/;"	m
gsc	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsc <Plug>(crystal-spec-run-current)$/;"	m
gss	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gss <Plug>(crystal-spec-switch)$/;"	m
gtagsExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^gtagsExplManager = GtagsExplManager()$/;"	v
gtags_getDigest	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static void gtags_getDigest(char** str, uint32_t* length, GtagsParameter* param)$/;"	f	typeref:typename:void	file:
gtags_usage	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^gtags_usage = """$/;"	v
guess_edit	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
gutentags#add_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_get_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_get_project_root(path) abort$/;"	f
gutentags#default_stderr_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stderr_cb(chan, msg) abort$/;"	f
gutentags#default_stdout_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stdout_cb(chan, msg) abort$/;"	f
gutentags#error	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#on_vim_leave_pre	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#on_vim_leave_pre() abort$/;"	f
gutentags#remove_job	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	plugged/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
handleError	plugged/onedark.vim/build/build.js	/^const handleError = (message, cause) => {$/;"	C
handle_action	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_action(head, tail, line_index):$/;"	f
handle_context	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_context(tail, line_index):$/;"	f
handle_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_extends(tail, line_index):$/;"	f
handler	plugged/ncm2/pythonx/ncm2_core.py	/^        def handler(data, sr, sctx, sccol, matches):$/;"	f	member:Ncm2Core.filter_get	file:
has-flag	plugged/onedark.vim/build/package-lock.json	/^            "has-flag": "^4.0.0"$/;"	s	object:dependencies.chalk.dependencies.supports-color.requires
has-flag	plugged/onedark.vim/build/package-lock.json	/^        "has-flag": "^3.0.0"$/;"	s	object:dependencies.supports-color.requires
has-flag	plugged/onedark.vim/build/package-lock.json	/^        "has-flag": {$/;"	o	object:dependencies.chalk.dependencies
has-flag	plugged/onedark.vim/build/package-lock.json	/^    "has-flag": {$/;"	o	object:dependencies
has_cjk	plugged/vim-snippets/pythonx/vimsnippets.py	/^def has_cjk(s):$/;"	f
has_column	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t has_column;$/;"	m	struct:RgParameter	typeref:typename:uint32_t	file:
has_option	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
has_version	plugged/ultisnips/test/vim_interface.py	/^    def has_version(self, major, minor, patchlevel):$/;"	m	class:VimInterface
haxe_minlines	plugged/vim-polyglot/syntax/haxe.vim	/^  let haxe_minlines = 5000$/;"	v
head	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t        head;$/;"	m	struct:FeCircularQueue	typeref:typename:uint32_t	file:
head_tail	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
health#translator#check	plugged/vim-translator/autoload/health/translator.vim	/^function! health#translator#check() abort$/;"	f
height	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def height(self):$/;"	m	class:FloatWindow
height	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def height(self):$/;"	m	class:PopupWindow
height	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def height(self, height):$/;"	m	class:FloatWindow
helpExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/helpExpl.py	/^helpExplManager = HelpExplManager()$/;"	v
helpLength	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def helpLength(self):$/;"	m	class:LfInstance
helpLength	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def helpLength(self, length):$/;"	m	class:LfInstance
hide	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def hide(self):$/;"	m	class:LfPopupInstance
hide	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def hide(self):$/;"	m	class:PopupWindow
hideCursor	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def hideCursor(self):$/;"	m	class:LfCli
hideMimicCursor	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def hideMimicCursor(self):$/;"	m	class:LfInstance
highlightDevIcons	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def highlightDevIcons():$/;"	f
highlightMatches	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def highlightMatches(self):$/;"	m	class:LfCli
highlight_types	plugged/vim-polyglot/syntax/spup.vim	/^    let highlight_types = 1$/;"	v
highlights	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^        HighlightGroup** highlights;$/;"	m	union:FuzzyEngine::__anon07ea32bd060a	typeref:typename:HighlightGroup **	file:
historyExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/historyExpl.py	/^historyExplManager = HistoryExplManager()$/;"	v
hl	plugged/vim-airline/t/highlighter.vim	/^      let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	plugged/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hog_minlines	plugged/vim-polyglot/syntax/hog.vim	/^    let hog_minlines = 100$/;"	v
hooks	plugged/onedark.vim/build/package.json	/^    "hooks": {$/;"	o	object:husky
html_no_rendering	plugged/vim-polyglot/syntax/spyce.vim	/^let html_no_rendering = 1    " do not render <b>,<i>, etc...$/;"	v
htmlcomplete#CheckDoctype	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#DetectOmniFlavor	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f
htmlcomplete#LoadAria	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
http_get	plugged/vim-translator/script/translator.py	/^    def http_get(self, url, data=None, header=None):$/;"	m	class:BasicTranslator
http_post	plugged/vim-translator/script/translator.py	/^    def http_post(self, url, data=None, header=None):$/;"	m	class:BasicTranslator
hunks ([vim-gitgutter][29] & [vim-signify][30] & [coc-git][59])	plugged/vim-airline/README.md	/^#### hunks ([vim-gitgutter][29] & [vim-signify][30] & [coc-git][59])$/;"	t
husky	plugged/onedark.vim/build/package-lock.json	/^    "husky": {$/;"	o	object:dependencies
husky	plugged/onedark.vim/build/package.json	/^    "husky": "^4.3.0"$/;"	s	object:devDependencies
husky	plugged/onedark.vim/build/package.json	/^  "husky": {$/;"	o
hw_subversion	plugged/vim-polyglot/syntax/hollywood.vim	/^  let hw_subversion = 0$/;"	v
hw_version	plugged/vim-polyglot/syntax/hollywood.vim	/^  let hw_version = 8$/;"	v
i	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py b:Lf_AnyExplManager."input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "bufTagExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "bufExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "colorschemeExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "fileExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Filetype.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "filetypeExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "functionExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "gtagsExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "helpExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "lineExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "mruExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "qfloclistExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Rg.vim	/^        nnoremap <buffer> <silent> i             :exec g:Lf_py "rgExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Self.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "selfExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "tagExplManager.input()"<CR>$/;"	m
i	plugged/LeaderF/autoload/leaderf/Window.vim	/^    nnoremap <buffer> <silent> i             :exec g:Lf_py "windowExplManager.input()"<CR>$/;"	m
i	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> i <NOP>$/;"	m
i	plugged/vim-polyglot/syntax/plantuml.vim	/^  let i = i + 1$/;"	v
i	plugged/vim-polyglot/syntax/plantuml.vim	/^let i = 1$/;"	v
i	plugged/vim-polyglot/syntax/xpm.vim	/^   let i = i + 1$/;"	v
i	plugged/vim-polyglot/syntax/xpm.vim	/^let i      = 1$/;"	v
i	plugged/vim-polyglot/syntax/xpm2.vim	/^    let i = i + 1$/;"	v
i	plugged/vim-polyglot/syntax/xpm2.vim	/^  let i      = 1$/;"	v
iM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iS	plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> iS :<C-U>call <SID>UltiSnippetTextObj(1)<CR>$/;"	m
iS	plugged/ultisnips/ftplugin/snippets.vim	/^xnoremap <silent><buffer> iS :<C-U>call <SID>UltiSnippetTextObj(1)<CR>$/;"	m
icon_minlines	plugged/vim-polyglot/syntax/icon.vim	/^  let icon_minlines = 15$/;"	v
id	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def id(self):$/;"	m	class:FloatWindow
id	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def id(self):$/;"	m	class:PopupWindow
idris_response	plugged/vim-polyglot/ftplugin/idris.vim	/^let idris_response = 0$/;"	v
idris_response	plugged/vim-polyglot/ftplugin/idris2.vim	/^let idris_response = 0$/;"	v
ie	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  onoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
ie	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  xnoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
ignore	plugged/onedark.vim/build/package-lock.json	/^        "ignore": "^4.0.6",$/;"	s	object:dependencies.@eslint/eslintrc.requires
ignore	plugged/onedark.vim/build/package-lock.json	/^        "ignore": "^4.0.6",$/;"	s	object:dependencies.eslint.requires
ignore	plugged/onedark.vim/build/package-lock.json	/^    "ignore": {$/;"	o	object:dependencies
ignoreEvent	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^def ignoreEvent(events):$/;"	f
ignore_missing_imports	plugged/ultisnips/mypy.ini	/^ignore_missing_imports = True$/;"	k	section:mypy-unidecode
ignore_missing_imports	plugged/ultisnips/mypy.ini	/^ignore_missing_imports = True$/;"	k	section:mypy-vim
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["H"]$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e", "H"]$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e"]$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
im	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
im	plugged/vim-polyglot/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
image_repro	plugged/ultisnips/Makefile	/^image_repro: image_vim_80_py36$/;"	t
image_vim_74_py35	plugged/ultisnips/Makefile	/^image_vim_74_py35:$/;"	t
image_vim_74_py36	plugged/ultisnips/Makefile	/^image_vim_74_py36:$/;"	t
image_vim_80_py35	plugged/ultisnips/Makefile	/^image_vim_80_py35:$/;"	t
image_vim_80_py36	plugged/ultisnips/Makefile	/^image_vim_80_py36:$/;"	t
image_vim_81_py35	plugged/ultisnips/Makefile	/^image_vim_81_py35:$/;"	t
image_vim_81_py36	plugged/ultisnips/Makefile	/^image_vim_81_py36:$/;"	t
image_vim_81_py37	plugged/ultisnips/Makefile	/^image_vim_81_py37:$/;"	t
image_vim_81_py38	plugged/ultisnips/Makefile	/^image_vim_81_py38:$/;"	t
image_vim_git_py35	plugged/ultisnips/Makefile	/^image_vim_git_py35:$/;"	t
image_vim_git_py36	plugged/ultisnips/Makefile	/^image_vim_git_py36:$/;"	t
image_vim_git_py37	plugged/ultisnips/Makefile	/^image_vim_git_py37:$/;"	t
image_vim_git_py38	plugged/ultisnips/Makefile	/^image_vim_git_py38:$/;"	t
impls,trait implementations	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?impl([ \\t\\n]*<[^>]*>)?[ \\t]+(([a-zA-Z0-9_:]+)[ \\t]*(<[^>/;"	k	langdef:Rust
import-fresh	plugged/onedark.vim/build/package-lock.json	/^        "import-fresh": "^3.0.0",$/;"	s	object:dependencies.eslint.requires
import-fresh	plugged/onedark.vim/build/package-lock.json	/^        "import-fresh": "^3.2.1",$/;"	s	object:dependencies.@eslint/eslintrc.requires
import-fresh	plugged/onedark.vim/build/package-lock.json	/^        "import-fresh": "^3.2.1",$/;"	s	object:dependencies.cosmiconfig.requires
import-fresh	plugged/onedark.vim/build/package-lock.json	/^    "import-fresh": {$/;"	o	object:dependencies
import_autocommands	plugged/vim-polyglot/scripts/import_vim	/^def import_autocommands$/;"	f
import_pat	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^import_pat = re.compile(r'^\\s*(from|import)')$/;"	v
imurmurhash	plugged/onedark.vim/build/package-lock.json	/^        "imurmurhash": "^0.1.4",$/;"	s	object:dependencies.eslint.requires
imurmurhash	plugged/onedark.vim/build/package-lock.json	/^    "imurmurhash": {$/;"	o	object:dependencies
include	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*(include|require)[[:space:]]*([a-zA-Z0-9_:]+)\/\\1 \\2\/i,include\/$/;"	k	langdef:puppet
indent	plugged/onedark.vim/build/.eslintrc.json	/^        "indent": [$/;"	a	object:rules
indent	plugged/vim-polyglot/scripts/build	/^def indent(str, amount)$/;"	f	method:copy_file
indentLine	plugged/indentLine/README.md	/^indentLine$/;"	c
indentLine	plugged/indentLine/after/plugin/indentLine.vim	/^augroup indentLine$/;"	a
indent_to_spaces	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
index	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t index;$/;"	m	struct:FeResult	typeref:typename:uint32_t	file:
inflight	plugged/onedark.vim/build/package-lock.json	/^        "inflight": "^1.0.4",$/;"	s	object:dependencies.glob.requires
inflight	plugged/onedark.vim/build/package-lock.json	/^    "inflight": {$/;"	o	object:dependencies
inherits	plugged/onedark.vim/build/package-lock.json	/^        "inherits": "2",$/;"	s	object:dependencies.glob.requires
inherits	plugged/onedark.vim/build/package-lock.json	/^        "inherits": "^2.0.3",$/;"	s	object:dependencies.concat-stream.requires
inherits	plugged/onedark.vim/build/package-lock.json	/^        "inherits": "^2.0.3",$/;"	s	object:dependencies.readable-stream.requires
inherits	plugged/onedark.vim/build/package-lock.json	/^    "inherits": {$/;"	o	object:dependencies
initBuffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def initBuffer(self, content, unit, set_content):$/;"	m	class:LfInstance
initPattern	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^PatternContext* initPattern(const char* pattern, uint16_t pattern_len)$/;"	f	typeref:typename:PatternContext *
initfuzzyEngine	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^PyMODINIT_FUNC initfuzzyEngine(void)$/;"	f	typeref:typename:PyMODINIT_FUNC
initfuzzyMatchC	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^PyMODINIT_FUNC initfuzzyMatchC(void)$/;"	f	typeref:typename:PyMODINIT_FUNC
initialLine	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def initialLine(self):$/;"	m	class:FloatWindow
initialLine	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def initialLine(self):$/;"	m	class:PopupWindow
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
inject_code	plugged/vim-polyglot/scripts/build	/^def inject_code(path, code)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
input	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def input(self, callback):$/;"	m	class:LfCli
input	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def input(self):$/;"	m	class:Manager
input_win	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def input_win(self):$/;"	m	class:LfPopupInstance
input_win	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def input_win(self, input_win):$/;"	m	class:LfPopupInstance
inst	plugged/vim-quickui/test/test_listbox.vim	/^		let inst = quickui#listbox#create(lines, opts)$/;"	v
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
int16_t	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/mystdint.h	/^typedef short              int16_t;$/;"	t	typeref:typename:short
int32_t	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/mystdint.h	/^typedef int                int32_t;$/;"	t	typeref:typename:int
int64_t	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/mystdint.h	/^typedef long long          int64_t;$/;"	t	typeref:typename:long long
int8_t	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/mystdint.h	/^typedef signed char        int8_t;$/;"	t	typeref:typename:signed char
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-7dgDYornHATIWuegkG7a00tkiTc=",$/;"	s	object:dependencies.chalk.dependencies.ansi-styles
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-G33NyzK4E4gBs+R4umpRyqiWSNo=",$/;"	s	object:dependencies.chalk.dependencies.supports-color
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-MH30JUfmzHMk088DwVXVzbjFOIA=",$/;"	s	object:dependencies.esquery.dependencies.estraverse
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-MH30JUfmzHMk088DwVXVzbjFOIA=",$/;"	s	object:dependencies.esrecurse.dependencies.estraverse
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-MOvR73wv3\/AcOk8VEESvJfqwUj4=",$/;"	s	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-MOvR73wv3\/AcOk8VEESvJfqwUj4=",$/;"	s	object:dependencies.espree.dependencies.eslint-visitor-keys
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-ctOmjVmMm9s68q0ehPIdiWq9TeM=",$/;"	s	object:dependencies.chalk.dependencies.color-convert
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-i5+PCM8ay4Q3Vqg5yox+MWjFGZc=",$/;"	s	object:dependencies.string-width.dependencies.ansi-regex
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-jJpTb+tq\/JYr36WxBKUJHBrZwK4=",$/;"	s	object:dependencies.string-width.dependencies.strip-ansi
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-lEdx\/ZyByBJlxNaUGGDaBrtZR5s=",$/;"	s	object:dependencies.chalk.dependencies.has-flag
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-wqCah6y95pVD3m9j+jmVyCbFNqI=",$/;"	s	object:dependencies.chalk.dependencies.color-name
integrity	plugged/onedark.vim/build/package-lock.json	/^          "integrity": "sha1-zUJUFnelQzPPVBpJEIwUMrRMlCQ=",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-+WCIzfJKj6qa6poAny2dlCyZlkY=",$/;"	s	object:dependencies.parse-json
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-0J0fNXtEP0kzgqjrPM0YOHKuYAk=",$/;"	s	object:dependencies.ms
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-0t5eA0JOcH3BDHQGjd7a5wh0Gyc=",$/;"	s	object:dependencies.eslint-utils
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-2Klr13\/Wjfd5OnMDajug1UBdR3s=",$/;"	s	object:dependencies.concat-map
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-2Rzv1i0UNsoPQWIOJRKI1CAJne8=",$/;"	s	object:dependencies.mkdirp
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-3DBDfPZ5R89XYSHr14DxXurHI0g=",$/;"	s	object:dependencies.espree
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-3rxkidem5rDnYRiIzsiAM30xY5Y=",$/;"	s	object:dependencies.prelude-ls
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-4uaaRKyHcveKHsCzW2id9lMO\/I8=",$/;"	s	object:dependencies.supports-color
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-54blmmbLkrP2wfsNUIqrF0hI9Iw=",$/;"	s	object:dependencies.eslint-scope
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-6PvzdNxVb\/iUehDcsFctYz8s+hA=",$/;"	s	object:dependencies.isexe
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-75tE13OVnK5j3ezRIt4jhTtg+NM=",$/;"	s	object:dependencies.cosmiconfig
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-8JkTPfft5CLoHR2ESCcO6z5CYfM=",$/;"	s	object:dependencies.pkg-dir
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-8NIpxQXgxtjEmsVT0bE9wYP2su4=",$/;"	s	object:dependencies.debug
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-9yBpwzBGGgZoTRGThENeEqXXbjw=",$/;"	s	object:dependencies.@eslint/eslintrc
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-9zqFudXUHQRVUcF34ogtSshXKKY=",$/;"	s	object:dependencies.cross-spawn
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-B7ggO\/pwVsBlcFDjzNLDdzC6uPE=",$/;"	s	object:dependencies.type-check
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw="$/;"	s	object:dependencies.sprintf-js
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-CADhRSO5I6OH5BUSPIZWFqrg9cM=",$/;"	s	object:dependencies.write
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-CeJJ696FHTseSNJ8EFREZn8XuD0=",$/;"	s	object:dependencies.type-fest
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-CxVx3XZpzNTz4G4U7x7tJiJa5TI=",$/;"	s	object:dependencies.strip-ansi
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Cy7B1mQk6SGdNZ4mpRxY7FJ48N4=",$/;"	s	object:dependencies.husky
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-D6LGT5MpF8NDOg3tVTY6rjdBa3w="$/;"	s	object:dependencies.inherits
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-De4hahyUGrN+nvsXiPavxf9VN\/w=",$/;"	s	object:dependencies.semver-compare
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-E7BM2z5sXRnfkatph6hpVhmwqnE="$/;"	s	object:dependencies.esprima
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-ECl\/mAMKeGgpaBaQVF72We0dJU4=",$/;"	s	object:dependencies.find-versions
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-EpLRlQDOP4YFOwXw6Ofko7shB54=",$/;"	s	object:dependencies.table
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",$/;"	s	object:dependencies.path-is-absolute
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-FB8zuBp8JJLhJVlDB0gMRmeSeKY=",$/;"	s	object:dependencies.glob
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",$/;"	s	object:dependencies.fs.realpath
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Fo2ho26Q2miujUnA8bSMfGJJITo=",$/;"	s	object:dependencies.@babel/code-frame
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-G2HAViGQqN\/2rjuyzwIAyhMLhtQ=",$/;"	s	object:dependencies.escape-string-regexp
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-GSA\/tZmR35jjoocFDUZHzerzJJk=",$/;"	s	object:dependencies.js-tokens
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-GlaJkTaF5ah2N7jT\/8p1UU7EHWI=",$/;"	s	object:dependencies.compare-versions
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Gvujlq\/WdqbUJQTQpno6frn2KqA=",$/;"	s	object:dependencies.locate-path
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=",$/;"	s	object:dependencies.functional-red-black-tree
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-HADHQ7QzzQpOgHWPe2SldEDZ\/wA=",$/;"	s	object:dependencies.lines-and-columns
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Hq+fqb2x\/dTsdfWPnNtOa3gn7sY="$/;"	s	object:dependencies.safe-buffer
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-IG0K0KVkjP+9uK5GQ489xRyfeOI=",$/;"	s	object:dependencies.regexpp
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-If3I+82ceVzAMh8FY3AglXUVEag=",$/;"	s	object:dependencies.eslint-visitor-keys
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-InZ74htirxCBV0MG9prFG2IgOWE=",$/;"	s	object:dependencies.string-width
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-J6qn0uTKdkUvmNOt0JOnLJQ+3Jc=",$/;"	s	object:dependencies.semver
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Kn\/l3WNKHkElqXXsmU\/1RW3Dc00=",$/;"	s	object:dependencies.enquirer
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-L4u0QUNNFjs1+4\/9zNcTiSf\/uMA=",$/;"	s	object:dependencies.@types/parse-json
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-LSysHSgXTFEKl7N38SKlUHlY40Q=",$/;"	s	object:dependencies.eslint
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-M3u9o63AcGvT4CRCaihtS0sskZg=",$/;"	s	object:dependencies.readable-stream
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-MfEoGzgyYwQ0gxwxDAHMzajL4AY=",$/;"	s	object:dependencies.strip-json-comments
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-MnE7wCj3XAL9txDXx7zsHyxgcO8="$/;"	s	object:dependencies.buffer-from
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-NRNg4Ap0i86aH48nwAw5Sn5OHp8="$/;"	s	object:dependencies.dot
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-O1k63ZRIdgd9TWg\/7gEIG9n\/8x4=",$/;"	s	object:dependencies.yaml
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-OIU59VF5vzkznIGvMKZU1p+Hy3U=",$/;"	s	object:dependencies.ansi-regex
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-OYrT88WiSUi+dyXoPRGn3ijNvR0=",$/;"	s	object:dependencies.estraverse
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-On1WtVnWy8PrUSMlJE5hmmXGxSU=",$/;"	s	object:dependencies.fast-deep-equal
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-PH\/L9SnYcibz0vUrlm\/1Jx60Qd0=",$/;"	s	object:dependencies.brace-expansion
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",$/;"	s	object:dependencies.fast-levenshtein
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-PdM8ZHohT9\/\/2DWTPrCG2g3CHbE=",$/;"	s	object:dependencies.p-limit
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-QUz1r3kKSMYKub5FJ9VtXkETPLE=",$/;"	s	object:dependencies.concat-stream
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-QfuyAkPlCxK+DwS43tvwdSDOhB0=",$/;"	s	object:dependencies.ansi-styles
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-QvEUWUpGzxqOMLCoT1bHjD7awh4=",$/;"	s	object:dependencies.string_decoder
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="$/;"	s	object:dependencies.util-deprecate
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-RXWyHivO50NKqb5mL0t7X5wrUTg=",$/;"	s	object:dependencies.flatted
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",$/;"	s	object:dependencies.inflight
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Sr6\/7tdUHywnrPspvbvRXI1bpPc=",$/;"	s	object:dependencies.natural-compare
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-SrzYUq0y3Xuqv+m0DgCjbbXzkuY=",$/;"	s	object:dependencies.resolve-from
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-ThSHCmGNni7dl92DRf2dncMVZGo=",$/;"	s	object:dependencies.chalk
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-TyNqY3Pa4FZqbUPhMmZ09QwpFJk=",$/;"	s	object:dependencies.optionator
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-UTvb4tO5XXdi6METfvoZXGxhtbM=",$/;"	s	object:dependencies.path-exists
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-UWbihkV\/AzBgZL5Ul+jbsMPTIIM=",$/;"	s	object:dependencies.minimatch
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-WB9q3mWMu6ZaDTOA3ndTKVBU83U=",$/;"	s	object:dependencies.path-key
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",$/;"	s	object:dependencies.once
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-XSltbwS9pEpGMKMBQTvbwuwIXsA=",$/;"	s	object:dependencies.flat-cache
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-YAMom448U\/YIJOx7vAjgM4eK1PY=",$/;"	s	object:dependencies.colr
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-YQY29rH3A4kb00dxzLF\/uTtHB5w=",$/;"	s	object:dependencies.word-wrap
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Z6npZL4xpR4V5QENWObxKDQAL0Y=",$/;"	s	object:dependencies.ci-info
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Z9ZgFLZqaoqqDAg8X9WN9OTpdgI=",$/;"	s	object:dependencies.minimist
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-ZTm+hwwWWtvVJAIg2+Nh8bxNRjQ=",$/;"	s	object:dependencies.slash
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-Zws6+8VS4LVd9rd4DKdGFfI60cs=",$/;"	s	object:dependencies.which-pm-runs
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-\/BKcFgxdaCNVB\/QzGmuq0Ya9vD4=",$/;"	s	object:dependencies.import-fresh
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-\/IZh4Rt6wVOcR9v+oucrOvNNJns=",$/;"	s	object:dependencies.acorn-jsx
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-\/q7SVZc9LndVW4PbwIhRpsY1IPo=",$/;"	s	object:dependencies.acorn
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-aR0nCeeMefrjoVZiJFLQB2LKqqI=",$/;"	s	object:dependencies.parent-module
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-afaofZUTq4u4\/mO9sJecRI5oRmA=",$/;"	s	object:dependencies.json-schema-traverse
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-bIw\/uCfdQ+45GPJ7gngqt2WKb9k=",$/;"	s	object:dependencies.astral-regex
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-bW\/mVw69lqr5D8rR2vo7JWbbOpQ=",$/;"	s	object:dependencies.lru-cache
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",$/;"	s	object:dependencies.is-arrayish
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-dNLrTeC42hKTcRkQ1Qd1ubcQ72Q=",$/;"	s	object:dependencies.esutils
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-dQ49tYYgh7RzfrrIIH\/9HvJ7Jfw=",$/;"	s	object:dependencies.ignore
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-dWfb6fL14kZ7x3q4PEopSCQHpdw=",$/;"	s	object:dependencies.is-glob
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-eg\/\/l49tv6TQBiOPusmO1BmMMlk=",$/;"	s	object:dependencies.opencollective-postinstall
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-eteWTWeauyi+5yzsY3WLHF0smSE=",$/;"	s	object:dependencies.esrecurse
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",$/;"	s	object:dependencies.text-table
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-fEeAWpQxmSjgV3dAXcEuH3pO4C0=",$/;"	s	object:dependencies.json-parse-even-better-errors
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-fGqN0KY2oDJ+ELWckobu6T8\/UbE=",$/;"	s	object:dependencies.which
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-fRvf1ldTU4+r5sOFls23bZrGAUM=",$/;"	s	object:dependencies.@babel/highlight
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-foz42PW48jnBvGi+tOt4Vn1XLvg=",$/;"	s	object:dependencies.progress
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-h0v2nG9ATCtdmcSBNBOZ\/VWJJjM=",$/;"	s	object:dependencies.fast-json-stable-stringify
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-hO0BwKe6OAr+CdkKjBgNzZ0DBDs=",$/;"	s	object:dependencies.path-type
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c="$/;"	s	object:dependencies.typedarray
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",$/;"	s	object:dependencies.balanced-match
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",$/;"	s	object:dependencies.imurmurhash
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-kzoEBShgyF6DwSJHnEdIqOTHIVY=",$/;"	s	object:dependencies.emoji-regex
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-l6\/n1s3AvFkoWEt8jXsW6KmqXRk=",$/;"	s	object:dependencies.find-up
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-lHHvo++RKNL3xqfKOcTda1BVsTI=",$/;"	s	object:dependencies.v8-compile-cache
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-m7knkNnA7\/7GO+c1GeEaNQGaOnI=",$/;"	s	object:dependencies.yallist
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-n9YCvZNilOnp70aj9NaWQESxgGg="$/;"	s	object:dependencies.commander
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=",$/;"	s	object:dependencies.json-stable-stringify-without-jsonify
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-o0KLtwiLOmApL2aRkni3wpetTwc=",$/;"	s	object:dependencies.p-locate
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",$/;"	s	object:dependencies.is-fullwidth-code-point
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-oYgTV2pBsAokqX5\/gVkYwuGZJfg=",$/;"	s	object:dependencies.globals
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-p4x6clHgH2FlEtMbEK3PUq2l4NI=",$/;"	s	object:dependencies.@babel/helper-validator-identifier
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-p6NBcPJqIbsWJCTYray0ETpp5II=",$/;"	s	object:dependencies.js-yaml
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",$/;"	s	object:dependencies.color-name
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=",$/;"	s	object:dependencies.is-extglob
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-qTwsWERTmncCMzeRB7OMe0rJ0zg=",$/;"	s	object:dependencies.semver-regex
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-qnFCYd55PoqCNHp7zJznTobyhgI=",$/;"	s	object:dependencies.uri-js
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-r4BrXpNskz7o40adNkj9NJMkGgM=",$/;"	s	object:dependencies.termcolors
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-rd6+rXKmV023g2OdyHoSF3OXOWE=",$/;"	s	object:dependencies.doctrine
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-rhbxZE2HPsrYQ7AwexQzYtTEIXI=",$/;"	s	object:dependencies.shebang-regex
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-rkViwAdHO5MqYgDUAyaN0v\/8at4=",$/;"	s	object:dependencies.levn
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-rt3T+ZTJM+StmLmdmlVu+g4v6UI=",$/;"	s	object:dependencies.please-upgrade-node
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-s2MKvYlDQy9Us\/BRkjjjPNffL3M=",$/;"	s	object:dependencies.callsites
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",$/;"	s	object:dependencies.deep-is
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-stEE\/g2Psnz54KHNqCYt04M8bKs=",$/;"	s	object:dependencies.rimraf
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-t4tYKKqOIU4p+3TE1bdS4cAz2lc=",$/;"	s	object:dependencies.esquery
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-tEqbYpe8tpjxxRo1RaKzs2jVnFI="$/;"	s	object:dependencies.lodash
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-tKIskyLfojjSqAqpBzbBEnGEG3E="$/;"	s	object:dependencies.colr-convert
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-tKxAZIEH\/c3PriQvQovqihTU8b8=",$/;"	s	object:dependencies.error-ex
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",$/;"	s	object:dependencies.wrappy
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-tYsBCsQMIsVldhbI0sLALHv0eew=",$/;"	s	object:dependencies.punycode
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",$/;"	s	object:dependencies.has-flag
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-tsHvQXxOVmPqSY8cRa+saRa7wik=",$/;"	s	object:dependencies.glob-parent
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-u3GFBpDh8TZWfeYp0tVHHe2kweg=",$/;"	s	object:dependencies.color-convert
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-uvWmLoArB9l3A0WG+MO69a3ybfQ=",$/;"	s	object:dependencies.ajv
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-vNZ5HqWuCXJeF+WtmIE0zUCz2RE=",$/;"	s	object:dependencies.argparse
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-y7muJWv3UK8eqzRPIpqif+lLo0g=",$/;"	s	object:dependencies.ansi-colors
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-yg9u+m3T1WEzP7FFFQZcL6\/fQ5w=",$/;"	s	object:dependencies.file-entry-cache
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-ys12k0YaY3pXiNkqfdT7oGjoFjY=",$/;"	s	object:dependencies.slice-ansi
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-yyhoVA4xPWHeWPr741zpAE1VQOY=",$/;"	s	object:dependencies.p-try
integrity	plugged/onedark.vim/build/package-lock.json	/^      "integrity": "sha1-zNCvT4g1+9wmW4JGGq8MNmY\/NOo=",$/;"	s	object:dependencies.shebang-command
interfaces	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*interface[ \\t]+([a-zA-Z0-9_]+)\/\\2\/i,interfaces\/$/;"	k	langdef:typescript
invalid_near	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^    def invalid_near(self, s, pos, reason):$/;"	m	class:Parser
is-arrayish	plugged/onedark.vim/build/package-lock.json	/^        "is-arrayish": "^0.2.1"$/;"	s	object:dependencies.error-ex.requires
is-arrayish	plugged/onedark.vim/build/package-lock.json	/^    "is-arrayish": {$/;"	o	object:dependencies
is-extglob	plugged/onedark.vim/build/package-lock.json	/^        "is-extglob": "^2.1.1"$/;"	s	object:dependencies.is-glob.requires
is-extglob	plugged/onedark.vim/build/package-lock.json	/^    "is-extglob": {$/;"	o	object:dependencies
is-fullwidth-code-point	plugged/onedark.vim/build/package-lock.json	/^        "is-fullwidth-code-point": "^2.0.0"$/;"	s	object:dependencies.slice-ansi.requires
is-fullwidth-code-point	plugged/onedark.vim/build/package-lock.json	/^        "is-fullwidth-code-point": "^2.0.0",$/;"	s	object:dependencies.string-width.requires
is-fullwidth-code-point	plugged/onedark.vim/build/package-lock.json	/^    "is-fullwidth-code-point": {$/;"	o	object:dependencies
is-glob	plugged/onedark.vim/build/package-lock.json	/^        "is-glob": "^4.0.0",$/;"	s	object:dependencies.eslint.requires
is-glob	plugged/onedark.vim/build/package-lock.json	/^        "is-glob": "^4.0.1"$/;"	s	object:dependencies.glob-parent.requires
is-glob	plugged/onedark.vim/build/package-lock.json	/^    "is-glob": {$/;"	o	object:dependencies
isAndMode	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def isAndMode(self):$/;"	m	class:LfCli
isAscii	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def isAscii(str):$/;"	f
isFullPath	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def isFullPath(self):$/;"	m	class:LfCli
isFuzzy	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def isFuzzy(self):$/;"	m	class:LfCli
isLastReverseOrder	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def isLastReverseOrder(self):$/;"	m	class:LfInstance
isPrefix	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def isPrefix(self): #assume that there are no \\%23l, \\%23c, \\%23v, \\%...$/;"	m	class:LfCli
isRefinement	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def isRefinement(self):$/;"	m	class:LfCli
isReverseOrder	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def isReverseOrder(self):$/;"	m	class:LfInstance
is_bash	plugged/vim-polyglot/syntax/initng.vim	/^let is_bash = 1$/;"	v
is_bash	plugged/vim-polyglot/syntax/upstart.vim	/^let is_bash = 1$/;"	v
is_buffer_changed_outside	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def is_buffer_changed_outside(self):$/;"	m	class:VimBufferProxy
is_complete_edit	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
is_focused	plugged/ultisnips/test/vim_interface.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_fuzzyEngine_C	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    is_fuzzyEngine_C = True$/;"	v
is_fuzzyEngine_C	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^is_fuzzyEngine_C = False$/;"	v
is_fuzzyMatch_C	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    is_fuzzyMatch_C = True$/;"	v
is_fuzzyMatch_C	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^is_fuzzyMatch_C = False$/;"	v
is_killed	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_kw_typing	plugged/ncm2/pythonx/ncm2_core.py	/^    def is_kw_typing(self, data, sr, ctx1, ctx2):$/;"	m	class:Ncm2Core
is_lower	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    uint8_t is_lower;$/;"	m	struct:PatternContext	typeref:typename:uint8_t
is_name_only	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^            uint8_t         is_name_only;$/;"	m	struct:FuzzyEngine::__anon07ea32bd030a::__anon07ea32bd0408	typeref:typename:uint8_t	file:
is_process_running	plugged/ultisnips/test/vim_interface.py	/^def is_process_running(pid):$/;"	f
is_py3	plugged/vim-translator/script/translator.py	/^    is_py3 = False$/;"	v
is_set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
isexe	plugged/onedark.vim/build/package-lock.json	/^        "isexe": "^2.0.0"$/;"	s	object:dependencies.which.requires
isexe	plugged/onedark.vim/build/package-lock.json	/^    "isexe": {$/;"	o	object:dependencies
item	plugged/vim-quickui/autoload/quickui/context.vim	/^		let item = quickui#utils#item_parse("你好吗f&aha\\tAlt+x")	$/;"	v
itermTemplate	plugged/onedark.vim/build/build.js	/^	let alacrittyTemplate, itermTemplate, kittyTemplate, terminalAppTemplate$/;"	v
j	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> j             j:exec g:Lf_py "bufTagExplManager._previewResult(Fa/;"	m
j	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> j             j:exec g:Lf_py "colorschemeExplManager._previewResu/;"	m
j	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> j             j:exec g:Lf_py "fileExplManager._previewResult(Fals/;"	m
j	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> j             j:exec g:Lf_py "functionExplManager._previewResult(/;"	m
j	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> j             j:exec g:Lf_py "gtagsExplManager._previewResult(Fal/;"	m
j	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> j             j:exec g:Lf_py "lineExplManager._previewResult(Fals/;"	m
j	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> j             j:exec g:Lf_py "mruExplManager._previewResult(False/;"	m
j	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> j             j:exec g:Lf_py "rgExplManager._previewResult(False)/;"	m
j	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> j             j:exec g:Lf_py "tagExplManager._previewResult(False/;"	m
java_highlight_all	plugged/vim-polyglot/syntax/java.vim	/^  let java_highlight_all=1$/;"	v
java_minlines	plugged/vim-polyglot/syntax/java.vim	/^  let java_minlines = 10$/;"	v
join_left	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^        def join_left(self, iterable):$/;"	m	class:AsyncExecutor.Result
jproperties_lines	plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_lines = 256$/;"	v
jproperties_show_messages	plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_show_messages = 0$/;"	v
jproperties_strict_syntax	plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_strict_syntax = 0$/;"	v
js-tokens	plugged/onedark.vim/build/package-lock.json	/^        "js-tokens": "^4.0.0"$/;"	s	object:dependencies.@babel/highlight.requires
js-tokens	plugged/onedark.vim/build/package-lock.json	/^    "js-tokens": {$/;"	o	object:dependencies
js-yaml	plugged/onedark.vim/build/package-lock.json	/^        "js-yaml": "^3.13.1",$/;"	s	object:dependencies.@eslint/eslintrc.requires
js-yaml	plugged/onedark.vim/build/package-lock.json	/^        "js-yaml": "^3.13.1",$/;"	s	object:dependencies.eslint.requires
js-yaml	plugged/onedark.vim/build/package-lock.json	/^        "js-yaml": "^3.13.1",$/;"	s	object:dependencies.termcolors.requires
js-yaml	plugged/onedark.vim/build/package-lock.json	/^    "js-yaml": {$/;"	o	object:dependencies
json-parse-even-better-errors	plugged/onedark.vim/build/package-lock.json	/^        "json-parse-even-better-errors": "^2.3.0",$/;"	s	object:dependencies.parse-json.requires
json-parse-even-better-errors	plugged/onedark.vim/build/package-lock.json	/^    "json-parse-even-better-errors": {$/;"	o	object:dependencies
json-schema-traverse	plugged/onedark.vim/build/package-lock.json	/^        "json-schema-traverse": "^0.4.1",$/;"	s	object:dependencies.ajv.requires
json-schema-traverse	plugged/onedark.vim/build/package-lock.json	/^    "json-schema-traverse": {$/;"	o	object:dependencies
json-stable-stringify-without-jsonify	plugged/onedark.vim/build/package-lock.json	/^        "json-stable-stringify-without-jsonify": "^1.0.1",$/;"	s	object:dependencies.eslint.requires
json-stable-stringify-without-jsonify	plugged/onedark.vim/build/package-lock.json	/^    "json-stable-stringify-without-jsonify": {$/;"	o	object:dependencies
jsonnet#CheckBinPath	plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#CheckBinPath(binName)$/;"	f
jsonnet#Format	plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#Format()$/;"	f
jsonnet#System	plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#System(str, ...)$/;"	f
jsx_comment	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^augroup jsx_comment$/;"	a
jsx_comment	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^augroup jsx_comment$/;"	a
jsx_pretty#comment#update_commentstring	plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! jsx_pretty#comment#update_commentstring(original)$/;"	f
jsx_pretty#indent#get	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function! jsx_pretty#indent#get(js_indent)$/;"	f
julia#doc#complete	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
julia#doc#keywordprg	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#keywordprg(word) abort$/;"	f
julia#doc#lookup	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#lookup(keyword, ...) abort$/;"	f
julia#doc#open	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#open(keyword) abort$/;"	f
julia#doc#prompt	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#prompt() abort$/;"	f
julia#function_assign2block	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_assign2block()$/;"	f
julia#function_block2assign	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_block2assign()$/;"	f
julia#gotodefinition	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#gotodefinition()$/;"	f
julia#idundercursor	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#idundercursor()$/;"	f
julia#set_syntax_version	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#set_syntax_version(jvers)$/;"	f
julia#toggle_deprecated_syntax	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_deprecated_syntax()$/;"	f
julia#toggle_function_blockassign	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_function_blockassign()$/;"	f
julia_blocks#init_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#init_mappings()$/;"	f
julia_blocks#move_N	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_N()$/;"	f
julia_blocks#move_P	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_P()$/;"	f
julia_blocks#move_n	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_n()$/;"	f
julia_blocks#move_p	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_p()$/;"	f
julia_blocks#moveblock_N	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_N()$/;"	f
julia_blocks#moveblock_P	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_P()$/;"	f
julia_blocks#moveblock_n	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_n()$/;"	f
julia_blocks#moveblock_p	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_p()$/;"	f
julia_blocks#owrapper_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_move(oper, function, toend, backwards)$/;"	f
julia_blocks#owrapper_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_select(oper, function) ", toend, backwards)$/;"	f
julia_blocks#remove_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#remove_mappings()$/;"	f
julia_blocks#select_a	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_a(...)$/;"	f
julia_blocks#select_i	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_i()$/;"	f
julia_blocks#select_reset	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function julia_blocks#select_reset()$/;"	f
julia_blocks#vwrapper_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_move(function)$/;"	f
julia_blocks#vwrapper_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_select(function)$/;"	f
julia_blocks#whereami	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#whereami()$/;"	f
julia_latex_symbols#get_dict	plugged/vim-polyglot/autoload/julia_latex_symbols.vim	/^function! julia_latex_symbols#get_dict()$/;"	f
jump_backwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_forwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
k	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> k             k:exec g:Lf_py "bufTagExplManager._previewResult(Fa/;"	m
k	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> k             k:exec g:Lf_py "colorschemeExplManager._previewResu/;"	m
k	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> k             k:exec g:Lf_py "fileExplManager._previewResult(Fals/;"	m
k	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> k             k:exec g:Lf_py "functionExplManager._previewResult(/;"	m
k	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> k             k:exec g:Lf_py "gtagsExplManager._previewResult(Fal/;"	m
k	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> k             k:exec g:Lf_py "lineExplManager._previewResult(Fals/;"	m
k	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> k             k:exec g:Lf_py "mruExplManager._previewResult(False/;"	m
k	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> k             k:exec g:Lf_py "rgExplManager._previewResult(False)/;"	m
k	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> k             k:exec g:Lf_py "tagExplManager._previewResult(False/;"	m
key	plugged/ncm2/pythonx/ncm2_sorter/abbrfuzzy.py	/^    def key(e):$/;"	f	function:Sorter	file:
key	plugged/vim-polyglot/ftplugin/markdown.vim	/^        let key = matchstr(s:filetype, "[^=]*")$/;"	v
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = " " + EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "123 abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_Trigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc " + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_NoTrigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_Trigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "blah blah abc" + EA$/;"	v	class:Anon_Trigger_Opts
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
keys	plugged/ultisnips/test/test_Autocommands.py	/^    keys = ($/;"	v	class:Autocommands
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a\\na"$/;"	v	class:Autotrigger_CanMatchContext
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "if" + EX + "=" + ESC + "o="$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:TrimSpacesAtEndOfLines
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "oouu trig b" + 2 * ARR_L + EX$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hüüll"$/;"	v	class:Snippet_With_Umlauts_Python
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text" + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + "more text" + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_DoubleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_SingleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_Umlauts_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_JustNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_StartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "z" + JF + "y"$/;"	v	class:MultiLineDefault_Type
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:LeaveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:RemoveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "y"$/;"	v	class:MultiLineDefault_BS
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + JF + "y"$/;"	v	class:MultiLineDefault_Jump
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "teüst" + EX$/;"	v	class:Snippet_With_Umlauts
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "ööuu trig b" + 2 * ARR_L + EX$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 "$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_With_Mirror
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + "1"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + JF + "input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_CanTakeNonAsciiCharacters
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillBeExpandedToInlineSelection
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = ($/;"	v	class:Completion_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "com" + COMPL_KW + JF + "foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "foo" + JF + "com" + COMPL_KW + JB + "foo"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_UseContext
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX + " " + "e" + EX$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_CursorIsZeroBased
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportError
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "i" + EX$/;"	v	class:ContextSnippets_PriorityKeyword
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_ContextHasAccessToVisual
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_SnippetPriority
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "first line\\n\\n\\n\\n\\n\\nthird line" + ESC + "3k0itest" + EX + ESC + "u6j"$/;"	v	class:Undo_RemoveWholeSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "hello test" + EX + "upsi" + ESC + "hh" + "iabcdef" + ESC + "u"$/;"	v	class:Undo_RemoveEditInTabstop
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + "feh" + ESC + "uuuu"$/;"	v	class:Undo_CompletelyUndoSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + ESC + "u"$/;"	v	class:Undo_ChangesInPlaceholder
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "u"$/;"	v	class:Undo_RemoveOneSnippetByTime
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "uu"$/;"	v	class:Undo_RemoveOneSnippetByTime2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_NotZero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_Zero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a b c" + JF + "shallnot"$/;"	v	class:JumpForward_DefSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + "test" + EX + ESC + "u" + JF$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + BS + JF + "Int" + JF + "body"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "aaaaa" + JF + BS + JF + "3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "Vkx" + "i\\nworld\\n"$/;"	v	class:DeleteSnippetInsertion0
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "ddi" + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "j2dd"$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:DeleteSnippetInsertion1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:Undo_RemoveMultilineSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddi" + JB + "hello"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddkji" + JB + "hello" + JF + "world"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX + "Huiui!"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nhallo" + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + BS + ESC + "o" + ESC + "P"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "na du hallo" + EX + "and again\\b\\b\\b\\b\\bblub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "  test" + EX + "hello" + JF + "world" + JF + "blub"$/;"	v	class:Bug1251994
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "\\t\\t\\tpd" + EX + "2"$/;"	v	class:VirtualEdit
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "test" + EX + "foo"$/;"	v	class:ShiftWidthZero
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "yank" + ESC + "by4lea test" + EX + "HELLO" + JF + JF + ESC + "p"$/;"	v	class:RetainsTheUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:NonUnicodeDataInUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi" + ESC + "jdd"$/;"	v	class:Fold_DeleteMiddleLine_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi"$/;"	v	class:FoldOverwrite_Simple_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + "Ball"$/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + JF + "sub junk {}"$/;"	v	class:PerlSyntaxFold
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "Hui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "\\n" + "blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "blah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "cstdl"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "foo"$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX + "m1" + EX + "\\nHallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longer text that should wrap"$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longersnippet that should wrap properly"$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:PythonCodeOld_IndentedMultiline
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:PythonCode_MultilineIndented
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = " " * 8 + "test" + EX  # < 8 works.$/;"	v	class:PythonCode_IndentProblem
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """    test""" + EX$/;"	v	class:PythonCode_IndentEtSwOffset
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """   test""" + EX$/;"	v	class:PythonCode_IndentEtSw
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """   test""" + EX$/;"	v	class:PythonCode_IndentNoetSwTs
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX + "ups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX + "ups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_Locals
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_OptExists
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = """test""" + EX$/;"	v	class:PythonCode_OptNoExists
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "abc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_TextInNextLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_WithUmlauts
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "blah" + ", bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCode_ReferencePlaceholder
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "overwrite" + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + ESC$/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + JF + JF + JF$/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_ShebangPython
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "okay"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_MultiAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_UseNewOverOld
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:Python_SnipRvCanBeNonText
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "ups test" + EX$/;"	v	class:PythonCode_TrickyReferences
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_MultiAppendShift
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_MultiAppendShiftMethods
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_MultiAppendSimpleIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_ResetIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v	class:PythonCode_SimpleMkline
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = " " + LS + "3\\n"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "" + LS + "3\\n"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo qualle" + LS + "Hi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "1\\n"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "} " + LS + "3\\n"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "elt"$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi\\b\\bAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\b"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\bhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + JF + "end"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + BS + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "ups test blah" + ESC + "02f i" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "<trh" + EX + "blah" + JF + BS + BS + JF + "end"$/;"	v	class:CursorMovement_BS_InEditMode
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 3 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 4 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 7 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NoExiting_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + ARR_R + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + JF + "hallo"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "text" + 3 * ARR_U + 6 * ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this is something\\nvery nice\\nnot" + JF + "more text"$/;"	v	class:CursorMovement_Multiline_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this" + 2 * ARR_L + "hallo\\nwelt"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + " " + ESC + ESC + "ahi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "0\\n" + "hi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "1\\n"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "2\\n"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "5\\n"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + ESC + "hi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX + "\\nac" + EX$/;"	v	class:ParseSnippets_Global_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX$/;"	v	class:ParseSnippets_Global_Local_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "abc def" + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "foo" + EX + " bar" + EX + "\\nbar" + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "inv snip" + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snip test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snippet test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test test test" + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktrace
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearOne
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	plugged/ultisnips/test/test_Plugin.py	/^    keys = ($/;"	v	class:Plugin_SuperTab_SimpleTest
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "form_for user, namespace: some_namespace, html: {i" + EX + "i" + EX$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    hallo m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hello m" + EX + "world m" + EX + "end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "again" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "m1" + EX + "CD" + JF + "DE" + JF + "AB"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "a" + 4 * ARR_L + JF + "hallo" + JF + "world"$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + "ups" + JF + "end"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + JF + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + JF + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi" + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "m" + EX + "a" + 6 * ARR_L + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + " m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + JF + "m1" + EX + "hi" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + JF + JF + BS + "m" + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v	class:OldSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "Hello"$/;"	v	class:_SelectModeMappings
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:OldSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "v" + EX$/;"	v	class:snipMate_Visual_Simple
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "def" + EX$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "for" + EX + "blub" + JF + "j" + JF + "hi"$/;"	v	class:snipMate_TestMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "2\\n"$/;"	v	class:snipMate_MultiMatches
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "\\nhello1" + EX + "\\nhello2" + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + ESC + ":set ft=blubi\\nohello" + EX$/;"	v	class:snipMate_OtherFiletype
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_Disabled
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_SimpleSnippet
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_SimpleSnippetSubDirectory
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + "not" + JF + "ende"$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + JF + "ende"$/;"	v	class:snipMate_TestMirrorsInPlaceholders
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v	class:snipMate_TestNoBraceTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + JF + "hi"$/;"	v	class:snipMate_NoNestedTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v	class:snipMate_EmptyLinesContinueSnippets
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v	class:snipMate_Interpolation
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v	class:snipMate_InterpolationWithSystem
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = ESC + ":set fo=r\\n" + "i\/*" + EX + "1\\n2"$/;"	v	class:snipMate_Issue658
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = ESC + ":set ft=a\\n" + "itest1" + EX$/;"	v	class:snipMate_Extends
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "[]" + ARR_L + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\n3" + ARR_U + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x" + JF + "y" + JF + JF + "z"$/;"	v	class:SnippetActions_CanModifyParentBody
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x"$/;"	v	class:SnippetActions_EnsureIndent
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "x" + JF + "y"$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX + "123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PostActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PreActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "blah" + JF + "n" + EX + JF + "pass"$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "p" + EX + JF + "z"$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + " or 4" + JF + "5"$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + "4"$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3"$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_MoveVisual
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_UseCorrectJumpActions
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test it" + EX + "1\\n"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX + "1\\n"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " ." + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "$test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "-test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "." + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "[[test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\t\\thi" + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\ttest" + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a(test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test " + EX$/;"	v	class:SnippetOptions_Regex_WithSpace
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test me" + EX$/;"	v	class:MultiWordSnippet_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test abc" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test test" + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "ßßtest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test me" + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX + "1\\n\\n" + "test" + EX + "2\\n"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test1" + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ($/;"	v	class:SnippetPriorities_ClearedByChild
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ESC + ":set ft=c\\n" + "itest" + EX$/;"	v	class:SnippetPriorities_ClearedByParent
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX + "test"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Test" + JF + "Hi" + JF + JF + "du"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "haselnut" + 2 * ARR_L + "hips" + JF + "end"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "ship"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + " blah" + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World" + JF$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "[ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "blub" + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hello" + JF + "world"$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hi"$/;"	v	class:TabStop_EscapingCharsDollars
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Nothing"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Blah"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "\\n" + JF + "t"$/;"	v	class:TabStop_CROnlyOnSelectedNear
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End" + JB + "yes" + JF + "Begin" + JF + "Hi"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JB + JB + "Blah" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "b"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\b\\b"$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\bmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "HALLO"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "SomE tExt "$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "TEST"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a b  c d e f ghhh h oha"$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some more text"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice,   building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "ab"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "b some"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "dead parrot"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "foo boo aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hi" + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF + "overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CINewlines_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CITabstop_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, halul"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + "hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + JF + "hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test\\ntest\\ntest" + ESC + "V2k" + EX + "test" + EX$/;"	v	class:Transformation_OptionMultiline_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = ($/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Opt
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Simple
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "te'=(UltiSnips#SnippetsInCurrentScope()[{}]".format(akey) + ")\\n"$/;"	v	class:VerifyVimDict3
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi;" + JF + "hi2" + JF + "hi3" + JF + "hi4" + ESC + ";Hello"$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'te"=(UltiSnips#SnippetsInCurrentScope()[{}]'.format(akey) + ")\\n"$/;"	v	class:VerifyVimDict2
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:AddNewSnippetSource
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "    hello\\n    nice\\n\\tworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "\\tblablub" + ESC + "5hv3l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "bla blub\\n  helloi" + ESC + "0k4lvjll" + EX + "test" + EX$/;"	v	class:Visual_CrossOneLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0lv4l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + ESC + "o"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "\\ntest" + EX$/;"	v	class:Visual_ExpandTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + JF + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "super" + JF + "done"$/;"	v	class:Visual_LineSelect_WithTabStop
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "ups" + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "abc"$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordExclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordInclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_LineSelect_DedentLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	plugged/ultisnips/test/vim_test_case.py	/^    keys = ""$/;"	v	class:VimTestCase
keyword_spacing	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def keyword_spacing(snip):$/;"	f
killProcess	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^    def killProcess(self):$/;"	m	class:AsyncExecutor
kittyTemplate	plugged/onedark.vim/build/build.js	/^	let alacrittyTemplate, itermTemplate, kittyTemplate, terminalAppTemplate$/;"	v
labels: "feature request"	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/feature_request.md	/^labels: "feature request"$/;"	s
labels: "feature request"	plugged/nerdtree/.github/ISSUE_TEMPLATE/feature_request.md	/^labels: "feature request"$/;"	s
labels: "general question"	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/question.md	/^labels: "general question"$/;"	s
labels: "general question"	plugged/nerdtree/.github/ISSUE_TEMPLATE/question.md	/^labels: "general question"$/;"	s
labels: bug	plugged/nerdtree-git-plugin/.github/ISSUE_TEMPLATE/bug.md	/^labels: bug$/;"	s
labels: bug	plugged/nerdtree/.github/ISSUE_TEMPLATE/bug.md	/^labels: bug$/;"	s
landmark_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let landmark_role = [$/;"	v
landmark_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main'/;"	v
lang_tag	plugged/vim-polyglot/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
langonly	plugged/vim-polyglot/extras/menu.vim	/^	let langonly = substitute(s:lang, '_.*', "", "")$/;"	v
launch	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterface
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterfaceTmuxNeovim
lazy_check_context	plugged/ncm2/pythonx/ncm2.py	/^    def lazy_check_context(self, context):$/;"	m	class:Ncm2Source
lccol2pos	plugged/ncm2/pythonx/ncm2.py	/^    def lccol2pos(self, lnum, ccol, src):$/;"	m	class:Ncm2Base
leaderf#Any#Maps	plugged/LeaderF/autoload/leaderf/Any.vim	/^function! leaderf#Any#Maps(category)$/;"	f
leaderf#Any#parseArguments	plugged/LeaderF/autoload/leaderf/Any.vim	/^function! leaderf#Any#parseArguments(argLead, cmdline, cursorPos) abort$/;"	f
leaderf#Any#start	plugged/LeaderF/autoload/leaderf/Any.vim	/^function! leaderf#Any#start(bang, args) abort$/;"	f
leaderf#BufTag#Maps	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^function! leaderf#BufTag#Maps()$/;"	f
leaderf#BufTag#TimerCallback	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^function! leaderf#BufTag#TimerCallback(id)$/;"	f
leaderf#BufTag#cleanup	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^function! leaderf#BufTag#cleanup()$/;"	f
leaderf#BufTag#removeCache	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^function! leaderf#BufTag#removeCache(bufNum)$/;"	f
leaderf#Buffer#Maps	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^function! leaderf#Buffer#Maps()$/;"	f
leaderf#Buffer#NormalModeFilter	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^function! leaderf#Buffer#NormalModeFilter(winid, key) abort$/;"	f
leaderf#Cmd_History#NormalModeFilter	plugged/LeaderF/autoload/leaderf/Cmd_History.vim	/^function! leaderf#Cmd_History#NormalModeFilter(winid, key) abort$/;"	f
leaderf#Colors#Maps	plugged/LeaderF/autoload/leaderf/Colors.vim	/^function! leaderf#Colors#Maps()$/;"	f
leaderf#Command#Maps	plugged/LeaderF/autoload/leaderf/Command.vim	/^function! leaderf#Command#Maps()$/;"	f
leaderf#Command#NormalModeFilter	plugged/LeaderF/autoload/leaderf/Command.vim	/^function! leaderf#Command#NormalModeFilter(winid, key) abort$/;"	f
leaderf#File#Maps	plugged/LeaderF/autoload/leaderf/File.vim	/^function! leaderf#File#Maps()$/;"	f
leaderf#File#NormalModeFilter	plugged/LeaderF/autoload/leaderf/File.vim	/^function! leaderf#File#NormalModeFilter(winid, key) abort$/;"	f
leaderf#File#TimerCallback	plugged/LeaderF/autoload/leaderf/File.vim	/^function! leaderf#File#TimerCallback(id)$/;"	f
leaderf#File#cleanup	plugged/LeaderF/autoload/leaderf/File.vim	/^function! leaderf#File#cleanup()$/;"	f
leaderf#Filetype#Maps	plugged/LeaderF/autoload/leaderf/Filetype.vim	/^function! leaderf#Filetype#Maps()$/;"	f
leaderf#Function#Maps	plugged/LeaderF/autoload/leaderf/Function.vim	/^function! leaderf#Function#Maps()$/;"	f
leaderf#Function#TimerCallback	plugged/LeaderF/autoload/leaderf/Function.vim	/^function! leaderf#Function#TimerCallback(id)$/;"	f
leaderf#Function#cleanup	plugged/LeaderF/autoload/leaderf/Function.vim	/^function! leaderf#Function#cleanup()$/;"	f
leaderf#Function#removeCache	plugged/LeaderF/autoload/leaderf/Function.vim	/^function! leaderf#Function#removeCache(bufNum)$/;"	f
leaderf#Gtags#Maps	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^function! leaderf#Gtags#Maps()$/;"	f
leaderf#Gtags#NormalModeFilter	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^function! leaderf#Gtags#NormalModeFilter(winid, key) abort$/;"	f
leaderf#Gtags#TimerCallback	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^function! leaderf#Gtags#TimerCallback(id)$/;"	f
leaderf#Gtags#cleanup	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^function! leaderf#Gtags#cleanup()$/;"	f
leaderf#Gtags#getPattern	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^function! leaderf#Gtags#getPattern(type)$/;"	f
leaderf#Gtags#startCmdline	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^function! leaderf#Gtags#startCmdline(type, is_bang, param)$/;"	f
leaderf#Gtags#startExpl	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^function! leaderf#Gtags#startExpl(win_pos, ...)$/;"	f
leaderf#Gtags#updateGtags	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^function! leaderf#Gtags#updateGtags(filename, single_update)$/;"	f
leaderf#Gtags#visual	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^function! leaderf#Gtags#visual()$/;"	f
leaderf#Help#Maps	plugged/LeaderF/autoload/leaderf/Help.vim	/^function! leaderf#Help#Maps()$/;"	f
leaderf#History#Maps	plugged/LeaderF/autoload/leaderf/History.vim	/^function! leaderf#History#Maps()$/;"	f
leaderf#History#NormalModeFilter	plugged/LeaderF/autoload/leaderf/History.vim	/^function! leaderf#History#NormalModeFilter(winid, key) abort$/;"	f
leaderf#LfPy	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#LfPy(cmd) abort$/;"	f
leaderf#Line#Maps	plugged/LeaderF/autoload/leaderf/Line.vim	/^function! leaderf#Line#Maps()$/;"	f
leaderf#Line#NormalModeFilter	plugged/LeaderF/autoload/leaderf/Line.vim	/^function! leaderf#Line#NormalModeFilter(winid, key) abort$/;"	f
leaderf#Mru#Maps	plugged/LeaderF/autoload/leaderf/Mru.vim	/^function! leaderf#Mru#Maps()$/;"	f
leaderf#Mru#NormalModeFilter	plugged/LeaderF/autoload/leaderf/Mru.vim	/^function! leaderf#Mru#NormalModeFilter(winid, key) abort$/;"	f
leaderf#NormalModeFilter	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#NormalModeFilter(id, winid, key) abort$/;"	f
leaderf#PopupClosed	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#PopupClosed(id_list, manager_id, winid, result) abort$/;"	f
leaderf#PopupFilter	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#PopupFilter(winid, key) abort$/;"	f
leaderf#QfLocList#Maps	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^function! leaderf#QfLocList#Maps()$/;"	f
leaderf#QfLocList#NormalModeFilter	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^function! leaderf#QfLocList#NormalModeFilter(winid, key) abort$/;"	f
leaderf#ResetFloatwinOptions	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#ResetFloatwinOptions(winid, option, value) abort$/;"	f
leaderf#ResetPopupOptions	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#ResetPopupOptions(winid, option, value) abort$/;"	f
leaderf#Rg#ApplyChanges	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#ApplyChanges()$/;"	f
leaderf#Rg#ApplyChangesAndSave	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#ApplyChangesAndSave(save)$/;"	f
leaderf#Rg#Interactive	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#Interactive()$/;"	f
leaderf#Rg#Maps	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#Maps(heading)$/;"	f
leaderf#Rg#NormalModeFilter	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#NormalModeFilter(winid, key) abort$/;"	f
leaderf#Rg#Quit	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#Quit()$/;"	f
leaderf#Rg#SaveCurrentBuffer	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#SaveCurrentBuffer(buf_number_dict)$/;"	f
leaderf#Rg#TimerCallback	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#TimerCallback(id)$/;"	f
leaderf#Rg#Undo	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#Undo(buf_number_dict)$/;"	f
leaderf#Rg#UndoLastChange	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#UndoLastChange()$/;"	f
leaderf#Rg#getPattern	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#getPattern(type)$/;"	f
leaderf#Rg#getTypeByFileName	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#getTypeByFileName(fname) abort$/;"	f
leaderf#Rg#startCmdline	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#startCmdline(type, is_bang, is_regex, is_whole_word)$/;"	f
leaderf#Rg#visual	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! leaderf#Rg#visual()$/;"	f
leaderf#Search_History#NormalModeFilter	plugged/LeaderF/autoload/leaderf/Search_History.vim	/^function! leaderf#Search_History#NormalModeFilter(winid, key) abort$/;"	f
leaderf#Self#Maps	plugged/LeaderF/autoload/leaderf/Self.vim	/^function! leaderf#Self#Maps()$/;"	f
leaderf#Tag#Maps	plugged/LeaderF/autoload/leaderf/Tag.vim	/^function! leaderf#Tag#Maps()$/;"	f
leaderf#Window#Maps	plugged/LeaderF/autoload/leaderf/Window.vim	/^function! leaderf#Window#Maps()$/;"	f
leaderf#Window#NormalModeFilter	plugged/LeaderF/autoload/leaderf/Window.vim	/^function! leaderf#Window#NormalModeFilter(winid, key) abort$/;"	f
leaderf#closeAllFloatwin	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#closeAllFloatwin(input_win_id, content_win_id, statusline_win_id, show_statusl/;"	f
leaderf#colorscheme#highlight	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^function! leaderf#colorscheme#highlight(category, bufnr)$/;"	f
leaderf#colorscheme#highlightBlank	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^function! leaderf#colorscheme#highlightBlank(category, bufnr)$/;"	f
leaderf#colorscheme#highlightMode	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^function! leaderf#colorscheme#highlightMode(category, mode)$/;"	f
leaderf#colorscheme#mergePalette	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^function! leaderf#colorscheme#mergePalette(palette)$/;"	f
leaderf#colorscheme#popup#hiMatchMode	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^function! leaderf#colorscheme#popup#hiMatchMode(category, mode) abort$/;"	f
leaderf#colorscheme#popup#hiMode	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^function! leaderf#colorscheme#popup#hiMode(category, mode) abort$/;"	f
leaderf#colorscheme#popup#link_no_reverse	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^function! leaderf#colorscheme#popup#link_no_reverse(from, to) abort$/;"	f
leaderf#colorscheme#popup#load	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^function! leaderf#colorscheme#popup#load(category, name)$/;"	f
leaderf#colorscheme#setStatusline	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^function! leaderf#colorscheme#setStatusline(bufnr, stl)$/;"	f
leaderf#highlightDevIcons	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#highlightDevIcons() abort$/;"	f
leaderf#matchaddpos	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#matchaddpos(group, pos) abort$/;"	f
leaderf#normalModePreviewFilter	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#normalModePreviewFilter(id, winid, key) abort$/;"	f
leaderf#popupModePreviewFilter	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#popupModePreviewFilter(winid, key) abort$/;"	f
leaderf#setAmbiwidth	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#setAmbiwidth(val) abort$/;"	f
leaderf#versionCheck	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#versionCheck()$/;"	f
leaderf#visual	plugged/LeaderF/autoload/leaderf.vim	/^function! leaderf#visual() abort$/;"	f
leave_with_wait	plugged/ultisnips/test/vim_interface.py	/^    def leave_with_wait(self):$/;"	m	class:VimInterface
ledger#align_amount_at_cursor	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_amount_at_cursor() abort$/;"	f
ledger#align_commodity	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_commodity() abort$/;"	f
ledger#autocomplete_and_align	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#autocomplete_and_align() abort$/;"	f
ledger#declared_accounts	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#declared_accounts(...) abort$/;"	f
ledger#entry	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#entry() abort$/;"	f
ledger#filter_items	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#filter_items(list, keyword) abort$/;"	f
ledger#find_in_tree	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#find_in_tree(tree, levels) abort$/;"	f
ledger#output	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#output(report) abort$/;"	f
ledger#reconcile	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#reconcile(file, account, target_amount) abort$/;"	f
ledger#register	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#register(file, args) abort$/;"	f
ledger#report	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#report(file, args) abort$/;"	f
ledger#show_balance	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#show_balance(file, ...) abort$/;"	f
ledger#transaction_date_set	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_date_set(lnum, type, ...) abort$/;"	f
ledger#transaction_from_lnum	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_from_lnum(lnum) abort$/;"	f
ledger#transaction_state_set	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_state_set(lnum, char) abort$/;"	f
ledger#transaction_state_toggle	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_state_toggle(lnum, ...) abort$/;"	f
ledger#transactions	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transactions(...) abort$/;"	f
len	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t len;$/;"	m	struct:FeString	typeref:typename:uint32_t	file:
len	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    uint16_t len;$/;"	m	struct:HighlightPos	typeref:typename:uint16_t
length	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t length;$/;"	m	struct:PySetTaskItem	typeref:typename:uint32_t	file:
length	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t length;$/;"	m	struct:TaskItem	typeref:typename:uint32_t	file:
length_1	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t length_1;$/;"	m	struct:MergeTaskItem	typeref:typename:uint32_t	file:
length_2	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t length_2;$/;"	m	struct:MergeTaskItem	typeref:typename:uint32_t	file:
levn	plugged/onedark.vim/build/package-lock.json	/^        "levn": "^0.4.1",$/;"	s	object:dependencies.eslint.requires
levn	plugged/onedark.vim/build/package-lock.json	/^        "levn": "^0.4.1",$/;"	s	object:dependencies.optionator.requires
levn	plugged/onedark.vim/build/package-lock.json	/^    "levn": {$/;"	o	object:dependencies
lfActualLineCount	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^def lfActualLineCount(buffer, start, end, col_width):$/;"	f
lfBytes2Str	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^    def lfBytes2Str(bytes, encoding=None):$/;"	f
lfBytesLen	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^    def lfBytesLen(str):$/;"	f
lfCmd	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^lfCmd = vim.command$/;"	v
lfDecode	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^    def lfDecode(str):$/;"	f
lfDrop	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^def lfDrop(type, file_name, line_num=None):$/;"	f
lfEncode	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^    def lfEncode(str):$/;"	f
lfEval	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^lfEval = vim.eval$/;"	v
lfFunction	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^def lfFunction(name):$/;"	f
lfGetCwd	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^    def lfGetCwd():$/;"	f
lfMru#CacheFileName	plugged/LeaderF/autoload/lfMru.vim	/^function! lfMru#CacheFileName()$/;"	f
lfMru#record	plugged/LeaderF/autoload/lfMru.vim	/^function! lfMru#record(name)$/;"	f
lfMru#recordBuffer	plugged/LeaderF/autoload/lfMru.vim	/^function! lfMru#recordBuffer(bufNum)$/;"	f
lfOpen	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^    def lfOpen(file, mode='r', buffering=-1, encoding=None, errors=None,$/;"	f
lfPrintError	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^def lfPrintError(error):$/;"	f
lfPrintTraceback	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^def lfPrintTraceback(msg=''):$/;"	f
lfRelpath	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^def lfRelpath(path, start=os.curdir):$/;"	f
lfWinId	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^def lfWinId(winnr, tab=None):$/;"	f
lf_encoding	plugged/LeaderF/autoload/leaderf/python/leaderf/utils.py	/^lf_encoding = lfEval("&encoding")$/;"	v
license	plugged/gruvbox/package.json	/^  "license": "MIT",$/;"	s
license	plugged/onedark.vim/build/package.json	/^  "license": "MIT",$/;"	s
lightline.vim Colorscheme	plugged/onedark.vim/README.md	/^## lightline.vim Colorscheme$/;"	s
line	plugged/vim-polyglot/indent/ld.vim	/^      if line =~ '^\\s*\/\\*'$/;"	s
lineExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^lineExplManager = LineExplManager()$/;"	v
line_getDigest	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static void line_getDigest(char** str, uint32_t* length, Parameter* param)$/;"	f	typeref:typename:void	file:
line_index	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
line_till_cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def line_till_cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
linebreak-style	plugged/onedark.vim/build/.eslintrc.json	/^        "linebreak-style": [$/;"	a	object:rules
linelist	plugged/vim-quickui/test/test_listbox.vim	/^	let linelist = [$/;"	v
lines	plugged/vim-quickui/autoload/quickui/context.vim	/^	let lines = [$/;"	v
lines	plugged/vim-quickui/autoload/quickui/textbox.vim	/^		let lines += ['printf("%d\\n", ' . (i + 1) . ');']$/;"	v
lines	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let lines = []$/;"	v
lines	plugged/vim-quickui/test/test_listbox.vim	/^		let lines += ['line: ' . ix]$/;"	v
lines	plugged/vim-quickui/test/test_listbox.vim	/^	let lines = [$/;"	v
lines	plugged/vim-quickui/test/test_nvim_context.vim	/^	let lines = [$/;"	v
lines	plugged/vim-quickui/test/test_nvim_textbox.vim	/^		let lines += ['printf("%d\\n", ' . (i + 1) . ');']$/;"	v
lines	plugged/vim-quickui/test/test_nvim_textbox.vim	/^	let lines = []$/;"	v
lines-and-columns	plugged/onedark.vim/build/package-lock.json	/^        "lines-and-columns": "^1.1.6"$/;"	s	object:dependencies.parse-json.requires
lines-and-columns	plugged/onedark.vim/build/package-lock.json	/^    "lines-and-columns": {$/;"	o	object:dependencies
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['amphtml']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['apple-touch-icon', 'apple-touch-icon-precomposed', 'apple-to/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['canonical']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['chrome-webstore-item']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['hub']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['import']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['manifest']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['pgpkey']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['search']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['sitemap']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['webmention']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linktypes$/;"	v
linktypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'dns-prefetch', 'external', 'help', 'icon', /;"	v
list_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
live_region_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let live_region_attributes = {$/;"	v
livescript_compiler	plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_compiler	plugged/vim-polyglot/ftplugin/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_make_options	plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_make_options = ''$/;"	v
lnum	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let lnum = search('^\\s*(\\*:o\\?caml:', 'n')$/;"	v
load_data	plugged/vim-polyglot/scripts/build	/^def load_data()$/;"	f
load_heuristics	plugged/vim-polyglot/scripts/build	/^def load_heuristics$/;"	f
load_languages	plugged/vim-polyglot/scripts/build	/^def load_languages$/;"	f
load_packages	plugged/vim-polyglot/scripts/build	/^def load_packages$/;"	f
load_plugin	plugged/ncm2/pythonx/ncm2_core.py	/^    def load_plugin(self, _, rtp: str):$/;"	m	class:Ncm2Core
load_plugin	plugged/ncm2/pythonx/ncm2_core.py	/^load_plugin = ncm2_core.load_plugin$/;"	v
load_python	plugged/ncm2/pythonx/ncm2_core.py	/^    def load_python(self, _, py):$/;"	m	class:Ncm2Core
load_python	plugged/ncm2/pythonx/ncm2_core.py	/^load_python = ncm2_core.load_python$/;"	v
load_subscope_detectors	plugged/ncm2/pythonx/ncm2_core.py	/^    def load_subscope_detectors(self, paths):$/;"	m	class:Ncm2Core
loaded_bclose	plugged/bclose.vim/plugin/bclose.vim	/^let loaded_bclose = 1$/;"	v
loaded_eregex	plugged/vim-polyglot/scripts/eregex.vim	/^let loaded_eregex=1$/;"	v
loaded_nerd_comments	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
locate-path	plugged/onedark.vim/build/package-lock.json	/^        "locate-path": "^5.0.0",$/;"	s	object:dependencies.find-up.requires
locate-path	plugged/onedark.vim/build/package-lock.json	/^    "locate-path": {$/;"	o	object:dependencies
location	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
lockfileVersion	plugged/onedark.vim/build/package-lock.json	/^  "lockfileVersion": 1,$/;"	n
lodash	plugged/onedark.vim/build/package-lock.json	/^        "lodash": "^4.17.14",$/;"	s	object:dependencies.table.requires
lodash	plugged/onedark.vim/build/package-lock.json	/^        "lodash": "^4.17.19"$/;"	s	object:dependencies.termcolors.requires
lodash	plugged/onedark.vim/build/package-lock.json	/^        "lodash": "^4.17.19",$/;"	s	object:dependencies.@eslint/eslintrc.requires
lodash	plugged/onedark.vim/build/package-lock.json	/^        "lodash": "^4.17.19",$/;"	s	object:dependencies.eslint.requires
lodash	plugged/onedark.vim/build/package-lock.json	/^    "lodash": {$/;"	o	object:dependencies
logger	plugged/ncm2-bufword/pythonx/ncm2_bufword.py	/^logger = getLogger(__name__)$/;"	v
logger	plugged/ncm2-go/pythonx/ncm2_go.py	/^logger = getLogger(__name__)$/;"	v
logger	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^logger = getLogger(__name__)$/;"	v
logger	plugged/ncm2-path/pythonx/ncm2_path.py	/^logger = getLogger(__name__)$/;"	v
logger	plugged/ncm2/pythonx/ncm2.py	/^logger = getLogger(__name__)$/;"	v
logger	plugged/ncm2/pythonx/ncm2_core.py	/^logger = getLogger(__name__)$/;"	v
lru-cache	plugged/onedark.vim/build/package-lock.json	/^        "lru-cache": "^6.0.0"$/;"	s	object:dependencies.semver.requires
lru-cache	plugged/onedark.vim/build/package-lock.json	/^    "lru-cache": {$/;"	o	object:dependencies
lsp_utils	plugged/ncm2-ultisnips/ncm2-plugin/ncm2_ultisnips.py	/^    import ncm2_lsp_snippet.utils as lsp_utils$/;"	I	function:wrap	file:
macros,macro definitions	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*macro_rules![ \\t]+([a-zA-Z0-9_]+)\/\\1\/d,macros,macro definitions\/$/;"	k	langdef:Rust
main	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^int main(int argc, const char* argv[])$/;"	f	typeref:typename:int
main	plugged/ale/test/dumb_tcp_client.py	/^def main():$/;"	f
main	plugged/ale/test/dumb_tcp_server.py	/^def main():$/;"	f
main	plugged/ale/test/script/block-padding-checker	/^def main():$/;"	f
main	plugged/onedark.vim/build/package.json	/^  "main": "build.js",$/;"	s
main	plugged/ultisnips/test_all.py	/^    def main():$/;"	f
main	plugged/vim-translator/script/translator.py	/^def main():$/;"	f
main	plugged/vista.vim/test/data/123.cpp	/^int main(void)$/;"	f	typeref:typename:int
main	plugged/vista.vim/test/data/175.cpp	/^main(void)$/;"	f	typeref:typename:int
main_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let main_syntax = 'yaml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/aptconf.vim	/^  let main_syntax = 'aptconf'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/aspperl.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/aspvbs.vim	/^  let main_syntax = 'aspvbs'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/blade.vim	/^    let main_syntax = 'blade'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/docker-compose.vim	/^    let main_syntax = 'yaml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ecrystal.vim	/^  let main_syntax = 'ecrystal'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/eelixir.vim	/^  let main_syntax = 'eelixir'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/elixir.vim	/^  let main_syntax = "elixir"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/emblem.vim	/^  let main_syntax = 'emblem'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ferm.vim	/^  let main_syntax = 'ferm'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/gsp.vim	/^  let main_syntax = 'gsp'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/haxe.vim	/^  let main_syntax='haxe'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/helm.vim	/^  let main_syntax = 'yaml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/htmldjango.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/htmlm4.vim	/^  let main_syntax='htmlm4'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/java.vim	/^  let main_syntax='java'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^  let main_syntax = 'jinja2'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jsp.vim	/^  let main_syntax = 'jsp'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jst.vim	/^  let main_syntax = 'jst'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/lite.vim	/^  let main_syntax = 'lite'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/lua.vim	/^  let main_syntax = 'lua'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/m4.vim	/^  let main_syntax='m4'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/mako.vim	/^  let main_syntax = b:mako_outer_lang$/;"	v
main_syntax	plugged/vim-polyglot/syntax/mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/msql.vim	/^  let main_syntax = 'msql'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ora.vim	/^  let main_syntax = 'ora'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/pdf.vim	/^    let main_syntax = 'pdf'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/plp.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/pug.vim	/^  let main_syntax = 'pug'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/qml.vim	/^  let main_syntax = 'qml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/scala.vim	/^  let main_syntax = 'scala'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/scss.vim	/^  let main_syntax = 'scss'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/slim.vim	/^  let main_syntax = 'slim'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/slime.vim	/^  let main_syntax = 'slime'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/smarty.vim	/^  let main_syntax = 'smarty'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/spyce.vim	/^  let main_syntax='spyce'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/stylus.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/svg.vim	/^  let main_syntax = 'svg'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/texinfo.vim	/^  let main_syntax = 'texinfo'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/tf.vim	/^  let main_syntax = 'tf'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/tpp.vim	/^  let main_syntax = 'tpp'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/typescript.vim	/^  let main_syntax = 'typescript'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/typescriptreact.vim	/^  let main_syntax = 'typescriptreact'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/uc.vim	/^  let main_syntax='uc'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/velocity.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/webmacro.vim	/^  let main_syntax = 'webmacro'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/wml.vim	/^  let main_syntax = 'wml'$/;"	v
maintainer	plugged/vim-snippets/addon-info.json	/^  "maintainer" : "honza @ github & others",$/;"	s
make_box	plugged/vim-snippets/pythonx/vimsnippets.py	/^def make_box(twidth, bwidth=None):$/;"	f
map	plugged/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
mapleader	keymap.vim	/^let mapleader = " "$/;"	v
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("", "")$/;"	v	class:_SelectModeMappings
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("e", "l"), ("H", "x")$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
match	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^    def match(b, m):$/;"	f	function:Matcher	file:
match	plugged/ncm2/pythonx/ncm2_matcher/base_min_len.py	/^    def match(b, e):$/;"	f	function:Matcher	file:
match	plugged/ncm2/pythonx/ncm2_matcher/combine.py	/^    def match(b, m):$/;"	f	function:Matcher	file:
match	plugged/ncm2/pythonx/ncm2_matcher/must.py	/^    def match(b, m):$/;"	f	function:Matcher	file:
match	plugged/ncm2/pythonx/ncm2_matcher/none.py	/^    def match(b, m):$/;"	f	function:Matcher	file:
match	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^    def match(b, m):$/;"	f	function:Matcher	file:
match_case	plugged/ncm2/pythonx/ncm2_matcher/equal.py	/^    def match_case(b, e):$/;"	f	function:Matcher	file:
match_case	plugged/ncm2/pythonx/ncm2_matcher/prefix.py	/^    def match_case(b, m):$/;"	f	function:Matcher	file:
match_case	plugged/ncm2/pythonx/ncm2_matcher/substr.py	/^    def match_case(b, e):$/;"	f	function:Matcher	file:
match_formalize	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/utils.py	/^def match_formalize(ctx, item):$/;"	f
match_formalize	plugged/ncm2/pythonx/ncm2.py	/^    def match_formalize(self, ctx, item):$/;"	m	class:Ncm2Base
match_formalize_from_lspitem	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/utils.py	/^def match_formalize_from_lspitem(ctx, item, lspitem):$/;"	f
match_icase	plugged/ncm2/pythonx/ncm2_matcher/equal.py	/^    def match_icase(b, e):$/;"	f	function:Matcher	file:
match_icase	plugged/ncm2/pythonx/ncm2_matcher/prefix.py	/^    def match_icase(b, m):$/;"	f	function:Matcher	file:
match_icase	plugged/ncm2/pythonx/ncm2_matcher/substr.py	/^    def match_icase(b, e):$/;"	f	function:Matcher	file:
match_path	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t match_path;$/;"	m	struct:GtagsParameter	typeref:typename:uint32_t	file:
match_smart_case	plugged/ncm2/pythonx/ncm2_matcher/equal.py	/^    def match_smart_case(b, e):$/;"	f	function:Matcher	file:
match_smart_case	plugged/ncm2/pythonx/ncm2_matcher/prefix.py	/^    def match_smart_case(b, m):$/;"	f	function:Matcher	file:
match_smart_case	plugged/ncm2/pythonx/ncm2_matcher/substr.py	/^    def match_smart_case(b, e):$/;"	f	function:Matcher	file:
matchaddDevIconsDefault	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def matchaddDevIconsDefault(pattern, winid=None):$/;"	f
matchaddDevIconsExact	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def matchaddDevIconsExact(pattern, winid=None):$/;"	f
matchaddDevIconsExtension	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def matchaddDevIconsExtension(pattern, winid=None):$/;"	f
matched	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
matcher_get	plugged/ncm2/pythonx/ncm2.py	/^    def matcher_get(self, context):$/;"	m	class:Ncm2Base
matcher_get	plugged/ncm2/pythonx/ncm2.py	/^def matcher_get(context, opt=None):$/;"	f
matcher_opt_formalize	plugged/ncm2/pythonx/ncm2.py	/^    def matcher_opt_formalize(self, opt):$/;"	m	class:Ncm2Base
matcher_opt_formalize	plugged/ncm2/pythonx/ncm2.py	/^def matcher_opt_formalize(opt):$/;"	f
matcher_opt_get	plugged/ncm2/pythonx/ncm2_core.py	/^    def matcher_opt_get(self, data, sr):$/;"	m	class:Ncm2Core
matches	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matches(self, before, visual_content=None):$/;"	m	class:SnippetDefinition
matches_add_source_mark	plugged/ncm2/pythonx/ncm2_core.py	/^    def matches_add_source_mark(self, data, matches):$/;"	m	class:Ncm2Core
matches_decorate	plugged/ncm2/pythonx/ncm2_core.py	/^    def matches_decorate(self, data, matches):$/;"	m	class:Ncm2Core
matches_do_popup	plugged/ncm2/pythonx/ncm2_core.py	/^    def matches_do_popup(self, ctx, startccol, matches):$/;"	m	class:Ncm2Core
matches_filter	plugged/ncm2/pythonx/ncm2_core.py	/^    def matches_filter(self, data, sr, sctx, sccol, matches):$/;"	m	class:Ncm2Core
matches_filter_by_matcher	plugged/ncm2/pythonx/ncm2_core.py	/^    def matches_filter_by_matcher(self, data, sr, sctx, sccol, matches):$/;"	m	class:Ncm2Core
matches_formalize	plugged/ncm2/pythonx/ncm2.py	/^    def matches_formalize(self, ctx, matches):$/;"	m	class:Ncm2Base
matches_update_popup	plugged/ncm2/pythonx/ncm2_core.py	/^    def matches_update_popup(self, data):$/;"	m	class:Ncm2Core
matches_update_popup	plugged/ncm2/pythonx/ncm2_core.py	/^matches_update_popup = ncm2_core.matches_update_popup$/;"	v
maxDiff	plugged/ultisnips/test/vim_test_case.py	/^    maxDiff = None  # Show all diff output, always.$/;"	v	class:VimTestCase
max_common_prefix	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^def max_common_prefix(b, s, chcmp):$/;"	f
max_substr_match	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def max_substr_match(b, s, sec, chcmp):$/;"	f
mel_minlines	plugged/vim-polyglot/syntax/mel.vim	/^  let mel_minlines=15$/;"	v
mem	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^    mem = psutil.virtual_memory()$/;"	v
members	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*(public|private)[ \\t]+(static|readonly)?[ \\t]*([a/;"	k	langdef:typescript
menu	plugged/vim-quickui/autoload/quickui/context.vim	/^		let menu = quickui#context#open(lines, opts)$/;"	v
menu	plugged/vim-quickui/test/test_nvim_context.vim	/^	let menu = quickui#context#open(lines, opts)$/;"	v
metadata_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
methods	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*(\\[[a-z]*\\]/;"	k	langdef:scala
microdata_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'i/;"	v
microdata_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
mimicCursor	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def mimicCursor(self):$/;"	m	class:LfInstance
minimatch	plugged/onedark.vim/build/package-lock.json	/^        "minimatch": "^3.0.4",$/;"	s	object:dependencies.@eslint/eslintrc.requires
minimatch	plugged/onedark.vim/build/package-lock.json	/^        "minimatch": "^3.0.4",$/;"	s	object:dependencies.eslint.requires
minimatch	plugged/onedark.vim/build/package-lock.json	/^        "minimatch": "^3.0.4",$/;"	s	object:dependencies.glob.requires
minimatch	plugged/onedark.vim/build/package-lock.json	/^    "minimatch": {$/;"	o	object:dependencies
minimist	plugged/onedark.vim/build/package-lock.json	/^        "minimist": "^1.2.5"$/;"	s	object:dependencies.mkdirp.requires
minimist	plugged/onedark.vim/build/package-lock.json	/^    "minimist": {$/;"	o	object:dependencies
mkdirp	plugged/onedark.vim/build/package-lock.json	/^        "mkdirp": "^0.5.1"$/;"	s	object:dependencies.write.requires
mkdirp	plugged/onedark.vim/build/package-lock.json	/^    "mkdirp": {$/;"	o	object:dependencies
mkline	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def mkline(self, line="", indent=None):$/;"	m	class:SnippetUtil
mode	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t mode;$/;"	m	struct:GtagsParameter	typeref:typename:uint32_t	file:
mode	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t mode;$/;"	m	struct:Parameter	typeref:typename:uint32_t	file:
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
modifiableController	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^def modifiableController(func):$/;"	f
module	plugged/nvim-yarp/pythonx/yarp.py	/^module = sys.argv[3]$/;"	v
module1	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/setup.py	/^module1 = Extension("fuzzyMatchC",$/;"	v
module2	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/setup.py	/^module2 = Extension("fuzzyEngine",$/;"	v
module_obj	plugged/nvim-yarp/pythonx/yarp.py	/^    module_obj = importlib.import_module(module)$/;"	v
module_obj	plugged/nvim-yarp/pythonx/yarp.py	/^module_obj = None$/;"	v
modules	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*module[ \\t]+([a-zA-Z0-9_]+)\/\\2\/n,modules\/$/;"	k	langdef:typescript
modules	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*namespace[ \\t]+([a-zA-Z0-9_]+)\/\\2\/n,modules\/$/;"	k	langdef:typescript
modules,module names	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?mod[ \\t]+([a-zA-Z0-9_]+)\/\\2\/m,modules,module names\/$/;"	k	langdef:Rust
move	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
mru	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^mru = Mru()$/;"	v
mruExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^mruExplManager = MruExplManager()$/;"	v
ms	plugged/onedark.vim/build/package-lock.json	/^        "ms": "2.1.2"$/;"	s	object:dependencies.debug.requires
ms	plugged/onedark.vim/build/package-lock.json	/^    "ms": {$/;"	o	object:dependencies
mupad_cmdextversion	plugged/vim-polyglot/syntax/mupad.vim	/^  let mupad_cmdextversion = 2$/;"	v
mutex	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    pthread_mutex_t mutex;$/;"	m	struct:FeCircularQueue	typeref:typename:pthread_mutex_t	file:
mv_DEtools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_DEtools    = 1$/;"	v
mv_Galois	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_Galois     = 1$/;"	v
mv_GaussInt	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_GaussInt   = 1$/;"	v
mv_LREtools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_LREtools   = 1$/;"	v
mv_combinat	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_combinat   = 1$/;"	v
mv_combstruct	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_combstruct = 1$/;"	v
mv_difforms	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_difforms   = 1$/;"	v
mv_finance	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_finance    = 1$/;"	v
mv_genfunc	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_genfunc    = 1$/;"	v
mv_geometry	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_geometry   = 1$/;"	v
mv_grobner	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_grobner    = 1$/;"	v
mv_group	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_group      = 1$/;"	v
mv_inttrans	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_inttrans   = 1$/;"	v
mv_liesymm	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_liesymm    = 1$/;"	v
mv_linalg	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_linalg     = 1$/;"	v
mv_logic	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_logic      = 1$/;"	v
mv_networks	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_networks   = 1$/;"	v
mv_numapprox	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_numapprox  = 1$/;"	v
mv_numtheory	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_numtheory  = 1$/;"	v
mv_orthopoly	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_orthopoly  = 1$/;"	v
mv_padic	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_padic      = 1$/;"	v
mv_plots	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_plots      = 1$/;"	v
mv_plottools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_plottools  = 1$/;"	v
mv_powseries	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_powseries  = 1$/;"	v
mv_process	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_process    = 1$/;"	v
mv_simplex	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_simplex    = 1$/;"	v
mv_stats	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_stats      = 1$/;"	v
mv_student	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_student    = 1$/;"	v
mv_sumtools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_sumtools   = 1$/;"	v
mv_tensor	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_tensor     = 1$/;"	v
mv_totorder	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_totorder   = 1$/;"	v
mypy	plugged/ultisnips/mypy.ini	/^[mypy]$/;"	s
mypy-unidecode	plugged/ultisnips/mypy.ini	/^[mypy-unidecode]$/;"	s
mypy-vim	plugged/ultisnips/mypy.ini	/^[mypy-vim]$/;"	s
mypy_path	plugged/ultisnips/mypy.ini	/^mypy_path=pythonx\/UltiSnips$/;"	k	section:mypy
n	plugged/vim-polyglot/syntax/xpm.vim	/^	 let n = 1		" n = color index$/;"	v
n	plugged/vim-polyglot/syntax/xpm.vim	/^	 let n = n + 1$/;"	v
n	plugged/vim-polyglot/syntax/xpm.vim	/^let n      = 0$/;"	v
n	plugged/vim-polyglot/syntax/xpm2.vim	/^	let n = 1			" n = color index$/;"	v
n	plugged/vim-polyglot/syntax/xpm2.vim	/^	let n = n + 1$/;"	v
n	plugged/vim-polyglot/syntax/xpm2.vim	/^  let n      = 0$/;"	v
name	plugged/gruvbox/package.json	/^  "name": "gruvbox",$/;"	s
name	plugged/onedark.vim/build/package-lock.json	/^  "name": "onedark.vim-builder",$/;"	s
name	plugged/onedark.vim/build/package.json	/^    "name": "Josh Dick",$/;"	s	object:author
name	plugged/onedark.vim/build/package.json	/^  "name": "onedark.vim-builder",$/;"	s
name	plugged/vim-snippets/addon-info.json	/^  "name" : "snipmate-snippets",$/;"	s
name_temp	plugged/ultisnips/test/vim_interface.py	/^    def name_temp(self, file_path):$/;"	m	class:TempFileManager
natural-compare	plugged/onedark.vim/build/package-lock.json	/^        "natural-compare": "^1.4.0",$/;"	s	object:dependencies.eslint.requires
natural-compare	plugged/onedark.vim/build/package-lock.json	/^    "natural-compare": {$/;"	o	object:dependencies
ncm2#_au_plugin	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_au_plugin()$/;"	f
ncm2#_check_popup_close	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_check_popup_close()$/;"	f
ncm2#_complete_timer_handler	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_complete_timer_handler(...)$/;"	f
ncm2#_core_started	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_core_started()$/;"	f
ncm2#_do_extra_text_edits	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_do_extra_text_edits(ctx, item)$/;"	f
ncm2#_hook_for_subscope_detectors	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_hook_for_subscope_detectors()$/;"	f
ncm2#_load_vimscript	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_load_vimscript(s)$/;"	f
ncm2#_notify_complete	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_notify_complete(ctx, calls)$/;"	f
ncm2#_notify_completed	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_notify_completed(ctx, name, sctx, completed)$/;"	f
ncm2#_on_enable	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_on_enable(sr, ...)$/;"	f
ncm2#_on_ready	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_on_ready(sr, ...)$/;"	f
ncm2#_real_popup	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_real_popup(...)$/;"	f
ncm2#_real_update_matches	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_real_update_matches(ctx, startbcol, matches)$/;"	f
ncm2#_s	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_s(name, ...)$/;"	f
ncm2#_update_matches	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_update_matches(ctx, startbcol, matches)$/;"	f
ncm2#_warmup_sources	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#_warmup_sources(ctx, calls)$/;"	f
ncm2#auto_trigger	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#auto_trigger()$/;"	f
ncm2#blacklist_for_buffer	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#blacklist_for_buffer(...)$/;"	f
ncm2#complete	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#complete(ctx, startccol, matches, ...)$/;"	f
ncm2#complete_context_dated	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#complete_context_dated(ctx)$/;"	f
ncm2#complete_resolve	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#complete_resolve(ctx, item)$/;"	f
ncm2#completed_item	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#completed_item()$/;"	f
ncm2#context	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#context(name)$/;"	f
ncm2#context_dated	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#context_dated(ctx)$/;"	f
ncm2#context_tick	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#context_tick()$/;"	f
ncm2#disable_for_buffer	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#disable_for_buffer()$/;"	f
ncm2#do_auto_trigger	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#do_auto_trigger()$/;"	f
ncm2#enable_for_buffer	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#enable_for_buffer()$/;"	f
ncm2#force_trigger	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#force_trigger(...)$/;"	f
ncm2#hook_coredata	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#hook_coredata(is_global, events, groupid, Hook)$/;"	f
ncm2#imode_task	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#imode_task(fn, ...)$/;"	f
ncm2#insert_mode_only_key	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#insert_mode_only_key(key)$/;"	f
ncm2#lock	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#lock(name)$/;"	f
ncm2#manual_trigger	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#manual_trigger(...)$/;"	f
ncm2#menu_selected	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#menu_selected()$/;"	f
ncm2#on_complete#context_ensure	plugged/ncm2/autoload/ncm2/on_complete.vim	/^func! ncm2#on_complete#context_ensure(fn, ...) dict$/;"	f
ncm2#on_complete#delay	plugged/ncm2/autoload/ncm2/on_complete.vim	/^func! ncm2#on_complete#delay(delay, ...) dict$/;"	f
ncm2#on_complete#lsp	plugged/ncm2/autoload/ncm2/on_complete.vim	/^func! ncm2#on_complete#lsp(context)$/;"	f
ncm2#on_complete#omni	plugged/ncm2/autoload/ncm2/on_complete.vim	/^func! ncm2#on_complete#omni(funcname, ctx)$/;"	f
ncm2#on_waiting_input	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#on_waiting_input(fn, ...)$/;"	f
ncm2#override_source	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#override_source(name, v)$/;"	f
ncm2#register_source	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#register_source(sr)$/;"	f
ncm2#set_ready	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#set_ready(sr)$/;"	f
ncm2#skip_auto_trigger	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#skip_auto_trigger()$/;"	f
ncm2#unlock	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#unlock(name)$/;"	f
ncm2#unregister_source	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#unregister_source(sr)$/;"	f
ncm2#whitelist_for_buffer	plugged/ncm2/autoload/ncm2.vim	/^func! ncm2#whitelist_for_buffer(...)$/;"	f
ncm2-bufword	plugged/ncm2-bufword/README.md	/^# ncm2-bufword$/;"	c
ncm2-jedi	plugged/ncm2-jedi/README.md	/^# ncm2-jedi$/;"	c
ncm2-path	plugged/ncm2-path/README.md	/^# ncm2-path$/;"	c
ncm2-vim	plugged/ncm2-vim/README.md	/^# ncm2-vim$/;"	c
ncm2_buf_hooks	plugged/ncm2/autoload/ncm2.vim	/^    augroup ncm2_buf_hooks$/;"	a
ncm2_bufword#init	plugged/ncm2-bufword/autoload/ncm2_bufword.vim	/^func! ncm2_bufword#init()$/;"	f
ncm2_bufword#on_complete	plugged/ncm2-bufword/autoload/ncm2_bufword.vim	/^func! ncm2_bufword#on_complete(ctx)$/;"	f
ncm2_bufword#on_warmup	plugged/ncm2-bufword/autoload/ncm2_bufword.vim	/^func! ncm2_bufword#on_warmup(ctx)$/;"	f
ncm2_core	plugged/ncm2/pythonx/ncm2_core.py	/^ncm2_core = Ncm2Core(vim)$/;"	v
ncm2_go#data	plugged/ncm2-go/autoload/ncm2_go.vim	/^func! ncm2_go#data()$/;"	f
ncm2_go#error	plugged/ncm2-go/autoload/ncm2_go.vim	/^func! ncm2_go#error(msg)$/;"	f
ncm2_go#init	plugged/ncm2-go/autoload/ncm2_go.vim	/^func! ncm2_go#init()$/;"	f
ncm2_go#on_complete	plugged/ncm2-go/autoload/ncm2_go.vim	/^func! ncm2_go#on_complete(ctx)$/;"	f
ncm2_go#on_warmup	plugged/ncm2-go/autoload/ncm2_go.vim	/^func! ncm2_go#on_warmup(ctx)$/;"	f
ncm2_hooks	plugged/ncm2/autoload/ncm2.vim	/^augroup ncm2_hooks$/;"	a
ncm2_jedi#init	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^func! ncm2_jedi#init()$/;"	f
ncm2_jedi#on_complete	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^func! ncm2_jedi#on_complete(ctx)$/;"	f
ncm2_jedi#on_warmup	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^func! ncm2_jedi#on_warmup(ctx)$/;"	f
ncm2_jedi#proc.on_load	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^func! g:ncm2_jedi#proc.on_load()$/;"	f
ncm2_path#init	plugged/ncm2-path/autoload/ncm2_path.vim	/^func! ncm2_path#init()$/;"	f
ncm2_path#on_complete_bufpath	plugged/ncm2-path/autoload/ncm2_path.vim	/^func! ncm2_path#on_complete_bufpath(ctx)$/;"	f
ncm2_path#on_complete_cwdpath	plugged/ncm2-path/autoload/ncm2_path.vim	/^func! ncm2_path#on_complete_cwdpath(ctx)$/;"	f
ncm2_path#on_complete_rootpath	plugged/ncm2-path/autoload/ncm2_path.vim	/^func! ncm2_path#on_complete_rootpath(ctx)$/;"	f
ncm2_path#on_load	plugged/ncm2-path/autoload/ncm2_path.vim	/^func! ncm2_path#on_load()$/;"	f
ncm2_path#on_warmup	plugged/ncm2-path/autoload/ncm2_path.vim	/^func! ncm2_path#on_warmup(ctx)$/;"	f
ncm2_ultisnips#_do_expand_completed	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^func! ncm2_ultisnips#_do_expand_completed()$/;"	f
ncm2_ultisnips#_do_expand_or	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^    func! ncm2_ultisnips#_do_expand_or()$/;"	f
ncm2_ultisnips#_do_expand_or	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^func! ncm2_ultisnips#_do_expand_or()$/;"	f
ncm2_ultisnips#completed_is_snippet	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^func! ncm2_ultisnips#completed_is_snippet()$/;"	f
ncm2_ultisnips#expand_or	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^func! ncm2_ultisnips#expand_or(...)$/;"	f
ncm2_ultisnips#init	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^func! ncm2_ultisnips#init()$/;"	f
ncm2_ultisnips#on_complete	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^func! ncm2_ultisnips#on_complete(ctx)$/;"	f
ncm2_vim#init	plugged/ncm2-vim/autoload/ncm2_vim.vim	/^function! ncm2_vim#init() abort$/;"	f
ncm2_vim#on_complete	plugged/ncm2-vim/autoload/ncm2_vim.vim	/^function! ncm2_vim#on_complete(ctx) abort$/;"	f
necovim	plugged/neco-vim/plugin/necovim.vim	/^augroup necovim$/;"	a
necovim#gather_candidates	plugged/neco-vim/autoload/necovim.vim	/^function! necovim#gather_candidates(input, complete_str) abort$/;"	f
necovim#get_command	plugged/neco-vim/autoload/necovim.vim	/^function! necovim#get_command(cur_text) abort$/;"	f
necovim#get_complete_position	plugged/neco-vim/autoload/necovim.vim	/^function! necovim#get_complete_position(input) abort$/;"	f
necovim#get_cur_text	plugged/neco-vim/autoload/necovim.vim	/^function! necovim#get_cur_text(input) abort$/;"	f
necovim#helper#augroup	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#augroup(cur_text, complete_str) abort$/;"	f
necovim#helper#colorscheme_args	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#colorscheme_args(cur_text, complete_str) abort$/;"	f
necovim#helper#command	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#command(cur_text, complete_str) abort$/;"	f
necovim#helper#environment	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#environment(cur_text, complete_str) abort$/;"	f
necovim#helper#expand	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#expand(cur_text, complete_str) abort$/;"	f
necovim#helper#expression	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#expression(cur_text, complete_str) abort$/;"	f
necovim#helper#feature	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#feature(cur_text, complete_str) abort$/;"	f
necovim#helper#filetype	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#filetype(cur_text, complete_str) abort$/;"	f
necovim#helper#function	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#function(cur_text, complete_str) abort$/;"	f
necovim#helper#let	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#let(cur_text, complete_str) abort$/;"	f
necovim#helper#make_cache	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#make_cache() abort$/;"	f
necovim#helper#option	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#option(cur_text, complete_str) abort$/;"	f
necovim#helper#var	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#var(cur_text, complete_str) abort$/;"	f
necovim#helper#var_dictionary	plugged/neco-vim/autoload/necovim/helper.vim	/^function! necovim#helper#var_dictionary(cur_text, complete_str) abort$/;"	f
necovim#match_word	plugged/neco-vim/autoload/necovim.vim	/^function! necovim#match_word(cur_text, pattern) abort$/;"	f
neocomplete#sources#ultisnips#define	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define() abort$/;"	f
neocomplete#sources#vim#define	plugged/neco-vim/autoload/neocomplete/sources/vim.vim	/^function! neocomplete#sources#vim#define() abort$/;"	f
neovim `:messages` output when the error occurs	plugged/ncm2/.github/ISSUE_TEMPLATE.md	/^### neovim `:messages` output when the error occurs$/;"	S
neovim `:version` output	plugged/ncm2/.github/ISSUE_TEMPLATE.md	/^### neovim `:version` output$/;"	S
nerdtree#and	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#and(x,y) abort$/;"	f
nerdtree#checkForBrowse	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir) abort$/;"	f
nerdtree#compareNodePaths	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodePaths(p1, p2) abort$/;"	f
nerdtree#compareNodes	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2) abort$/;"	f
nerdtree#completeBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P) abort$/;"	f
nerdtree#deprecated	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...) abort$/;"	f
nerdtree#echo	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg) abort$/;"	f
nerdtree#echoError	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg) abort$/;"	f
nerdtree#echoWarning	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg) abort$/;"	f
nerdtree#exec	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll) abort$/;"	f
nerdtree#has_opt	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name) abort$/;"	f
nerdtree#loadClassFiles	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles() abort$/;"	f
nerdtree#postSourceActions	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions() abort$/;"	f
nerdtree#renderView	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView() abort$/;"	f
nerdtree#runningCygwin	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin() abort$/;"	f
nerdtree#runningWindows	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows() abort$/;"	f
nerdtree#slash	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#slash() abort$/;"	f
nerdtree#ui_glue#bookmarkNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...) abort$/;"	f
nerdtree#ui_glue#chRootCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd() abort$/;"	f
nerdtree#ui_glue#clearBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks) abort$/;"	f
nerdtree#ui_glue#createDefaultBindings	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings() abort$/;"	f
nerdtree#ui_glue#invokeKeyMap	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key) abort$/;"	f
nerdtree#ui_glue#openBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name) abort$/;"	f
nerdtree#ui_glue#revealBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name) abort$/;"	f
nerdtree#ui_glue#setupCommands	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands() abort$/;"	f
nerdtree#ui_glue#upDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState) abort$/;"	f
nerdtree#version	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version(...) abort$/;"	f
nerdtree-git-plugin	plugged/nerdtree-git-plugin/README.md	/^nerdtree-git-plugin$/;"	c
nerdtreegitplugin	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^augroup nerdtreegitplugin$/;"	a
nerdtreegitplugin_liveupdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    augroup nerdtreegitplugin_liveupdate$/;"	a
new_scratch_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def new_scratch_buffer(text):$/;"	f
nextHistory	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def nextHistory(self, category):$/;"	m	class:LfCli
nim#init	plugged/vim-polyglot/autoload/nim.vim	/^fun! nim#init() abort$/;"	f
nim_highlight_builtins	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins     = 1$/;"	v
nim_highlight_builtins	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins = 1$/;"	v
nim_highlight_exceptions	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions   = 1$/;"	v
nim_highlight_exceptions	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions = 1$/;"	v
nim_highlight_numbers	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers      = 1$/;"	v
nim_highlight_numbers	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers = 1$/;"	v
nim_highlight_space_errors	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_space_errors = 1$/;"	v
nim_highlight_special_vars	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_special_vars = 1$/;"	v
no-console	plugged/onedark.vim/build/.eslintrc.json	/^        "no-console": [$/;"	a	object:rules
noErrMatch	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^        def noErrMatch(text, pattern):$/;"	f	member:Manager._regexFilter	file:
no_unidecode_available	plugged/ultisnips/test/util.py	/^def no_unidecode_available():$/;"	f
node	plugged/onedark.vim/build/.eslintrc.json	/^        "node": true$/;"	b	object:env
node	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*node[[:space:]]*[\\'|\\"]*([a-zA-Z0-9_\\.\\-]+)[\\'|\\"]*\/\\1\/n,/;"	k	langdef:puppet
normalize	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^    def normalize(self, name):$/;"	m	class:Mru
normalize_file_path	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def normalize_file_path(path: str) -> str:$/;"	f
not_empty_cond	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    pthread_cond_t  not_empty_cond;$/;"	m	struct:FeCircularQueue	typeref:typename:pthread_cond_t	file:
notify	plugged/ncm2/pythonx/ncm2_core.py	/^    def notify(self, method: str, *args):$/;"	m	class:Ncm2Core
nqc_minlines	plugged/vim-polyglot/syntax/nqc.vim	/^    let nqc_minlines = 15	    " mostly for () constructs$/;"	v
nqc_minlines	plugged/vim-polyglot/syntax/nqc.vim	/^    let nqc_minlines = 50	    " #if 0 constructs can be long$/;"	v
ntabs_to_proper_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
number	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def number(self):$/;"	m	class:FloatWindow
number	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def number(self):$/;"	m	class:PopupWindow
number	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def number(self):$/;"	m	class:TabStop
number	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def number(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
nvim	plugged/nvim-yarp/pythonx/yarp.py	/^        nvim = attach('tcp', address=serveraddr, port=port)$/;"	v
nvim	plugged/nvim-yarp/pythonx/yarp.py	/^nvim = None$/;"	v
o	autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
o	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py b:Lf_AnyExplManager."accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "bufTagExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "bufExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "colorschemeExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Command.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "commandExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "fileExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Filetype.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "filetypeExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "functionExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "gtagsExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "helpExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "lineExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "mruExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "qfloclistExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "rgExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Self.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "selfExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "tagExplManager.accept()"<CR>$/;"	m
o	plugged/LeaderF/autoload/leaderf/Window.vim	/^    nnoremap <buffer> <silent> o             :exec g:Lf_py "windowExplManager.accept()"<CR>$/;"	m
o	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> o <NOP>$/;"	m
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_DelSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
objects	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
offset	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t offset;$/;"	m	struct:PySetTaskItem	typeref:typename:uint32_t	file:
offset	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t offset;$/;"	m	struct:TaskItem	typeref:typename:uint32_t	file:
offset	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    uint16_t offset;$/;"	m	struct:TextContext	typeref:typename:uint16_t	file:
offset_1	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t offset_1;$/;"	m	struct:MergeTaskItem	typeref:typename:uint32_t	file:
old_syntax	plugged/vim-polyglot/after/syntax/haskell.vim	/^let old_syntax = b:current_syntax$/;"	v
on_complete	plugged/ncm2-bufword/pythonx/ncm2_bufword.py	/^    def on_complete(self, ctx):$/;"	m	class:Source
on_complete	plugged/ncm2-bufword/pythonx/ncm2_bufword.py	/^on_complete = source.on_complete$/;"	v
on_complete	plugged/ncm2-go/pythonx/ncm2_go.py	/^    def on_complete(self, ctx, data, lines):$/;"	m	class:Source
on_complete	plugged/ncm2-go/pythonx/ncm2_go.py	/^on_complete = source.on_complete$/;"	v
on_complete	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^    def on_complete(self, ctx, lines):$/;"	m	class:Source
on_complete	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^on_complete = source.on_complete$/;"	v
on_complete	plugged/ncm2-path/pythonx/ncm2_path.py	/^    def on_complete(self, ctx, path_pattern):$/;"	m	class:BufPath
on_complete	plugged/ncm2-path/pythonx/ncm2_path.py	/^    def on_complete(self, ctx, path_pattern):$/;"	m	class:RootPath
on_complete	plugged/ncm2-path/pythonx/ncm2_path.py	/^    def on_complete(self, ctx, path_pattern, cwd):$/;"	m	class:CwdPath
on_complete	plugged/ncm2/pythonx/ncm2.py	/^        def on_complete(context, *args):$/;"	f	member:Ncm2Source.__init__	file:
on_complete	plugged/ncm2/pythonx/ncm2_core.py	/^    def on_complete(self, data, manual, names=None):$/;"	m	class:Ncm2Core
on_complete	plugged/ncm2/pythonx/ncm2_core.py	/^on_complete = ncm2_core.on_complete$/;"	v
on_complete_bufpath	plugged/ncm2-path/pythonx/ncm2_path.py	/^on_complete_bufpath = buf_path.on_complete$/;"	v
on_complete_cwdpath	plugged/ncm2-path/pythonx/ncm2_path.py	/^on_complete_cwdpath = cwd_path.on_complete$/;"	v
on_complete_lsp	plugged/ncm2/lua/ncm2/init.lua	/^local function on_complete_lsp(context)$/;"	f
on_complete_rootpath	plugged/ncm2-path/pythonx/ncm2_path.py	/^on_complete_rootpath = root_path.on_complete$/;"	v
on_completion_result	plugged/ncm2/lua/ncm2/init.lua	/^local function on_completion_result(context, err, _, result)$/;"	f
on_notification	plugged/nvim-yarp/pythonx/yarp.py	/^def on_notification(method, args):$/;"	f
on_notify_dated	plugged/ncm2/pythonx/ncm2_core.py	/^    def on_notify_dated(self, data, _, failed_notifies=[]):$/;"	m	class:Ncm2Core
on_notify_dated	plugged/ncm2/pythonx/ncm2_core.py	/^on_notify_dated = ncm2_core.on_notify_dated$/;"	v
on_request	plugged/nvim-yarp/pythonx/yarp.py	/^def on_request(method, args):$/;"	f
on_setup	plugged/nvim-yarp/pythonx/yarp.py	/^def on_setup():$/;"	f
on_warmup	plugged/ncm2/pythonx/ncm2_core.py	/^    def on_warmup(self, data, names):$/;"	m	class:Ncm2Core
on_warmup	plugged/ncm2/pythonx/ncm2_core.py	/^on_warmup = ncm2_core.on_warmup$/;"	v
once	plugged/onedark.vim/build/package-lock.json	/^        "once": "^1.3.0",$/;"	s	object:dependencies.glob.requires
once	plugged/onedark.vim/build/package-lock.json	/^        "once": "^1.3.0",$/;"	s	object:dependencies.inflight.requires
once	plugged/onedark.vim/build/package-lock.json	/^    "once": {$/;"	o	object:dependencies
onedark#GetColors	plugged/onedark.vim/autoload/onedark.vim	/^function! onedark#GetColors()$/;"	f
onedark#GetColors	plugged/onedark.vim/build/templates/autoload.template.vim	/^function! onedark#GetColors()$/;"	f
onedark#extend_highlight	plugged/onedark.vim/colors/onedark.vim	/^function! onedark#extend_highlight(group, style)$/;"	f
onedark#set_highlight	plugged/onedark.vim/colors/onedark.vim	/^function! onedark#set_highlight(group, style)$/;"	f
oneline_comments	plugged/vim-polyglot/syntax/spup.vim	/^    let oneline_comments = 2$/;"	v
opencollective-postinstall	plugged/onedark.vim/build/package-lock.json	/^        "opencollective-postinstall": "^2.0.2",$/;"	s	object:dependencies.husky.requires
opencollective-postinstall	plugged/onedark.vim/build/package-lock.json	/^    "opencollective-postinstall": {$/;"	o	object:dependencies
opt	plugged/gruvbox/package.json	/^    "opt": true$/;"	b	object:vim
opt	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
option_set_to	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def option_set_to(name, new_value):$/;"	f
optionator	plugged/onedark.vim/build/package-lock.json	/^        "optionator": "^0.9.1",$/;"	s	object:dependencies.eslint.requires
optionator	plugged/onedark.vim/build/package-lock.json	/^    "optionator": {$/;"	o	object:dependencies
options	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def options(self):$/;"	m	class:FloatWindow
options	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def options(self, options):$/;"	m	class:FloatWindow
opts	plugged/vim-quickui/autoload/quickui/context.vim	/^	let opts = {'cursor': -1, 'line2':'cursor+1', 'col2': 'cursor', 'horizon':1}$/;"	v
opts	plugged/vim-quickui/autoload/quickui/context.vim	/^	let opts.callback = 'MyCallback'$/;"	v
opts	plugged/vim-quickui/autoload/quickui/context.vim	/^	let opts.reduce = 1$/;"	v
opts	plugged/vim-quickui/autoload/quickui/context.vim	/^	let opts.savepos = 'f'$/;"	v
opts	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let opts = {}$/;"	v
opts	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let opts.border = 0$/;"	v
opts	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let opts.color = "QuickBox"$/;"	v
opts	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let opts.cursor = 38$/;"	v
opts	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let opts.index = 30$/;"	v
opts	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let opts.number = 1$/;"	v
opts	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let opts.resize = 1$/;"	v
opts	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let opts.syntax = "cpp"$/;"	v
opts	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let opts.title = "title"$/;"	v
opts	plugged/vim-quickui/test/test_listbox.vim	/^	let opts = {'title': 'select'}$/;"	v
opts	plugged/vim-quickui/test/test_listbox.vim	/^	let opts = {'title':'Select', 'border':1, 'index':400, 'close':'button'}$/;"	v
opts	plugged/vim-quickui/test/test_listbox.vim	/^	let opts.callback = 'MyCallback'$/;"	v
opts	plugged/vim-quickui/test/test_listbox.vim	/^	let opts.context = 'asdfasdf'$/;"	v
opts	plugged/vim-quickui/test/test_listbox.vim	/^	let opts.keymap = {'=':'TAG:2', '-':'TAG:3'}$/;"	v
opts	plugged/vim-quickui/test/test_nvim_context.vim	/^	let opts = {'cursor': -1, 'line2':'cursor+1', 'col2': 'cursor', 'horizon':1}$/;"	v
opts	plugged/vim-quickui/test/test_nvim_context.vim	/^	let opts.callback = 'MyCallback'$/;"	v
opts	plugged/vim-quickui/test/test_nvim_list.vim	/^	let opts = {'title': 'select', 'context':'hahaha', 'close':'button'}$/;"	v
opts	plugged/vim-quickui/test/test_nvim_list.vim	/^	let opts.border = 2$/;"	v
opts	plugged/vim-quickui/test/test_nvim_list.vim	/^	let opts.callback = 'MyCallback'$/;"	v
opts	plugged/vim-quickui/test/test_nvim_list.vim	/^	let opts.index = 400$/;"	v
opts	plugged/vim-quickui/test/test_nvim_list.vim	/^	let opts.keymap = {'=':'TAG:1', '+':'TAG:1024'}$/;"	v
opts	plugged/vim-quickui/test/test_nvim_menu.vim	/^	let opts = {'name':'test'}$/;"	v
opts	plugged/vim-quickui/test/test_nvim_popup.vim	/^let opts = {'relative': 'editor', 'width': 10, 'height': 3, 'col': 0,$/;"	v
opts	plugged/vim-quickui/test/test_nvim_textbox.vim	/^	let opts = {'close':'button'}$/;"	v
opts	plugged/vim-quickui/test/test_nvim_textbox.vim	/^	let opts.index = 1$/;"	v
opts	plugged/vim-quickui/test/test_nvim_textbox.vim	/^	let opts.resize = 1$/;"	v
opts	plugged/vim-quickui/test/test_nvim_textbox.vim	/^	let opts.syntax = "cpp"$/;"	v
opts	plugged/vim-quickui/test/test_nvim_textbox.vim	/^	let opts.title = "title"$/;"	v
opts	plugged/vim-quickui/test/test_terminal.vim	/^let opts = {'w':60, 'h':8, 'callback':'TermExit'}$/;"	v
opts	plugged/vim-quickui/test/test_terminal.vim	/^let opts.title = 'Terminal Popup'$/;"	v
out	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^    out = executor.execute("ctags -f- -R")$/;"	v
output	plugged/ultisnips/test/vim_test_case.py	/^    output = ""$/;"	v	class:VimTestCase
outputToLoclist	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def outputToLoclist(self, *args, **kwargs):$/;"	m	class:LineExplManager
outputToLoclist	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def outputToLoclist(self, *args, **kwargs):$/;"	m	class:RgExplManager
outputToQflist	plugged/LeaderF/autoload/leaderf/python/leaderf/lineExpl.py	/^    def outputToQflist(self, *args, **kwargs):$/;"	m	class:LineExplManager
outputToQflist	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def outputToQflist(self, *args, **kwargs):$/;"	m	class:RgExplManager
overwrite	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite(self, buf, gtext):$/;"	m	class:TextObject
overwrite_with_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite_with_initial_text(self, buf):$/;"	m	class:TextObject
p	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> p             :exec g:Lf_py "bufTagExplManager._previewResult(Tru/;"	m
p	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> p             :exec g:Lf_py "colorschemeExplManager._previewResul/;"	m
p	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> p             :exec g:Lf_py "fileExplManager._previewResult(True)/;"	m
p	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> p             :exec g:Lf_py "functionExplManager._previewResult(T/;"	m
p	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> p             :exec g:Lf_py "gtagsExplManager._previewResult(True/;"	m
p	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> p             :exec g:Lf_py "lineExplManager._previewResult(True)/;"	m
p	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> p             :exec g:Lf_py "mruExplManager._previewResult(True)"/;"	m
p	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> p             :exec g:Lf_py "rgExplManager._previewResult(True)"</;"	m
p	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> p             :exec g:Lf_py "tagExplManager._previewResult(True)"/;"	m
p	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def p(self):$/;"	m	class:SnippetUtil
p	plugged/vista.vim/autoload/vista/ftplugin.vim	/^    nnoremap <buffer> <silent> p    :<c-u>call vista#cursor#TogglePreview()<CR>$/;"	m
p-limit	plugged/onedark.vim/build/package-lock.json	/^        "p-limit": "^2.2.0"$/;"	s	object:dependencies.p-locate.requires
p-limit	plugged/onedark.vim/build/package-lock.json	/^    "p-limit": {$/;"	o	object:dependencies
p-locate	plugged/onedark.vim/build/package-lock.json	/^        "p-locate": "^4.1.0"$/;"	s	object:dependencies.locate-path.requires
p-locate	plugged/onedark.vim/build/package-lock.json	/^    "p-locate": {$/;"	o	object:dependencies
p-try	plugged/onedark.vim/build/package-lock.json	/^        "p-try": "^2.0.0"$/;"	s	object:dependencies.p-limit.requires
p-try	plugged/onedark.vim/build/package-lock.json	/^    "p-try": {$/;"	o	object:dependencies
pPattern_ctxt	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^            PatternContext* pPattern_ctxt;$/;"	m	struct:FuzzyEngine::__anon07ea32bd030a::__anon07ea32bd0408	typeref:typename:PatternContext *	file:
packages	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*package[ \\t]+([a-zA-Z0-9_.]+)\/\\1\/p,packages\/$/;"	k	langdef:scala
parent-module	plugged/onedark.vim/build/package-lock.json	/^        "parent-module": "^1.0.0",$/;"	s	object:dependencies.import-fresh.requires
parent-module	plugged/onedark.vim/build/package-lock.json	/^    "parent-module": {$/;"	o	object:dependencies
parse-json	plugged/onedark.vim/build/package-lock.json	/^        "parse-json": "^5.0.0",$/;"	s	object:dependencies.cosmiconfig.requires
parse-json	plugged/onedark.vim/build/package-lock.json	/^    "parse-json": {$/;"	o	object:dependencies
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_args	plugged/ultisnips/test_all.py	/^    def parse_args():$/;"	f
parse_remote	plugged/vim-polyglot/scripts/build	/^def parse_remote(remote)$/;"	f
path	plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = substitute(path, ':', ',', 'g')$/;"	v
path	plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = substitute(path, '^\\.\\=:\\|:\\.\\=$\\|:\\.\\=:', ',,', 'g') " POSIX cwd$/;"	v
path	plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = system("gawk 'BEGIN { printf ENVIRON[\\"AWKPATH\\"] }'")$/;"	v
path-exists	plugged/onedark.vim/build/package-lock.json	/^        "path-exists": "^4.0.0"$/;"	s	object:dependencies.find-up.requires
path-exists	plugged/onedark.vim/build/package-lock.json	/^    "path-exists": {$/;"	o	object:dependencies
path-is-absolute	plugged/onedark.vim/build/package-lock.json	/^        "path-is-absolute": "^1.0.0"$/;"	s	object:dependencies.glob.requires
path-is-absolute	plugged/onedark.vim/build/package-lock.json	/^    "path-is-absolute": {$/;"	o	object:dependencies
path-key	plugged/onedark.vim/build/package-lock.json	/^        "path-key": "^3.1.0",$/;"	s	object:dependencies.cross-spawn.requires
path-key	plugged/onedark.vim/build/package-lock.json	/^    "path-key": {$/;"	o	object:dependencies
path-type	plugged/onedark.vim/build/package-lock.json	/^        "path-type": "^4.0.0",$/;"	s	object:dependencies.cosmiconfig.requires
path-type	plugged/onedark.vim/build/package-lock.json	/^    "path-type": {$/;"	o	object:dependencies
path_weight	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^        uint32_t path_weight;$/;"	m	union:FeResult::__anon07ea32bd010a	typeref:typename:uint32_t	file:
path_weights	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^        uint32_t* path_weights;$/;"	m	union:PySetTaskItem::__anon07ea32bd020a	typeref:typename:uint32_t *	file:
pathlist	plugged/vim-polyglot/autoload/julia/doc.vim	/^    let pathlist = sort(glob($LOCALAPPDATA . '\\Julia-*\\bin\\julia.exe', 1, 1))$/;"	v
paths	plugged/nvim-yarp/pythonx/yarp.py	/^    paths = nvim.eval(r'globpath(&rtp,"pythonx",1) . "\\n" .'$/;"	v
pattern	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    const char* pattern;$/;"	m	struct:PatternContext	typeref:typename:const char *
pattern	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def pattern(self):$/;"	m	class:LfCli
pattern_len	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    uint16_t pattern_len;$/;"	m	struct:PatternContext	typeref:typename:uint16_t
pattern_mask	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    int64_t pattern_mask[256];$/;"	m	struct:PatternContext	typeref:typename:int64_t[256]
pattern_to_condition	plugged/vim-polyglot/scripts/build	/^def pattern_to_condition(rule)$/;"	f	method:copy_file
patterns_to_vim_patterns	plugged/vim-polyglot/scripts/build	/^def patterns_to_vim_patterns(patterns)$/;"	f
peek	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
peek	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^                let perlpath = system("perl6 -e  '@*INC.join(q\/,\/).say'")$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^                let perlpath = system('perl6 -e  "@*INC.join(q\/,\/).say"')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^            let perlpath = ".,,"$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^            let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^        let perlpath = ".,,"$/;"	v
php_folding	plugged/vim-polyglot/syntax/php.vim	/^  let php_folding = 0$/;"	v
php_html_in_heredoc	plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_heredoc=1$/;"	v
php_html_in_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_heredoc=0$/;"	v
php_html_in_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_nowdoc=1$/;"	v
php_html_in_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_nowdoc=0$/;"	v
php_html_in_strings	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_strings=0$/;"	v
php_html_load	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_load=1$/;"	v
php_phpdoc_folding	plugged/vim-polyglot/syntax/php.vim	/^  let php_phpdoc_folding = 0$/;"	v
php_sql_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_heredoc=1$/;"	v
php_sql_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_nowdoc=1$/;"	v
php_sync_method	plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
php_xml_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_xml_heredoc=0$/;"	v
php_xml_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_xml_nowdoc=0$/;"	v
phrasing_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'co/;"	v
pkg-dir	plugged/onedark.vim/build/package-lock.json	/^        "pkg-dir": "^4.2.0",$/;"	s	object:dependencies.husky.requires
pkg-dir	plugged/onedark.vim/build/package-lock.json	/^    "pkg-dir": {$/;"	o	object:dependencies
placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def placeholder(self):$/;"	m	class:VisualContentPreserver
placeholder_pat	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^placeholder_pat = re.compile(r'^\\$\\{(\\d+):(.*?)\\}')$/;"	v
please-upgrade-node	plugged/onedark.vim/build/package-lock.json	/^        "please-upgrade-node": "^3.2.0",$/;"	s	object:dependencies.husky.requires
please-upgrade-node	plugged/onedark.vim/build/package-lock.json	/^    "please-upgrade-node": {$/;"	o	object:dependencies
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plugin	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    augroup plugin-xtabline$/;"	a
plugin	plugged/vim-polyglot/ftplugin/crystal.vim	/^augroup plugin-ft-crystal$/;"	a
plugin_cache_dir	plugged/ultisnips/test/vim_test_case.py	/^def plugin_cache_dir():$/;"	f
plugin_cache_dir	plugged/ultisnips/test_all.py	/^def plugin_cache_dir():$/;"	f
plugins	plugged/ultisnips/test/test_Plugin.py	/^    plugins = ["ervandew\/supertab"]$/;"	v	class:Plugin_SuperTab_SimpleTest
plugins	plugged/ultisnips/test/vim_test_case.py	/^    plugins = []$/;"	v	class:VimTestCase
polyglot	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  augroup polyglot-observer$/;"	a
polyglot	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  augroup polyglot-sleuth$/;"	a
polyglot	plugged/vim-polyglot/ftdetect/polyglot.vim	/^augroup polyglot-observer | augroup END$/;"	a
polyglot	plugged/vim-polyglot/plugin/polyglot.vim	/^    augroup polyglot-sensible$/;"	a
polyglot#detect#Asa	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Asa(...)$/;"	f
polyglot#detect#Asp	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Asp(...)$/;"	f
polyglot#detect#Bas	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Bas(...)$/;"	f
polyglot#detect#Fs	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Fs(...)$/;"	f
polyglot#detect#H	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#H(...)$/;"	f
polyglot#detect#Html	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Html(...)$/;"	f
polyglot#detect#Idr	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Idr(...)$/;"	f
polyglot#detect#Inp	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Inp(...)$/;"	f
polyglot#detect#Lidr	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Lidr(...)$/;"	f
polyglot#detect#M	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#M(...)$/;"	f
polyglot#detect#Pl	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Pl(...)$/;"	f
polyglot#detect#Pm	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Pm(...)$/;"	f
polyglot#detect#Re	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Re(...)$/;"	f
polyglot#detect#T	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#T(...)$/;"	f
polyglot#detect#Tt2	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Tt2(...)$/;"	f
polyglot#ft#BindzoneCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#BindzoneCheck(default)$/;"	f
polyglot#ft#CSH	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#CSH()$/;"	f
polyglot#ft#Check_inp	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#Check_inp()$/;"	f
polyglot#ft#DtraceCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#DtraceCheck()$/;"	f
polyglot#ft#EuphoriaCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#EuphoriaCheck()$/;"	f
polyglot#ft#FTRules	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTRules()$/;"	f
polyglot#ft#FTVB	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTVB(alt)$/;"	f
polyglot#ft#FTasm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTasm()$/;"	f
polyglot#ft#FTasmsyntax	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTasmsyntax()$/;"	f
polyglot#ft#FTbtm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTbtm()$/;"	f
polyglot#ft#FTchange	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTchange()$/;"	f
polyglot#ft#FTe	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTe()$/;"	f
polyglot#ft#FTent	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTent()$/;"	f
polyglot#ft#FTheader	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTheader()$/;"	f
polyglot#ft#FThtml	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FThtml()$/;"	f
polyglot#ft#FTidl	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTidl()$/;"	f
polyglot#ft#FTinc	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTinc()$/;"	f
polyglot#ft#FTlpc	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTlpc()$/;"	f
polyglot#ft#FTm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTm()$/;"	f
polyglot#ft#FTmm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTmm()$/;"	f
polyglot#ft#FTmms	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTmms()$/;"	f
polyglot#ft#FTnroff	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTnroff()$/;"	f
polyglot#ft#FTperl	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTperl()$/;"	f
polyglot#ft#FTpl	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTpl()$/;"	f
polyglot#ft#FTprogress_asm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_asm()$/;"	f
polyglot#ft#FTprogress_cweb	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_cweb()$/;"	f
polyglot#ft#FTprogress_pascal	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_pascal()$/;"	f
polyglot#ft#FTr	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTr()$/;"	f
polyglot#ft#FTtex	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTtex()$/;"	f
polyglot#ft#FTxml	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTxml()$/;"	f
polyglot#ft#FTy	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTy()$/;"	f
polyglot#ft#McSetf	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#McSetf()$/;"	f
polyglot#ft#ProtoCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#ProtoCheck(default)$/;"	f
polyglot#ft#Redif	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#Redif()$/;"	f
polyglot#ft#SQL	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SQL()$/;"	f
polyglot#ft#SetFileTypeSH	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SetFileTypeSH(name)$/;"	f
polyglot#ft#SetFileTypeShell	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SetFileTypeShell(name)$/;"	f
polyglot#shebang#Detect	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! polyglot#shebang#Detect()$/;"	f
polyglot#shebang#VimDetect	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! polyglot#shebang#VimDetect()$/;"	f
polyglot#sleuth#GlobForFiletype	plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^func! polyglot#sleuth#GlobForFiletype(type)$/;"	f
pony	plugged/vim-polyglot/indent/pony.vim	/^augroup pony$/;"	a
pony#ClearTrailingSpace	plugged/vim-polyglot/autoload/pony.vim	/^function! pony#ClearTrailingSpace(all, alt, ...)$/;"	f
pony#Indent	plugged/vim-polyglot/autoload/pony.vim	/^function! pony#Indent()$/;"	f
port	plugged/nvim-yarp/pythonx/yarp.py	/^        port = int(port)$/;"	v
port	plugged/nvim-yarp/pythonx/yarp.py	/^        serveraddr, port = serveraddr.split(':')$/;"	v
pos	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 5), (0, 5)$/;"	v	class:TestGuessing_DeleteOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_InsertOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_Noop0
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 6)$/;"	v	class:TestGuessing_BackspaceOneChar
pos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 8)$/;"	v	class:TestGuessing_InsertOneChar1
pos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
pos2lccol	plugged/ncm2/pythonx/ncm2.py	/^    def pos2lccol(self, pos, src):$/;"	m	class:Ncm2Base
positions	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    HighlightPos positions[64];$/;"	m	struct:HighlightGroup	typeref:typename:HighlightPos[64]
postscr_level	plugged/vim-polyglot/syntax/postscr.vim	/^  let postscr_level = 2$/;"	v
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 5), (0, 5)$/;"	v	class:TestGuessing_DeleteOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_InsertOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 6), (0, 7)$/;"	v	class:TestGuessing_Noop0
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 6)$/;"	v	class:TestGuessing_BackspaceOneChar
ppos	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    ppos, pos = (0, 7), (0, 8)$/;"	v	class:TestGuessing_InsertOneChar1
ppos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
ppwiz_highlight_defs	plugged/vim-polyglot/syntax/ppwiz.vim	/^    let ppwiz_highlight_defs = 1$/;"	v
ppwiz_with_html	plugged/vim-polyglot/syntax/ppwiz.vim	/^    let ppwiz_with_html = 1$/;"	v
pre-commit	plugged/onedark.vim/build/package.json	/^      "pre-commit": "npm test"$/;"	s	object:husky.hooks
prelude-ls	plugged/onedark.vim/build/package-lock.json	/^        "prelude-ls": "^1.2.1"$/;"	s	object:dependencies.type-check.requires
prelude-ls	plugged/onedark.vim/build/package-lock.json	/^        "prelude-ls": "^1.2.1",$/;"	s	object:dependencies.levn.requires
prelude-ls	plugged/onedark.vim/build/package-lock.json	/^        "prelude-ls": "^1.2.1",$/;"	s	object:dependencies.optionator.requires
prelude-ls	plugged/onedark.vim/build/package-lock.json	/^    "prelude-ls": {$/;"	o	object:dependencies
preserve	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
previousHistory	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def previousHistory(self, category):$/;"	m	class:LfCli
print_and	plugged/vim-polyglot/scripts/build	/^def print_and(list)$/;"	f	method:copy_file.rules_to_code.rule_to_code
print_help	plugged/ale/test/script/custom-linting-rules	/^function print_help() {$/;"	f
print_log	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^        def print_log(args):$/;"	f	member:GtagsExplorer._executeCmd	file:
print_pattern	plugged/vim-polyglot/scripts/import_vim	/^def print_pattern(p)$/;"	f
print_stack	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
print_x	plugged/vista.vim/test/data/123.cpp	/^void print_x(void)$/;"	f	typeref:typename:void
print_y	plugged/vista.vim/test/data/123.cpp	/^void print_y(void)$/;"	f	typeref:typename:void
prior_isk	plugged/vim-polyglot/syntax/rst.vim	/^    let prior_isk = &l:iskeyword$/;"	v
priority	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
process_list	plugged/vim-polyglot/scripts/build	/^def process_list(list, extras)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
progress	plugged/onedark.vim/build/package-lock.json	/^        "progress": "^2.0.0",$/;"	s	object:dependencies.eslint.requires
progress	plugged/onedark.vim/build/package-lock.json	/^    "progress": {$/;"	o	object:dependencies
progress	plugged/vim-polyglot/scripts/build	/^def progress$/;"	f	method:copy_file
punycode	plugged/onedark.vim/build/package-lock.json	/^        "punycode": "^2.1.0"$/;"	s	object:dependencies.uri-js.requires
punycode	plugged/onedark.vim/build/package-lock.json	/^    "punycode": {$/;"	o	object:dependencies
puppet	plugged/vim-polyglot/ctags/puppet.ctags	/^--langdef=puppet$/;"	l
puppet	plugged/vim-polyglot/ctags/puppet_u.ctags	/^--langdef=puppet$/;"	l
puppet#align#AlignHashrockets	plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#AlignHashrockets(...) abort$/;"	f
puppet#align#IndentLevel	plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#IndentLevel(lnum)$/;"	f
puppet#align#LinesInBlock	plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#LinesInBlock(lnum)$/;"	f
puppet#ctags#OptionFile	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^function! puppet#ctags#OptionFile()$/;"	f
puppet#ctags#Type	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^function! puppet#ctags#Type()$/;"	f
puppet#format#Fallback	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Fallback(start_lnum, end_lnum) abort$/;"	f
puppet#format#Format	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Format() abort$/;"	f
puppet#format#Hashrocket	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Hashrocket(start_lnum, end_lnum) abort$/;"	f
puppet#format#Indention	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Indention(start_lnum, end_lnum) abort$/;"	f
pyObject_ToStringAndSize	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static int32_t pyObject_ToStringAndSize(PyObject* obj, char** buffer, uint32_t* size)$/;"	f	typeref:typename:int32_t	file:
py_source	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    PyObject* py_source;$/;"	m	struct:PySetTaskItem	typeref:typename:PyObject *	file:
pytest	plugged/ale/test/command_callback/python_paths/namespace_package_pytest/pytest.ini	/^[pytest]$/;"	s
python#utils#fix_qflist	plugged/vim-polyglot/autoload/python/utils.vim	/^function! python#utils#fix_qflist() " {{{$/;"	f
python_version	plugged/ultisnips/mypy.ini	/^python_version = 3.7$/;"	k	section:mypy
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q  :if b:plug_preview==1<bar>pc<bar>endif<bar>bd<cr>$/;"	m
q	autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py b:Lf_AnyExplManager."quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "bufTagExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "bufExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Colors.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "colorschemeExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Command.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "commandExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "fileExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Filetype.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "filetypeExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "functionExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "gtagsExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "helpExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/History.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "historyExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "lineExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "mruExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "qfloclistExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "rgExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Self.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "selfExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "tagExplManager.quit()"<CR>$/;"	m
q	plugged/LeaderF/autoload/leaderf/Window.vim	/^    nnoremap <buffer> <silent> q             :exec g:Lf_py "windowExplManager.quit()"<CR>$/;"	m
q	plugged/ale/ftplugin/ale-fix-suggest.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	plugged/ale/ftplugin/ale-preview.vim	/^noremap <buffer> q :q!<CR>$/;"	m
q	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> q    :<C-U>bdelete<Bar>echohl WarningMsg<Bar>echo "Temp file q /;"	m
q	plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> q :<C-U>if bufnr('$') == 1<Bar>quit<Bar>else<Bar>bdelete<Bar>en/;"	m
q	plugged/vim-polyglot/autoload/ledger.vim	/^  nnoremap <silent> <buffer> q <c-w><c-p>@=winnr('#')<cr><c-w>c$/;"	m
q	plugged/vim-polyglot/ftplugin/coffee.vim	/^  nnoremap <buffer> <silent> q :hide<CR>$/;"	m
q	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^  nnoremap <buffer> <silent> q :q<CR>$/;"	m
q	plugged/vim-polyglot/ftplugin/ls.vim	/^    nnoremap <buffer> <silent> q :hide<CR>$/;"	m
q	plugged/vista.vim/autoload/vista/ftplugin.vim	/^    nnoremap <buffer> <silent> q    :close<CR>$/;"	m
qfloclistExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^qfloclistExplManager = QfLocListExplManager()$/;"	v
quickui	plugged/vim-quickui/plugin/quickui.vim	/^augroup quickui "{{{$/;"	a
quickui#context#close	plugged/vim-quickui/autoload/quickui/context.vim	/^function! quickui#context#close(hwnd)$/;"	f
quickui#context#compile	plugged/vim-quickui/autoload/quickui/context.vim	/^function! quickui#context#compile(items, border)$/;"	f
quickui#context#open	plugged/vim-quickui/autoload/quickui/context.vim	/^function! quickui#context#open(textlist, opts)$/;"	f
quickui#context#reduce_items	plugged/vim-quickui/autoload/quickui/context.vim	/^function! quickui#context#reduce_items(textlist)$/;"	f
quickui#context#update	plugged/vim-quickui/autoload/quickui/context.vim	/^function! quickui#context#update(hwnd)$/;"	f
quickui#core#around_cursor	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#around_cursor(width, height)$/;"	f
quickui#core#border_convert	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#border_convert(pattern)$/;"	f
quickui#core#border_extract	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#border_extract(pattern)$/;"	f
quickui#core#border_get	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#border_get(name)$/;"	f
quickui#core#border_install	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#border_install(name, pattern)$/;"	f
quickui#core#border_vim	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#border_vim(name)$/;"	f
quickui#core#chdir	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#chdir(path)$/;"	f
quickui#core#cursor_pos	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#cursor_pos()$/;"	f
quickui#core#escape	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#escape(text)$/;"	f
quickui#core#expand_text	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#expand_text(string) abort$/;"	f
quickui#core#high_region	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#high_region(name, srow, scol, erow, ecol, virtual)$/;"	f
quickui#core#in_screen	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#in_screen(line, column, width, height)$/;"	f
quickui#core#input	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#input(prompt, text)$/;"	f
quickui#core#instance	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#instance()$/;"	f
quickui#core#mock_function	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#mock_function(id, text)$/;"	f
quickui#core#object	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#object(bid)$/;"	f
quickui#core#object_acquire	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#object_acquire(name)$/;"	f
quickui#core#object_release	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#object_release(name, obj)$/;"	f
quickui#core#popup_alloc	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#popup_alloc(name)$/;"	f
quickui#core#popup_clear	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#popup_clear(winid)$/;"	f
quickui#core#popup_local	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#popup_local(winid)$/;"	f
quickui#core#popup_release	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#popup_release(name, winid)$/;"	f
quickui#core#scratch_buffer	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#scratch_buffer(name, textlist)$/;"	f
quickui#core#screen_fit	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#screen_fit(line, column, width, height)$/;"	f
quickui#core#single_parse	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#single_parse(description)$/;"	f
quickui#core#string_compose	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#string_compose(target, pos, source)$/;"	f
quickui#core#string_fit	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#string_fit(source, size)$/;"	f
quickui#core#string_replace	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#string_replace(text, old, new)$/;"	f
quickui#core#win_execute	plugged/vim-quickui/autoload/quickui/core.vim	/^function! quickui#core#win_execute(winid, command)$/;"	f
quickui#listbox#close	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! quickui#listbox#close(hwnd)$/;"	f
quickui#listbox#cursor_movement	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! quickui#listbox#cursor_movement(where)$/;"	f
quickui#listbox#inputlist	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! quickui#listbox#inputlist(textlist, opts)$/;"	f
quickui#listbox#open	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! quickui#listbox#open(content, opts)$/;"	f
quickui#listbox#parse	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! quickui#listbox#parse(textlist)$/;"	f
quickui#listbox#reposition	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! quickui#listbox#reposition()$/;"	f
quickui#menu#available	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#available(name)$/;"	f
quickui#menu#callback	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#callback(winid, code)$/;"	f
quickui#menu#change_ft	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#change_ft(section, ft)$/;"	f
quickui#menu#change_weight	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#change_weight(section, weight)$/;"	f
quickui#menu#clear	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#clear(section)$/;"	f
quickui#menu#close	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#close()$/;"	f
quickui#menu#context_exit	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#context_exit(code)$/;"	f
quickui#menu#create	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#create(opts)$/;"	f
quickui#menu#filter	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#filter(winid, key)$/;"	f
quickui#menu#install	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#install(section, content, ...)$/;"	f
quickui#menu#nvim_open_menu	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#nvim_open_menu(opts)$/;"	f
quickui#menu#open	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#open(...)$/;"	f
quickui#menu#preset	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#preset(section, context, ...)$/;"	f
quickui#menu#register	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#register(section, entry, command, help)$/;"	f
quickui#menu#remove	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#remove(section, index)$/;"	f
quickui#menu#reset	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#reset()$/;"	f
quickui#menu#section	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#section(section)$/;"	f
quickui#menu#switch	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#switch(name)$/;"	f
quickui#menu#update	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! quickui#menu#update()$/;"	f
quickui#preview#close	plugged/vim-quickui/autoload/quickui/preview.vim	/^function! quickui#preview#close()$/;"	f
quickui#preview#display	plugged/vim-quickui/autoload/quickui/preview.vim	/^function! quickui#preview#display(content, opts)$/;"	f
quickui#preview#open	plugged/vim-quickui/autoload/quickui/preview.vim	/^function! quickui#preview#open(content, opts)$/;"	f
quickui#preview#scroll	plugged/vim-quickui/autoload/quickui/preview.vim	/^function! quickui#preview#scroll(offset)$/;"	f
quickui#preview#visible	plugged/vim-quickui/autoload/quickui/preview.vim	/^function! quickui#preview#visible()$/;"	f
quickui#tags#ctags_function	plugged/vim-quickui/autoload/quickui/tags.vim	/^function! quickui#tags#ctags_function(bid, ft)$/;"	f
quickui#tags#function_list	plugged/vim-quickui/autoload/quickui/tags.vim	/^function! quickui#tags#function_list(bid, ft)$/;"	f
quickui#tags#signature	plugged/vim-quickui/autoload/quickui/tags.vim	/^function! quickui#tags#signature(funname, fn_only, filetype)$/;"	f
quickui#tags#tagfind	plugged/vim-quickui/autoload/quickui/tags.vim	/^function! quickui#tags#tagfind(tagname)$/;"	f
quickui#tags#taglist	plugged/vim-quickui/autoload/quickui/tags.vim	/^function! quickui#tags#taglist(pattern)$/;"	f
quickui#terminal#create	plugged/vim-quickui/autoload/quickui/terminal.vim	/^function! quickui#terminal#create(cmd, opts)$/;"	f
quickui#terminal#open	plugged/vim-quickui/autoload/quickui/terminal.vim	/^function! quickui#terminal#open(cmd, opts)$/;"	f
quickui#textbox#close	plugged/vim-quickui/autoload/quickui/textbox.vim	/^function! quickui#textbox#close(winid)$/;"	f
quickui#textbox#command	plugged/vim-quickui/autoload/quickui/textbox.vim	/^function! quickui#textbox#command(cmd, opts)$/;"	f
quickui#textbox#create	plugged/vim-quickui/autoload/quickui/textbox.vim	/^function! quickui#textbox#create(textlist, opts)$/;"	f
quickui#textbox#open	plugged/vim-quickui/autoload/quickui/textbox.vim	/^function! quickui#textbox#open(textlist, opts)$/;"	f
quickui#textbox#reposition	plugged/vim-quickui/autoload/quickui/textbox.vim	/^function! quickui#textbox#reposition()$/;"	f
quickui#tools#buffer_switch	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#buffer_switch(bid)$/;"	f
quickui#tools#clever_context	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#clever_context(name, content, opts)$/;"	f
quickui#tools#clever_listbox	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#clever_listbox(name, content, opts)$/;"	f
quickui#tools#display_help	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#display_help(tag)$/;"	f
quickui#tools#display_messages	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#display_messages()$/;"	f
quickui#tools#list_buffer	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#list_buffer(switch)$/;"	f
quickui#tools#list_function	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#list_function()$/;"	f
quickui#tools#list_register	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#list_register()$/;"	f
quickui#tools#preview_quickfix	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#preview_quickfix(...)$/;"	f
quickui#tools#preview_tag	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#preview_tag(tagname)$/;"	f
quickui#tools#python_help	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! quickui#tools#python_help(word)$/;"	f
quickui#utils#center	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#center(winid)$/;"	f
quickui#utils#context_align	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#context_align(item, left_size, right_size)$/;"	f
quickui#utils#current_topline	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#current_topline()$/;"	f
quickui#utils#errmsg	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#errmsg(what)$/;"	f
quickui#utils#get_cursor	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#get_cursor(winid)$/;"	f
quickui#utils#get_topline	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#get_topline(winid)$/;"	f
quickui#utils#highlight	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#highlight(style)$/;"	f
quickui#utils#item_parse	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#item_parse(description)$/;"	f
quickui#utils#keymap	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#keymap()$/;"	f
quickui#utils#make_border	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#make_border(width, height, border, title, button)$/;"	f
quickui#utils#max_height	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#max_height(percentage)$/;"	f
quickui#utils#movement	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#movement(offset)$/;"	f
quickui#utils#print	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#print(content, highlight, ...)$/;"	f
quickui#utils#scroll	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#scroll(winid, offset)$/;"	f
quickui#utils#search_next	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#search_next(winid, cmd)$/;"	f
quickui#utils#search_or_jump	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#search_or_jump(winid, cmd)$/;"	f
quickui#utils#show_cursor	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#show_cursor(winid, row)$/;"	f
quickui#utils#size_parse	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#size_parse(text, is_height)$/;"	f
quickui#utils#system	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#system(cmd)$/;"	f
quickui#utils#tools_width	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#tools_width()$/;"	f
quickui#utils#update_cursor	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! quickui#utils#update_cursor(winid)$/;"	f
quit	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def quit(self):$/;"	m	class:Manager
quit	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def quit(self):$/;"	m	class:RgExplManager
quotes	plugged/onedark.vim/build/.eslintrc.json	/^        "quotes": [$/;"	a	object:rules
qux	plugged/vista.vim/test/data/ctags_tree_view.py	/^    def qux(self):$/;"	m	class:Foo
qux1	plugged/vista.vim/test/data/ctags_tree_view.py	/^    def qux1(self):$/;"	m	class:Foo
r	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> r             :exec g:Lf_py "rgExplManager.replace()"<CR>$/;"	m
rangerCallback.on_exit	plugged/ranger.vim/plugin/ranger.vim	/^    function! rangerCallback.on_exit(job_id, code, event)$/;"	f
rdfa_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': /;"	v
rdfa_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
read	plugged/LeaderF/autoload/leaderf/python/leaderf/asyncExecutor.py	/^            def read(source):$/;"	f	member:AsyncExecutor.execute	file:
read_token	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def read_token(self):$/;"	m	class:LfShlex
readable-stream	plugged/onedark.vim/build/package-lock.json	/^        "readable-stream": "^3.0.2",$/;"	s	object:dependencies.concat-stream.requires
readable-stream	plugged/onedark.vim/build/package-lock.json	/^    "readable-stream": {$/;"	o	object:dependencies
reconcile	plugged/vim-polyglot/autoload/ledger.vim	/^    augroup reconcile$/;"	a
reconcile	plugged/vim-polyglot/autoload/ledger.vim	/^  augroup reconcile$/;"	a
referrerpolicy	plugged/vim-polyglot/autoload/xml/html5.vim	/^let referrerpolicy = ['no-referrer', 'no-referrer-when-downgrade', 'same-origin', 'origin', 'str/;"	v
refresh	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def refresh(self, normal_mode=True):$/;"	m	class:Manager
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def refresh(self):$/;"	m	class:SnippetSource
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def refresh(self):$/;"	m	class:SnippetFileSource
refreshPopupStatusline	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def refreshPopupStatusline(self):$/;"	m	class:LfInstance
regex_extra	plugged/vim-polyglot/ftplugin/sql.vim	/^                let regex_extra = '\\\\w*'$/;"	v
regex_extra	plugged/vim-polyglot/ftplugin/sql.vim	/^        let regex_extra = ''$/;"	v
regexpp	plugged/onedark.vim/build/package-lock.json	/^        "regexpp": "^3.1.0",$/;"	s	object:dependencies.eslint.requires
regexpp	plugged/onedark.vim/build/package-lock.json	/^    "regexpp": {$/;"	o	object:dependencies
register_lsp_source	plugged/ncm2/lua/ncm2/init.lua	/^local function register_lsp_source(client, result)$/;"	f
register_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
relationship_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let relationship_attributes = {$/;"	v
relrev	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'inde/;"	v
remember_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
remembered_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
removeCache	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def removeCache(self, buf_number):$/;"	m	class:BufTagExplManager
removeCache	plugged/LeaderF/autoload/leaderf/python/leaderf/bufTagExpl.py	/^    def removeCache(self, buf_number):$/;"	m	class:BufTagExplorer
removeCache	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def removeCache(self, buf_number):$/;"	m	class:FunctionExplManager
removeCache	plugged/LeaderF/autoload/leaderf/python/leaderf/functionExpl.py	/^    def removeCache(self, buf_number):$/;"	m	class:FunctionExplorer
removeDevIcons	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def removeDevIcons(func):$/;"	f
removeFiles	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^        def removeFiles(names):$/;"	f	member:RgExplorer.getContent	file:
remove_comment_lines	plugged/ale/test/script/block-padding-checker	/^def remove_comment_lines(line_iter):$/;"	f
render_snippet	plugged/ncm2-go/pythonx/ncm2_go.py	/^    def render_snippet(self, complete, item):$/;"	m	class:Source
render_snippet	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^    def render_snippet(self, item, complete, is_import):$/;"	m	class:Source
replace	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def replace(self):$/;"	m	class:RgExplManager
replace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replace_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replace_initial_text(self, buf):$/;"	m	class:SnippetInstance
replay_user_edits	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replay_user_edits(self, cmds, ctab=None):$/;"	m	class:SnippetInstance
repository	plugged/gruvbox/package.json	/^  "repository": "git@github.com:morhetz\/gruvbox.git",$/;"	s
repository	plugged/onedark.vim/build/package.json	/^  "repository": {$/;"	o
repository	plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	o
repro	plugged/ultisnips/Makefile	/^repro:$/;"	t
request	plugged/vim-translator/script/translator.py	/^    def request(self, url, data=None, post=False, header=None):$/;"	m	class:BasicTranslator
requires	plugged/onedark.vim/build/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.@babel/highlight.dependencies.chalk
requires	plugged/onedark.vim/build/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.chalk.dependencies.ansi-styles
requires	plugged/onedark.vim/build/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.chalk.dependencies.color-convert
requires	plugged/onedark.vim/build/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.chalk.dependencies.supports-color
requires	plugged/onedark.vim/build/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.string-width.dependencies.strip-ansi
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/code-frame
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/highlight
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@eslint/eslintrc
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.ajv
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.ansi-styles
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.argparse
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.brace-expansion
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.chalk
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.color-convert
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.colr
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.concat-stream
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cosmiconfig
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cross-spawn
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.debug
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.doctrine
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.enquirer
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.error-ex
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-scope
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-utils
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.espree
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.esquery
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.esrecurse
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.file-entry-cache
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.find-up
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.find-versions
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.flat-cache
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.glob
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.glob-parent
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.globals
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.husky
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.import-fresh
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.inflight
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-glob
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.js-yaml
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.levn
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.locate-path
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.lru-cache
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.minimatch
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.mkdirp
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.once
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.optionator
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.p-limit
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.p-locate
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.parent-module
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.parse-json
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pkg-dir
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.please-upgrade-node
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.readable-stream
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.rimraf
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.semver
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.shebang-command
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.slice-ansi
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string-width
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string_decoder
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.strip-ansi
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.supports-color
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.table
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.termcolors
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.type-check
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.uri-js
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.which
requires	plugged/onedark.vim/build/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.write
requires	plugged/onedark.vim/build/package-lock.json	/^  "requires": true,$/;"	b
reset	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset_indent	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
resolve-from	plugged/onedark.vim/build/package-lock.json	/^        "resolve-from": "^4.0.0"$/;"	s	object:dependencies.import-fresh.requires
resolve-from	plugged/onedark.vim/build/package-lock.json	/^    "resolve-from": {$/;"	o	object:dependencies
resolve_ambiguity	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def resolve_ambiguity(all_tokens, seen_ts):$/;"	f
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/ansi-regex\/-\/ansi/;"	s	object:dependencies.string-width.dependencies.ansi-regex
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/ansi-styles\/-\/ans/;"	s	object:dependencies.chalk.dependencies.ansi-styles
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/chalk\/-\/chalk-2.4/;"	s	object:dependencies.@babel/highlight.dependencies.chalk
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/color-convert\/-\/c/;"	s	object:dependencies.chalk.dependencies.color-convert
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/color-name\/-\/colo/;"	s	object:dependencies.chalk.dependencies.color-name
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/eslint-visitor-keys/;"	s	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/eslint-visitor-keys/;"	s	object:dependencies.espree.dependencies.eslint-visitor-keys
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/estraverse\/-\/estr/;"	s	object:dependencies.esquery.dependencies.estraverse
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/estraverse\/-\/estr/;"	s	object:dependencies.esrecurse.dependencies.estraverse
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/has-flag\/-\/has-fl/;"	s	object:dependencies.chalk.dependencies.has-flag
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/strip-ansi\/-\/stri/;"	s	object:dependencies.string-width.dependencies.strip-ansi
resolved	plugged/onedark.vim/build/package-lock.json	/^          "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/supports-color\/-\//;"	s	object:dependencies.chalk.dependencies.supports-color
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/@babel\/code-frame\/-\//;"	s	object:dependencies.@babel/code-frame
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/@babel\/helper-validato/;"	s	object:dependencies.@babel/helper-validator-identifier
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/@babel\/highlight\/-\/h/;"	s	object:dependencies.@babel/highlight
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/@eslint\/eslintrc\/-\/e/;"	s	object:dependencies.@eslint/eslintrc
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/@types\/parse-json\/-\//;"	s	object:dependencies.@types/parse-json
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/acorn-jsx\/-\/acorn-jsx/;"	s	object:dependencies.acorn-jsx
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/acorn\/-\/acorn-7.4.1.t/;"	s	object:dependencies.acorn
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/ajv\/-\/ajv-6.12.6.tgz"/;"	s	object:dependencies.ajv
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/ansi-colors\/-\/ansi-co/;"	s	object:dependencies.ansi-colors
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/ansi-regex\/-\/ansi-reg/;"	s	object:dependencies.ansi-regex
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/ansi-styles\/-\/ansi-st/;"	s	object:dependencies.ansi-styles
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/argparse\/-\/argparse-1/;"	s	object:dependencies.argparse
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/astral-regex\/-\/astral/;"	s	object:dependencies.astral-regex
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/balanced-match\/-\/bala/;"	s	object:dependencies.balanced-match
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/brace-expansion\/-\/bra/;"	s	object:dependencies.brace-expansion
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/buffer-from\/-\/buffer-/;"	s	object:dependencies.buffer-from
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/callsites\/-\/callsites/;"	s	object:dependencies.callsites
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/chalk\/-\/chalk-4.1.0.t/;"	s	object:dependencies.chalk
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/ci-info\/-\/ci-info-2.0/;"	s	object:dependencies.ci-info
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/color-convert\/-\/color/;"	s	object:dependencies.color-convert
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/color-name\/-\/color-na/;"	s	object:dependencies.color-name
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/colr-convert\/-\/colr-c/;"	s	object:dependencies.colr-convert
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/colr\/-\/colr-1.2.2.tgz/;"	s	object:dependencies.colr
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/commander\/-\/commander/;"	s	object:dependencies.commander
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/compare-versions\/-\/co/;"	s	object:dependencies.compare-versions
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/concat-map\/-\/concat-m/;"	s	object:dependencies.concat-map
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/concat-stream\/-\/conca/;"	s	object:dependencies.concat-stream
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/cosmiconfig\/-\/cosmico/;"	s	object:dependencies.cosmiconfig
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/cross-spawn\/-\/cross-s/;"	s	object:dependencies.cross-spawn
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/debug\/-\/debug-4.3.1.t/;"	s	object:dependencies.debug
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/deep-is\/-\/deep-is-0.1/;"	s	object:dependencies.deep-is
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/doctrine\/-\/doctrine-3/;"	s	object:dependencies.doctrine
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/dot\/-\/dot-1.1.3.tgz",$/;"	s	object:dependencies.dot
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/emoji-regex\/-\/emoji-r/;"	s	object:dependencies.emoji-regex
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/enquirer\/-\/enquirer-2/;"	s	object:dependencies.enquirer
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/error-ex\/-\/error-ex-1/;"	s	object:dependencies.error-ex
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/escape-string-regexp\/-/;"	s	object:dependencies.escape-string-regexp
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/eslint-scope\/-\/eslint/;"	s	object:dependencies.eslint-scope
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/eslint-utils\/-\/eslint/;"	s	object:dependencies.eslint-utils
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/eslint-visitor-keys\/-\//;"	s	object:dependencies.eslint-visitor-keys
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/eslint\/-\/eslint-7.14./;"	s	object:dependencies.eslint
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/espree\/-\/espree-7.3.0/;"	s	object:dependencies.espree
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/esprima\/-\/esprima-4.0/;"	s	object:dependencies.esprima
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/esquery\/-\/esquery-1.3/;"	s	object:dependencies.esquery
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/esrecurse\/-\/esrecurse/;"	s	object:dependencies.esrecurse
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/estraverse\/-\/estraver/;"	s	object:dependencies.estraverse
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/esutils\/-\/esutils-2.0/;"	s	object:dependencies.esutils
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/fast-deep-equal\/-\/fas/;"	s	object:dependencies.fast-deep-equal
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/fast-json-stable-string/;"	s	object:dependencies.fast-json-stable-stringify
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/fast-levenshtein\/-\/fa/;"	s	object:dependencies.fast-levenshtein
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/file-entry-cache\/-\/fi/;"	s	object:dependencies.file-entry-cache
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/find-up\/-\/find-up-4.1/;"	s	object:dependencies.find-up
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/find-versions\/-\/find-/;"	s	object:dependencies.find-versions
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/flat-cache\/-\/flat-cac/;"	s	object:dependencies.flat-cache
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/flatted\/-\/flatted-2.0/;"	s	object:dependencies.flatted
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/fs.realpath\/-\/fs.real/;"	s	object:dependencies.fs.realpath
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/functional-red-black-tr/;"	s	object:dependencies.functional-red-black-tree
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/glob-parent\/-\/glob-pa/;"	s	object:dependencies.glob-parent
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/glob\/-\/glob-7.1.6.tgz/;"	s	object:dependencies.glob
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/globals\/-\/globals-12./;"	s	object:dependencies.globals
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/has-flag\/-\/has-flag-3/;"	s	object:dependencies.has-flag
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/husky\/-\/husky-4.3.0.t/;"	s	object:dependencies.husky
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/ignore\/-\/ignore-4.0.6/;"	s	object:dependencies.ignore
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/import-fresh\/-\/import/;"	s	object:dependencies.import-fresh
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/imurmurhash\/-\/imurmur/;"	s	object:dependencies.imurmurhash
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/inflight\/-\/inflight-1/;"	s	object:dependencies.inflight
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/inherits\/-\/inherits-2/;"	s	object:dependencies.inherits
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/is-arrayish\/-\/is-arra/;"	s	object:dependencies.is-arrayish
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/is-extglob\/-\/is-extgl/;"	s	object:dependencies.is-extglob
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/is-fullwidth-code-point/;"	s	object:dependencies.is-fullwidth-code-point
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/is-glob\/-\/is-glob-4.0/;"	s	object:dependencies.is-glob
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/isexe\/-\/isexe-2.0.0.t/;"	s	object:dependencies.isexe
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/js-tokens\/-\/js-tokens/;"	s	object:dependencies.js-tokens
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/js-yaml\/-\/js-yaml-3.1/;"	s	object:dependencies.js-yaml
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/json-parse-even-better-/;"	s	object:dependencies.json-parse-even-better-errors
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/json-schema-traverse\/-/;"	s	object:dependencies.json-schema-traverse
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/json-stable-stringify-w/;"	s	object:dependencies.json-stable-stringify-without-jsonify
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/levn\/-\/levn-0.4.1.tgz/;"	s	object:dependencies.levn
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/lines-and-columns\/-\/l/;"	s	object:dependencies.lines-and-columns
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/locate-path\/-\/locate-/;"	s	object:dependencies.locate-path
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/lodash\/-\/lodash-4.17./;"	s	object:dependencies.lodash
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/lru-cache\/-\/lru-cache/;"	s	object:dependencies.lru-cache
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/minimatch\/-\/minimatch/;"	s	object:dependencies.minimatch
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/minimist\/-\/minimist-1/;"	s	object:dependencies.minimist
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/mkdirp\/-\/mkdirp-0.5.5/;"	s	object:dependencies.mkdirp
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/ms\/-\/ms-2.1.2.tgz",$/;"	s	object:dependencies.ms
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/natural-compare\/-\/nat/;"	s	object:dependencies.natural-compare
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/once\/-\/once-1.4.0.tgz/;"	s	object:dependencies.once
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/opencollective-postinst/;"	s	object:dependencies.opencollective-postinstall
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/optionator\/-\/optionat/;"	s	object:dependencies.optionator
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/p-limit\/-\/p-limit-2.3/;"	s	object:dependencies.p-limit
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/p-locate\/-\/p-locate-4/;"	s	object:dependencies.p-locate
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/p-try\/-\/p-try-2.2.0.t/;"	s	object:dependencies.p-try
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/parent-module\/-\/paren/;"	s	object:dependencies.parent-module
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/parse-json\/-\/parse-js/;"	s	object:dependencies.parse-json
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/path-exists\/-\/path-ex/;"	s	object:dependencies.path-exists
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/path-is-absolute\/-\/pa/;"	s	object:dependencies.path-is-absolute
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/path-key\/-\/path-key-3/;"	s	object:dependencies.path-key
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/path-type\/-\/path-type/;"	s	object:dependencies.path-type
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/pkg-dir\/-\/pkg-dir-4.2/;"	s	object:dependencies.pkg-dir
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/please-upgrade-node\/-\//;"	s	object:dependencies.please-upgrade-node
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/prelude-ls\/-\/prelude-/;"	s	object:dependencies.prelude-ls
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/progress\/-\/progress-2/;"	s	object:dependencies.progress
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/punycode\/-\/punycode-2/;"	s	object:dependencies.punycode
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/readable-stream\/-\/rea/;"	s	object:dependencies.readable-stream
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/regexpp\/-\/regexpp-3.1/;"	s	object:dependencies.regexpp
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/resolve-from\/-\/resolv/;"	s	object:dependencies.resolve-from
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/rimraf\/-\/rimraf-2.6.3/;"	s	object:dependencies.rimraf
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/safe-buffer\/-\/safe-bu/;"	s	object:dependencies.safe-buffer
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/semver-compare\/-\/semv/;"	s	object:dependencies.semver-compare
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/semver-regex\/-\/semver/;"	s	object:dependencies.semver-regex
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/semver\/-\/semver-7.3.4/;"	s	object:dependencies.semver
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/shebang-command\/-\/she/;"	s	object:dependencies.shebang-command
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/shebang-regex\/-\/sheba/;"	s	object:dependencies.shebang-regex
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/slash\/-\/slash-3.0.0.t/;"	s	object:dependencies.slash
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/slice-ansi\/-\/slice-an/;"	s	object:dependencies.slice-ansi
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/sprintf-js\/-\/sprintf-/;"	s	object:dependencies.sprintf-js
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/string-width\/-\/string/;"	s	object:dependencies.string-width
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/string_decoder\/-\/stri/;"	s	object:dependencies.string_decoder
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/strip-ansi\/-\/strip-an/;"	s	object:dependencies.strip-ansi
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/strip-json-comments\/-\//;"	s	object:dependencies.strip-json-comments
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/supports-color\/-\/supp/;"	s	object:dependencies.supports-color
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/table\/-\/table-5.4.6.t/;"	s	object:dependencies.table
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/termcolors\/-\/termcolo/;"	s	object:dependencies.termcolors
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/text-table\/-\/text-tab/;"	s	object:dependencies.text-table
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/type-check\/-\/type-che/;"	s	object:dependencies.type-check
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/type-fest\/-\/type-fest/;"	s	object:dependencies.type-fest
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/typedarray\/-\/typedarr/;"	s	object:dependencies.typedarray
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/uri-js\/-\/uri-js-4.4.0/;"	s	object:dependencies.uri-js
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/util-deprecate\/-\/util/;"	s	object:dependencies.util-deprecate
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/v8-compile-cache\/-\/v8/;"	s	object:dependencies.v8-compile-cache
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/which-pm-runs\/-\/which/;"	s	object:dependencies.which-pm-runs
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/which\/-\/which-2.0.2.t/;"	s	object:dependencies.which
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/word-wrap\/-\/word-wrap/;"	s	object:dependencies.word-wrap
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/wrappy\/-\/wrappy-1.0.2/;"	s	object:dependencies.wrappy
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/write\/-\/write-1.0.3.t/;"	s	object:dependencies.write
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/yallist\/-\/yallist-4.0/;"	s	object:dependencies.yallist
resolved	plugged/onedark.vim/build/package-lock.json	/^      "resolved": "https:\/\/indigoag.jfrog.io\/indigoag\/api\/npm\/npm\/yaml\/-\/yaml-1.10.0.tg/;"	s	object:dependencies.yaml
resource	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*[~|\\-]?>?[[:space:]]*([a-z][a-zA-Z0-9_:]+)[[:space:]]*\\{ *(.*):\//;"	k	langdef:puppet
restore_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
results	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^        FeResult*        results;$/;"	m	union:FuzzyEngine::__anon07ea32bd060a	typeref:typename:FeResult *	file:
rgExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^rgExplManager = RgExplManager()$/;"	v
rg_getDigest	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static void rg_getDigest(char** str, uint32_t* length, RgParameter* param)$/;"	f	typeref:typename:void	file:
rimraf	plugged/onedark.vim/build/package-lock.json	/^        "rimraf": "2.6.3",$/;"	s	object:dependencies.flat-cache.requires
rimraf	plugged/onedark.vim/build/package-lock.json	/^    "rimraf": {$/;"	o	object:dependencies
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, dpub_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, graphic_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, dpub_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['cell'] = abstract_role['section'] + ['aria-colindex', 'aria-colspan', 'aria/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['feed'] = role_attributes['list']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['figure'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-le/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-mult/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbo/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['ra/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['none'] = role_attributes['presentation']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin'/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation'/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['searchbox'] = role_attributes['textbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'ari/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['switch'] = role_attributes['checkbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-sel/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['table'] = abstract_role['section'] + ['aria-colcount', 'aria-rowcount']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['term'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline'/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required'/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
root_path	plugged/ncm2-path/pythonx/ncm2_path.py	/^root_path = RootPath(vim)$/;"	v
rp.error	plugged/nvim-yarp/autoload/yarp/core.vim	/^    func rp.error(msg) dict$/;"	f
rp.warn	plugged/nvim-yarp/autoload/yarp/core.vim	/^    func rp.warn(msg) dict$/;"	f
ruby_minlines	plugged/vim-polyglot/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
rule_to_code	plugged/vim-polyglot/scripts/build	/^def rule_to_code(rule)$/;"	f	method:copy_file.rules_to_code
rules	plugged/onedark.vim/build/.eslintrc.json	/^    "rules": {$/;"	o
rules_to_code	plugged/vim-polyglot/scripts/build	/^def rules_to_code(rules)$/;"	f	method:copy_file
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	plugged/ultisnips/test/vim_test_case.py	/^    def runTest(self):$/;"	m	class:VimTestCase
run_script	plugged/vim-polyglot/scripts/test	/^def run_script(src)$/;"	f
run_vimscript	plugged/vim-polyglot/scripts/test	/^def run_vimscript(src)$/;"	f
runner	plugged/vim-translator/script/translator.py	/^    def runner(translator):$/;"	f	function:main	file:
running_on_windows	plugged/ultisnips/test/util.py	/^def running_on_windows():$/;"	f
rust	plugged/vim-polyglot/after/syntax/rust.vim	/^    augroup rust.vim.after$/;"	a
rust	plugged/vim-polyglot/ftplugin/rust.vim	/^    augroup rust.vim.DelimitMate$/;"	a
rust	plugged/vim-polyglot/ftplugin/rust.vim	/^augroup rust.vim.PreWrite$/;"	a
rust#AppendCmdLine	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f
rust#CompleteExpand	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f
rust#Emit	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f
rust#Expand	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f
rust#GetConfigVar	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#GetConfigVar(name, default)$/;"	f
rust#IncludeExpr	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#IncludeExpr(fname) abort$/;"	f
rust#Jump	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f
rust#Load	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Load()$/;"	f
rust#Play	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f
rust#Run	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f
rust#Test	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Test(mods, winsize, all, options) abort$/;"	f
rust#debugging#Info	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#Info() abort$/;"	f
rust#debugging#InfoToClipboard	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToClipboard() abort$/;"	f
rust#debugging#InfoToFile	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToFile(filename) abort$/;"	f
rust#delimitmate#onMap	plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onMap() abort$/;"	f
rust#delimitmate#onUnmap	plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onUnmap() abort$/;"	f
rust#tags#IsUCtags	plugged/vim-polyglot/autoload/rust/tags.vim	/^function! rust#tags#IsUCtags() abort$/;"	f
rustfmt#Cmd	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Cmd()$/;"	f
rustfmt#DetectVersion	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#DetectVersion()$/;"	f
rustfmt#Format	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f
rustfmt#FormatRange	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#FormatRange(line1, line2)$/;"	f
rustfmt#Load	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Load()$/;"	f
rustfmt#PreWrite	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#PreWrite()$/;"	f
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
s	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> s             :exec g:Lf_py "fileExplManager.addSelections()"<CR>$/;"	m
s	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> s             :exec g:Lf_py "mruExplManager.addSelections()"<CR>$/;"	m
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['ffenc','%{strftime("%H:%M")}'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s	plugged/vim-polyglot/syntax/xpm.vim	/^	 let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	plugged/vim-polyglot/syntax/xpm.vim	/^   let s = matchstr(getline(i), '".\\{-1,}"')$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^	let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^	let s = substitute(s, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^      let s = matchstr(s, "^[^\\!]*")$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^    let s = getline(i)$/;"	v
s	plugged/vista.vim/autoload/vista/ftplugin.vim	/^    nnoremap <buffer> <silent> s    :<c-u>call vista#Sort()<CR>$/;"	m
s:AbbreviateMessage	plugged/ale/ale_linters/erlang/elvis.vim	/^function! s:AbbreviateMessage(text) abort$/;"	f
s:Accents	plugged/vim-polyglot/syntax/tex.vim	/^   fun! s:Accents(chr,...)$/;"	f
s:AccessModifier	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AccessModifier(cline_info) abort$/;"	f
s:AdaBlockStart	plugged/vim-polyglot/indent/ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\/;"	v
s:Add	plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
s:AddBlockTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f
s:AddBlockTag	plugged/vim-polyglot/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f
s:AddHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
s:AddHintsForTypeScriptParsingErrors	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! s:AddHintsForTypeScriptParsingErrors(output) abort$/;"	f
s:AddITags	plugged/vim-polyglot/after/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f
s:AddITags	plugged/vim-polyglot/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f
s:AddLeftDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
s:AddLeftDelimAligned	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
s:AddProblemsFromOtherBuffers	plugged/ale/autoload/ale/engine.vim	/^function! s:AddProblemsFromOtherBuffers(buffer, linters) abort$/;"	f
s:AddPropType	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^function! s:AddPropType() abort$/;"	f
s:AddRightDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
s:AddRightDelimAligned	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
s:AddSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
s:AddSubCallbacks	plugged/ale/autoload/ale/fix.vim	/^function! s:AddSubCallbacks(full_list, callbacks) abort$/;"	f
s:AfterAccessModifier	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterAccessModifier(pline_info) abort$/;"	f
s:AfterBlockOpening	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterBlockOpening(pline_info) abort$/;"	f
s:AfterEndKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterEndKeyword(pline_info) abort$/;"	f
s:AfterHangingSplat	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterHangingSplat(pline_info) abort$/;"	f
s:AfterIndentKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterIndentKeyword(pline_info) abort$/;"	f
s:AfterLeadingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterLeadingOperator(pline_info) abort$/;"	f
s:AfterUnbalancedBracket	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterUnbalancedBracket(pline_info) abort$/;"	f
s:Aliases	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Aliases(dir) abort$/;"	f
s:Alien2	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien2()$/;"	f
s:Alien2	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien2()$/;"	f
s:Alien3	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien3()$/;"	f
s:Alien3	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien3()$/;"	f
s:Alien4	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien4()$/;"	f
s:Alien4	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien4()$/;"	f
s:Alien5	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien5()$/;"	f
s:Alien5	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien5()$/;"	f
s:Alien6	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien6()$/;"	f
s:Alien6	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien6()$/;"	f
s:AltMultipart	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
s:AltNested	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltNested()$/;"	f
s:AlternatePair	plugged/vim-polyglot/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
s:Append	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:Append(line, rows, depth) abort$/;"	f
s:AppendChild	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:AppendChild(line, rows, depth) abort$/;"	f
s:AppendCommentToLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
s:ApplyAppend	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:ApplyAppend(line, row, rows) abort$/;"	f
s:ApplyAutoUpdate	plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:ApplyAutoUpdate() abort$/;"	f
s:ApplyAutoUpdate	plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! s:ApplyAutoUpdate() abort$/;"	f
s:ApplyClose	plugged/vista.vim/autoload/vista/floating.vim	/^function! s:ApplyClose() abort$/;"	f
s:ApplyExecute	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyExecute(bang, fpath) abort$/;"	f
s:ApplyExtracted	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyExtracted() abort$/;"	f
s:ApplyJump	plugged/vista.vim/autoload/vista/jump.vim	/^function! s:ApplyJump(lnum) abort$/;"	f
s:ApplyPartialTimer	plugged/ale/autoload/ale/util.vim	/^function! s:ApplyPartialTimer(timer_id) abort$/;"	f
s:ApplyPeek	plugged/vista.vim/autoload/vista/source.vim	/^function! s:ApplyPeek(lnum, tag) abort$/;"	f
s:ApplyRun	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ApplyRun(cmd) abort$/;"	f
s:ApplyRun	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:ApplyRun() abort$/;"	f
s:ApplyRun	plugged/vista.vim/autoload/vista/finder/skim.vim	/^function! s:ApplyRun() abort$/;"	f
s:ApplyRunAsync	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  function! s:ApplyRunAsync(cmd) abort$/;"	f
s:AskPassArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AskPassArgs(dir) abort$/;"	f
s:Assemble	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:Assemble(line, depth) abort$/;"	f
s:AutoResetWidth	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:AutoResetWidth()$/;"	f
s:AutoUpdate	plugged/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force, ...) abort$/;"	f
s:AutoUpdate	plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:AutoUpdate(_fpath) abort$/;"	f
s:AutoUpdate	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdate	plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! s:AutoUpdate(fpath) abort$/;"	f
s:AutoUpdateWithDelay	plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:AutoUpdateWithDelay(bufnr, fpath) abort$/;"	f
s:BEGIN_BLOCK	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BMAdd	plugged/vim-polyglot/extras/menu.vim	/^func s:BMAdd()$/;"	f
s:BMCanAdd	plugged/vim-polyglot/extras/menu.vim	/^func s:BMCanAdd(name, num)$/;"	f
s:BMFilename	plugged/vim-polyglot/extras/menu.vim	/^func s:BMFilename(name, num)$/;"	f
s:BMHash	plugged/vim-polyglot/extras/menu.vim	/^func s:BMHash(name)$/;"	f
s:BMHash2	plugged/vim-polyglot/extras/menu.vim	/^func s:BMHash2(name)$/;"	f
s:BMMunge	plugged/vim-polyglot/extras/menu.vim	/^func s:BMMunge(fname, bnum)$/;"	f
s:BMRemove	plugged/vim-polyglot/extras/menu.vim	/^func s:BMRemove()$/;"	f
s:BMShow	plugged/vim-polyglot/extras/menu.vim	/^func s:BMShow(...)$/;"	f
s:BMTruncName	plugged/vim-polyglot/extras/menu.vim	/^func s:BMTruncName(fname)$/;"	f
s:BRACKET_CONTINUATION	plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:Balanced	plugged/vim-polyglot/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
s:Bclose	plugged/bclose.vim/plugin/bclose.vim	/^function! s:Bclose(bang, buffer)$/;"	f
s:BeginElementFound	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFound(stack, token, curr_vcol, stored_vcol, end_token, sw)$/;"	f
s:BeginElementFoundIfEmpty	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFoundIfEmpty(stack, token, curr_vcol, stored_vcol, sw)$/;"	f
s:BeginningOfClauseFound	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginningOfClauseFound(stack, token, stored_vcol, lnum, i)$/;"	f
s:BlameBufnr	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameBufnr(...) abort$/;"	f
s:BlameCommit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
s:BlameCommitFileLnum	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommitFileLnum(...) abort$/;"	f
s:BlameFileType	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameFileType() abort$/;"	f
s:BlameJump	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix, ...) abort$/;"	f
s:BlameLeave	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameLeave() abort$/;"	f
s:BlameQuit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameQuit() abort$/;"	f
s:BlameRehighlight	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameRehighlight() abort$/;"	f
s:BlameSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSubcommand(line1, count, range, bang, mods, options) abort$/;"	f
s:BlobTemp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
s:BlockComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:BlockComment(cline_info) abort$/;"	f
s:Block_pattern	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Block_pattern(lin1,lin2,col1,col2)$/;"	f
s:BlurStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
s:Bookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Bookmark.AddBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
s:Bookmark.BookmarkExistsFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
s:Bookmark.BookmarkFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
s:Bookmark.BookmarkNames	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
s:Bookmark.Bookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
s:Bookmark.CacheBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
s:Bookmark.ClearAll	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
s:Bookmark.CompareBookmarksByName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
s:Bookmark.Edit	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
s:Bookmark.GetNodeForName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
s:Bookmark.GetSelected	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
s:Bookmark.InvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
s:Bookmark.New	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
s:Bookmark.SortBookmarksList	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
s:Bookmark.ToRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
s:Bookmark.Write	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
s:Bookmark.activate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
s:Bookmark.delete	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
s:Bookmark.getNode	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
s:Bookmark.mustExist	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
s:Bookmark.open	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
s:Bookmark.openInNewTab	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
s:Bookmark.setPath	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
s:Bookmark.str	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
s:Bookmark.toRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
s:Bookmark.validate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
s:BufName	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
s:BufferCacheExists	plugged/ale/autoload/ale/statusline.vim	/^function! s:BufferCacheExists(buffer) abort$/;"	f
s:BuildClassPathOption	plugged/ale/ale_linters/java/javac.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
s:BuildClassPathOption	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^function! s:BuildClassPathOption(buffer, import_paths) abort$/;"	f
s:BuildCmd	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:BuildCmd(origin_fpath) abort$/;"	f
s:BuildEnvPrefix	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildEnvPrefix(env) abort$/;"	f
s:BuildRow	plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! s:BuildRow(idx, line) abort$/;"	f
s:BuildShell	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildShell(dir, env, args) abort$/;"	f
s:BuildSignMap	plugged/ale/autoload/ale/sign.vim	/^function! s:BuildSignMap(buffer, current_sign_list, grouped_items) abort$/;"	f
s:BuildStructures	plugged/vim-polyglot/indent/twig.vim	/^fun! s:BuildStructures()$/;"	f
s:BuildText	plugged/ale/ale_linters/ruby/reek.vim	/^function! s:BuildText(buffer, error) abort$/;"	f
s:BuiltinTempname	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:BuiltinTempname() abort$/;"	f
s:C	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:C = s:V.import('ColorEcho')$/;"	v
s:CFG_TO_LSP_SEVERITY	plugged/ale/autoload/ale/lsp_window.vim	/^let s:CFG_TO_LSP_SEVERITY = {$/;"	v
s:COLORS	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:COLORS = {$/;"	v
s:COMPLETION_TRIGGER_CHARACTER	plugged/ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_CHARACTER = 2$/;"	v
s:COMPLETION_TRIGGER_INVOKED	plugged/ale/autoload/ale/lsp/message.vim	/^let s:COMPLETION_TRIGGER_INVOKED = 1$/;"	v
s:COMPOUND_ASSIGNMENT	plugged/vim-polyglot/indent/ls.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:COMPOUND_ASSIGNMENT	plugged/vim-polyglot/indent/moon.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|'$/;"	v
s:COMPOUND_EXPRESSION	plugged/vim-polyglot/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\|do\\)\\>$'$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/moon.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:CONTINUATION_BLOCK	plugged/vim-polyglot/indent/moon.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:CONTINUATION_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:CSSIndent	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CSSIndent()$/;"	f
s:CSSIndent	plugged/vim-polyglot/indent/html.vim	/^func! s:CSSIndent()$/;"	f
s:CacheRstFold	plugged/vim-polyglot/autoload/RstFold.vim	/^function s:CacheRstFold()$/;"	f
s:CalcVCol	plugged/vim-polyglot/indent/erlang.vim	/^function! s:CalcVCol(line, first_index, last_index, vcol, tabstop)$/;"	f
s:CalculatePosition	plugged/vista.vim/autoload/vista/floating.vim	/^function! s:CalculatePosition(lines) abort$/;"	f
s:CallBaseIndent	plugged/vim-polyglot/indent/twig.vim	/^function! s:CallBaseIndent()$/;"	f
s:CanCommentLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
s:CanParseMakefile	plugged/ale/autoload/ale/c.vim	/^function! s:CanParseMakefile(buffer) abort$/;"	f
s:CanPlaceCursor	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
s:CanSexyCommentLines	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
s:CanToggleCommentLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
s:CeilingDirectories	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:CeilingDirectories() abort$/;"	f
s:ChangeCmp	plugged/ale/autoload/ale/code_action.vim	/^function! s:ChangeCmp(left, right) abort$/;"	f
s:ChangeFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:ChangeFoldLevel(diff, force) abort$/;"	f
s:CharAtCursor	plugged/vim-polyglot/autoload/pony.vim	/^function! s:CharAtCursor(...)$/;"	f
s:CheckBlockTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f
s:CheckBlockTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f
s:CheckCustomTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f
s:CheckCustomTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f
s:CheckDefined	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:CheckDefined(colors) abort$/;"	f
s:CheckExCtagsVersion	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
s:CheckFTCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
s:CheckForBadConfig	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! s:CheckForBadConfig(buffer, lines) abort$/;"	f
s:CheckForExCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
s:CheckForFunctions	plugged/vim-polyglot/syntax/octave.vim	/^function! s:CheckForFunctions()$/;"	f
s:CheckMouseClick	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
s:CheckPairedIsLastCharacter	plugged/vim-polyglot/indent/tex.vim	/^function! s:CheckPairedIsLastCharacter(lnum, col) "{{{$/;"	f
s:CheckTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f
s:CheckTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f
s:CheckToIgnoreRightParen	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:CheckToIgnoreRightParen( prev_lnum, num_levels )$/;"	f
s:CheckWithLSP	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:CheckWithLSP(linter, details) abort$/;"	f
s:ChompDefault	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompDefault(default, ...) abort$/;"	f
s:ChompError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompError(...) abort$/;"	f
s:ClearAugroups	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! s:ClearAugroups(...) abort$/;"	f
s:ClearOtherEvents	plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:ClearOtherEvents(group) abort$/;"	f
s:ClearTempData	plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:ClearTempData() abort$/;"	f
s:ClearTokenCacheIfNeeded	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ClearTokenCacheIfNeeded()$/;"	f
s:CloseFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
s:CloseOnCursorMoved	plugged/vista.vim/autoload/vista/floating.vim	/^function! s:CloseOnCursorMoved() abort$/;"	f
s:CloseOnWinEnter	plugged/vista.vim/autoload/vista/floating.vim	/^function! s:CloseOnWinEnter() abort$/;"	f
s:ClosePopup	plugged/vista.vim/autoload/vista/popup.vim	/^function! s:ClosePopup() abort$/;"	f
s:CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
s:CloseWindowIfNeeded	plugged/ale/autoload/ale/list.vim	/^function! s:CloseWindowIfNeeded(buffer) abort$/;"	f
s:ClosingBracketOnEmptyLine	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
s:ClosingHeredocDelimiter	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingHeredocDelimiter(cline_info) abort$/;"	f
s:CmpPatterns	plugged/ale/autoload/ale/pattern_options.vim	/^function! s:CmpPatterns(left_item, right_item) abort$/;"	f
s:CoffeeCompile	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
s:CoffeeCompileClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
s:CoffeeCompileResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
s:CoffeeCompileToBuf	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
s:CoffeeComplete	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
s:CoffeeLint	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
s:CoffeeMakeDeprecated	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
s:CoffeeRun	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
s:CoffeeRunClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
s:CoffeeRunResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
s:CoffeeWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
s:CoffeeWatchClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
s:CoffeeWatchResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
s:CoffeeWatchUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
s:ColonEnd	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonEnd = '\\(--.*\\)\\@<!:\\s*\\(--.*\\)\\=$'$/;"	v
s:ColonIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonIndent = '\\(--.*\\)\\@<!\\<PROC\\>'$/;"	v
s:ColonNonColonEndIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\/;"	v
s:ColonStart	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonStart = '^\\s*:\\s*\\(--.*\\)\\=$'$/;"	v
s:Comment	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:Comment(arg)$/;"	f
s:CommentBlock	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
s:CommentKeywordMatch	plugged/vim-polyglot/syntax/swift.vim	/^function! s:CommentKeywordMatch(keyword)$/;"	f
s:CommentLine	plugged/vim-polyglot/indent/occam.vim	/^let s:CommentLine = '^\\s*--'$/;"	v
s:CommentLines	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
s:CommentLinesMinimal	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
s:CommentLinesSexy	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
s:CommentLinesToggle	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
s:CommentOrString	plugged/vim-polyglot/indent/mp.vim	/^function! s:CommentOrString(line, pos)$/;"	f
s:CommentRegion	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
s:CommitInteractive	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitInteractive(line1, line2, range, bang, mods, options, patch) abort$/;"	f
s:CommitSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Compare	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:Compare(s1, s2) abort$/;"	f
s:Compare	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:Compare(s1, s2) abort$/;"	f
s:Compare	plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:Compare(i1, i2) abort$/;"	f
s:CompareAge	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompareAge(mine, theirs) abort$/;"	f
s:CompleteHeads	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteHeads(dir) abort$/;"	f
s:CompleteRemote	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRemote(A, L, P, ...) abort$/;"	f
s:CompleteRevision	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRevision(A, L, P, ...) abort$/;"	f
s:CompleteSub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteSub(subcommand, A, L, P, ...) abort$/;"	f
s:CompletionStillValid	plugged/ale/autoload/ale/completion.vim	/^function! s:CompletionStillValid(request_id) abort$/;"	f
s:ConfigTimestamps	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
s:ContainWhitespaceOnly	plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:ContainWhitespaceOnly(str) abort$/;"	f
s:ContainedGroup	plugged/vim-polyglot/syntax/scala.vim	/^function! s:ContainedGroup()$/;"	f
s:ContainingCommit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
s:ContinuedHangingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedHangingOperator(msl_info) abort$/;"	f
s:ContinuedLine	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedLine(pline_info) abort$/;"	f
s:Continues	plugged/vim-polyglot/indent/javascript.vim	/^function s:Continues()$/;"	f
s:ConvertLanguageName	plugged/ale/autoload/ale/hover.vim	/^function! s:ConvertLanguageName(language) abort$/;"	f
s:ConvertLeadingSpacesToTabs	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
s:ConvertLeadingTabsToSpaces	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
s:ConvertLeadingWhiteSpace	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
s:CorrectFocusOnStartup	plugged/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
s:CountITags	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CountITags(text)$/;"	f
s:CountITags	plugged/vim-polyglot/indent/html.vim	/^func! s:CountITags(text)$/;"	f
s:CountNonESCedOccurances	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
s:CountTagsAndState	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f
s:CountTagsAndState	plugged/vim-polyglot/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f
s:CountUnbalancedParen	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:CountUnbalancedParen( line, paren_to_check )$/;"	f
s:Cpath	plugged/vim-polyglot/syntax/lex.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	plugged/vim-polyglot/syntax/lex.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h")."\/cpp.vim")$/;"	v
s:Cpath	plugged/vim-polyglot/syntax/yacc.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	plugged/vim-polyglot/syntax/yacc.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h").(exists("g:yacc_uses_cpp")? "\/cpp.vim" : "\/c.vi/;"	v
s:CreateAutocommands	plugged/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
s:CreateCountDict	plugged/ale/autoload/ale/statusline.vim	/^function! s:CreateCountDict() abort$/;"	f
s:CreateDelimMapFromCms	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CreateDelimMapFromCms()$/;"	f
s:CreateMaps	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
s:CreateOrExpression	plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:CreateOrExpression(keywords)$/;"	f
s:CreateTSServerMessageData	plugged/ale/autoload/ale/lsp.vim	/^function! s:CreateTSServerMessageData(message) abort$/;"	f
s:CreateTabTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
s:Creator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Creator.BufNamePrefix	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
s:Creator.CreateMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
s:Creator.CreateTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
s:Creator.CreateWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
s:Creator.New	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
s:Creator.ToggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
s:Creator._bindMappings	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
s:Creator._broadcastInitEvent	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
s:Creator._createNERDTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
s:Creator._createTreeWin	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
s:Creator._isBufHidden	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
s:Creator._nextBufferName	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
s:Creator._nextBufferNumber	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
s:Creator._pathForString	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
s:Creator._removeTreeBufForTab	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
s:Creator._setCommonBufOptions	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
s:Creator._setupStatusline	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
s:Creator._tabpagevar	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
s:Creator._uniq	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
s:Creator.createMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
s:Creator.createTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
s:Creator.createWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
s:Creator.toggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
s:CssFirstUnfinished	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f
s:CssFirstUnfinished	plugged/vim-polyglot/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f
s:CssPrevNonComment	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f
s:CssPrevNonComment	plugged/vim-polyglot/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f
s:CssUnfinished	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f
s:CssUnfinished	plugged/vim-polyglot/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f
s:CtagsErrMsg	plugged/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
s:CurrentNimFile	plugged/vim-polyglot/autoload/nim.vim	/^fun! s:CurrentNimFile() abort$/;"	f
s:CursorHoldUpdate	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:CursorHoldUpdate()$/;"	f
s:DEFAULT_LEVEL	plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/ls.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/moon.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DecreaseFunc	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:DecreaseFunc(type)$/;"	f
s:DecreaseIndent	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:DecreaseIndent()$/;"	f
s:DecreaseIndentOnClosingTag	plugged/vim-polyglot/indent/mp.vim	/^function! s:DecreaseIndentOnClosingTag(curr_indent)$/;"	f
s:DefRuby	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
s:DefaultOption	plugged/ale/autoload/ale/fixers/shfmt.vim	/^function! s:DefaultOption(buffer) abort$/;"	f
s:DefaultTagParser	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let s:DefaultTagParser = function('vista#parser#ctags#FromExtendedRaw')$/;"	v
s:DefaultTagParser	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let s:DefaultTagParser = function('vista#parser#ctags#FromJSON')$/;"	v
s:DefineInlineMarkup	plugged/vim-polyglot/syntax/rst.vim	/^function! s:DefineInlineMarkup(name, start, middle, end)$/;"	f
s:DefineOneInlineMarkup	plugged/vim-polyglot/syntax/rst.vim	/^function! s:DefineOneInlineMarkup(name, start, middle, end, char_left, char_right)$/;"	f
s:DeindentingKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:DeindentingKeyword(cline_info) abort$/;"	f
s:DeleteLines	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:DeleteLines(start, end) abort$/;"	f
s:DescendantsOf	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:DescendantsOf(candidates, root_line, scope) abort$/;"	f
s:DescendantsOfRoot	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:DescendantsOfRoot(candidates, root_line) abort$/;"	f
s:DetectFiletype	plugged/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
s:DevIconsGetArtifactFix	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:DevIconsGetArtifactFix()$/;"	f
s:DifftoolSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DifftoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
s:DirCheck	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCheck(...) abort$/;"	f
s:DirCommitFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
s:DirRev	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
s:Disable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:Disable()$/;"	f
s:DisableOnDiff	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:DisableOnDiff()$/;"	f
s:DisablePostamble	plugged/ale/autoload/ale/toggle.vim	/^function! s:DisablePostamble() abort$/;"	f
s:Dispatch	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dispatch(bang, options) abort$/;"	f
s:Dispatch	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Dispatch(F, ...) abort$/;"	f
s:Dispatch	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:Dispatch(F, ...) abort$/;"	f
s:DispatchDisplayer	plugged/vista.vim/autoload/vista/popup.vim	/^function! s:DispatchDisplayer(Displayer, lnum, tag_or_raw_lines) abort$/;"	f
s:Display	plugged/vista.vim/autoload/vista/floating.vim	/^function! s:Display(msg, win_id) abort$/;"	f
s:DisplayAt	plugged/vista.vim/autoload/vista/popup.vim	/^function! s:DisplayAt(lnum, tag, vista_winid) abort$/;"	f
s:DisplayRawAt	plugged/vista.vim/autoload/vista/popup.vim	/^function! s:DisplayRawAt(lnum, lines, vista_winid) abort$/;"	f
s:DisplayWithDelay	plugged/vista.vim/autoload/vista/floating.vim	/^function! s:DisplayWithDelay(lines) abort$/;"	f
s:Do	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:Do(action)$/;"	f
s:Do	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
s:DoAutocmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmd(cmd) abort$/;"	f
s:DoAutocmdChanged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmdChanged(dir) abort$/;"	f
s:DoStagePushHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStagePushHeader(value) abort$/;"	f
s:DoStageUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushed(record) abort$/;"	f
s:DoStageUnpushedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushedHeading(heading) abort$/;"	f
s:DoStageUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
s:DoStageUnstagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
s:DoStageUntracked	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntracked(record) abort$/;"	f
s:DoStageUntrackedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntrackedHeading(heading) abort$/;"	f
s:DoToggleHeadHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
s:DoToggleHelpHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHelpHeader(value) abort$/;"	f
s:DoTogglePushHeader	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoTogglePushHeader(value) abort$/;"	f
s:DoToggleStaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
s:DoToggleStagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
s:DoToggleUnpulled	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
s:DoToggleUnpulledHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
s:DoToggleUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
s:DoToggleUnpushedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
s:DoToggleUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
s:DoToggleUnstagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
s:DoToggleUntracked	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntracked(record) abort$/;"	f
s:DoToggleUntrackedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntrackedHeading(...) abort$/;"	f
s:DoUnstageStaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
s:DoUnstageStagedHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
s:DoUnstageUnpulled	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulled(record) abort$/;"	f
s:DoUnstageUnpulledHeading	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulledHeading(heading) abort$/;"	f
s:DoUnstageUnpushed	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpushed(record) abort$/;"	f
s:DoUnstageUnstaged	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
s:DoWhile	plugged/vim-polyglot/indent/javascript.vim	/^function s:DoWhile()$/;"	f
s:DocumentationForSymbolRequest	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:DocumentationForSymbolRequest(xmlSig, assembly)$/;"	f
s:DoesBlockHaveDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
s:DoesBlockHaveMultipartDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
s:DotPackagesFile	plugged/vim-polyglot/autoload/dart.vim	/^function! s:DotPackagesFile() abort$/;"	f
s:DotRelative	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path, ...) abort$/;"	f
s:ECRDedent	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:ECRDedent(...) abort$/;"	f
s:ECRIndent	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:ECRIndent(...) abort$/;"	f
s:ELSE_COND	plugged/vim-polyglot/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:ES	plugged/vim-polyglot/indent/vhdl.vim	/^let s:ES = '\\s*\\%(--.*\\)\\=$'$/;"	v
s:ESCAPEDCHARS	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:ESCAPEDCHARS = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:ESCAPEDCHARS	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:ESCAPEDCHARS = " \\t\\n\\"#%'*<?`|"$/;"	v
s:Echo	plugged/ale/autoload/ale/debugging.vim	/^function! s:Echo(message) abort$/;"	f
s:Echo	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! s:Echo(message) abort$/;"	f
s:Echo	plugged/vista.vim/autoload/vista/error.vim	/^function! s:Echo(group, msg) abort$/;"	f
s:EchoCommand	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoCommand(item) abort$/;"	f
s:EchoCommandHistory	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoCommandHistory() abort$/;"	f
s:EchoExec	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:EchoExec(...) abort$/;"	f
s:EchoExecutable	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoExecutable(item) abort$/;"	f
s:EchoGlobalVariables	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
s:EchoGlobalVariables	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
s:EchoLSPErrorMessages	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoLSPErrorMessages(all_linter_names) abort$/;"	f
s:EchoLinterAliases	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoLinterAliases(all_linters) abort$/;"	f
s:EchoLinterVariables	plugged/ale/autoload/ale/debugging.vim	/^function! s:EchoLinterVariables(variable_list) abort$/;"	f
s:EchoScope	plugged/vista.vim/autoload/vista/echo.vim	/^function! s:EchoScope(scope) abort$/;"	f
s:EchoScopeFromCacheIsOk	plugged/vista.vim/autoload/vista/echo.vim	/^function! s:EchoScopeFromCacheIsOk() abort$/;"	f
s:Echon	plugged/vista.vim/autoload/vista/error.vim	/^function! s:Echon(group, msg) abort$/;"	f
s:EditUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^    function s:EditUrlUnderCursor()$/;"	f
s:EditVimrc	plugged/vim-polyglot/extras/menu.vim	/^fun! s:EditVimrc()$/;"	f
s:Eglobal	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Eglobal(bang, ...) range$/;"	f
s:Ematch	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Ematch(...)$/;"	f
s:Emit	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f
s:EmptyInsideString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:EmptyInsideString(pline_info) abort$/;"	f
s:EnableByDefault	plugged/vim-polyglot/syntax/python.vim	/^function! s:EnableByDefault(name)$/;"	f
s:EnablePreamble	plugged/ale/autoload/ale/toggle.vim	/^function! s:EnablePreamble() abort$/;"	f
s:Enabled	plugged/vim-polyglot/syntax/python.vim	/^function! s:Enabled(name)$/;"	f
s:EncodeChar	plugged/ale/autoload/ale/uri.vim	/^function! s:EncodeChar(char) abort$/;"	f
s:EndBlockIndent	plugged/vim-polyglot/indent/ada.vim	/^function s:EndBlockIndent( prev_indent, prev_lnum, blockstart, blockend )$/;"	f
s:EndStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:EndStructure(name)$/;"	f
s:Enter_annotation_buffer	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Enter_annotation_buffer(annot_file_path)$/;"	f
s:ErlangCalcIndent	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent(lnum, stack)$/;"	f
s:ErlangCalcIndent2	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent2(lnum, stack)$/;"	f
s:ErrMsg	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
s:Esc	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
s:EscapeAndUnescape	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:EscapeAndUnescape(vimregex, delim)$/;"	f
s:EscapeCtagsCmd	plugged/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
s:EscapeMenuName	plugged/ale/autoload/ale/code_action.vim	/^function! s:EscapeMenuName(text) abort$/;"	f
s:EscapeSignText	plugged/ale/autoload/ale/sign.vim	/^function! s:EscapeSignText(sign_text) abort$/;"	f
s:Esubstitute	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Esubstitute(...) range$/;"	f
s:Event	plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:Event.New	plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
s:Evglobal	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Evglobal(...) range$/;"	f
s:ExchangeReplaceSpecials	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExchangeReplaceSpecials(replacement, sort)$/;"	f
s:ExcludeOther	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludeOther(nr, exclude_preview)$/;"	f
s:ExcludePaths	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludePaths(nr, exclude_paths)$/;"	f
s:ExecPath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExecPath() abort$/;"	f
s:Execute	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Execute(bang, should_display) abort$/;"	f
s:Execute	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:Execute(bang, should_display) abort$/;"	f
s:ExecuteCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
s:ExecuteCtagsOnFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
s:ExecuteGetCodeFix	plugged/ale/autoload/ale/codefix.vim	/^function! s:ExecuteGetCodeFix(linter, range, MenuCallback) abort$/;"	f
s:ExecuteRename	plugged/ale/autoload/ale/rename.vim	/^function! s:ExecuteRename(linter, options) abort$/;"	f
s:ExitCallback	plugged/ale/autoload/ale/command.vim	/^function! s:ExitCallback(buffer, line_list, Callback, data) abort$/;"	f
s:Exit_annotation_buffer	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Exit_annotation_buffer()$/;"	f
s:ExitingOneLineScope	plugged/vim-polyglot/indent/solidity.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
s:ExitingOneLineScope	plugged/vim-polyglot/indent/typescript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
s:Expand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev, ...) abort$/;"	f
s:Expand	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f
s:ExpandAtomsInBrackets	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExpandAtomsInBrackets(bracket)$/;"	f
s:ExpandSplit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandSplit(string, ...) abort$/;"	f
s:ExpandVar	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc, ...) abort$/;"	f
s:ExpandVarLegacy	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVarLegacy(str) abort$/;"	f
s:ExpireStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpireStatus(bufnr) abort$/;"	f
s:ExprCol	plugged/vim-polyglot/indent/javascript.vim	/^function s:ExprCol()$/;"	f
s:ExtendedRegex2VimRegex	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExtendedRegex2VimRegex(extendedregex, ...)$/;"	f
s:ExtendedRegex2VimRegexLineWise	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExtendedRegex2VimRegexLineWise(...) range$/;"	f
s:ExtraBrackets	plugged/vim-polyglot/indent/falcon.vim	/^function s:ExtraBrackets(lnum)$/;"	f
s:ExtraBrackets	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ExtraBrackets(lnum) abort$/;"	f
s:ExtraErrorMsg	plugged/ale/ale_linters/javascript/flow.vim	/^function! s:ExtraErrorMsg(current, new) abort$/;"	f
s:Extract	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Extract(symbols) abort$/;"	f
s:ExtractLinewise	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:ExtractLinewise(raw_data) abort$/;"	f
s:Extract_type_data	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Extract_type_data(block_pattern, annot_file_name)$/;"	f
s:FALSE	plugged/vim-polyglot/indent/autohotkey.vim	/^let s:FALSE = 0$/;"	v
s:FNAMEESCAPEPATTERN	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:FNAMEESCAPEPATTERN = '\\\\\\ze[' . escape(s:ESCAPEDCHARS, ']^-\\') . ']'$/;"	v
s:FUNCTION	plugged/vim-polyglot/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:Ferm_SpecialDelimiters	plugged/vim-polyglot/syntax/ferm.vim	/^    let s:Ferm_SpecialDelimiters = 0$/;"	v
s:Ferm_SpecialDelimiters	plugged/vim-polyglot/syntax/ferm.vim	/^    let s:Ferm_SpecialDelimiters = g:Ferm_SpecialDelimiters$/;"	v
s:FetchSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FetchSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:FileFormat	plugged/vim-polyglot/extras/menu.vim	/^fun! s:FileFormat()$/;"	f
s:FileIgnoreCase	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FileIgnoreCase(for_completion) abort$/;"	f
s:Filetype	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! s:Filetype()$/;"	f
s:Filter	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:Filter()$/;"	f
s:FilterEscape	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FilterEscape(items, ...) abort$/;"	f
s:FilterResult	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! s:FilterResult(buffer, obj) abort$/;"	f
s:FindBoundingLinesOfSexyCom	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
s:FindColumnBoundary	plugged/vista.vim/autoload/vista/finder.vim	/^function! s:FindColumnBoundary(grouped_data) abort$/;"	f
s:FindComment	plugged/vim-polyglot/indent/moon.vim	/^function! s:FindComment(linenum)$/;"	f
s:FindConfig	plugged/ale/ale_linters/pug/puglint.vim	/^function! s:FindConfig(buffer) abort$/;"	f
s:FindContainingClass	plugged/vim-polyglot/indent/ruby.vim	/^function! s:FindContainingClass() abort$/;"	f
s:FindCornerOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindCornerOfSyntax(lnum, col, step)$/;"	f
s:FindCornersOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindCornersOfSyntax(lnum, col)$/;"	f
s:FindDartFmt	plugged/vim-polyglot/autoload/dart.vim	/^function! s:FindDartFmt() abort$/;"	f
s:FindDelimiterIndex	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
s:FindECRControl	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:FindECRControl(...) abort$/;"	f
s:FindError	plugged/ale/autoload/ale/codefix.vim	/^function! s:FindError(buffer, line, column, end_line, end_column) abort$/;"	f
s:FindHistoryItem	plugged/ale/autoload/ale/history.vim	/^function! s:FindHistoryItem(buffer, job_id) abort$/;"	f
s:FindIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:FindIndToken(lnum, dir)$/;"	f
s:FindLeftOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindLeftOfSyntax(lnum, col)$/;"	f
s:FindLet	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
s:FindLet	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
s:FindLet	plugged/vim-polyglot/indent/sml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
s:FindNearestMethodOrFunction	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:FindNearestMethodOrFunction(_timer) abort$/;"	f
s:FindNextSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindNextSyntax(lnum, col, name)$/;"	f
s:FindPair	plugged/vim-polyglot/indent/elm.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPair	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPair	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindPair	plugged/vim-polyglot/indent/sml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
s:FindParentVCSRoot	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
s:FindPrevECRControl	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:FindPrevECRControl(...) abort$/;"	f
s:FindPrevLEIndentedLineMatchingRegex	plugged/vim-polyglot/indent/yaml.vim	/^function s:FindPrevLEIndentedLineMatchingRegex(lnum, regex)$/;"	f
s:FindPrevLessIndentedLine	plugged/vim-polyglot/indent/yaml.vim	/^function s:FindPrevLessIndentedLine(lnum, ...)$/;"	f
s:FindPreviousNonCompilerDirectiveLine	plugged/vim-polyglot/indent/cs.vim	/^function! s:FindPreviousNonCompilerDirectiveLine(start_lnum)$/;"	f
s:FindPreviousOpenStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:FindPreviousOpenStructure(lineNumber)$/;"	f
s:FindRightOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindRightOfSyntax(lnum, col)$/;"	f
s:FindSpan	plugged/ale/autoload/ale/handlers/rust.vim	/^function! s:FindSpan(buffer, span) abort$/;"	f
s:FindStartLine	plugged/vim-polyglot/indent/nim.vim	/^function! s:FindStartLine(fromln, pattern)$/;"	f
s:Find_common_path	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Find_common_path (p1,p2)$/;"	f
s:FirstLevelIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:FirstLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\|PAR\\|SEQ\\|PRI\\s\\+PAR\\|WHILE\\/;"	v
s:FirstLevelNonColonEndIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:FirstLevelNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\/;"	v
s:First_word_len	plugged/vim-polyglot/indent/awk.vim	/^function! s:First_word_len( line )$/;"	f
s:FixFText	plugged/vim-polyglot/extras/menu.vim	/^fun! s:FixFText()$/;"	f
s:FixList	plugged/ale/autoload/ale/list.vim	/^function! s:FixList(buffer, list) abort$/;"	f
s:FlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:FlagSet.New	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
s:FlagSet._flagsForScope	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
s:FlagSet.addFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
s:FlagSet.clearFlags	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
s:FlagSet.removeFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
s:FlagSet.renderToString	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
s:FnameEscape	plugged/vim-polyglot/extras/menu.vim	/^func s:FnameEscape(fname)$/;"	f
s:Fnameescape	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f
s:FocusGainedHandler	plugged/vim-airline/plugin/airline.vim	/^function! s:FocusGainedHandler(timer)$/;"	f
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<begin\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<exception\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<is\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<private\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^   let s:Fold_Collate .= '--\\)'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^   let s:Fold_Collate = '^\\([;)]*$\\|'$/;"	v
s:FoldableRegion	plugged/vim-polyglot/syntax/lua.vim	/^function! s:FoldableRegion(tag, name, expr)$/;"	f
s:Format	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
s:FormatEntry	plugged/ale/autoload/ale/fix/registry.vim	/^function! s:FormatEntry(key, entry) abort$/;"	f
s:FormatExe	plugged/ale/autoload/ale/assert.vim	/^function! s:FormatExe(command, executable) abort$/;"	f
s:FormatFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
s:FormatFilename	plugged/ale/autoload/ale/command.vim	/^function! s:FormatFilename(filename, mappings, modifiers) abort$/;"	f
s:FormatLog	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
s:FormatRebase	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
s:FreshState	plugged/vim-polyglot/after/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f
s:FreshState	plugged/vim-polyglot/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f
s:FromTMPDIR	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:FromTMPDIR() abort$/;"	f
s:FsdnRequest	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:FsdnRequest(query)$/;"	f
s:GF	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
s:GatherHeaderMetadata	plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:GatherHeaderMetadata() abort$/;"	f
s:GatherHeaderMetadata	plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! s:GatherHeaderMetadata() abort$/;"	f
s:GatherOutput	plugged/ale/autoload/ale/command.vim	/^function! s:GatherOutput(line_list, job_id, line) abort$/;"	f
s:Generate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(rev, ...) abort$/;"	f
s:GenericAutoUpdate	plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:GenericAutoUpdate(event, bufnr, fpath) abort$/;"	f
s:GenericStopTimer	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:GenericStopTimer(timer) abort$/;"	f
s:GetALEProjectDir	plugged/ale/ale_linters/vim/ale_custom_linting_rules.vim	/^function! s:GetALEProjectDir(buffer) abort$/;"	f
s:GetAlarm	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:GetAlarm(buffer, timeout) abort$/;"	f
s:GetAliasedFiletype	plugged/ale/autoload/ale/linter.vim	/^function! s:GetAliasedFiletype(original_filetype) abort$/;"	f
s:GetArguments	plugged/ale/autoload/ale/c.vim	/^function! s:GetArguments(json_item) abort$/;"	f
s:GetAvaliableExecutives	plugged/vista.vim/autoload/vista/debugging.vim	/^function! s:GetAvaliableExecutives() abort$/;"	f
s:GetBufferRubyClass	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
s:GetBufferRubyEntity	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
s:GetBufferRubyModule	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
s:GetBufferRubySingletonMethods	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
s:GetCachedExtensionMap	plugged/ale/autoload/ale/filetypes.vim	/^function! s:GetCachedExtensionMap() abort$/;"	f
s:GetCallbacks	plugged/ale/autoload/ale/fix.vim	/^function! s:GetCallbacks(buffer, fixing_flag, fixers) abort$/;"	f
s:GetCodeActions	plugged/ale/autoload/ale/code_action.vim	/^function! s:GetCodeActions(linter, options) abort$/;"	f
s:GetCommand	plugged/ale/ale_linters/erlang/elvis.vim	/^function! s:GetCommand(buffer) abort$/;"	f
s:GetConfig	plugged/ale/ale_linters/java/checkstyle.vim	/^function! s:GetConfig(buffer, config) abort$/;"	f
s:GetContents	plugged/vim-polyglot/indent/lua.vim	/^function s:GetContents(lnum)$/;"	f
s:GetCounts	plugged/ale/autoload/ale/statusline.vim	/^function! s:GetCounts(buffer) abort$/;"	f
s:GetCustomCmd	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetCustomCmd(filetype) abort$/;"	f
s:GetDefaultCmd	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetDefaultCmd(file) abort$/;"	f
s:GetDefaultPolicy	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
s:GetDelim	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:GetDelim(str)$/;"	f
s:GetDetails	plugged/ale/ale_linters/javascript/flow.vim	/^function! s:GetDetails(error) abort$/;"	f
s:GetDir	plugged/ale/ale_linters/python/mypy.vim	/^function! s:GetDir(buffer) abort$/;"	f
s:GetDir	plugged/ale/ale_linters/python/vulture.vim	/^function! s:GetDir(buffer) abort$/;"	f
s:GetEndIndentation	plugged/vim-polyglot/indent/tex.vim	/^function! s:GetEndIndentation(lnum) " {{{$/;"	f
s:GetErrMsg	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:GetErrMsg(i, lines, text) abort$/;"	f
s:GetExecutable	plugged/ale/autoload/ale/handlers/sml.vim	/^function! s:GetExecutable(buffer, source) abort$/;"	f
s:GetFileWinnr	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
s:GetFiletypeValue	plugged/ale/autoload/ale/completion.vim	/^function! s:GetFiletypeValue(map, filetype) abort$/;"	f
s:GetFirstProblems	plugged/ale/autoload/ale/statusline.vim	/^function! s:GetFirstProblems(buffer) abort$/;"	f
s:GetGlobalVariables	plugged/vista.vim/autoload/vista/debugging.vim	/^function! s:GetGlobalVariables() abort$/;"	f
s:GetHeaderLevel	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderLevel(...)$/;"	f
s:GetHeaderLineNum	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderLineNum(...)$/;"	f
s:GetHeaderList	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderList()$/;"	f
s:GetHiCmd	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:GetHiCmd(list) abort$/;"	f
s:GetInd	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
s:GetInd	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
s:GetInd	plugged/vim-polyglot/indent/sml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
s:GetIndtokenAtCol	plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetIndtokenAtCol(indtokens, col)$/;"	f
s:GetInfoFromLSPAndExtension	plugged/vista.vim/autoload/vista/cursor/lsp.vim	/^function! s:GetInfoFromLSPAndExtension() abort$/;"	f
s:GetInfoUnderCursor	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:GetInfoUnderCursor() abort$/;"	f
s:GetJSONLines	plugged/ale/ale_linters/javascript/flow.vim	/^function! s:GetJSONLines(lines) abort$/;"	f
s:GetLanguageSpecificOptition	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetLanguageSpecificOptition(filetype) abort$/;"	f
s:GetLastBeginIndentation	plugged/vim-polyglot/indent/tex.vim	/^function! s:GetLastBeginIndentation(lnum) " {{{$/;"	f
s:GetLevelOfHeaderAtLine	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetLevelOfHeaderAtLine(linenum)$/;"	f
s:GetLineWithoutFullComment	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
s:GetLineWithoutFullComment	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
s:GetLintFileSlots	plugged/ale/autoload/ale/engine.vim	/^function! s:GetLintFileSlots(buffer, linters) abort$/;"	f
s:GetLintFileValues	plugged/ale/autoload/ale/engine.vim	/^function! s:GetLintFileValues(slots, Callback) abort$/;"	f
s:GetLinter	plugged/ale/autoload/ale/assert.vim	/^function! s:GetLinter() abort$/;"	f
s:GetLinterNames	plugged/ale/autoload/ale/linter.vim	/^function! s:GetLinterNames(original_filetype) abort$/;"	f
s:GetLinterVariables	plugged/ale/autoload/ale/debugging.vim	/^function! s:GetLinterVariables(filetype, exclude_linter_names) abort$/;"	f
s:GetLiveScriptIndent	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetLiveScriptIndent(curlinenum)$/;"	f
s:GetLookupFromCompileCommandsFile	plugged/ale/autoload/ale/c.vim	/^function! s:GetLookupFromCompileCommandsFile(compile_commands_file) abort$/;"	f
s:GetMSL	plugged/vim-polyglot/indent/falcon.vim	/^function s:GetMSL(lnum)$/;"	f
s:GetMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:GetMSL(lnum) abort$/;"	f
s:GetMSL	plugged/vim-polyglot/indent/solidity.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
s:GetMSL	plugged/vim-polyglot/indent/typescript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
s:GetMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
s:GetMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^function! s:GetMakePrg()$/;"	f
s:GetMatch	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetMatch(curline)$/;"	f
s:GetMatch	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetMatch(curline)$/;"	f
s:GetMdIndent	plugged/vim-polyglot/indent/rmd.vim	/^function s:GetMdIndent()$/;"	f
s:GetMoonIndent	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetMoonIndent(curlinenum)$/;"	f
s:GetNearbyTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(request, forcecurrent, ...) abort$/;"	f
s:GetNextHeaderLineNumberAtLevel	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetNextHeaderLineNumberAtLevel(level, ...)$/;"	f
s:GetOffsetOf	plugged/vim-polyglot/indent/config.vim	/^function s:GetOffsetOf(line, regexp)$/;"	f
s:GetPair	plugged/vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
s:GetParentHeaderLineNumber	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetParentHeaderLineNumber(...)$/;"	f
s:GetPrevNonCommentLineNum	plugged/vim-polyglot/indent/pascal.vim	/^function! s:GetPrevNonCommentLineNum( line_num )$/;"	f
s:GetPrevNormalLine	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
s:GetPrevNormalLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
s:GetPrevNormalLine	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
s:GetPreviousHeaderLineNumberAtLevel	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetPreviousHeaderLineNumberAtLevel(level, ...)$/;"	f
s:GetRelVer	plugged/vim-polyglot/ftplugin/spec.vim	/^	function! s:GetRelVer()$/;"	f
s:GetRubyVarType	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
s:GetScriptType	plugged/vim-polyglot/after/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f
s:GetScriptType	plugged/vim-polyglot/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f
s:GetSexyComLeft	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
s:GetSexyComMarker	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
s:GetSexyComRight	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
s:GetStmtStarterIndent	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:GetStmtStarterIndent( keyword, curr_lnum )$/;"	f
s:GetSupportedFiletypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
s:GetSynStack	plugged/vim-polyglot/indent/purescript.vim	/^function! s:GetSynStack(lnum, col)$/;"	f
s:GetTagInfo	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
s:GetTempDirectory	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:GetTempDirectory() abort$/;"	f
s:GetTokensFromLine	plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetTokensFromLine(line, string_continuation, atom_continuation,$/;"	f
s:GetTrailingLnum	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:GetTrailingLnum() abort$/;"	f
s:GetTrimmedLine	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
s:GetTrimmedLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
s:GetTrimmedLine	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
s:GetVarIndent	plugged/vim-polyglot/indent/solidity.vim	/^function s:GetVarIndent(lnum)$/;"	f
s:GetVarIndent	plugged/vim-polyglot/indent/typescript.vim	/^function s:GetVarIndent(lnum)$/;"	f
s:GetVars	plugged/vim-polyglot/indent/javascript.vim	/^function s:GetVars()$/;"	f
s:GetVersion	plugged/ale/ale_linters/java/eclipselsp.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
s:GetVersion	plugged/ale/autoload/ale/semver.vim	/^function! s:GetVersion(executable, version_lines) abort$/;"	f
s:GetVisibility	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:GetVisibility(line) abort$/;"	f
s:GetWorkingDirectory	plugged/ale/ale_linters/cs/csc.vim	/^function! s:GetWorkingDirectory(buffer) abort$/;"	f
s:GetWorkingDirectory	plugged/ale/ale_linters/cs/mcsc.vim	/^function! s:GetWorkingDirectory(buffer) abort$/;"	f
s:GetYamlIndent	plugged/vim-polyglot/indent/rmd.vim	/^function s:GetYamlIndent()$/;"	f
s:Get_brace_balance	plugged/vim-polyglot/indent/awk.vim	/^function! s:Get_brace_balance( line, b_open, b_close )$/;"	f
s:Get_prev_line	plugged/vim-polyglot/indent/awk.vim	/^function! s:Get_prev_line( lineno )$/;"	f
s:Get_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Get_type(mode, annot_file_name)$/;"	f
s:GlobComplete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern) abort$/;"	f
s:GoToLSPDefinition	plugged/ale/autoload/ale/definition.vim	/^function! s:GoToLSPDefinition(linter, options, capability) abort$/;"	f
s:GotoFileWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
s:GotoNextFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
s:GotoNextToplevelTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
s:GotoPrevFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
s:GotoSourceWindow	plugged/vista.vim/autoload/vista/source.vim	/^  function! s:GotoSourceWindow() abort$/;"	f
s:Greek	plugged/vim-polyglot/syntax/tex.vim	/^  fun! s:Greek(group,pat,cchar)$/;"	f
s:GrepParseLine	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepParseLine(prefix, name_only, dir, line) abort$/;"	f
s:GrepSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:GroupByKindForLSPData	plugged/vista.vim/autoload/vista/finder.vim	/^function! s:GroupByKindForLSPData(lsp_items) abort$/;"	f
s:GroupCmd	plugged/ale/autoload/ale/sign.vim	/^function! s:GroupCmd() abort$/;"	f
s:GroupLoclistItems	plugged/ale/autoload/ale/sign.vim	/^function! s:GroupLoclistItems(buffer, loclist) abort$/;"	f
s:HELPHISTORY	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:HELPHISTORY = []$/;"	v
s:HELPPROMPT	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:HELPPROMPT = 'help?> '$/;"	v
s:HL	plugged/gruvbox/colors/gruvbox.vim	/^function! s:HL(group, fg, ...)$/;"	f
s:HandleArguments	plugged/vista.vim/autoload/vista.vim	/^function! s:HandleArguments(fst, snd) abort$/;"	f
s:HandleBufDelete	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleBufDelete(bufname, bufnr) abort$/;"	f
s:HandleBufWrite	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleBufWrite(fname) abort$/;"	f
s:HandleESLintOutput	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! s:HandleESLintOutput(buffer, lines, type) abort$/;"	f
s:HandleExit	plugged/ale/autoload/ale/engine.vim	/^function! s:HandleExit(job_info, buffer, output, data) abort$/;"	f
s:HandleExit	plugged/ale/autoload/ale/fix.vim	/^function! s:HandleExit(job_info, buffer, job_output, data) abort$/;"	f
s:HandleLSPDiagnostics	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPDiagnostics(conn_id, response) abort$/;"	f
s:HandleLSPErrorMessage	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPErrorMessage(linter_name, response) abort$/;"	f
s:HandleLSPResponse	plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! s:HandleLSPResponse(resp) abort$/;"	f
s:HandleLSPResponse	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:HandleLSPResponse(error, response) abort$/;"	f
s:HandleLSPResponse	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:HandleLSPResponse(output) abort$/;"	f
s:HandleLSPResponse	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! s:HandleLSPResponse(results) abort$/;"	f
s:HandleLSPResponse	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:HandleLSPResponse(_server, _req_id, _type, data) abort$/;"	f
s:HandleLSPResponseInSilence	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:HandleLSPResponseInSilence(error, response) abort$/;"	f
s:HandleLSPResponseToCustomRequests	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleLSPResponseToCustomRequests(conn_id, response) abort$/;"	f
s:HandleOnlyWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleOnlyWindow() abort$/;"	f
s:HandleSingleArgument	plugged/vista.vim/autoload/vista.vim	/^function! s:HandleSingleArgument(arg) abort$/;"	f
s:HandleSyntaxError	plugged/ale/autoload/ale/handlers/ruby.vim	/^function! s:HandleSyntaxError(buffer, lines) abort$/;"	f
s:HandleTSServerDiagnostics	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:HandleTSServerDiagnostics(response, error_type) abort$/;"	f
s:HandleUnixFormat	plugged/ale/autoload/ale/handlers/unix.vim	/^function! s:HandleUnixFormat(buffer, lines, type) abort$/;"	f
s:HasAvaliableServers	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:HasAvaliableServers() abort$/;"	f
s:HasCStyleComments	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
s:HasLeadingTabs	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
s:HasMultipartDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
s:HasOpenFileWindows	plugged/tagbar/autoload/tagbar.vim	/^function! s:HasOpenFileWindows() abort$/;"	f
s:HasOpt	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:HasOpt(args, ...) abort$/;"	f
s:HasVlnum	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:HasVlnum() abort$/;"	f
s:HeaderDecrease	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:HeaderDecrease(line1, line2, ...)$/;"	f
s:HeadingWhitespaces	plugged/vista.vim/autoload/vista/fold.vim	/^function! s:HeadingWhitespaces(line) abort$/;"	f
s:Helpfind	plugged/vim-polyglot/extras/menu.vim	/^fun! s:Helpfind()$/;"	f
s:HiTag	plugged/vista.vim/autoload/vista/popup.vim	/^function! s:HiTag() abort$/;"	f
s:HiTagLine	plugged/vista.vim/autoload/vista/popup.vim	/^function! s:HiTagLine() abort$/;"	f
s:HighlightGroup	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^function! s:HighlightGroup(category, name) abort$/;"	f
s:HighlightGroup	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^function! s:HighlightGroup(category, name) abort$/;"	f
s:HighlightNearestTag	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:HighlightNearestTag(_timer) abort$/;"	f
s:HighlightSeperator	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^function! s:HighlightSeperator(category) abort$/;"	f
s:HighlightTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
s:HighlightTagInFloatinWin	plugged/vista.vim/autoload/vista/floating.vim	/^function! s:HighlightTagInFloatinWin() abort$/;"	f
s:INDENT_AFTER_KEYWORD	plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_KEYWORD	plugged/vim-polyglot/indent/moon.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|with\\|elseif\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:INDENT_AFTER_OPERATOR	plugged/vim-polyglot/indent/moon.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:INTERNAL_ERROR	plugged/ale/autoload/ale/lsp/response.vim	/^let s:INTERNAL_ERROR = -32603$/;"	v
s:INVALID_PARAMS	plugged/ale/autoload/ale/lsp/response.vim	/^let s:INVALID_PARAMS = -32602$/;"	v
s:INVALID_REQUEST	plugged/ale/autoload/ale/lsp/response.vim	/^let s:INVALID_REQUEST = -32600$/;"	v
s:IS_WINDOWS	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:IS_WINDOWS = has('win32')$/;"	v
s:IdrisCommand	plugged/vim-polyglot/ftplugin/idris.vim	/^function! s:IdrisCommand(...)$/;"	f
s:IdrisCommand	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! s:IdrisCommand(...)$/;"	f
s:Ignore	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:Ignore(item) abort$/;"	f
s:IgnoreFixers	plugged/ale/autoload/ale/fix.vim	/^function! s:IgnoreFixers(callback_list, filetype, config) abort$/;"	f
s:InBracket	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InBracket(...)$/;"	f
s:InComment	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InComment(...)$/;"	f
s:InComment2	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InComment2(...)$/;"	f
s:InCommentOrLiteral	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InCommentOrLiteral(...)$/;"	f
s:InKeyword	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InKeyword(...)$/;"	f
s:InLiteral	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InLiteral(...)$/;"	f
s:InLiteral2	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InLiteral2(...)$/;"	f
s:InMultiVarStatement	plugged/vim-polyglot/indent/solidity.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
s:InMultiVarStatement	plugged/vim-polyglot/indent/typescript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
s:InOneLineScope	plugged/vim-polyglot/indent/solidity.vim	/^function s:InOneLineScope(lnum)$/;"	f
s:InOneLineScope	plugged/vim-polyglot/indent/typescript.vim	/^function s:InOneLineScope(lnum)$/;"	f
s:InString	plugged/vim-polyglot/indent/graphql.vim	/^function s:InString(lnum, col)$/;"	f
s:IncreaseFunc	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:IncreaseFunc(type)$/;"	f
s:IncreaseIndent	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:IncreaseIndent()$/;"	f
s:IndentError	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IndentError(msg, token, stack)$/;"	f
s:IndentLinesDisable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesDisable()$/;"	f
s:IndentLinesEnable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesEnable()$/;"	f
s:IndentLinesToggle	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesToggle()$/;"	f
s:IndentWithContinuation	plugged/vim-polyglot/indent/solidity.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
s:IndentWithContinuation	plugged/vim-polyglot/indent/typescript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
s:IndentingKeywordInMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IndentingKeywordInMSL(msl_info) abort$/;"	f
s:Init	plugged/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
s:InitColor	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:InitColor()$/;"	f
s:InitCommandMap	plugged/LeaderF/autoload/leaderf.vim	/^function! s:InitCommandMap(var, dict)$/;"	f
s:InitCwds	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:InitCwds()$/;"	f
s:InitDict	plugged/LeaderF/autoload/leaderf.vim	/^function! s:InitDict(var, dict)$/;"	f
s:InitTypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
s:InitVar	plugged/LeaderF/autoload/leaderf.vim	/^function! s:InitVar(var, value)$/;"	f
s:InitVar	plugged/LeaderF/plugin/leaderf.vim	/^function! s:InitVar(var, value)$/;"	f
s:InitVariable	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
s:InitWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
s:InnerPos	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InnerPos(x, y)$/;"	f
s:InsertToc	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:InsertToc(format, ...)$/;"	f
s:InsideMultilineString	plugged/vim-polyglot/indent/puppet.vim	/^function! s:InsideMultilineString(lnum)$/;"	f
s:InsideTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f
s:InsideTag	plugged/vim-polyglot/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f
s:InstallCExtension	plugged/LeaderF/plugin/leaderf.vim	/^function! s:InstallCExtension(install) abort$/;"	f
s:IntoLSPHirRow	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:IntoLSPHirRow(row) abort$/;"	f
s:IntoLSPNonHirRow	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:IntoLSPNonHirRow(row) abort$/;"	f
s:IntoRow	plugged/vista.vim/autoload/vista/finder.vim	/^function! s:IntoRow(icon, kind, item) abort$/;"	f
s:IntoTemp	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:IntoTemp(...) abort$/;"	f
s:InvertComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
s:IsAssignment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsAssignment(str, pos) abort$/;"	f
s:IsAttributeLine	plugged/vim-polyglot/indent/cs.vim	/^function! s:IsAttributeLine(line)$/;"	f
s:IsBlankLine	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsBlankLine(line)$/;"	f
s:IsBlock	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsBlock()$/;"	f
s:IsBoolean	plugged/ale/autoload/ale/linter.vim	/^function! s:IsBoolean(value) abort$/;"	f
s:IsCallback	plugged/ale/autoload/ale/linter.vim	/^function! s:IsCallback(value) abort$/;"	f
s:IsCatchStandalone	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsCatchStandalone(lnum, i)$/;"	f
s:IsColComment	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:IsColComment(lnum, cnum)$/;"	f
s:IsComment	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
s:IsComment	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsComment(linenum, col)$/;"	f
s:IsComment	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsComment(linenum, col)$/;"	f
s:IsCommentLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentLine(linenum)$/;"	f
s:IsCommentLine	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsCommentLine(linenum)$/;"	f
s:IsCommentLine	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsCommentLine(lnum)$/;"	f
s:IsCommentOrString	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
s:IsCommentOrString	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
s:IsCommentOrString	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
s:IsCommented	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
s:IsCommentedFromStartOfLine	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
s:IsCommentedNormOrSexy	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
s:IsCommentedOutermost	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedOutermost(left, right, leftAlt, rightAlt, line)$/;"	f
s:IsCompilerDirective	plugged/vim-polyglot/indent/cs.vim	/^function! s:IsCompilerDirective(line)$/;"	f
s:IsConflicted	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:IsConflicted() abort$/;"	f
s:IsContOne	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
s:IsContinued	plugged/vim-polyglot/autoload/pony.vim	/^function! s:IsContinued(lnum)$/;"	f
s:IsDelimValid	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
s:IsEscaped	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
s:IsExcludedFromIndent	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndent()$/;"	f
s:IsExcludedFromIndentAtPosition	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndentAtPosition(line, column)$/;"	f
s:IsFileUri	plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! s:IsFileUri(uri) abort$/;"	f
s:IsGenericFixer	plugged/ale/autoload/ale/fix/registry.vim	/^function! s:IsGenericFixer(suggested_filetypes) abort$/;"	f
s:IsHeader	plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:IsHeader(cur_line, next_line) abort$/;"	f
s:IsHeaderFile	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! s:IsHeaderFile(filename) abort$/;"	f
s:IsHeaderLine	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsHeaderLine(line)$/;"	f
s:IsInBlock	plugged/vim-polyglot/indent/hog.vim	/^function s:IsInBlock(lnum)$/;"	f
s:IsInClassDef	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
s:IsInComment	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInComment(pos)$/;"	f
s:IsInCommentOrString	plugged/vim-polyglot/indent/lua.vim	/^function s:IsInCommentOrString(lnum, col)$/;"	f
s:IsInMultilineComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
s:IsInRubyGroup	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInRubyGroup(groups, lnum, col) abort$/;"	f
s:IsInSexyComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
s:IsInString	plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInString	plugged/vim-polyglot/indent/json.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInString(lnum, col) abort$/;"	f
s:IsInString	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInString	plugged/vim-polyglot/indent/typescript.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInStringDelimiter	plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
s:IsInStringDelimiter	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringDelimiter(lnum, col) abort$/;"	f
s:IsInStringOrComment	plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsInStringOrComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrComment(lnum, col) abort$/;"	f
s:IsInStringOrComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsInStringOrComment	plugged/vim-polyglot/indent/typescript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsInStringOrDocumentation	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrDocumentation(lnum, col) abort$/;"	f
s:IsLiStart	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsLiStart(line)$/;"	f
s:IsLineAtomContinuation	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineAtomContinuation(lnum)$/;"	f
s:IsLineComment	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:IsLineComment(lnum)$/;"	f
s:IsLineComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsLineComment(lnum, col)$/;"	f
s:IsLineStringContinuation	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineStringContinuation(lnum)$/;"	f
s:IsLineVisible	plugged/tagbar/autoload/tagbar.vim	/^function! s:IsLineVisible(line) abort$/;"	f
s:IsMkdCode	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsMkdCode(lnum)$/;"	f
s:IsNumEven	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
s:IsPosInClassDef	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
s:IsSbt	plugged/ale/ale_linters/scala/fsc.vim	/^function! s:IsSbt(buffer) abort$/;"	f
s:IsSbt	plugged/ale/ale_linters/scala/scalac.vim	/^function! s:IsSbt(buffer) abort$/;"	f
s:IsSexyComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
s:IsStartingDelimiter	plugged/vim-polyglot/indent/blade.vim	/^function! s:IsStartingDelimiter(lnum)$/;"	f
s:IsString	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
s:IsString	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsString(linenum, col)$/;"	f
s:IsString	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsString(linenum, col)$/;"	f
s:IsSwitch	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
s:IsSyntaxNameExcludedFromIndent	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsSyntaxNameExcludedFromIndent(name)$/;"	f
s:IsUsable	plugged/vista.vim/autoload/vista/finder.vim	/^function! s:IsUsable(cache, fpath) abort$/;"	f
s:IsValidFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
s:J	plugged/vim-polyglot/autoload/crystal_lang.vim	/^  let s:J = s:V.import('Web.JSON')$/;"	v
s:Job	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:Job = {$/;"	v
s:Job.onExitCB	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onExitCB() abort$/;"	f
s:Job.onFailed	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onFailed() abort$/;"	f
s:Job.onStderrCB	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onStderrCB(data) abort$/;"	f
s:Job.onStdoutCB	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onStdoutCB(data) abort$/;"	f
s:Job.onSuccess	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onSuccess() abort$/;"	f
s:Job.run	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^    function! s:Job.run(cmd) abort$/;"	f
s:JobOpts	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobOpts(cmd, env) abort$/;"	f
s:Join	plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! s:Join(line, icon) abort$/;"	f
s:JumpToTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
s:Jump_Back	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f
s:Jump_Forward	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f
s:KEYWORDPATTERN	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:KEYWORDPATTERN = '\\m@\\?\\h\\k*!\\?'$/;"	v
s:KEYWORD_PAIRS	plugged/vim-polyglot/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:KIND_BLOCK_FOLLOW	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_BLOCK_FOLLOW = 1$/;"	v
s:KIND_BLOCK_PREC	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_BLOCK_PREC = 0$/;"	v
s:KIND_FUNC_BEGIN	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_FUNC_BEGIN = 2$/;"	v
s:KIND_FUNC_END	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_FUNC_END = 3$/;"	v
s:KeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KeyMap.Add	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
s:KeyMap.All	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
s:KeyMap.BindAll	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
s:KeyMap.Compare	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
s:KeyMap.Create	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
s:KeyMap.FindFor	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
s:KeyMap.Invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
s:KeyMap.Remove	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
s:KeyMap.bind	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
s:KeyMap.invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
s:Keywordprg	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
s:KillHandler	plugged/ale/autoload/ale/job.vim	/^function! s:KillHandler(timer) abort$/;"	f
s:Kind2Symbol	plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! s:Kind2Symbol(kind) abort$/;"	f
s:L2U_ResetLastCompletionInfo	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ResetLastCompletionInfo()$/;"	f
s:L2U_SetAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetAutoSub(wait_insert_enter)$/;"	f
s:L2U_SetFallbackMapping	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetFallbackMapping(s, k)$/;"	f
s:L2U_SetKeymap	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetKeymap()$/;"	f
s:L2U_SetTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetTab(wait_insert_enter)$/;"	f
s:L2U_Setup	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_Setup()$/;"	f
s:L2U_SetupGlobal	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetupGlobal()$/;"	f
s:L2U_UnsetAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetAutoSub()$/;"	f
s:L2U_UnsetKeymap	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetKeymap()$/;"	f
s:L2U_UnsetTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetTab()$/;"	f
s:L2U_deprecated_options	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_deprecated_options()$/;"	f
s:L2U_file_type_regex	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_file_type_regex(ft)$/;"	f
s:L2U_fix_compose_chars	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_fix_compose_chars(uni)$/;"	f
s:L2U_ismatch	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ismatch()$/;"	f
s:L2U_longest_common_prefix	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_longest_common_prefix(partmatches)$/;"	f
s:L2U_partmatches_sort	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_partmatches_sort(p1, p2)$/;"	f
s:LSP_INSERT_TEXT_FORMAT_PLAIN	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_PLAIN = 1$/;"	v
s:LSP_INSERT_TEXT_FORMAT_SNIPPET	plugged/ale/autoload/ale/completion.vim	/^let s:LSP_INSERT_TEXT_FORMAT_SNIPPET = 2$/;"	v
s:LSP_MESSAGE_TYPE_DISABLED	plugged/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_DISABLED = 0$/;"	v
s:LSP_MESSAGE_TYPE_ERROR	plugged/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_ERROR = 1$/;"	v
s:LSP_MESSAGE_TYPE_INFORMATION	plugged/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_INFORMATION = 3$/;"	v
s:LSP_MESSAGE_TYPE_LOG	plugged/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_LOG = 4$/;"	v
s:LSP_MESSAGE_TYPE_WARNING	plugged/ale/autoload/ale/lsp_window.vim	/^let s:LSP_MESSAGE_TYPE_WARNING = 2$/;"	v
s:LastIndexOfDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
s:LastTagIsOpen	plugged/vim-polyglot/indent/mp.vim	/^function! s:LastTagIsOpen(line)$/;"	f
s:LastValidMatchEnd	plugged/vim-polyglot/indent/mp.vim	/^function! s:LastValidMatchEnd(line, pat, start)$/;"	f
s:LeadingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:LeadingOperator(cline_info) abort$/;"	f
s:LeadingSpaceDisable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceDisable()$/;"	f
s:LeadingSpaceEnable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceEnable()$/;"	f
s:LeadingSpaceToggle	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceToggle()$/;"	f
s:Left	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Left(...)$/;"	f
s:LeftMostIndx	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
s:Lf_CommandMap	plugged/LeaderF/autoload/leaderf.vim	/^let s:Lf_CommandMap = {$/;"	v
s:Lf_FuzzyMatch	plugged/LeaderF/autoload/leaderf/Any.vim	/^function! s:Lf_FuzzyMatch(pattern, str) abort$/;"	f
s:Lf_GenDict	plugged/LeaderF/autoload/leaderf/Any.vim	/^function! s:Lf_GenDict(arguments) abort$/;"	f
s:Lf_Refine	plugged/LeaderF/autoload/leaderf/Any.vim	/^function! s:Lf_Refine(arguments) abort$/;"	f
s:LineHasOpeningBrackets	plugged/vim-polyglot/indent/json.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LineHasOpeningBrackets	plugged/vim-polyglot/indent/solidity.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LineHasOpeningBrackets	plugged/vim-polyglot/indent/typescript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LinesError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LinesError(...) abort$/;"	f
s:Lint	plugged/ale/autoload/ale.vim	/^function! s:Lint(buffer, should_lint_file, timer_id) abort$/;"	f
s:Listener	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^let s:Listener = {$/;"	v
s:Listener.HasPath	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.HasPath(path_str) abort$/;"	f
s:Listener.OnInit	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnInit(event) abort$/;"	f
s:Listener.OnRefresh	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnRefresh(event) abort$/;"	f
s:Listener.OnRefreshFlags	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnRefreshFlags(event) abort$/;"	f
s:Listener.SetNext	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.SetNext(cache) abort$/;"	f
s:Listener.TryUpdateNERDTreeUI	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.TryUpdateNERDTreeUI() abort$/;"	f
s:Listener.callback	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.callback(event) abort$/;"	f
s:Listener.changed	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.changed() abort$/;"	f
s:Listener.getOption	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.getOption(name, default) abort$/;"	f
s:Listener.update	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.update() abort$/;"	f
s:LiveScriptCompile	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompile(startline, endline, args)$/;"	f
s:LiveScriptCompileClose	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileClose()$/;"	f
s:LiveScriptCompileComplete	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileComplete(arg, cmdline, cursor)$/;"	f
s:LiveScriptCompileResetVars	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileResetVars()$/;"	f
s:LiveScriptCompileUpdate	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileUpdate(startline, endline)$/;"	f
s:LiveScriptCompileWatchUpdate	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileWatchUpdate()$/;"	f
s:LoadArgCount	plugged/ale/autoload/ale/util.vim	/^function! s:LoadArgCount(function) abort$/;"	f
s:LoadData	plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:LoadData(container, line) abort$/;"	f
s:LoadFromPalette	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^function! s:LoadFromPalette() abort$/;"	f
s:LoadFromPalette	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^function! s:LoadFromPalette() abort$/;"	f
s:LoadUserTypeDefs	plugged/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
s:LoadVimSesn	plugged/vim-polyglot/extras/menu.vim	/^fun! s:LoadVimSesn()$/;"	f
s:Load_annotation	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Load_annotation(annot_file_name)$/;"	f
s:Locate_annotation	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Locate_annotation()$/;"	f
s:Log	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Log(s)$/;"	f
s:LogFlushQueue	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogFlushQueue(state, dir) abort$/;"	f
s:LogParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogParse(state, dir, line) abort$/;"	f
s:Logger	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:Logger = {}$/;"	v
s:Logger.debug	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.debug(msg) abort$/;"	f
s:Logger.error	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.error(msg) abort$/;"	f
s:Logger.info	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.info(msg) abort$/;"	f
s:Logger.output	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.output(level, msg) abort$/;"	f
s:Logger.warning	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.warning(msg) abort$/;"	f
s:LookingAt	plugged/vim-polyglot/indent/javascript.vim	/^function s:LookingAt()$/;"	f
s:MAX_COL_SIZE	plugged/ale/autoload/ale/highlight.vim	/^let s:MAX_COL_SIZE = 1073741824 " pow(2, 30)$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/ls.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/moon.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_POS_VALUES	plugged/ale/autoload/ale/highlight.vim	/^let s:MAX_POS_VALUES = 8$/;"	v
s:MD	plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! s:MD(idx, line) abort$/;"	f
s:METHOD_NOT_FOUND	plugged/ale/autoload/ale/lsp/response.vim	/^let s:METHOD_NOT_FOUND = -32601$/;"	v
s:MainBlockIndent	plugged/vim-polyglot/indent/ada.vim	/^function s:MainBlockIndent (prev_indent, prev_lnum, blockstart, stop_at)$/;"	f
s:Map	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
s:Map	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
s:Map	plugged/vim-polyglot/indent/twig.vim	/^function! s:Map(Fun, list)$/;"	f
s:MapKeys	plugged/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
s:MapMotion	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MapMotion(lhs, rhs) abort$/;"	f
s:MapNormVis	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MapNormVis(rhs,lhs)$/;"	f
s:MapNotHasmapto	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MapNotHasmapto(lhs, rhs)$/;"	f
s:MarkdownClearSyntaxVariables	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownClearSyntaxVariables()$/;"	f
s:MarkdownHighlightSources	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownHighlightSources(force)$/;"	f
s:MarkdownRefreshSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownRefreshSyntax(force)$/;"	f
s:Markdown_GetUrlForPosition	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:Markdown_GetUrlForPosition(lnum, col)$/;"	f
s:Match	plugged/vim-polyglot/indent/falcon.vim	/^function s:Match(lnum, regex)$/;"	f
s:Match	plugged/vim-polyglot/indent/json.vim	/^function s:Match(lnum, regex)$/;"	f
s:Match	plugged/vim-polyglot/indent/ruby.vim	/^function! s:Match(lnum, regex) abort$/;"	f
s:Match	plugged/vim-polyglot/indent/solidity.vim	/^function s:Match(lnum, regex)$/;"	f
s:Match	plugged/vim-polyglot/indent/typescript.vim	/^function s:Match(lnum, regex)$/;"	f
s:MatchAt	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchAt(lnum, col, pattern) abort$/;"	f
s:MatchCount	plugged/vim-polyglot/indent/pov.vim	/^function! s:MatchCount(line, rexp)$/;"	f
s:MatchCursor	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchCursor(pattern) abort$/;"	f
s:MatchECR	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchECR(...) abort$/;"	f
s:MatchECRControl	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchECRControl(...) abort$/;"	f
s:MatchLast	plugged/vim-polyglot/indent/falcon.vim	/^function s:MatchLast(lnum, regex)$/;"	f
s:MatchTag	plugged/vista.vim/autoload/vista/cursor/ctags.vim	/^function! s:MatchTag(trimmed_line) abort$/;"	f
s:Match_borders	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Match_borders(mode)$/;"	f
s:Match_data	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Match_data()$/;"	f
s:MaxLookback	plugged/vim-polyglot/indent/ls.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
s:MaxLookback	plugged/vim-polyglot/indent/moon.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
s:MenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuController.New	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
s:MenuController._allIndexesFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
s:MenuController._current	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
s:MenuController._cursorDown	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
s:MenuController._cursorUp	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
s:MenuController._echoPrompt	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
s:MenuController._handleKeypress	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
s:MenuController._nextIndexFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
s:MenuController._restoreOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
s:MenuController._saveOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
s:MenuController._setCmdheight	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
s:MenuController.isMinimal	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
s:MenuController.showMenu	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
s:MenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:MenuItem.All	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
s:MenuItem.AllEnabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
s:MenuItem.Create	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
s:MenuItem.CreateSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
s:MenuItem.CreateSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
s:MenuItem.enabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
s:MenuItem.execute	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
s:MenuItem.isSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
s:MenuItem.isSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
s:MergeHead	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeHead(...) abort$/;"	f
s:MergeSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:MergetoolSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergetoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:MessageCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MessageCfile(...) abort$/;"	f
s:MinimizeMaxFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:MinimizeMaxFoldLevel(fileinfo, tags) abort$/;"	f
s:ModifierFlags	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! s:ModifierFlags()$/;"	f
s:Mods	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Mods(mods, ...) abort$/;"	f
s:ModuloIndent	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:ModuloIndent(ind)$/;"	f
s:Move	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
s:MoveToCurHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToCurHeader()$/;"	f
s:MoveToNextHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToNextHeader()$/;"	f
s:MoveToNextSiblingHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToNextSiblingHeader()$/;"	f
s:MoveToParentHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToParentHeader()$/;"	f
s:MoveToPreviousHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToPreviousHeader()$/;"	f
s:MoveToPreviousSiblingHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToPreviousSiblingHeader()$/;"	f
s:MultilineStringOrLineComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:MultilineStringOrLineComment(cline_info) abort$/;"	f
s:Multipart	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Multipart()$/;"	f
s:NC	plugged/vim-polyglot/indent/vhdl.vim	/^let s:NC = '\\%(--.*\\)\\@<!'$/;"	v
s:NE	plugged/vim-polyglot/indent/vhdl.vim	/^let s:NE = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:NERDFileNameEscape	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTree.AddPathFilter	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
s:NERDTree.Close	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
s:NERDTree.CloseIfQuitOnOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
s:NERDTree.CursorToBookmarkTable	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
s:NERDTree.CursorToTreeWin	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin(...)$/;"	f
s:NERDTree.ExistsForBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
s:NERDTree.ExistsForTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
s:NERDTree.ForCurrentBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
s:NERDTree.ForCurrentTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
s:NERDTree.GetWinNum	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
s:NERDTree.IsOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
s:NERDTree.MustBeOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
s:NERDTree.New	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
s:NERDTree.PathFilters	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
s:NERDTree.changeRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
s:NERDTree.getRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
s:NERDTree.isTabTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
s:NERDTree.isWinTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
s:NERDTree.previousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
s:NERDTree.render	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
s:NERDTree.setPreviousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
s:NODOCPATTERN	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:NODOCPATTERN = '\\C\\VNo documentation found.'$/;"	v
s:Nat	plugged/vim-polyglot/indent/javascript.vim	/^function s:Nat(int)$/;"	f
s:NavigateUp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
s:NeoVimCallback	plugged/ale/autoload/ale/job.vim	/^function! s:NeoVimCallback(job, data, event) abort$/;"	f
s:NeoVimOutputCallback	plugged/ale/autoload/ale/socket.vim	/^function! s:NeoVimOutputCallback(channel_id, data, event) abort$/;"	f
s:NerdEcho	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
s:Nested	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Nested()$/;"	f
s:NewWindow	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! s:NewWindow() abort$/;"	f
s:NextExpandedHunk	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextExpandedHunk(count) abort$/;"	f
s:NextFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextFile(count) abort$/;"	f
s:NextHunk	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextHunk(count) abort$/;"	f
s:NextIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:NextIndToken(lnum, i)$/;"	f
s:NextItem	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextItem(count) abort$/;"	f
s:NextSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSection(count) abort$/;"	f
s:NextSection	plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:NextSection(backwards)$/;"	f
s:NextSectionEnd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSectionEnd(count) abort$/;"	f
s:NextTopLevelLnum	plugged/vista.vim/autoload/vista/jump.vim	/^function! s:NextTopLevelLnum() abort$/;"	f
s:NoTeXIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^function! s:NoTeXIndent()$/;"	f
s:NotEnoughBuffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:NotEnoughBuffers()$/;"	f
s:NoteTemp	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:NoteTemp() abort$/;"	f
s:Notifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Notifier.AddListener	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
s:Notifier.GetListenersForEvent	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
s:Notifier.GetListenersMap	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
s:Notifier.NotifyListeners	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
s:NullError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NullError(...) abort$/;"	f
s:NumLinesInBuf	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
s:NumberOfLeadingTabs	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
s:NumberOfMatches	plugged/vim-polyglot/indent/swift.vim	/^function! s:NumberOfMatches(char, string, index)$/;"	f
s:OUTDENT_AFTER	plugged/vim-polyglot/indent/ls.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:OUTDENT_AFTER	plugged/vim-polyglot/indent/moon.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\)\\>'$/;"	v
s:Observe	plugged/vim-polyglot/ftdetect/polyglot.vim	/^func! s:Observe(fn)$/;"	f
s:OcpGrep	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function! s:OcpGrep(bang,args) abort$/;"	f
s:OnBufDelete	plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:OnBufDelete(bufnr) abort$/;"	f
s:OnBufEnter	plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:OnBufEnter(bufnr, fpath) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/codefix.vim	/^function! s:OnReady($/;"	f
s:OnReady	plugged/ale/autoload/ale/completion.vim	/^function! s:OnReady(linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/definition.vim	/^function! s:OnReady(line, column, options, capability, linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/hover.vim	/^function! s:OnReady(line, column, opt, linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/organize_imports.vim	/^function! s:OnReady(linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/references.vim	/^function! s:OnReady(line, column, options, linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/rename.vim	/^function! s:OnReady(line, column, options, linter, lsp_details) abort$/;"	f
s:OnReady	plugged/ale/autoload/ale/symbol.vim	/^function! s:OnReady(query, options, linter, lsp_details) abort$/;"	f
s:OnReadyForCustomRequests	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:OnReadyForCustomRequests(args, linter, lsp_details) abort$/;"	f
s:OneScope	plugged/vim-polyglot/indent/javascript.vim	/^function s:OneScope()$/;"	f
s:Open	plugged/ale/autoload/ale/preview.vim	/^function! s:Open(open_in) abort$/;"	f
s:OpenBrace	plugged/vim-polyglot/indent/puppet.vim	/^function! s:OpenBrace(lnum)$/;"	f
s:OpenCompletionMenu	plugged/ale/autoload/ale/completion.vim	/^function! s:OpenCompletionMenu(...) abort$/;"	f
s:OpenExec	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenExec(cmd, mods, env, args, ...) abort$/;"	f
s:OpenFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
s:OpenParents	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
s:OpenParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenParse(args, wants_cmd) abort$/;"	f
s:OpenPopup	plugged/vista.vim/autoload/vista/popup.vim	/^function! s:OpenPopup(lines) abort$/;"	f
s:OpenUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:OpenUrlUnderCursor()$/;"	f
s:OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
s:Opener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Opener.New	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
s:Opener._bufInWindows	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
s:Opener._checkToCloseTree	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
s:Opener._firstUsableWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
s:Opener._gotoTargetWin	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
s:Opener._isWindowUsable	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
s:Opener._newSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
s:Opener._newVSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
s:Opener._openDirectory	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
s:Opener._openFile	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
s:Opener._previousWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
s:Opener._restoreCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
s:Opener._reuseWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
s:Opener._saveCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
s:Opener.open	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
s:Or	plugged/vim-polyglot/autoload/pony.vim	/^function! s:Or(x, y)$/;"	f
s:OrganizeImports	plugged/ale/autoload/ale/organize_imports.vim	/^function! s:OrganizeImports(linter) abort$/;"	f
s:OuterPos	plugged/vim-polyglot/autoload/pony.vim	/^function! s:OuterPos(x, y)$/;"	f
s:Owner	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
s:P	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:P = s:V.import('Process')$/;"	v
s:PARSE_ERROR	plugged/ale/autoload/ale/lsp/response.vim	/^let s:PARSE_ERROR = -32700$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/ls.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/moon.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:PS	plugged/vim-polyglot/ftplugin/purescript.vim	/^let s:PS = []$/;"	v
s:PackageMap	plugged/vim-polyglot/autoload/dart.vim	/^function! s:PackageMap() abort$/;"	f
s:ParseCino	plugged/vim-polyglot/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
s:ParseCoffeeError	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
s:ParseInlinedFunctionProblems	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! s:ParseInlinedFunctionProblems(buffer, lines) abort$/;"	f
s:ParseProblemsInHeaders	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! s:ParseProblemsInHeaders(buffer, lines) abort$/;"	f
s:ParseRpmVars	plugged/vim-polyglot/ftplugin/spec.vim	/^    function s:ParseRpmVars(str, strline)$/;"	f
s:ParseTagfield	plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:ParseTagfield(tagfields) abort$/;"	f
s:ParseTagline	plugged/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
s:PartOfInclude	plugged/vim-polyglot/indent/puppet.vim	/^function! s:PartOfInclude(lnum)$/;"	f
s:PatchSearchExpr	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PatchSearchExpr(reverse) abort$/;"	f
s:Path	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Path.AbsolutePathFor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
s:Path.CopyingSupported	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
s:Path.Create	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
s:Path.JoinPathStrings	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
s:Path.New	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
s:Path.Resolve	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
s:Path.WinToUnixPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
s:Path._escChars	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
s:Path._ignorePatternMatches	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
s:Path._splitChunks	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
s:Path._str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
s:Path._strForCd	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
s:Path._strForEdit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
s:Path._strForGlob	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
s:Path._strForUI	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
s:Path.addDelimiter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
s:Path.bookmarkNames	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
s:Path.cacheDisplayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
s:Path.changeToDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
s:Path.copy	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
s:Path.copyingWillOverwrite	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
s:Path.createParentDirectories	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
s:Path.delete	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
s:Path.displayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
s:Path.edit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
s:Path.equals	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
s:Path.exists	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
s:Path.extractDriveLetter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
s:Path.getDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
s:Path.getLastPathComponent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
s:Path.getParent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
s:Path.getSortKey	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
s:Path.getSortOrderIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
s:Path.ignore	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
s:Path.isAncestor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(child)$/;"	f
s:Path.isHiddenUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
s:Path.isUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(parent)$/;"	f
s:Path.isUnixHiddenFile	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
s:Path.isUnixHiddenPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
s:Path.readInfoFromDisk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
s:Path.refresh	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
s:Path.refreshFlags	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
s:Path.rename	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
s:Path.str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
s:Path.strTrunk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
s:Path.tabnr	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
s:PathInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
s:PlaceDelimitersAndInsBetween	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
s:PlainNotification	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:PlainNotification(content)$/;"	f
s:Pop	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Pop(stack)$/;"	f
s:Pop	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Pop()$/;"	f
s:Position	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:Position(line, character)$/;"	f
s:PrepareContainer	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:PrepareContainer() abort$/;"	f
s:PreparePathArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal) abort$/;"	f
s:PrepareWrappedCommand	plugged/ale/autoload/ale/job.vim	/^function! s:PrepareWrappedCommand(original_wrapper, command) abort$/;"	f
s:PrependFpath	plugged/vista.vim/autoload/vista/util.vim	/^function! s:PrependFpath(lines) abort$/;"	f
s:PrevIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:PrevIndToken(lnum, i)$/;"	f
s:PrevLineOfCode	plugged/vim-polyglot/indent/lua.vim	/^function s:PrevLineOfCode(lnum)$/;"	f
s:PrevMatch	plugged/vim-polyglot/indent/sas.vim	/^function! s:PrevMatch(lnum, regex)$/;"	f
s:PrevNonBlank	plugged/vim-polyglot/indent/markdown.vim	/^function! s:PrevNonBlank(lnum)$/;"	f
s:PrevNonBlankNonComment	plugged/vim-polyglot/indent/mp.vim	/^function! s:PrevNonBlankNonComment(lnum)$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/falcon.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/json.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:PrevNonBlankNonString(lnum) abort$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/solidity.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonBlankNonString	plugged/vim-polyglot/indent/typescript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PrevNonMultilineString	plugged/vim-polyglot/indent/puppet.vim	/^function! s:PrevNonMultilineString(lnum)$/;"	f
s:PrevNonblank	plugged/vim-polyglot/autoload/pony.vim	/^function! s:PrevNonblank(lnum)$/;"	f
s:PrevTopLevelLnum	plugged/vista.vim/autoload/vista/jump.vim	/^function! s:PrevTopLevelLnum() abort$/;"	f
s:PreviousFile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousFile(count) abort$/;"	f
s:PreviousHunk	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousHunk(count) abort$/;"	f
s:PreviousItem	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousItem(count) abort$/;"	f
s:PreviousNotMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:PreviousNotMSL(msl_info) abort$/;"	f
s:PreviousSection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSection(count) abort$/;"	f
s:PreviousSectionEnd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSectionEnd(count) abort$/;"	f
s:PreviousToken	plugged/vim-polyglot/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
s:PrintHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
s:PrintKinds	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
s:PrintTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, output, fileinfo, typeinfo) abort$/;"	f
s:PriorityCmd	plugged/ale/autoload/ale/sign.vim	/^function! s:PriorityCmd() abort$/;"	f
s:ProcessDeferredCommands	plugged/ale/autoload/ale/assert.vim	/^function! s:ProcessDeferredCommands(initial_result) abort$/;"	f
s:ProcessFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
s:ProcessTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:ProcessTag(name, filename, pattern, fields, is_split, typeinfo, fileinfo) abort$/;"	f
s:ProjectParms	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:ProjectParms(projectUri)$/;"	f
s:ProjectRun	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:ProjectRun(...) abort$/;"	f
s:ProjectionistDetect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
s:Pure	plugged/vim-polyglot/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
s:PurifyCode	plugged/vim-polyglot/indent/pascal.vim	/^function! s:PurifyCode( line_num )$/;"	f
s:Push	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Push(stack, token)$/;"	f
s:Push	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Push(fct, kind)$/;"	f
s:PushSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PushSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Python2Syntax	plugged/vim-polyglot/syntax/python.vim	/^function! s:Python2Syntax()$/;"	f
s:QueryLog	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec) abort$/;"	f
s:QuickfixCreate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixCreate(nr, opts) abort$/;"	f
s:QuickfixGet	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixGet(nr, ...) abort$/;"	f
s:QuickfixSet	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixSet(nr, ...) abort$/;"	f
s:QuickfixStream	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixStream(nr, event, title, cmd, first, callback, ...) abort$/;"	f
s:REPL_SEARCH	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:REPL_SEARCH = 'Base.Docs.repl_search'$/;"	v
s:REPL_SEARCH	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:REPL_SEARCH = 'import REPL.repl_search; repl_search'$/;"	v
s:REQUEST_CANCELLED	plugged/ale/autoload/ale/lsp/response.vim	/^let s:REQUEST_CANCELLED = -32800$/;"	v
s:RIndent	plugged/vim-polyglot/indent/rmd.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	plugged/vim-polyglot/indent/rrst.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RST	plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! s:RST(idx, line) abort$/;"	f
s:Racket_visual_doc	plugged/vim-polyglot/ftplugin/racket.vim	/^function! s:Racket_visual_doc()$/;"	f
s:ReadExec	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadExec(line1, count, range, mods, env, args, options) abort$/;"	f
s:ReadPrepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadPrepare(line1, count, range, mods) abort$/;"	f
s:RealParentOf	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:RealParentOf(candidate) abort$/;"	f
s:RebaseArgument	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseArgument() abort$/;"	f
s:RebaseSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:RecoverStateAfterLineComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RecoverStateAfterLineComment(state)$/;"	f
s:ReferenceName	plugged/vim-polyglot/syntax/rst.vim	/^let s:ReferenceName = '[[:alnum:]]\\%([-_.:+]\\?[[:alnum:]]\\+\\)*'$/;"	v
s:Refresh	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:Refresh()$/;"	f
s:RefreshTabline	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:RefreshTabline()$/;"	f
s:Relative	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
s:ReloadStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
s:ReloadStatusBuffer	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatusBuffer(...) abort$/;"	f
s:ReloadTabStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadTabStatus(...) abort$/;"	f
s:ReloadWinStatus	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadWinStatus(...) abort$/;"	f
s:RemapItemTypes	plugged/ale/autoload/ale/engine.vim	/^function! s:RemapItemTypes(type_map, loclist) abort$/;"	f
s:Remote	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir) abort$/;"	f
s:Remove	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
s:RemoveDelimiters	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
s:RemoveITags	plugged/vim-polyglot/after/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f
s:RemoveITags	plugged/vim-polyglot/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f
s:RemoveModule	plugged/ale/autoload/ale/test.vim	/^function! s:RemoveModule(results) abort$/;"	f
s:RemoveProblemsForDisabledLinters	plugged/ale/autoload/ale/engine.vim	/^function! s:RemoveProblemsForDisabledLinters(buffer, linters) abort$/;"	f
s:RemoveTrailingComments	plugged/vim-polyglot/indent/solidity.vim	/^function s:RemoveTrailingComments(content)$/;"	f
s:RemoveTrailingComments	plugged/vim-polyglot/indent/typescript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
s:RemoveUnicodeQuotes	plugged/ale/autoload/ale/handlers/flawfinder.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:RemoveUnicodeQuotes	plugged/ale/autoload/ale/handlers/gcc.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:RemoveUnicodeQuotes	plugged/ale/autoload/ale/handlers/pony.vim	/^function! s:RemoveUnicodeQuotes(text) abort$/;"	f
s:RemoveVisibility	plugged/vista.vim/autoload/vista/cursor/ctags.vim	/^function! s:RemoveVisibility(tag) abort$/;"	f
s:Render	plugged/vista.vim/autoload/vista/renderer.vim	/^function! s:Render(data) abort$/;"	f
s:Render	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:Render() abort$/;"	f
s:RenderContent	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
s:RenderDescendants	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:RenderDescendants(parent_name, parent_line, descendants, rows, depth) abort$/;"	f
s:RenderGroupedData	plugged/vista.vim/autoload/vista/finder.vim	/^function! s:RenderGroupedData(grouped_data) abort$/;"	f
s:RenderKeepView	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
s:RenderLSPHirAndThenGroupByKind	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:RenderLSPHirAndThenGroupByKind(data) abort$/;"	f
s:RenderLinewise	plugged/vista.vim/autoload/vista/renderer/line.vim	/^function! s:RenderLinewise() abort$/;"	f
s:RenderNonHirRow	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:RenderNonHirRow(vs, rendered) abort$/;"	f
s:RenderScopeless	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:RenderScopeless(scope_less, rows) abort$/;"	f
s:ReopenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ReopenWindow(delbufname) abort$/;"	f
s:ReplaceAsStr	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceAsStr(str, search, replacement, ...)$/;"	f
s:ReplaceCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
s:ReplaceCompletionOptions	plugged/ale/autoload/ale/completion.vim	/^function! s:ReplaceCompletionOptions(source) abort$/;"	f
s:ReplaceDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
s:ReplaceExtendedRegexFactorWithNumberFactor	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceExtendedRegexFactorWithNumberFactor(extendedregex)$/;"	f
s:ReplaceLeftMostDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
s:ReplaceNumberFactorWithVimRegexFactor	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceNumberFactorWithVimRegexFactor(halfway)$/;"	f
s:ReplaceRemainFactorWithVimRegexFactor	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceRemainFactorWithVimRegexFactor(halfway)$/;"	f
s:ReplaceRightMostDelim	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
s:ResetConcealOption	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:ResetConcealOption()$/;"	f
s:ResetWidth	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:ResetWidth(...)$/;"	f
s:Resolve	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
s:RestoreScreenState	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
s:RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
s:RestoreShiftwidth	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:RestoreShiftwidth()$/;"	f
s:RestoreViewIfNeeded	plugged/ale/autoload/ale/list.vim	/^function! s:RestoreViewIfNeeded(buffer) abort$/;"	f
s:RevertSubcommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RevertSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Right	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Right(...)$/;"	f
s:RightMostIndx	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
s:RmDir	plugged/vim-polyglot/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f
s:Run	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f
s:Run	plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! s:Run() abort$/;"	f
s:Run	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:Run() abort$/;"	f
s:Run	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:Run(fpath) abort$/;"	f
s:Run	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:Run() abort$/;"	f
s:Run	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! s:Run() abort$/;"	f
s:Run	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! s:Run() abort$/;"	f
s:Run	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:Run() abort$/;"	f
s:Run	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:Run(...) abort$/;"	f
s:Run	plugged/vista.vim/autoload/vista/finder/skim.vim	/^function! s:Run(...) abort$/;"	f
s:RunAsync	plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! s:RunAsync() abort$/;"	f
s:RunAsync	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! s:RunAsync() abort$/;"	f
s:RunAsync	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:RunAsync(fpath) abort$/;"	f
s:RunAsync	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! s:RunAsync() abort$/;"	f
s:RunAsync	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! s:RunAsync() abort$/;"	f
s:RunAsync	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! s:RunAsync() abort$/;"	f
s:RunAsync	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! s:RunAsync() abort$/;"	f
s:RunAsyncCommon	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:RunAsyncCommon(cmd) abort$/;"	f
s:RunBufDelete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunBufDelete(bufnr) abort$/;"	f
s:RunEdit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEdit(state, job) abort$/;"	f
s:RunFixer	plugged/ale/autoload/ale/fix.vim	/^function! s:RunFixer(options) abort$/;"	f
s:RunIfExecutable	plugged/ale/autoload/ale/engine.vim	/^function! s:RunIfExecutable(buffer, linter, lint_file, executable) abort$/;"	f
s:RunJob	plugged/ale/autoload/ale/engine.vim	/^function! s:RunJob(command, options) abort$/;"	f
s:RunJob	plugged/ale/autoload/ale/fix.vim	/^function! s:RunJob(result, options) abort$/;"	f
s:RunJobs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunJobs() abort$/;"	f
s:RunLinter	plugged/ale/autoload/ale/engine.vim	/^function! s:RunLinter(buffer, linter, lint_file) abort$/;"	f
s:RunLinters	plugged/ale/autoload/ale/engine.vim	/^function! s:RunLinters($/;"	f
s:RunReceive	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunReceive(state, job, data, ...) abort$/;"	f
s:RunRustfmt	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RunRustfmt(command, tmpname, from_writepre)$/;"	f
s:RunSend	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSend(job, str) abort$/;"	f
s:RunWait	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunWait(state, job) abort$/;"	f
s:RustfmtCommand	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommand()$/;"	f
s:RustfmtCommandRange	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommandRange(filename, line1, line2)$/;"	f
s:RustfmtConfigOptions	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtConfigOptions()$/;"	f
s:RustfmtWriteMode	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtWriteMode()$/;"	f
s:SERVER_ERROR_END	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_END = -32000$/;"	v
s:SERVER_ERROR_START	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_ERROR_START = -32099$/;"	v
s:SERVER_NOT_INITIALIZED	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SERVER_NOT_INITIALIZED = -32002$/;"	v
s:SEVERITY_ERROR	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_ERROR = 1$/;"	v
s:SEVERITY_HINT	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_HINT = 4$/;"	v
s:SEVERITY_INFORMATION	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_INFORMATION = 3$/;"	v
s:SEVERITY_WARNING	plugged/ale/autoload/ale/lsp/response.vim	/^let s:SEVERITY_WARNING = 2$/;"	v
s:SID	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function s:SID()$/;"	f
s:SID	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:SID() abort$/;"	f
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/ls.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/moon.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\)\\>\\)\\@!'$/;"	v
s:SNR	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SQLBlockEnd	plugged/vim-polyglot/indent/pgsql.vim	/^let s:SQLBlockEnd = '^\\s*\\(end\\)\\>'$/;"	v
s:SQLBlockStart	plugged/vim-polyglot/indent/pgsql.vim	/^let s:SQLBlockStart = '^\\s*\\%('.$/;"	v
s:SYNTAX_COMMENT	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_COMMENT	plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_COMMENT = 'moon\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING	plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_STRING = 'moon\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:SYNTAX_STRING_COMMENT	plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:SafeSetBufline	plugged/vista.vim/autoload/vista/util.vim	/^function! s:SafeSetBufline(bufnr, lines) abort$/;"	f
s:Safe_indent	plugged/vim-polyglot/indent/awk.vim	/^function! s:Safe_indent( base, wordlen, this_line )$/;"	f
s:SaveScreenState	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
s:SaveVimSesn	plugged/vim-polyglot/extras/menu.vim	/^fun! s:SaveVimSesn()$/;"	f
s:ScratchBufBuild	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
s:ScratchBufUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
s:SearchCode	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
s:SearchEndPair	plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchEndPair(lnum, curr_col)$/;"	f
s:SearchLoop	plugged/vim-polyglot/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
s:SearchMatchingKeyword	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
s:SearchP	plugged/vim-polyglot/extras/menu.vim	/^fun! s:SearchP()$/;"	f
s:SearchPair	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
s:SearchPair	plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchPair(lnum, curr_col, start, middle, end)$/;"	f
s:SearchPair	plugged/vim-polyglot/indent/ls.vim	/^function! s:SearchPair(start, end)$/;"	f
s:SearchPair	plugged/vim-polyglot/indent/moon.vim	/^function! s:SearchPair(start, end)$/;"	f
s:SearchSection	plugged/vim-polyglot/ftplugin/j.vim	/^function! s:SearchSection(end, backwards, visualmode) abort$/;"	f
s:SearchTestFunctionNameUnderCursor	plugged/vim-polyglot/autoload/rust.vim	/^function! s:SearchTestFunctionNameUnderCursor() abort$/;"	f
s:SecondLevelIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:SecondLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\)\\>\\|\\(--.*\\)\\@<!?\\s*\\<CAS/;"	v
s:SecondLevelNonColonEndIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:SecondLevelNonColonEndIndent = '\\(--.*\\)\\@<!\\<\\(CHAN\\|DATA\\)\\s\\+TYPE\\>'$/;"	v
s:Seems_continuing	plugged/vim-polyglot/indent/awk.vim	/^function! s:Seems_continuing( line )$/;"	f
s:SelectAll	plugged/vim-polyglot/extras/menu.vim	/^func s:SelectAll()$/;"	f
s:Selection	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
s:SendInitMessage	plugged/ale/autoload/ale/lsp.vim	/^function! s:SendInitMessage(conn) abort$/;"	f
s:SendMessageData	plugged/ale/autoload/ale/lsp.vim	/^function! s:SendMessageData(conn, data) abort$/;"	f
s:SetBufline	plugged/vista.vim/autoload/vista/util.vim	/^  function! s:SetBufline(bufnr, lines) abort$/;"	f
s:SetConcealOption	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:SetConcealOption()$/;"	f
s:SetDefault	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! s:SetDefault(var, val)$/;"	f
s:SetDefault	plugged/vim-polyglot/ftdetect/polyglot.vim	/^function! s:SetDefault(name, value)$/;"	f
s:SetErlangOptions	plugged/vim-polyglot/ftplugin/erlang.vim	/^function s:SetErlangOptions()$/;"	f
s:SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
s:SetFoldLevelRecursive	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
s:SetListsImpl	plugged/ale/autoload/ale/list.vim	/^function! s:SetListsImpl(timer_id, buffer, loclist) abort$/;"	f
s:SetMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
s:SetMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^function! s:SetMakePrg()$/;"	f
s:SetModifiers	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:SetModifiers(mods)$/;"	f
s:SetStatusLine	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine() abort$/;"	f
s:SetUpForNewFiletype	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
s:SetexToAtx	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:SetexToAtx(line1, line2)$/;"	f
s:Setf	plugged/vim-polyglot/ftdetect/polyglot.vim	/^func! s:Setf(ft)$/;"	f
s:Setup	plugged/ale/autoload/ale/code_action.vim	/^function! s:Setup(enabled) abort$/;"	f
s:Setup	plugged/ale/autoload/ale/completion.vim	/^function! s:Setup(enabled) abort$/;"	f
s:Setup	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:Setup()$/;"	f
s:SetupColorSchemes	plugged/vim-polyglot/extras/menu.vim	/^func s:SetupColorSchemes() abort$/;"	f
s:SetupCompilers	plugged/vim-polyglot/extras/menu.vim	/^func s:SetupCompilers() abort$/;"	f
s:SetupKeymaps	plugged/vim-polyglot/extras/menu.vim	/^  func s:SetupKeymaps() abort$/;"	f
s:SetupLazyloadMenus	plugged/vim-polyglot/extras/menu.vim	/^  func s:SetupLazyloadMenus()$/;"	f
s:SetupListeners	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:SetupListeners()$/;"	f
s:SetupStateBeforeLineComment	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetupStateBeforeLineComment(topLine, bottomLine)$/;"	f
s:SexyNested	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SexyNested()$/;"	f
s:ShellTokenize	plugged/vim-polyglot/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f
s:ShiftWidth	plugged/vim-polyglot/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
s:ShiftWidth	plugged/vim-polyglot/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:ShortToLong	plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! s:ShortToLong(short) abort$/;"	f
s:ShouldIgnore	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:ShouldIgnore(buffer, linter_name) abort$/;"	f
s:ShouldOpen	plugged/ale/autoload/ale/list.vim	/^function! s:ShouldOpen(buffer) abort$/;"	f
s:ShouldSkip	plugged/vim-polyglot/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
s:ShouldSkip	plugged/vim-polyglot/indent/ls.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
s:ShouldSkip	plugged/vim-polyglot/indent/moon.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
s:ShouldSkipDisplay	plugged/vista.vim/autoload/vista/floating.vim	/^function! s:ShouldSkipDisplay(lnum) abort$/;"	f
s:ShouldSuggestForType	plugged/ale/autoload/ale/fix/registry.vim	/^function! s:ShouldSuggestForType(suggested_filetypes, type_list) abort$/;"	f
s:ShouldUseMarkdownExtension	plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! s:ShouldUseMarkdownExtension(source_filetype) abort$/;"	f
s:ShowCursorDetailForItem	plugged/ale/autoload/ale/cursor.vim	/^function! s:ShowCursorDetailForItem(loc, options) abort$/;"	f
s:ShowInPreviewWin	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
s:ShowPrototype	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
s:ShrinkIfExpanded	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
s:SimplifyAdjacentCollections	plugged/vim-polyglot/syntax/yaml.vim	/^function s:SimplifyAdjacentCollections(p)$/;"	f
s:SimplifyToAssumeAllPrintable	plugged/vim-polyglot/syntax/yaml.vim	/^function s:SimplifyToAssumeAllPrintable(p)$/;"	f
s:SkipExpr	plugged/vim-polyglot/indent/ls.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
s:SkipExpr	plugged/vim-polyglot/indent/moon.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
s:SkipFunc	plugged/vim-polyglot/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
s:SkipPattern	plugged/vim-polyglot/indent/sml.vim	/^function! s:SkipPattern(lnum, pat)$/;"	f
s:Slash	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
s:Slash	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
s:SmartSearch	plugged/vim-polyglot/indent/ls.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
s:SmartSearch	plugged/vim-polyglot/indent/moon.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
s:SortCompare	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:SortCompare(i1, i2) abort$/;"	f
s:SourcedFile	plugged/vim-snippets/plugin/vimsnippets.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:SpecChangelog	plugged/vim-polyglot/ftplugin/spec.vim	/^	function s:SpecChangelog(format)$/;"	f
s:SpellDel	plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellDel()$/;"	f
s:SpellLang	plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellLang()$/;"	f
s:SpellPopup	plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellPopup()$/;"	f
s:SpellReplace	plugged/vim-polyglot/extras/menu.vim	/^  func s:SpellReplace(n)$/;"	f
s:SplitExpand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpand(string, ...) abort$/;"	f
s:SplitExpandChain	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpandChain(string, ...) abort$/;"	f
s:SquashArgument	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument(...) abort$/;"	f
s:StageApply	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
s:StageArgs	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
s:StageDelete	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum1, lnum2, count) abort$/;"	f
s:StageDiff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
s:StageDiffEdit	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
s:StageIgnore	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIgnore(lnum1, lnum2, count) abort$/;"	f
s:StageInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
s:StageInline	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
s:StageJump	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageJump(offset, section, ...) abort$/;"	f
s:StagePatch	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
s:StageReveal	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal() abort$/;"	f
s:StageSeek	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
s:StarSetf	plugged/vim-polyglot/extras/filetype.vim	/^func! s:StarSetf(ft)$/;"	f
s:StarSetf	plugged/vim-polyglot/ftdetect/polyglot.vim	/^func! s:StarSetf(ft)$/;"	f
s:StartIfExecutable	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:StartIfExecutable(options, executable) abort$/;"	f
s:StartLSP	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:StartLSP(options, address, executable, command) abort$/;"	f
s:StartOfFile	plugged/vim-polyglot/indent/ruby.vim	/^function! s:StartOfFile(pline_info) abort$/;"	f
s:StartStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:StartStructure(name)$/;"	f
s:StartWith	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! s:StartWith(candidate_scope, root_scope) abort$/;"	f
s:StartWithAddress	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:StartWithAddress(options, address) abort$/;"	f
s:StartWithCommand	plugged/ale/autoload/ale/lsp_linter.vim	/^function! s:StartWithCommand(options, executable, command) abort$/;"	f
s:Starts_with_word	plugged/vim-polyglot/indent/awk.vim	/^function! s:Starts_with_word( line )$/;"	f
s:State	plugged/tagbar/autoload/tagbar/state.vim	/^let s:State = {$/;"	v
s:State.New	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.New() abort dict$/;"	f
s:State.getCurrent	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.getCurrent(force_current) abort dict$/;"	f
s:State.setCurrentFile	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.setCurrentFile(fileinfo) abort dict$/;"	f
s:State.setPaused	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.setPaused() abort dict$/;"	f
s:StatementIndent	plugged/vim-polyglot/indent/ada.vim	/^function s:StatementIndent( current_indent, prev_lnum )$/;"	f
s:StatusCfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
s:StatusCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCommand(line1, line2, range, count, bang, mods, reg, arg, args, ...) abort$/;"	f
s:StopCurrentJobs	plugged/ale/autoload/ale/engine.vim	/^function! s:StopCurrentJobs(buffer, clear_lint_file_jobs, linter_slots) abort$/;"	f
s:StopCursorTimer	plugged/ale/autoload/ale/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
s:StopCursorTimer	plugged/ale/autoload/ale/virtualtext.vim	/^function! s:StopCursorTimer() abort$/;"	f
s:StopCursorTimer	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:StopCursorTimer() abort$/;"	f
s:StopFindTimer	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:StopFindTimer() abort$/;"	f
s:StopHighlightTimer	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:StopHighlightTimer() abort$/;"	f
s:Subcommands	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Subcommands() abort$/;"	f
s:Subst	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:Subst(format, vars) abort$/;"	f
s:SuperSub	plugged/vim-polyglot/syntax/tex.vim	/^  fun! s:SuperSub(group,leader,pat,cchar)$/;"	f
s:SwapOuterMultiPartDelimsForPlaceHolders	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOuterMultiPartDelimsForPlaceHolders(line)$/;"	f
s:SwapOuterPlaceHoldersForMultiPartDelims	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOuterPlaceHoldersForMultiPartDelims(line)$/;"	f
s:SwitchToAlternativeDelimiters	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
s:SwitchWindow	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
s:SynAt	plugged/vim-polyglot/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
s:SynOnOff	plugged/vim-polyglot/extras/menu.vim	/^    fun s:SynOnOff()$/;"	f
s:SyntaxInclude	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:SyntaxInclude(filetype)$/;"	f
s:SyntaxName	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
s:SyntaxName	plugged/vim-polyglot/indent/ls.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
s:SyntaxName	plugged/vim-polyglot/indent/moon.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
s:SyntaxName	plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxName()$/;"	f
s:SyntaxNameAtPosition	plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxNameAtPosition(line, column)$/;"	f
s:SystemError	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemError(cmd, ...) abort$/;"	f
s:TRUE	plugged/vim-polyglot/indent/autohotkey.vim	/^let s:TRUE = !0$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	plugged/vim-which-key/autoload/which_key.vim	/^let s:TYPE = {$/;"	v
s:TYPE	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^let s:TYPE = g:which_key#TYPE$/;"	v
s:TYPE	plugged/vim-which-key/autoload/which_key/mappings.vim	/^let s:TYPE = g:which_key#TYPE$/;"	v
s:TYPE	plugged/vim-which-key/autoload/which_key/renderer.vim	/^let s:TYPE = g:which_key#TYPE$/;"	v
s:TYPE_DICT	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:Tab	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:Tab()$/;"	f
s:TabBuffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:TabBuffers()$/;"	f
s:TabSpace	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
s:TabbedCol	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
s:TableFormat	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:TableFormat()$/;"	f
s:Tag	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:Tag()$/;"	f
s:TagFiles	plugged/vim-polyglot/extras/menu.vim	/^fun! s:TagFiles()$/;"	f
s:TagbarBufName	plugged/tagbar/autoload/tagbar.vim	/^function! s:TagbarBufName() abort$/;"	f
s:TeXIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^  let s:TeXIndent = function("s:NoTeXIndent")$/;"	v
s:TeXIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^  let s:TeXIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:TempCmd	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempCmd(out, cmd) abort$/;"	f
s:TempReadPost	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPost(file) abort$/;"	f
s:TempReadPre	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPre(file) abort$/;"	f
s:TempScript	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempScript(...) abort$/;"	f
s:TempState	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempState(...) abort$/;"	f
s:TempnameBasedOnSourceBufname	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:TempnameBasedOnSourceBufname() abort$/;"	f
s:TemporaryFilename	plugged/ale/autoload/ale/command.vim	/^function! s:TemporaryFilename(buffer) abort$/;"	f
s:TemporaryPSScript	plugged/ale/autoload/ale/powershell.vim	/^function! s:TemporaryPSScript(buffer, input) abort$/;"	f
s:TextDocumentIdentifier	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:TextDocumentIdentifier(path)$/;"	f
s:TextDocumentPositionParams	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:TextDocumentPositionParams(documentUri, line, character)$/;"	f
s:TextWidth	plugged/vim-polyglot/extras/menu.vim	/^fun! s:TextWidth()$/;"	f
s:TimerHandler	plugged/ale/autoload/ale/completion.vim	/^function! s:TimerHandler(...) abort$/;"	f
s:Toc	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:Toc(...)$/;"	f
s:ToggleAutoclose	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
s:ToggleCaseInsensitive	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleCaseInsensitive() abort$/;"	f
s:ToggleFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
s:ToggleGuiOption	plugged/vim-polyglot/extras/menu.vim	/^fun! s:ToggleGuiOption(option)$/;"	f
s:ToggleHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
s:ToggleHideNonPublicTags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
s:ToggleOnDiff	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:ToggleOnDiff()$/;"	f
s:TogglePause	plugged/tagbar/autoload/tagbar.vim	/^function! s:TogglePause() abort$/;"	f
s:ToggleSort	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
s:ToggleTabTreeVCS	plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:ToggleTabTreeVCS(name)$/;"	f
s:ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow(flags) abort$/;"	f
s:Token	plugged/vim-polyglot/indent/javascript.vim	/^function s:Token()$/;"	f
s:TokenizeLine	plugged/vim-polyglot/indent/erlang.vim	/^function! s:TokenizeLine(lnum, direction)$/;"	f
s:ToolItems	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolItems(state, from, to, offsets, text, ...) abort$/;"	f
s:ToolParse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolParse(state, line) abort$/;"	f
s:ToolStream	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolStream(line1, line2, range, bang, mods, options, args, state) abort$/;"	f
s:ToolToFrom	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolToFrom(str) abort$/;"	f
s:TransformDirectly	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! s:TransformDirectly(row) abort$/;"	f
s:TransformUserTypeDef	plugged/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
s:Tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
s:Tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
s:TreeChomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
s:TreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeDirNode.AbsoluteTreeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
s:TreeDirNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
s:TreeDirNode.New	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
s:TreeDirNode._glob	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
s:TreeDirNode._initChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
s:TreeDirNode._openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
s:TreeDirNode.activate	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
s:TreeDirNode.addChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
s:TreeDirNode.close	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
s:TreeDirNode.closeChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
s:TreeDirNode.createChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
s:TreeDirNode.displayString	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
s:TreeDirNode.findNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
s:TreeDirNode.getCascade	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
s:TreeDirNode.getCascadeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
s:TreeDirNode.getChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
s:TreeDirNode.getChildByIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
s:TreeDirNode.getChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
s:TreeDirNode.getChildIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
s:TreeDirNode.getDirChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
s:TreeDirNode.getVisibleChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
s:TreeDirNode.getVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
s:TreeDirNode.hasVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
s:TreeDirNode.isCascadable	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
s:TreeDirNode.open	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
s:TreeDirNode.openAlong	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
s:TreeDirNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
s:TreeDirNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
s:TreeDirNode.openRecursively	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
s:TreeDirNode.refresh	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
s:TreeDirNode.refreshDirFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
s:TreeDirNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
s:TreeDirNode.removeChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
s:TreeDirNode.reveal	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
s:TreeDirNode.sortChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
s:TreeDirNode.toggleOpen	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
s:TreeDirNode.transplantChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
s:TreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TreeFileNode.GetRootForTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
s:TreeFileNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
s:TreeFileNode.New	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
s:TreeFileNode._renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
s:TreeFileNode.activate	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
s:TreeFileNode.bookmark	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
s:TreeFileNode.cacheParent	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
s:TreeFileNode.clearBookmarks	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
s:TreeFileNode.copy	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
s:TreeFileNode.delete	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
s:TreeFileNode.displayString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
s:TreeFileNode.equals	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
s:TreeFileNode.findNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
s:TreeFileNode.findSibling	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
s:TreeFileNode.getNerdtree	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
s:TreeFileNode.isRoot	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
s:TreeFileNode.isVisible	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
s:TreeFileNode.open	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
s:TreeFileNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
s:TreeFileNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
s:TreeFileNode.openSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
s:TreeFileNode.openVSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
s:TreeFileNode.putCursorHere	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
s:TreeFileNode.refresh	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
s:TreeFileNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
s:TreeFileNode.rename	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
s:TreeFileNode.renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
s:TreeInfo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
s:TriggerUpdate	plugged/vista.vim/autoload/vista/autocmd.vim	/^function! s:TriggerUpdate(event, bufnr, fpath) abort$/;"	f
s:Trim	plugged/ale/ale_linters/prolog/swipl.vim	/^function! s:Trim(str) abort$/;"	f
s:TrimTrailingWhitespace	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TrimTrailingWhitespace(line)$/;"	f
s:TryAlternatives	plugged/vista.vim/autoload/vista/finder.vim	/^function! s:TryAlternatives(tried, fpath) abort$/;"	f
s:TryAppendExtension	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! s:TryAppendExtension(tempname) abort$/;"	f
s:TryFoldIsOk	plugged/vista.vim/autoload/vista/cursor.vim	/^function! s:TryFoldIsOk() abort$/;"	f
s:TryInitializeVista	plugged/vista.vim/autoload/vista.vim	/^function! s:TryInitializeVista() abort$/;"	f
s:TryParseAndEchoScope	plugged/vista.vim/autoload/vista/echo.vim	/^function! s:TryParseAndEchoScope() abort$/;"	f
s:TryRunExtension	plugged/vista.vim/autoload/vista/toc.vim	/^function! s:TryRunExtension(...) abort$/;"	f
s:UI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UI.IndentWid	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
s:UI.MarkupReg	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
s:UI.New	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
s:UI.UpDirLine	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
s:UI._dumpHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
s:UI._indentLevelFor	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
s:UI._renderBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
s:UI._stripMarkup	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
s:UI.centerView	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
s:UI.getLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
s:UI.getPath	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
s:UI.getRootLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
s:UI.getShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
s:UI.getShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
s:UI.getShowHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
s:UI.getShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
s:UI.isIgnoreFilterEnabled	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
s:UI.isMinimal	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
s:UI.render	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
s:UI.renderViewSavingPosition	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
s:UI.restoreScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
s:UI.saveScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
s:UI.setShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
s:UI.toggleHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
s:UI.toggleIgnoreFilter	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
s:UI.toggleShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
s:UI.toggleShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
s:UI.toggleShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
s:UI.toggleZoom	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
s:UNKNOWN_ERROR_CODE	plugged/ale/autoload/ale/lsp/response.vim	/^let s:UNKNOWN_ERROR_CODE = -32001$/;"	v
s:UltiSnippetTextObj	plugged/ultisnips/ftplugin/snippets.vim	/^fun! s:UltiSnippetTextObj(inner) abort$/;"	f
s:UnEsc	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
s:UncommentLineNormal	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
s:UncommentLines	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
s:UncommentLinesNormal	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
s:UncommentLinesSexy	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
s:UnexpectedToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:UnexpectedToken(token, stack)$/;"	f
s:Uniq	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
s:UnletStack	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:UnletStack()$/;"	f
s:UntabbedCol	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
s:UpdateCacheIfNecessary	plugged/ale/autoload/ale/statusline.vim	/^function! s:UpdateCacheIfNecessary(buffer) abort$/;"	f
s:UpdateCapabilities	plugged/ale/autoload/ale/lsp.vim	/^function! s:UpdateCapabilities(conn, capabilities) abort$/;"	f
s:UpdateCursor	plugged/ale/autoload/ale/code_action.vim	/^function! s:UpdateCursor(cursor, start, end, offset) abort$/;"	f
s:UpdateIndex	plugged/vim-fugitive/autoload/fugitive.vim	/^function s:UpdateIndex(dir, info) abort$/;"	f
s:UpdateLineNumbers	plugged/ale/autoload/ale/sign.vim	/^function! s:UpdateLineNumbers(buffer, current_sign_list, loclist) abort$/;"	f
s:UpdateMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
s:UpdateMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^  function! s:UpdateMakePrg()$/;"	f
s:UpdateMenu	plugged/ale/autoload/ale/code_action.vim	/^function! s:UpdateMenu(data, menu_items) abort$/;"	f
s:UpdateNimLog	plugged/vim-polyglot/autoload/nim.vim	/^fun! s:UpdateNimLog() abort$/;"	f
s:UsableWin	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
s:UserCommand	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommand(...) abort$/;"	f
s:UserCommandList	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandList(...) abort$/;"	f
s:UsingModule	plugged/ale/ale_linters/python/flake8.vim	/^function! s:UsingModule(buffer) abort$/;"	f
s:V	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:V = vital#crystal#new()$/;"	v
s:VERSION	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:VERSION = s:version()$/;"	v
s:ValidMatchEnd	plugged/vim-polyglot/indent/mp.vim	/^function! s:ValidMatchEnd(line, pat, start)$/;"	f
s:VersionAwareNetrwBrowseX	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:VersionAwareNetrwBrowseX(url)$/;"	f
s:VimCloseCallback	plugged/ale/autoload/ale/job.vim	/^function! s:VimCloseCallback(channel) abort$/;"	f
s:VimEnter	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:VimEnter()$/;"	f
s:VimErrorCallback	plugged/ale/autoload/ale/job.vim	/^function! s:VimErrorCallback(channel, data) abort$/;"	f
s:VimExitCallback	plugged/ale/autoload/ale/job.vim	/^function! s:VimExitCallback(job, exit_code) abort$/;"	f
s:VimOutputCallback	plugged/ale/autoload/ale/job.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
s:VimOutputCallback	plugged/ale/autoload/ale/socket.vim	/^function! s:VimOutputCallback(channel, data) abort$/;"	f
s:VisMove	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:VisMove(f)$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Warn	plugged/bclose.vim/plugin/bclose.vim	/^function! s:Warn(msg)$/;"	f
s:Weight	plugged/vim-polyglot/indent/mp.vim	/^function! s:Weight(line)$/;"	f
s:WinFindBuf	plugged/ale/autoload/ale/list.vim	/^function! s:WinFindBuf(buffer) abort$/;"	f
s:WinShellEsc	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:WinShellEsc(arg) abort$/;"	f
s:WithPath	plugged/vim-polyglot/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f
s:WorkspaceLoadParms	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:WorkspaceLoadParms(files)$/;"	f
s:WorkspacePeekRequest	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:WorkspacePeekRequest(directory, deep, excludedDirs)$/;"	f
s:WrapCmd	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^    function! s:WrapCmd(cmd) abort$/;"	f
s:XxdBack	plugged/vim-polyglot/extras/menu.vim	/^func s:XxdBack()$/;"	f
s:XxdConv	plugged/vim-polyglot/extras/menu.vim	/^func s:XxdConv()$/;"	f
s:XxdFind	plugged/vim-polyglot/extras/menu.vim	/^func s:XxdFind()$/;"	f
s:ZoomWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_SID() abort$/;"	f
s:_SID	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_SID() abort$/;"	f
s:__ale_julia_project_filenames	plugged/ale/autoload/ale/julia.vim	/^let s:__ale_julia_project_filenames = ['REQUIRE', 'Manifest.toml', 'Project.toml']$/;"	v
s:_bounder	plugged/vim-polyglot/syntax/yaml.vim	/^let s:_bounder = s:SimplifyToAssumeAllPrintable('\\%([[\\]{}, \\t]\\@!\\p\\)')$/;"	v
s:_call_string_expr	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f
s:_collection	plugged/vim-polyglot/syntax/yaml.vim	/^let s:_collection = '[^\\@!\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_compare	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
s:_default_compare	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
s:_define_ansi_highlights	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_define_ansi_highlights() abort$/;"	f
s:_dot_to_sharp	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
s:_encode_dict	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_dict(val, settings) abort$/;"	f
s:_encode_list	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_list(val, settings) abort$/;"	f
s:_ends_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:_ends_with(text, expr, lnum)$/;"	f
s:_execute	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_execute(cmd) abort$/;"	f
s:_extract_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
s:_false	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_false() abort$/;"	f
s:_file2module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_file2module(file) abort$/;"	f
s:_function	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_function(fstr) abort$/;"	f
s:_getPrefix	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:_getPrefix() abort dict$/;"	f
s:_get_builtin_module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:_get_module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_module(name) abort dict$/;"	f
s:_global_vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_global_vital_files() abort$/;"	f
s:_handleOldOptions	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_import	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import(name) abort dict$/;"	f
s:_import_func_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
s:_is_available	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_is_available() abort$/;"	f
s:_module_path	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_path(name) abort$/;"	f
s:_module_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid(name) abort$/;"	f
s:_module_sid_base_dir	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
s:_neg_collection	plugged/vim-polyglot/syntax/yaml.vim	/^let s:_neg_collection = '[^\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_null	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_null() abort$/;"	f
s:_pad_with_char	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
s:_plugin_name	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_replace	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
s:_resolve	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_resolve(val, prefix) abort$/;"	f
s:_s	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_self_vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_self_vital_files() abort$/;"	f
s:_serveraddr	plugged/nvim-yarp/autoload/yarp/core.vim	/^    fun! s:_serveraddr()$/;"	f
s:_sfuncname	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
s:_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
s:_skip_special_chars	plugged/vim-polyglot/indent/cython.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
s:_skip_special_chars	plugged/vim-polyglot/indent/python.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
s:_source	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_source(path) abort$/;"	f
s:_split_by_wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
s:_split_by_wcswidth_once	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
s:_starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:_starts_with(text, expr, lnum)$/;"	f
s:_true	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_true() abort$/;"	f
s:_unify_path	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:_unify_path_cache	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_uniq	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_uniq(list) abort$/;"	f
s:_vital_created	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_created	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_created(module) abort$/;"	f
s:_vital_depends	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_depends	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_depends() abort$/;"	f
s:_vital_loaded	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_vital_loaded	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_loaded(V) abort$/;"	f
s:_wcwidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
s:abort	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:abort()$/;"	f
s:accents	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:access_modifier_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:activateAll	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll() abort$/;"	f
s:activateBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm) abort$/;"	f
s:activateDirNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...) abort$/;"	f
s:activateFileNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node) abort$/;"	f
s:active_winnr	plugged/vim-airline/plugin/airline.vim	/^let s:active_winnr = -1$/;"	v
s:addChild	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:addChild(tag) abort dict$/;"	f
s:addTag	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:addTag(tag) abort dict$/;"	f
s:add_db	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_map_to_dict	plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:add_map_to_dict(map, level, dict) " {{{$/;"	f
s:add_methods	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
s:add_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
s:add_sign	plugged/vim-signify/autoload/sy/sign.vim	/^function! s:add_sign(sy, line, type, ...) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_snr	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
s:add_syntax	plugged/vim-polyglot/syntax/pgsql.vim	/^fun! s:add_syntax(s)$/;"	f
s:add_tag_recursive	plugged/tagbar/autoload/tagbar.vim	/^function! s:add_tag_recursive(parent, taginfo, pathlist) abort$/;"	f
s:added_db_files	plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:addr_other	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_other = has('patch-8.1.560') ? '-addr=other' : ''$/;"	v
s:addr_tabs	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''$/;"	v
s:addr_wins	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''$/;"	v
s:airline_a_commandline	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_commandline = [ '#0000ff' , '#0cff00' , 17  , 40 ]$/;"	v
s:airline_a_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:airline_a_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:airline_a_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:airline_a_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:airline_ale_count	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_count(cnt, symbol)$/;"	f
s:airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_get_line_number(cnt, type) abort$/;"	f
s:airline_b_commandline	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_commandline = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:airline_b_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:airline_b_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:airline_c_commandline	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_commandline = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:airline_c_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:airline_c_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:airline_extensions	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_extensions()$/;"	f
s:airline_initialized	plugged/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_languageclient_count	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_count(cnt, symbol)$/;"	f
s:airline_languageclient_get_line_number	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_get_line_number(type) abort$/;"	f
s:airline_lsp_count	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_count(cnt, symbol) abort$/;"	f
s:airline_lsp_get_line_number	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_get_line_number(cnt, type) abort$/;"	f
s:airline_nvimlsp_count	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! s:airline_nvimlsp_count(cnt, symbol) abort$/;"	f
s:airline_refresh	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_refresh(...)$/;"	f
s:airline_tagbar_last_lookup_time	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:airline_theme	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
s:airline_toggle	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
s:ale_refresh	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:ale_refresh()$/;"	f
s:alias_pattern	plugged/vim-polyglot/syntax/rst.vim	/^    let s:alias_pattern = ''$/;"	v
s:aliases	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:aliases = {}$/;"	v
s:aligner	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^let s:aligner = {}$/;"	v
s:aligner.project_ctags	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:aligner.project_ctags() abort$/;"	f
s:all	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
s:all_delims	plugged/vim-polyglot/syntax/raku.vim	/^let s:all_delims = s:plain_delims + s:bracketing_delims$/;"	v
s:all_tokens	plugged/vim-polyglot/indent/erlang.vim	/^let s:all_tokens = {}$/;"	v
s:allsteps	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
s:alpha_metaops	plugged/vim-polyglot/syntax/raku.vim	/^let s:alpha_metaops = [$/;"	v
s:alpha_metaops_or	plugged/vim-polyglot/syntax/raku.vim	/^let s:alpha_metaops_or = join(s:temp, "\\\\|")$/;"	v
s:analyze_dictionary_variable_line	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:analyze_dictionary_variable_line(line, keyword_dict, var_name) abort$/;"	f
s:analyze_function_line	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:analyze_function_line(line, keyword_dict, prototype) abort$/;"	f
s:analyze_variable_line	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:analyze_variable_line(line, keyword_dict) abort$/;"	f
s:and	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:and(xs) abort$/;"	f
s:annot_file_list	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:annot_file_list = {}$/;"	v
s:annotationMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:annotationMatcher = '@[A-Za-z._]\\+\\s\\+'$/;"	v
s:anon_func_end	plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_end = '\\<end\\%(\\s*[)}]\\)\\+'$/;"	v
s:anon_func_start	plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_start = '\\S\\+\\s*[({].*\\<function\\s*(.*)\\s*$'$/;"	v
s:ant_cpo_save	plugged/vim-polyglot/syntax/ant.vim	/^let s:ant_cpo_save = &cpo$/;"	v
s:any	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
s:append_prompt	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:append_prompt(rows) abort$/;"	f
s:append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:apply_custom_floating_opts	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:apply_custom_floating_opts(opts) abort$/;"	f
s:aqua	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:aqua   = s:getGruvColor('GruvboxAqua')$/;"	v
s:aqua	plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.faded_aqua$/;"	v
s:aqua	plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua[1]   = 14$/;"	v
s:archs	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:archs = [$/;"	v
s:around_cursor	plugged/vim-quickui/autoload/quickui/preview.vim	/^function! s:around_cursor(width, height)$/;"	f
s:array_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:array_entry = '\\v^\\s*-\\s' " - foo$/;"	v
s:ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assert	plugged/nerdtree-git-plugin/tests/test_all.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-devicons/test/default_setting.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-devicons/test/fileformat.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-devicons/test/filetype.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assignment_rx	plugged/vim-polyglot/indent/make.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:assignment_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:attr	plugged/vim-polyglot/syntax/svelte.vim	/^  let s:attr = '\\(lang\\|type\\)=\\("\\|''\\)[^\\2]*' . s:language.name . '[^\\2]*\\2'$/;"	v
s:attr	plugged/vim-polyglot/syntax/vue.vim	/^function! s:attr(name, value)$/;"	f
s:attr_pattern	plugged/vim-polyglot/syntax/vue.vim	/^  let s:attr_pattern = has_key(s:language, 'attr_pattern') ? s:language.attr_pattern : s:attr('l/;"	v
s:attribute_highlight	plugged/vim-polyglot/syntax/ansible.vim	/^fun! s:attribute_highlight(attributes)$/;"	f
s:attributes	plugged/vim-polyglot/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	plugged/vim-polyglot/indent/pug.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:attributes	plugged/vim-polyglot/indent/slim.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	plugged/vim-polyglot/indent/slime.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attrs	plugged/vim/colors/dracula.vim	/^let s:attrs = {$/;"	v
s:auto_trigger_tick	plugged/ncm2/autoload/ncm2.vim	/^let s:auto_trigger_tick = []$/;"	v
s:autocommands_done	plugged/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:b_coredata_hooks	plugged/ncm2/autoload/ncm2.vim	/^func! s:b_coredata_hooks()$/;"	f
s:backslash_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:bakregex	plugged/vim-polyglot/scripts/eregex.vim	/^let s:bakregex=''$/;"	v
s:bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bar	autoload/plug.vim	/^function! s:bar()$/;"	f
s:base	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let s:base = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:baseIndentExpr	plugged/vim-polyglot/indent/twig.vim	/^let s:baseIndentExpr=&indentexpr$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:basic16	plugged/vim-airline/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
s:batchfile	autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
s:bd_winid	plugged/vim-translator/autoload/translator/window/float.vim	/^let s:bd_winid = -1$/;"	v
s:beflet	plugged/vim-polyglot/indent/ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\/;"	v
s:beflet	plugged/vim-polyglot/indent/sml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\/;"	v
s:beginBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:beginBlock = ['for', 'parfor', 'function', 'if', 'switch',$/;"	v
s:begin_failed_skip_pattern	plugged/ale/ale_linters/perl/perl.vim	/^let s:begin_failed_skip_pattern = '\\v' . join([$/;"	v
s:bg	plugged/vim-polyglot/syntax/tmux.vim	/^        let s:bg = (!s:i || s:i == 16 || (s:i > 231 && s:i < 235)) ? 15 : "none"$/;"	v
s:bg	plugged/vim/colors/dracula.vim	/^let s:bg        = g:dracula#palette.bg$/;"	v
s:bg0	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg0  = s:getGruvColor('GruvboxBg0')$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_hard$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_soft$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.dark0$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.light0$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg1	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg1  = s:getGruvColor('GruvboxBg1')$/;"	v
s:bg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.dark1$/;"	v
s:bg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.light1$/;"	v
s:bg2	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg2  = s:getGruvColor('GruvboxBg2')$/;"	v
s:bg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.dark2$/;"	v
s:bg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.light2$/;"	v
s:bg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.dark3$/;"	v
s:bg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.light3$/;"	v
s:bg4	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg4  = s:getGruvColor('GruvboxBg4')$/;"	v
s:bg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.dark4$/;"	v
s:bg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.light4$/;"	v
s:bgdark	plugged/vim/colors/dracula.vim	/^let s:bgdark    = g:dracula#palette.bgdark$/;"	v
s:bgdarker	plugged/vim/colors/dracula.vim	/^let s:bgdarker  = g:dracula#palette.bgdarker$/;"	v
s:bglight	plugged/vim/colors/dracula.vim	/^let s:bglight   = g:dracula#palette.bglight$/;"	v
s:bglighter	plugged/vim/colors/dracula.vim	/^let s:bglighter = g:dracula#palette.bglighter$/;"	v
s:binNMU	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:binNMU='binary-only=yes'$/;"	v
s:bin_dir	plugged/ale/autoload/ale/python.vim	/^let s:bin_dir = has('unix') ? 'bin' : 'Scripts'$/;"	v
s:bin_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:bin_regex = '0b[01]\\%(_\\?[01]\\)*\\%(\\>\\|im\\>\\|\\ze[^01]\\)'$/;"	v
s:binary_search	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
s:binding_close	plugged/vim-polyglot/indent/nix.vim	/^let s:binding_close = '\\%(\\<in\\>\\)'$/;"	v
s:binding_open	plugged/vim-polyglot/indent/nix.vim	/^let s:binding_open = '\\%(\\<let\\>\\)'$/;"	v
s:binop_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars = "=+\\\\U2D*\/\\\\%÷^&|⊻<>≤≥≡≠≢∈∉⋅×∪∩⊆⊈⊂⊄⊊←/;"	v
s:binop_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:binop_chars = "=+\\\\U2D*\/\\\\%÷^&|⊻<>≤≥≡≠≢∈∉⋅×∪∩⊆⊈⊂⊄⊊←/;"	v
s:binop_chars_extra	plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars_extra = "\\\\U214B\\\\U2190-\\\\U2194\\\\U219A\\\\U219B\\\\U21A0\\\\U21A3\\\\U/;"	v
s:binop_chars_extra	plugged/vim-polyglot/syntax/julia.vim	/^let s:binop_chars_extra = "\\\\U214B\\\\U2190-\\\\U2194\\\\U219A\\\\U219B\\\\U21A0\\\\U21A3\\\\U/;"	v
s:black	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:black = [ s:colors.black.gui, s:term_black ]$/;"	v
s:black	plugged/onedark.vim/colors/onedark.vim	/^let s:black = s:colors.black$/;"	v
s:black	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:black    = g:dracula#palette.bg$/;"	v
s:blink.clear	plugged/vista.vim/autoload/vista/util.vim	/^  function! s:blink.clear() abort$/;"	f
s:blink.tick	plugged/vista.vim/autoload/vista/util.vim	/^  function! s:blink.tick(_) abort$/;"	f
s:blobdirs	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:block_close	plugged/vim-polyglot/indent/nix.vim	/^let s:block_close = '\\%(}\\|]\\)'$/;"	v
s:block_continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_end	plugged/vim-polyglot/indent/sas.vim	/^let s:block_end = '\\v<%(end|endcomp|endlayout|endgraph)\\s*;'$/;"	v
s:block_open	plugged/vim-polyglot/indent/nix.vim	/^let s:block_open  = '\\%({\\|[\\)'$/;"	v
s:block_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:block_regex =$/;"	v
s:block_regex	plugged/vim-polyglot/indent/json.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\/;"	v
s:block_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)/;"	v
s:block_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)/;"	v
s:block_rules	plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules = {$/;"	v
s:block_rules	plugged/vim-polyglot/indent/python.vim	/^let s:block_rules = {$/;"	v
s:block_rules_multiple	plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules_multiple = {$/;"	v
s:block_rules_multiple	plugged/vim-polyglot/indent/python.vim	/^let s:block_rules_multiple = {$/;"	v
s:block_scalar_header	plugged/vim-polyglot/indent/yaml.vim	/^let s:block_scalar_header = '\\v[|>]%([+-]?[1-9]|[1-9]?[+-])?'$/;"	v
s:block_str	plugged/vim-polyglot/indent/sas.vim	/^let s:block_str = '\\v<%(do>%([^;]+<%(to|over|while)>[^;]+)=|%(compute|define\\s+%(column|footer/;"	v
s:blocks_graph_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:blocks_graph_at(linum) abort$/;"	f
s:blue	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:blue   = s:getGruvColor('GruvboxBlue')$/;"	v
s:blue	plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.bright_blue$/;"	v
s:blue	plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.faded_blue$/;"	v
s:blue	plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:blue = [ s:colors.blue.gui, s:term_blue ]$/;"	v
s:blue	plugged/onedark.vim/colors/onedark.vim	/^let s:blue = s:colors.blue$/;"	v
s:bmenu_items	plugged/vim-polyglot/extras/menu.vim	/^let s:bmenu_items = {}$/;"	v
s:bmenu_wait	plugged/vim-polyglot/extras/menu.vim	/^let s:bmenu_wait = 1$/;"	v
s:bold	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bold = ''$/;"	v
s:bold	plugged/gruvbox/colors/gruvbox.vim	/^let s:bold = 'bold,'$/;"	v
s:boolQuadGen	plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:boolQuadGen(type, vars, deprecated)$/;"	f
s:border_ascii	plugged/vim-quickui/autoload/quickui/core.vim	/^let s:border_ascii = quickui#core#border_extract('+-+|-|+-+++')$/;"	v
s:border_styles	plugged/vim-quickui/autoload/quickui/core.vim	/^let s:border_styles = {}$/;"	v
s:border_styles	plugged/vim-quickui/autoload/quickui/core.vim	/^let s:border_styles[1] = quickui#core#border_extract('+-+|-|+-+++')$/;"	v
s:border_styles	plugged/vim-quickui/autoload/quickui/core.vim	/^let s:border_styles[2] = quickui#core#border_extract('┌─┐│─│└─┘├┤')$/;"	v
s:border_styles	plugged/vim-quickui/autoload/quickui/core.vim	/^let s:border_styles[3] = quickui#core#border_extract('╔═╗║─║╚═╝╟╢')$/;"	v
s:border_styles	plugged/vim-quickui/autoload/quickui/core.vim	/^let s:border_styles[4] = quickui#core#border_extract('\/-\\|-|\\-\/++')$/;"	v
s:bracketBlocks	plugged/vim-polyglot/indent/julia.vim	/^let s:bracketBlocks = '\\<julia\\%(\\%(\\%(Printf\\)\\?Par\\|SqBra\\%(Idx\\)\\?\\|CurBra\\)Block/;"	v
s:bracket_continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_switch_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:bracket_type	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:bracket_type(char)$/;"	f
s:bracket_type	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:bracket_type(char)$/;"	f
s:bracketing_delims	plugged/vim-polyglot/syntax/raku.vim	/^let s:bracketing_delims = [$/;"	v
s:break	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
s:browsefilter	plugged/vim-polyglot/ftplugin/ant.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ant.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.htm*\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/config.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/config.vim	/^let s:browsefilter = "Bourne Shell Files (*.sh)\\t*.sh\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:browsefilter = 'All Files (*.*)\\t*.*\\n'$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:browsefilter = "Java Files (*.java)\\t*.java\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xsd.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browser_open_command	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:browser_open_command() abort$/;"	f
s:bstartp	plugged/vim-polyglot/autoload/pony.vim	/^let s:bstartp = '\\v<%(ifdef|if|then|elseif|else|(match)|while|for|in|do|try|with|recover|repeat/;"	v
s:bsub	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
s:buf_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buffer_data	plugged/ale/autoload/ale/command.vim	/^    let s:buffer_data = {}$/;"	v
s:buffer_list	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! s:buffer_list()$/;"	f
s:buffer_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_repo	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
s:buffer_seqno	plugged/tagbar/autoload/tagbar.vim	/^let s:buffer_seqno = 0$/;"	v
s:buffer_type	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
s:bufnr	plugged/vim-which-key/autoload/which_key/window.vim	/^let s:bufnr = -1$/;"	v
s:buildConfigKeys	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:buildConfigKeys()$/;"	f
s:buildGitStatusCommand	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:buildGitStatusCommand(workdir) abort$/;"	f
s:buildGitWorkdirCommand	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:buildGitWorkdirCommand(root) abort$/;"	f
s:build_command	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:build_command(color)$/;"	f
s:build_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f
s:build_sections	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	plugged/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:bvars	plugged/vim-polyglot/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:byte_pattern	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:byte_pattern = '\\<\\%([01]\\=\\d\\{1,2}\\|2\\%([0-4]\\d\\|5[0-5]\\)\\)\\>'$/;"	v
s:c_flow_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_flow_indicator = '[,[\\]{}]'$/;"	v
s:c_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_indicator      = '[\\-?:,[\\]{}#&*!|>''"%@`]'$/;"	v
s:c_named_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_named_tag_handle     = '\\v\\!'.s:ns_word_char.'+\\!'$/;"	v
s:c_named_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_named_tag_handle     = '!'.s:ns_word_char.'\\+!'$/;"	v
s:c_non_specific_tag	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_non_specific_tag = '\\v\\!'$/;"	v
s:c_non_specific_tag	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_non_specific_tag = '!'$/;"	v
s:c_ns_alias_node	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_alias_node      = '\\*'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_char = '\\v%([\\n\\r\\uFEFF \\t,[\\]{}]@!\\p)'$/;"	v
s:c_ns_anchor_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_char = '\\%([\\n\\r\\uFEFF \\t,[\\]{}]\\@!\\p\\)'$/;"	v
s:c_ns_anchor_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_char = s:SimplifyToAssumeAllPrintable(s:c_ns_anchor_char)$/;"	v
s:c_ns_anchor_name	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'+'$/;"	v
s:c_ns_anchor_name	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'\\+'$/;"	v
s:c_ns_anchor_property	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_property =  '\\v\\&'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_property	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name$/;"	v
s:c_ns_shorthand_tag	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_shorthand_tag = '\\v'.s:c_tag_handle . s:ns_tag_char.'+'$/;"	v
s:c_ns_shorthand_tag	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\\+'$/;"	v
s:c_ns_tag_property	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_tag_property = '\\v'.s:c_verbatim_tag.$/;"	v
s:c_ns_tag_property	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_tag_property = s:c_verbatim_tag.$/;"	v
s:c_primary_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_primary_tag_handle   = '\\v\\!'$/;"	v
s:c_primary_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_primary_tag_handle   = '!'$/;"	v
s:c_secondary_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_secondary_tag_handle = '\\v\\!\\!'$/;"	v
s:c_secondary_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_secondary_tag_handle = '!!'$/;"	v
s:c_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_tag_handle = '\\v%('.s:c_named_tag_handle.$/;"	v
s:c_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_tag_handle = '\\%('.s:c_named_tag_handle.$/;"	v
s:c_verbatim_tag	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_verbatim_tag = '\\v\\!\\<'.s:ns_uri_char.'+\\>'$/;"	v
s:c_verbatim_tag	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\\+>'$/;"	v
s:cache	plugged/vim-which-key/autoload/which_key.vim	/^let s:cache = get(s:, 'cache', {})$/;"	v
s:cache_dir	plugged/vista.vim/autoload/vista/util.vim	/^  let s:cache_dir .= s:path_separator$/;"	v
s:cache_dir	plugged/vista.vim/autoload/vista/util.vim	/^  let s:cache_dir = $HOME . s:path_separator . '.cache'$/;"	v
s:cache_dir	plugged/vista.vim/autoload/vista/util.vim	/^  let s:cache_dir = $XDG_CACHE_HOME$/;"	v
s:cache_dir	plugged/vista.vim/autoload/vista/util.vim	/^  let s:cache_dir = stdpath('cache')$/;"	v
s:cache_matches_cleanup	plugged/ncm2/autoload/ncm2.vim	/^func! s:cache_matches_cleanup()$/;"	f
s:cache_project_root	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cache_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:cache_sid = {}$/;"	v
s:cached_map	plugged/ale/autoload/ale/filetypes.vim	/^let s:cached_map = {}$/;"	v
s:calc_layout	plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:calc_layout(mappings) abort " {{{$/;"	f
s:call	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:call(method, params, cont)$/;"	f
s:call_omnifunc	plugged/ncm2/autoload/ncm2/on_complete.vim	/^func! s:call_omnifunc(omnifunc, ...) abort$/;"	f
s:callback_findWorkspace	plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_findWorkspace(result)$/;"	f
s:callback_load	plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_load(_)$/;"	f
s:callback_nvim_exit	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:callback_nvim_exit(_job_id, exitval, _event) dict abort$/;"	f
s:callback_nvim_stdout	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:callback_nvim_stdout(_job_id, data, _event) dict abort$/;"	f
s:callback_reloadProjects	plugged/vim-polyglot/autoload/fsharp.vim	/^        function! s:callback_reloadProjects(_)$/;"	f
s:callback_showSignature	plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_showSignature(result)$/;"	f
s:callback_showTooltip	plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:callback_showTooltip(result)$/;"	f
s:callback_vim_close	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:callback_vim_close(channel) dict abort$/;"	f
s:callback_vim_stdout	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:callback_vim_stdout(_job_id, data) dict abort$/;"	f
s:can_async	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:can_async = has('patch-8.0.0027')$/;"	v
s:can_diffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
s:cexpr	plugged/vim-polyglot/autoload/dart.vim	/^function! s:cexpr(errorformat, lines, reason) abort$/;"	f
s:cfend	plugged/vim-polyglot/autoload/pony.vim	/^let s:cfend = '\\v<end>'$/;"	v
s:cfile	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
s:cfilemap	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:cfilemap = {}$/;"	v
s:cfilemap	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:cfilemap.rhs = "substitute(&l:inex =~# '\\\\<v:fname\\\\>' && len(expand('<cfile>')) ? e/;"	v
s:cfilemap	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:cfilemap = v:version >= 704 ? maparg('<Plug><cfile>', 'c', 0, 1) : {}$/;"	v
s:cfmiddle	plugged/vim-polyglot/autoload/pony.vim	/^let s:cfmiddle = '\\v<%(then|elseif|else|until|do|in|elseiftype)>|\\|'$/;"	v
s:cfstart	plugged/vim-polyglot/autoload/pony.vim	/^let s:cfstart = '\\v<%(ifdef|if|match|while|for|repeat|try|with|recover|object|lambda|iftype)>'$/;"	v
s:chCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node) abort$/;"	f
s:chRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node) abort$/;"	f
s:ch_braces	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_braces=3$/;"	v
s:ch_brackets	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_brackets=2$/;"	v
s:ch_parentheses	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_parentheses=5$/;"	v
s:ch_parentheses_option	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_parentheses_option=4$/;"	v
s:ch_posix_charclass	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_posix_charclass=1$/;"	v
s:ch_with_backslash	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_with_backslash=0$/;"	v
s:chained_func_call	plugged/vim-polyglot/indent/lua.vim	/^let s:chained_func_call = "^\\\\v\\\\s*[:.]\\\\w+[({\\"']"$/;"	v
s:channel_map	plugged/ale/autoload/ale/socket.vim	/^let s:channel_map = get(s:, 'channel_map', {})$/;"	v
s:char_range	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
s:chars	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^let s:chars = map(range(32, 126), 'nr2char(v:val)')$/;"	v
s:check_defined	plugged/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
s:check_defined_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
s:check_diff_accurev	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_accurev(exitval, diff) abort$/;"	f
s:check_diff_bzr	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_bzr(exitval, diff) abort$/;"	f
s:check_diff_cvs	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_cvs(exitval, diff) abort$/;"	f
s:check_diff_darcs	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_darcs(exitval, diff) abort$/;"	f
s:check_diff_diff	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_diff(exitval, diff) abort$/;"	f
s:check_diff_fossil	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_fossil(exitval, diff) abort$/;"	f
s:check_diff_git	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_git(exitval, diff) abort$/;"	f
s:check_diff_hg	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_hg(exitval, diff) abort$/;"	f
s:check_diff_perforce	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_perforce(exitval, diff) abort$/;"	f
s:check_diff_rcs	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_rcs(exitval, diff) abort$/;"	f
s:check_diff_svn	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_svn(exitval, diff) abort$/;"	f
s:check_diff_tfs	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_tfs(exitval, diff) abort$/;"	f
s:check_diff_yadm	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:check_diff_yadm(exitval, diff) abort$/;"	f
s:check_floating_window	plugged/vim-translator/autoload/health/translator.vim	/^function! s:check_floating_window() abort$/;"	f
s:check_for_string	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:check_for_string()$/;"	f
s:check_for_string	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:check_for_string()$/;"	f
s:check_global_candidates	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:check_global_candidates(key) abort$/;"	f
s:check_job	plugged/vim-translator/autoload/health/translator.vim	/^function! s:check_job() abort$/;"	f
s:check_mixed_indent	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
s:check_mixed_indent_file	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
s:check_python	plugged/vim-translator/autoload/health/translator.vim	/^function! s:check_python() abort$/;"	f
s:check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:checked_ctags	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags	plugged/vim-polyglot/autoload/rust/tags.vim	/^let s:checked_ctags = 0$/;"	v
s:checked_ctags_types	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:checkwith	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^  function! s:checkwith(left, right, line, col) abort$/;"	f
s:choice_file_path	plugged/ranger.vim/plugin/ranger.vim	/^    let s:choice_file_path = g:ranger_choice_file$/;"	v
s:choice_file_path	plugged/ranger.vim/plugin/ranger.vim	/^  let s:choice_file_path = '\/tmp\/chosenfile'$/;"	v
s:chomp	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
s:choose	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:choose(word) abort$/;"	f
s:chop	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
s:chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:classpath_sep	plugged/ale/ale_linters/java/javac.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:classpath_sep	plugged/ale/ale_linters/kotlin/kotlinc.vim	/^let s:classpath_sep = has('unix') ? ':' : ';'$/;"	v
s:clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:clean_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:clean_jobs     = {}$/;"	v
s:clear	plugged/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
s:clear	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:clear(list) abort$/;"	f
s:clearOldFolds	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:clearOldFolds() abort dict$/;"	f
s:clearQfList	plugged/vim-polyglot/autoload/dart.vim	/^function! s:clearQfList(reason) abort$/;"	f
s:clojure_check_for_string_worker	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_check_for_string_worker()$/;"	f
s:clojure_indent_pos	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_indent_pos()$/;"	f
s:clojure_is_method_special_case_worker	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_is_method_special_case_worker(position)$/;"	f
s:clojure_syntax_keywords	plugged/vim-polyglot/syntax/clojure.vim	/^let s:clojure_syntax_keywords = {$/;"	v
s:closeBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:closeBlock = s:midBlock + s:endBlock$/;"	v
s:closeChildren	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node) abort$/;"	f
s:closeCurrentDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node) abort$/;"	f
s:closeFold	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:closeFold() abort dict$/;"	f
s:closeFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:closeFold() abort dict$/;"	f
s:closeKindFold	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:closeKindFold(kind) abort dict$/;"	f
s:closeTreeWindow	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow() abort$/;"	f
s:close_cb	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  function! s:close_cb(channel) abort$/;"	f
s:close_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:close_patt = '\\C\\%(\\<\\%(end\\|until\\)\\>\\|)\\|}\\)'$/;"	v
s:close_split_win	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:close_split_win() abort$/;"	f
s:clr	plugged/vim/autoload/airline/themes/dracula.vim	/^func! s:clr(fg, bg, ...)$/;"	f
s:cmd	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^let s:cmd = join(['mix', 'run', '--no-start', '--no-compile', shellescape(s:path.'\/get_repos.ex/;"	v
s:cmenu	plugged/vim-quickui/autoload/quickui/menu.vim	/^let s:cmenu = {'state':0, 'index':0, 'size':0, 'winid':-1, 'drop':-1}$/;"	v
s:coc_git_enabled	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:coc_git_enabled() abort$/;"	f
s:codefix_map	plugged/ale/autoload/ale/codefix.vim	/^let s:codefix_map = {}$/;"	v
s:col_end_patterns	plugged/ale/autoload/ale/handlers/eslint.vim	/^let s:col_end_patterns = [$/;"	v
s:color_column	plugged/gruvbox/colors/gruvbox.vim	/^  let s:color_column = get(s:gb, g:gruvbox_color_column)$/;"	v
s:color_column	plugged/gruvbox/colors/gruvbox.vim	/^let s:color_column = s:bg1$/;"	v
s:color_map	plugged/vim/autoload/airline/themes/dracula.vim	/^func! s:color_map(a, b, c, ...)$/;"	f
s:color_template	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:colors	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:colors = onedark#GetColors()$/;"	v
s:colors	plugged/onedark.vim/autoload/onedark.vim	/^let s:colors = {$/;"	v
s:colors	plugged/onedark.vim/build/templates/autoload.template.vim	/^let s:colors = {$/;"	v
s:colors	plugged/onedark.vim/colors/onedark.vim	/^let s:colors = onedark#GetColors()$/;"	v
s:cols_layout	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^let s:cols_layout = {}$/;"	v
s:cols_layout.project_ctags	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:cols_layout.project_ctags() abort$/;"	f
s:column	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:column = {$/;"	v
s:column.define_syntax	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.define_syntax(context) abort "{{{$/;"	f
s:column.get	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.get(file, context) abort$/;"	f
s:column.length	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.length(files, context) abort$/;"	f
s:column_display	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:combinations	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
s:combine	plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:combine(key, desc) abort$/;"	f
s:comma_first	plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_first	plugged/vim-polyglot/indent/typescript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:comma_last	plugged/vim-polyglot/indent/typescript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:command_output	plugged/ale/autoload/ale/assert.vim	/^let s:command_output = []$/;"	v
s:commands	plugged/vim-polyglot/syntax/wget.vim	/^let s:commands = map([$/;"	v
s:comment	plugged/vim-polyglot/indent/ansible.vim	/^let s:comment = '\\v^\\s*#' " # comment$/;"	v
s:comment	plugged/vim/colors/dracula.vim	/^let s:comment   = g:dracula#palette.comment$/;"	v
s:comment_grey	plugged/onedark.vim/colors/onedark.vim	/^let s:comment_grey = s:colors.comment_grey$/;"	v
s:comment_rx	plugged/vim-polyglot/indent/make.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:comment_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:comments	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:comments = escape(&comments, ' \\')$/;"	v
s:comments	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:comments = ''$/;"	v
s:commit_mode	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^let s:commit_mode = {'ST': 'STAGING', 'CC': 'COMMIT', 'CA': 'AMEND'}$/;"	v
s:common_efm	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:common_head	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
s:commondirs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:compare_by_kind	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_kind(tag1, tag2) abort$/;"	f
s:compare_by_line	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_line(tag1, tag2) abort$/;"	f
s:compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:compare_pos	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:compare_pos(pos1, pos2)$/;"	f
s:compare_typeinfo	plugged/tagbar/autoload/tagbar/sorting.vim	/^let s:compare_typeinfo = {}$/;"	v
s:compensate_for_pum	plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:compensate_for_pum() abort$/;"	f
s:compile	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:compile(projectPath, cont)$/;"	f
s:compile_commands_cache	plugged/ale/autoload/ale/c.vim	/^    let s:compile_commands_cache = {}$/;"	v
s:compilerLocation	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:compilerLocation(cont)$/;"	f
s:complete_timer	plugged/ncm2/autoload/ncm2.vim	/^let s:complete_timer = 0$/;"	v
s:completion_notified	plugged/ncm2/autoload/ncm2.vim	/^let s:completion_notified = {}$/;"	v
s:concat	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:concat(list) abort$/;"	f
s:conceal	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:conceal	plugged/vim-polyglot/syntax/markdown.vim	/^let s:conceal = ''$/;"	v
s:concealcode	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:concealcode = ' concealends'$/;"	v
s:concealcode	plugged/vim-polyglot/syntax/markdown.vim	/^let s:concealcode = ''$/;"	v
s:concealends	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	plugged/vim-polyglot/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:conditional_directive_rx	plugged/vim-polyglot/indent/make.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:conditional_directive_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:config	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:config_keys	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:config_keys = []$/;"	v
s:config_keys_camel	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:config_keys_camel =$/;"	v
s:conflict_marker	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:conflict_marker()$/;"	f
s:conj	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
s:connections	plugged/ale/autoload/ale/lsp.vim	/^let s:connections = get(s:, 'connections', {})$/;"	v
s:cons	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
s:contains_multibyte	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
s:content_height	plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:content_height(bufnr, width, wrap) abort$/;"	f
s:context	plugged/ncm2/autoload/ncm2.vim	/^func! s:context()$/;"	f
s:context_dropdown	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! s:context_dropdown()$/;"	f
s:context_id	plugged/ncm2/autoload/ncm2.vim	/^let s:context_id = 0$/;"	v
s:contexts	plugged/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:continuable_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuation	plugged/vim-polyglot/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:l/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^/;"	v
s:continuation_rx	plugged/vim-polyglot/indent/make.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continuation_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continued_rule_rx	plugged/vim-polyglot/indent/make.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:continued_rule_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:core	plugged/ncm2/autoload/ncm2.vim	/^let s:core = yarp#py3('ncm2_core')$/;"	v
s:core	plugged/ncm2/autoload/ncm2.vim	/^let s:core.on_load = 'ncm2#_core_started'$/;"	v
s:core_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:coredata	plugged/ncm2/autoload/ncm2.vim	/^func! s:coredata(event)$/;"	f
s:coredata_hooks	plugged/ncm2/autoload/ncm2.vim	/^let s:coredata_hooks = {}$/;"	v
s:count	plugged/vim-polyglot/indent/bst.vim	/^function! s:count(string,char)$/;"	f
s:count	plugged/vim-polyglot/indent/liquid.vim	/^function! s:count(string,pattern)$/;"	f
s:count_braces	plugged/vim-polyglot/indent/css.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	plugged/vim-polyglot/indent/stylus.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	plugged/vim-polyglot/indent/tcl.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_braces	plugged/vim-polyglot/indent/xinetd.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:count_chars	plugged/vim-polyglot/indent/scss.vim	/^function s:count_chars(lnum, count_open, chars)$/;"	f
s:countermeasure	plugged/vim-polyglot/scripts/eregex.vim	/^let s:countermeasure=1$/;"	v
s:countonly	plugged/vim-polyglot/after/indent/html.vim	/^let s:countonly = 0$/;"	v
s:countonly	plugged/vim-polyglot/indent/html.vim	/^let s:countonly = 0$/;"	v
s:cpath	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
s:cpo	plugged/vim-polyglot/ftplugin/scheme.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	plugged/vim-polyglot/syntax/debsources.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	plugged/vim-polyglot/syntax/scheme.vim	/^let s:cpo = &cpo$/;"	v
s:cpo_orig	plugged/vim-polyglot/ftplugin/zig.vim	/^let s:cpo_orig = &cpo$/;"	v
s:cpo_orig	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:cpo_orig=&cpoptions$/;"	v
s:cpo_sav	plugged/vim-polyglot/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/clojure.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/fennel.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/mp.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/puppet.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/after/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/go/config.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/ant.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/exunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/nim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/ocaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/powershell.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/sbt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/extras/filetype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/extras/menu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/abap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/automake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/awk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cfg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/clojure.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cobol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/csv.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dosini.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/fennel.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hamster.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/handlebars.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/kwt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/m4.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mailcap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/postscr.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/procmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/prolog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rrst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/spec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/systemd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/tcl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/vb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/applescript.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/dtd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/gohtmltmpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/graphql.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/json.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/nix.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/raku.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/sas.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/sdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/solidity.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/swift.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/systemverilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/tex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/vlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/8th.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/aap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/abel.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/aptconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/art.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/asn.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/autodoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/awk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/basic.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/bib.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/blank.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cabal-2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cf.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/chordpro.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/clean.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cmod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cmusrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/csc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/csv.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cupl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/d.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ddoc.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/debcopyright.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/desktop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dnsmasq.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/elixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/forth.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/fortran.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/fstab.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gdb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gsp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hollywood.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/jam.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/java.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/javacc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/litestep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/log.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/logtalk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lout.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lpc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lynx.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/make.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/meson.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/messages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mix.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/monk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mrxvtrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/msidl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/natural.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ninja.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/nroff.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/opl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pike.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/privoxy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/raml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/reva.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sas.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sisu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/spup.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/st.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/terraform.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tsalt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tt2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/viminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/wast.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/wget.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/xpm2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions	plugged/vim-polyglot/ftplugin/ada.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cpoptions	plugged/vim-signify/plugin/signify.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cpoptions_save	plugged/vim-polyglot/ftplugin/qml.vim	/^let s:cpoptions_save = &cpoptions$/;"	v
s:cposet	plugged/vim-polyglot/ftplugin/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	plugged/vim-polyglot/indent/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:create	plugged/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
s:createKinddict	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:createKinddict() abort dict$/;"	f
s:create_pseudotag	plugged/tagbar/autoload/tagbar.vim	/^function! s:create_pseudotag(name, parent, kind, typeinfo, fileinfo) abort$/;"	f
s:create_rows	plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:create_rows(layout, mappings) abort$/;"	f
s:create_runtime	plugged/vim-which-key/autoload/which_key.vim	/^function! s:create_runtime(key)$/;"	f
s:csv_numeric_sort	plugged/vim-polyglot/autoload/csv.vim	/^let s:csv_numeric_sort = v:version > 704 || v:version == 704 && has("patch341")$/;"	v
s:ctagmap	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:ctagmap = {}$/;"	v
s:ctagmap	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:ctagmap = v:version >= 704 ? maparg('<Plug><ctag>', 'c', 0, 1) : {}$/;"	v
s:ctags	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:ctags = get(g:, 'vista_ctags_executable', 'ctags')$/;"	v
s:ctags_is_uctags	plugged/tagbar/autoload/tagbar.vim	/^let s:ctags_is_uctags     = 0$/;"	v
s:ctags_is_uctags	plugged/vim-polyglot/autoload/rust/tags.vim	/^let s:ctags_is_uctags = 0$/;"	v
s:ctags_options_dir	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^let s:ctags_options_dir = expand('<sfile>:p:h:h:h') . '\/ctags\/'$/;"	v
s:ctags_project_opts	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:ctags_project_opts = get(g:, 'vista_ctags_project_opts', '')$/;"	v
s:ctags_type	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^  let s:ctags_type = 0$/;"	v
s:ctrlspace	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:cur_dir	plugged/vista.vim/autoload/vista.vim	/^let s:cur_dir = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:currentQueryObject	plugged/vim-polyglot/ftplugin/idris.vim	/^function! s:currentQueryObject()$/;"	f
s:currentQueryObject	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! s:currentQueryObject()$/;"	f
s:current_ale_version	plugged/ale/autoload/ale.vim	/^let s:current_ale_version = [3, 0, 0]$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_bufnr = -1$/;"	v
s:current_char	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_char()$/;"	f
s:current_char	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:current_char()$/;"	f
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_modified = 0$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/coffee.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/javascript/sql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/mdx.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/php/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/tsx.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_tabcnt	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabnr = -1$/;"	v
s:current_visible_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:current_word	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_word()$/;"	f
s:current_word	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:current_word()$/;"	f
s:cursor_grey	plugged/onedark.vim/colors/onedark.vim	/^let s:cursor_grey = s:colors.cursor_grey$/;"	v
s:cursor_move	plugged/vim-quickui/autoload/quickui/context.vim	/^function! s:cursor_move(menu, cursor, toward)$/;"	f
s:cursor_moved	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cursor_moved(...)$/;"	f
s:cursor_timer	plugged/ale/autoload/ale/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:cursor_timer	plugged/ale/autoload/ale/virtualtext.vim	/^let s:cursor_timer = -1$/;"	v
s:cursor_timer	plugged/vista.vim/autoload/vista/cursor.vim	/^let s:cursor_timer = -1$/;"	v
s:customOpenBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node) abort$/;"	f
s:customOpenDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node) abort$/;"	f
s:customOpenFile	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node) abort$/;"	f
s:custom_handlers_map	plugged/ale/autoload/ale/lsp_linter.vim	/^let s:custom_handlers_map = get(s:, 'custom_handlers_map', {})$/;"	v
s:cyan	plugged/onedark.vim/colors/onedark.vim	/^let s:cyan = s:colors.cyan$/;"	v
s:cyan	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:cyan     = g:dracula#palette.cyan$/;"	v
s:cyan	plugged/vim/colors/dracula.vim	/^let s:cyan      = g:dracula#palette.cyan$/;"	v
s:cycle	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:cycle(count) abort$/;"	f
s:cycle_until_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cycle_until_end()$/;"	f
s:d	plugged/vim-polyglot/syntax/julia.vim	/^  function! s:d(x)$/;"	f
s:dark_red	plugged/onedark.vim/colors/onedark.vim	/^let s:dark_red = s:colors.dark_red$/;"	v
s:dark_yellow	plugged/onedark.vim/colors/onedark.vim	/^let s:dark_yellow = s:colors.dark_yellow$/;"	v
s:darkblue	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:darkblue = g:dracula#palette.comment$/;"	v
s:debug	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:debug   = 0 | :lockvar s:debug$/;"	v
s:debug	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:debug(str)$/;"	f
s:debug_enabled	plugged/tagbar/autoload/tagbar/debug.vim	/^let s:debug_enabled = 0$/;"	v
s:debug_file	plugged/tagbar/autoload/tagbar/debug.vim	/^let s:debug_file = ''$/;"	v
s:decIndent	plugged/vim-polyglot/indent/plantuml.vim	/^let s:decIndent = '^\\s*\\%(end\\|else\\|}\\)'$/;"	v
s:dec_num	plugged/vim-polyglot/syntax/nim.vim	/^  let s:dec_num = '\\d%(_?\\d)*'$/;"	v
s:dec_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:dec_regex = '\\d\\%(_\\?\\d\\)*\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ''$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimalpos	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:decimalpos(expr) abort$/;"	f
s:decode	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:decode(json, ...) abort$/;"	f
s:decode_json	plugged/vim-polyglot/autoload/crystal_lang.vim	/^  function! s:decode_json(text) abort$/;"	f
s:decrease	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:decrease(...)$/;"	f
s:defArgMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:defMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:defMatcher = '\\%(' . s:modifierMatcher . '\\)*\\<def\\>'$/;"	v
s:def_comment	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_comment(name, nextgroup)$/;"	f
s:def_keyword	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_keyword(name, nextgroup, keyword)$/;"	f
s:def_keywords	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_keywords(name, nextgroup, keywords)$/;"	f
s:def_match	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_match(name, nextgroup, pattern)$/;"	f
s:def_region	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_region(name, nextgroup, start, skip, end, matchgroup, contains)$/;"	f
s:default_ale_linter_aliases	plugged/ale/autoload/ale/linter.vim	/^let s:default_ale_linter_aliases = {$/;"	v
s:default_ale_linters	plugged/ale/autoload/ale/linter.vim	/^let s:default_ale_linters = {$/;"	v
s:default_checks	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file', 'conflicts']$/;"	v
s:default_cmd_fmt	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let s:default_cmd_fmt = '%s %s %s --output-format=json --fields=-PF -f- %s'$/;"	v
s:default_cmd_fmt	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  let s:default_cmd_fmt = '%s %s %s -f- %s'$/;"	v
s:default_displaynames	plugged/vim-which-key/autoload/which_key/renderer.vim	/^let s:default_displaynames = {$/;"	v
s:default_edit_cmd	plugged/ranger.vim/plugin/ranger.vim	/^  let s:default_edit_cmd='edit '$/;"	v
s:default_edit_cmd	plugged/ranger.vim/plugin/ranger.vim	/^  let s:default_edit_cmd='tabedit '$/;"	v
s:default_executable	plugged/ale/ale_linters/swift/swiftformat.vim	/^let s:default_executable = 'swift-format'$/;"	v
s:default_list_type_commands	plugged/vim-polyglot/autoload/zig/list.vim	/^let s:default_list_type_commands = {$/;"	v
s:default_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:default_mappings = {$/;"	v
s:default_registry	plugged/ale/autoload/ale/fix/registry.vim	/^let s:default_registry = {$/;"	v
s:default_shiftwidth	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let s:default_shiftwidth = &shiftwidth$/;"	v
s:default_vals	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:default_vals = {$/;"	v
s:default_vcs_cmds	plugged/vim-signify/autoload/sy/repo.vim	/^let s:default_vcs_cmds = {$/;"	v
s:default_vcs_cmds_diffmode	plugged/vim-signify/autoload/sy/repo.vim	/^let s:default_vcs_cmds_diffmode = {$/;"	v
s:define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:delay_handler	plugged/ncm2/autoload/ncm2/on_complete.vim	/^func! s:delay_handler(sr, args)$/;"	f
s:delayed_update_files	plugged/tagbar/autoload/tagbar.vim	/^let s:delayed_update_files = []$/;"	v
s:delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:deleteBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark) abort$/;"	f
s:delete_highlight	plugged/vim-signify/autoload/sy/sign.vim	/^let s:delete_highlight = ['', 'SignifyLineDelete']$/;"	v
s:delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:delimitMate_extra_excluded_regions	plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate'$/;"	v
s:delimiter	plugged/vim-polyglot/syntax/ruby.vim	/^    let s:delimiter = '\\' . s:delimiter$/;"	v
s:delimiterMap	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:delimiterMap = {$/;"	v
s:delimiters	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let s:delimiters = {'left': '#'}$/;"	v
s:delims	plugged/vim-polyglot/ftplugin/hcl.vim	/^let s:delims = { 'left': '#' }$/;"	v
s:denite_ver	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^let s:denite_ver = (exists('*denite#get_status_mode') ? 2 : 3)$/;"	v
s:deprecated	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:deprecated(oldv, newv) abort$/;"	f
s:desc	plugged/vim-which-key/autoload/which_key.vim	/^let s:desc = get(s:, 'desc', {})$/;"	v
s:desktop_enable_kde	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_kde = v:false$/;"	v
s:desktop_enable_kde	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_kde = v:true$/;"	v
s:desktop_enable_nonstd	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_nonstd = v:false$/;"	v
s:desktop_enable_nonstd	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_nonstd = v:true$/;"	v
s:detect_indent	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  func! s:detect_indent() abort$/;"	f
s:devnull	plugged/vim-signify/autoload/sy/repo.vim	/^let s:devnull  = has('win32') || has ('win64') ? 'NUL' : '\/dev\/null'$/;"	v
s:diagnostics	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:diagnostics = {}$/;"	v
s:diagnostics_for_buffer	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:diagnostics_for_buffer()$/;"	f
s:dictionary_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:dictionary_entry = '\\v^\\s*[^:-]+:\\s*$' " with_items:$/;"	v
s:dictionary_path	plugged/neco-vim/autoload/necovim/helper.vim	/^let s:dictionary_path =$/;"	v
s:did_buf_enter	plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:did_buf_enter = []$/;"	v
s:did_check_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:did_function_definitions	plugged/vim-polyglot/ftplugin/erlang.vim	/^	let s:did_function_definitions = 1$/;"	v
s:did_indent	plugged/vim-polyglot/after/indent/jsx.vim	/^  let s:did_indent = b:did_indent$/;"	v
s:did_indent	plugged/vim-polyglot/after/indent/tsx.vim	/^  let s:did_indent = b:did_indent$/;"	v
s:did_indent	plugged/vim-polyglot/indent/typescriptreact.vim	/^  let s:did_indent=b:did_indent$/;"	v
s:did_open	plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:did_open = []$/;"	v
s:did_setup_color_schemes	plugged/vim-polyglot/extras/menu.vim	/^let s:did_setup_color_schemes = 0$/;"	v
s:did_setup_compilers	plugged/vim-polyglot/extras/menu.vim	/^let s:did_setup_compilers = 0$/;"	v
s:did_setup_keymaps	plugged/vim-polyglot/extras/menu.vim	/^  let s:did_setup_keymaps = 0$/;"	v
s:diff	autoload/plug.vim	/^function! s:diff()$/;"	f
s:diff_hunk	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:diff_hunk(_sy, vcs, diff) abort$/;"	f
s:diff_modifier	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
s:diff_restore	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
s:diff_window_count	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
s:diffcomplete	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
s:diffidx	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
s:diffoff	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
s:diffoff_all	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
s:diffthis	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
s:difftool	plugged/vim-signify/autoload/sy/repo.vim	/^let s:difftool = sy#util#escape(get(g:, 'signify_difftool', 'diff'))$/;"	v
s:dir	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = fnameescape(s:dir)$/;"	v
s:dir	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\ ', '\\\\ ', 'g')$/;"	v
s:dir	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\', '\\\\\\\\', 'g')$/;"	v
s:dirArrows	plugged/nerdtree/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowEx/;"	v
s:dir_for_worktree	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:directives_end	plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_end .= '\\|' . join(values(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_end	plugged/vim-polyglot/indent/blade.vim	/^let s:directives_end = 'else\\|end\\|empty\\|show\\|stop\\|append\\|overwrite'$/;"	v
s:directives_start	plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_start .= '\\|' . join(keys(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_start	plugged/vim-polyglot/indent/blade.vim	/^let s:directives_start = 'if\\|else\\|unless\\|for\\|while\\|empty\\|push\\|section\\|can\\|hasS/;"	v
s:dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:disableLiveUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:disableLiveUpdate() abort$/;"	f
s:disable_colors	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:disable_colors = []$/;"	v
s:displayHelp	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp() abort$/;"	f
s:display_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_git_branch()$/;"	f
s:display_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_hg_branch()$/;"	f
s:do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:do_coredata_hook	plugged/ncm2/autoload/ncm2.vim	/^func! s:do_coredata_hook(event, data)$/;"	f
s:do_delayed_update	plugged/tagbar/autoload/tagbar.vim	/^function! s:do_delayed_update() abort$/;"	f
s:do_handle_pattern_match_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_pattern_match_block(relative_line, context)$/;"	f
s:do_imode_task	plugged/ncm2/autoload/ncm2.vim	/^func! s:do_imode_task(fn, args, timer)$/;"	f
s:do_on_waiting_input	plugged/ncm2/autoload/ncm2.vim	/^func! s:do_on_waiting_input(fn, args, timer)$/;"	f
s:doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:documentationSymbol	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:documentationSymbol(xmlSig, assembly, cont)$/;"	f
s:dodigits	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:dodigits(digits)$/;"	f
s:doesOrderConnect	plugged/vim-polyglot/indent/applescript.vim	/^func! s:doesOrderConnect(text)$/;"	f
s:doobject	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:doobject(string)$/;"	f
s:dot_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:doubleArrow	plugged/vim-polyglot/after/syntax/idris.vim	/^let s:doubleArrow = 1$/;"	v
s:doubleArrow	plugged/vim-polyglot/after/syntax/idris2.vim	/^let s:doubleArrow = 1$/;"	v
s:download	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:download(branch)$/;"	f
s:dprint	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
s:drop_while	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:drop_while(f, xs) abort$/;"	f
s:dstring	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
s:dtd_cpo_save	plugged/vim-polyglot/syntax/dtd.vim	/^let s:dtd_cpo_save = &cpo$/;"	v
s:echo	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:echo(str) abort$/;"	f
s:echo	plugged/vim-polyglot/autoload/zig/util.vim	/^function! s:echo(msg, hi)$/;"	f
s:echo_cursor_opts	plugged/vista.vim/autoload/vista/cursor.vim	/^let s:echo_cursor_opts = ['echo', 'floating_win', 'scroll', 'both']$/;"	v
s:echo_error	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:echo_error(msg, ...) abort$/;"	f
s:echo_prompt	plugged/vim-which-key/autoload/which_key.vim	/^function! s:echo_prompt() abort$/;"	f
s:echo_strategy	plugged/vista.vim/autoload/vista/cursor.vim	/^let s:echo_strategy = get(g:, 'vista_echo_cursor_strategy', 'echo')$/;"	v
s:echorizer	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:echorizer = {$/;"	v
s:echorizer.eat	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.eat() abort$/;"	f
s:echorizer.echo	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo() abort$/;"	f
s:echorizer.echo_ansi	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo_ansi(code) abort$/;"	f
s:ecr_close	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_close = '%>'$/;"	v
s:ecr_comment_open	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_comment_open = '<%%\\@!-\\=#'$/;"	v
s:ecr_control_open	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_control_open = '<%%\\@!-\\=[=#]\\@!'$/;"	v
s:ecr_dedent_regex	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_dedent_regex =$/;"	v
s:ecr_indent_regex	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_indent_regex =$/;"	v
s:ecr_open	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_open = '<%%\\@!'$/;"	v
s:ecrystal_extensions	plugged/vim-polyglot/autoload/ecrystal.vim	/^let s:ecrystal_extensions = {$/;"	v
s:ed	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:ed = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:edit_jobs	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:edit_jobs = {}$/;"	v
s:eglobal_working	plugged/vim-polyglot/scripts/eregex.vim	/^let s:eglobal_working=0$/;"	v
s:enable	plugged/vim-polyglot/scripts/eregex.vim	/^let s:enable = 0$/;"	v
s:enableLiveUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:enableLiveUpdate() abort$/;"	f
s:enable_neovim	plugged/ale/ale_linters/vim/vint.vim	/^let s:enable_neovim = has('nvim') ? ' --enable-neovim' : ''$/;"	v
s:enable_tagged_jsx	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:enable_tagged_jsx = !empty(s:tags)$/;"	v
s:enabled	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:enabled = get(g:, 'airline#extensions#localsearch#enabled', 1)$/;"	v
s:enabled	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:enabled	plugged/vim-polyglot/syntax/svelte.vim	/^function! s:enabled(language)$/;"	f
s:encode	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:encode(val, ...) abort$/;"	f
s:endBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:endBlock = ['end', 'endfor', 'endparfor', 'endfunction', 'endif',$/;"	v
s:end_col_pattern_map	plugged/ale/ale_linters/python/flake8.vim	/^let s:end_col_pattern_map = {$/;"	v
s:end_col_patterns	plugged/ale/ale_linters/nim/nimcheck.vim	/^let s:end_col_patterns = [$/;"	v
s:end_conditional_directive_rx	plugged/vim-polyglot/indent/make.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_conditional_directive_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_end_regex	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_end_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\/;"	v
s:end_middle_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\/;"	v
s:end_skip_expr	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_start_regex =$/;"	v
s:end_start_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:end_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^let s:end_tag = '\\%(<\\_s*\/\\_s*\\%(\\<[-:._$A-Za-z0-9]\\+\\>\\)\\_s*>\\|\/\\_s*>\\)'$/;"	v
s:ends_with	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
s:ends_with_backslash	plugged/vim-polyglot/indent/tcl.vim	/^function s:ends_with_backslash(lnum)$/;"	f
s:endtag	plugged/vim-polyglot/indent/typescriptreact.vim	/^let s:endtag = '^\\s*\\\/\\?>\\s*;\\='$/;"	v
s:endtags	plugged/vim-polyglot/after/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
s:endtags	plugged/vim-polyglot/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
s:enumeration_pattern	plugged/vim-polyglot/indent/rst.vim	/^let s:enumeration_pattern = '^\\s*\\%(\\d\\+\\|#\\)\\.\\s\\+'$/;"	v
s:env_cache	plugged/vim-polyglot/autoload/zig/util.vim	/^let s:env_cache = {}$/;"	v
s:eol	plugged/vim-polyglot/indent/mp.vim	/^let s:eol = '\\s*\\%($\\|%\\)'$/;"	v
s:eol	plugged/vim-polyglot/syntax/julia.vim	/^let s:eol = '\\s*\\%(\\%(\\%(#=\\%(=#\\@!\\|[^=]\\|\\n\\)\\{-}=#\\)\\s*\\)\\+\\)\\?\\%(#=\\@!.*\\/;"	v
s:eregex_replacement	plugged/vim-polyglot/scripts/eregex.vim	/^    let s:eregex_replacement=eregex_replacement$/;"	v
s:eregex_replacement	plugged/vim-polyglot/scripts/eregex.vim	/^let s:eregex_replacement=0$/;"	v
s:erlang_fun_begin	plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:erlang_fun_begin = '^\\a\\w*(.*$'$/;"	v
s:erlang_fun_end	plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:erlang_fun_end   = '^[^%]*\\.\\s*\\(%.*\\)\\?$'$/;"	v
s:err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:error	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:error   = 3 | :lockvar s:error$/;"	v
s:error	plugged/vim-polyglot/autoload/dart.vim	/^function! s:error(text) abort$/;"	f
s:error_message	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:error_message(msg) abort$/;"	f
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:error_symbol = get(g:, 'airline#extensions#coc#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:error_symbol = get(g:, 'airline#extensions#languageclient#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:error_symbol = get(g:, 'airline#extensions#syntastic#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escape	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:escape(chars)$/;"	f
s:escape	plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:escape(mapping) abort " {{{$/;"	f
s:escape_keys	plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! s:escape_keys(inp) abort " {{{$/;"	f
s:escape_pattern	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
s:escapesConditionals	plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:escapesConditionals(baseName, sequence, padding, conditional)$/;"	f
s:escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:evaluate_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:evaluate_tabline(tabline)$/;"	f
s:exec	plugged/vim-polyglot/autoload/zig/util.vim	/^function! s:exec(cmd, ...) abort$/;"	f
s:exec_paths	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:exec_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix) abort$/;"	f
s:executable	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
s:executable_cache_map	plugged/ale/autoload/ale/engine.vim	/^    let s:executable_cache_map = {}$/;"	v
s:executables	plugged/ale/autoload/ale/handlers/eslint.vim	/^let s:executables = [$/;"	v
s:executables	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:execute	plugged/vim-which-key/autoload/which_key.vim	/^function! s:execute(cmd) abort$/;"	f
s:execute_native_fallback	plugged/vim-which-key/autoload/which_key.vim	/^function! s:execute_native_fallback() abort$/;"	f
s:exists	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:exists(name) abort dict$/;"	f
s:exp	plugged/vim-polyglot/syntax/nim.vim	/^  let s:exp = '%([eE][+-]?'.s:dec_num.')'$/;"	v
s:expand	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:expand_bufnr	plugged/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:exs_re .= '|BlockingIOError|ChildProcessError|ConnectionError|BrokenPipeError|Conn/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:exs_re .= '|StandardError'$/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:exs_re = 'BaseException|Exception|ArithmeticError|LookupError|EnvironmentError|Asserti/;"	v
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:ext.add_inactive_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
s:ext.add_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
s:ext.add_statusline_funcref	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
s:ext.add_theme_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
s:extend	plugged/vim-polyglot/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:extended_complements	plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_complements=0$/;"	v
s:extended_dots	plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_dots=0$/;"	v
s:extended_spaces	plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_spaces=0$/;"	v
s:external_sign_present	plugged/vim-signify/autoload/sy/sign.vim	/^function! s:external_sign_present(sy, line) abort$/;"	f
s:extfname	plugged/vim-polyglot/syntax/tex.vim	/^let s:extfname=expand("%:e")$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris.vim	/^            let s:extraConceal = 0$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris.vim	/^let s:extraConceal = 1$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris2.vim	/^            let s:extraConceal = 0$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris2.vim	/^let s:extraConceal = 1$/;"	v
s:extract_current_hunk	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:extract_current_hunk(diff) abort$/;"	f
s:extract_identifier	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:extract_identifier(word) abort$/;"	f
s:extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:f1Help	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:f1Help(filePath, line, character, cont)$/;"	f
s:falcon_deindent_keywords	plugged/vim-polyglot/indent/falcon.vim	/^let s:falcon_deindent_keywords = '^\\s*\\(case\\|catch\\|default\\|elif\\|else\\|end\\)'$/;"	v
s:falcon_indent_keywords	plugged/vim-polyglot/indent/falcon.vim	/^let s:falcon_indent_keywords = '^\\s*\\(case\\|catch\\|class\\|enum\\|default\\|elif\\|else' .$/;"	v
s:fb	plugged/vim-polyglot/syntax/ledger.vim	/^let s:fb = get(g:, 'ledger_fold_blanks', 0)$/;"	v
s:fennel_check_for_string_worker	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:fennel_check_for_string_worker()$/;"	f
s:fennel_indent_pos	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:fennel_indent_pos()$/;"	f
s:fetching	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^let s:fetching = v:true$/;"	v
s:fetching	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^let s:fetching = v:true$/;"	v
s:fg	plugged/vim/colors/dracula.vim	/^let s:fg        = g:dracula#palette.fg$/;"	v
s:fg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.dark0$/;"	v
s:fg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.light0$/;"	v
s:fg1	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg1  = s:getGruvColor('GruvboxFg1')$/;"	v
s:fg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.dark1$/;"	v
s:fg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.light1$/;"	v
s:fg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.dark2$/;"	v
s:fg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.light2$/;"	v
s:fg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.dark3$/;"	v
s:fg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.light3$/;"	v
s:fg4	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg4  = s:getGruvColor('GruvboxFg4')$/;"	v
s:fg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.dark4$/;"	v
s:fg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.light4$/;"	v
s:fg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4_256	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.dark4_256$/;"	v
s:fg4_256	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.light4_256$/;"	v
s:file_commit_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_commit_pattern = s:file_pattern . '\\|^\\%(\\l\\{3,\\} \\)\\=[0-9a-f]\\{4,\\} '$/;"	v
s:file_name	plugged/vim-polyglot/indent/erlang.vim	/^let s:file_name = ''$/;"	v
s:file_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_pattern = '^[A-Z?] .\\|^diff --'$/;"	v
s:filename_case_checks	plugged/vim-polyglot/tests/native.vim	/^let s:filename_case_checks = {$/;"	v
s:filename_checks	plugged/vim-polyglot/tests/native.vim	/^let s:filename_checks = {$/;"	v
s:filetype_dict	plugged/vim-polyglot/ftplugin/markdown.vim	/^        let s:filetype_dict[key] = val$/;"	v
s:filetype_dict	plugged/vim-polyglot/ftplugin/markdown.vim	/^    let s:filetype_dict = {$/;"	v
s:filetype_dict	plugged/vim-polyglot/ftplugin/markdown.vim	/^    let s:filetype_dict = {}$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = [ get(g:, 'NERDTreeStatusline', 'NERD'), '' ]$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = ['NERDTree', '']$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:filters.filter	plugged/vim-devicons/autoload/devicons/plugins/unite.vim	/^  function! s:filters.filter(candidates, context) abort$/;"	f
s:find	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
s:findAndRevealPath	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr) abort$/;"	f
s:findHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:findHunk(node, direction) abort$/;"	f
s:findWorkspace	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:findWorkspace(dir, cont)$/;"	f
s:find_block	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:find_block(current_mode)$/;"	f
s:find_completion_start	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_completion_start() abort$/;"	f
s:find_following_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:find_following_block(linum) abort$/;"	f
s:find_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
s:find_indices	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
s:find_last_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
s:find_last_pos	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:find_last_pos(lnum, text, match)$/;"	f
s:find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:find_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_opening_paren(lnum, col)$/;"	f
s:find_opening_paren	plugged/vim-polyglot/indent/python.vim	/^function! s:find_opening_paren(lnum, col)$/;"	f
s:find_pred_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:find_pred_block(linum) abort$/;"	f
s:find_root_by	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by(search_dir, d) abort$/;"	f
s:find_root_by_spec_and_src	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by_spec_and_src(d) abort$/;"	f
s:find_start_of_block	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_block(lnum, types, skip, multiple) abort$/;"	f
s:find_start_of_block	plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_block(lnum, types, skip, multiple) abort$/;"	f
s:find_start_of_multiline_statement	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
s:find_start_of_multiline_statement	plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
s:find_timer	plugged/vista.vim/autoload/vista/cursor.vim	/^let s:find_timer = -1$/;"	v
s:findall	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:findall(text, rx) abort$/;"	f
s:finder	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^let s:finder = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:finder	plugged/vista.vim/autoload/vista/finder/skim.vim	/^let s:finder = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:finish_reconciling	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:finish_reconciling() abort$/;"	f
s:first_rtp	autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:fix_beginfigs	plugged/vim-polyglot/ftplugin/mp.vim	/^  function! s:fix_beginfigs()$/;"	f
s:flag	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:flags	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:flatten	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
s:flatten	plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:flatten(dict, str) abort$/;"	f
s:float_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex = '\\%(' . s:float_regex3 .$/;"	v
s:float_regex1	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex1 = '\\.\\d\\%(_\\?\\d\\)*\\%([eEf][-+]\\?\\d\\+\\)\\?\\%(\\>\\|im\\>\\|\\ze\\D/;"	v
s:float_regex2	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex2 = '\\d\\%(_\\?\\d\\)*\\.\\%(\\d\\%(_\\?\\d\\)*\\)\\?\\%([eEf][-+]\\?\\d\\+\\)/;"	v
s:float_regex3	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex3 = '\\d\\%(_\\?\\d\\)*[eEf][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:float_suf	plugged/vim-polyglot/syntax/nim.vim	/^  let s:float_suf = '%(''%(%(f|F)%(32|64|128)?|d|D))'$/;"	v
s:floating_delay	plugged/vista.vim/autoload/vista/floating.vim	/^let s:floating_delay = get(g:, 'vista_floating_delay', 100)$/;"	v
s:floating_timer	plugged/vista.vim/autoload/vista/floating.vim	/^let s:floating_timer = -1$/;"	v
s:floating_win_col_offset	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:floating_win_col_offset() abort$/;"	f
s:fnamecollapse	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnameescape	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnameescape	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:focusgained_ignore_time	plugged/vim-airline/autoload/airline/util.vim	/^let s:focusgained_ignore_time = 0$/;"	v
s:fold_arg	plugged/vim-polyglot/syntax/crystal.vim	/^let s:fold_arg      = s:foldable('string') ? ' fold' : ''$/;"	v
s:fold_arg	plugged/vim-polyglot/syntax/ruby.vim	/^let s:fold_arg	    = s:foldable('string')		? ' fold'   : ''$/;"	v
s:foldable	plugged/vim-polyglot/syntax/crystal.vim	/^function! s:foldable(...) abort$/;"	f
s:foldable	plugged/vim-polyglot/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f
s:foldable_groups	plugged/vim-polyglot/syntax/crystal.vim	/^let s:foldable_groups = split($/;"	v
s:foldable_groups	plugged/vim-polyglot/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
s:folded_assignment_rx	plugged/vim-polyglot/indent/make.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:folded_assignment_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:foldl	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
s:foldl1	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
s:foldr	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
s:foldr1	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
s:format	plugged/ale/ale_linters/vim/vint.vim	/^let s:format = '-f "{file_path}:{line_number}:{column_number}: {severity}: {policy_name} - {desc/;"	v
s:format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:format_name	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
s:format_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      function! s:format_wordcount(_)$/;"	f
s:format_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:format_wordcount(wordcount)$/;"	f
s:formatter	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      let s:formatter = 'default'$/;"	v
s:formatter	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
s:fsac	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsac = fnamemodify(s:script_root_dir . "fsac\/fsautocomplete.dll", ":p")$/;"	v
s:fsdn	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:fsdn(signature, cont)$/;"	f
s:fsi_buffer	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_buffer = -1$/;"	v
s:fsi_height	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_height = 0$/;"	v
s:fsi_job	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_job    = -1$/;"	v
s:fsi_width	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_width  = 0$/;"	v
s:ft	plugged/vim-polyglot/syntax/c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:ft	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:ft = s:type$/;"	v
s:ft	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:ft = substitute(s:type, '.*=', '', '')$/;"	v
s:ft_rules_udev_rules_pattern	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_rules_udev_rules_pattern = '^\\s*\\cudev_rules\\s*=\\s*"\\([^"]\\{-1,}\\)\/*".*'$/;"	v
s:ftplugin_sql_objects	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:ftplugin_sql_objects =$/;"	v
s:funcNameMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^            let s:funcs_re .= '|print'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '\\=@!'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '|apply|basestring|buffer|cmp|coerce|execfile|file|intern|long|raw_inp/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '|ascii|breakpoint|exec|print'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:funcs_re = '__import__|abs|all|any|bin|callable|chr|classmethod|compile|complex|delatt/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:funcs_re = 'syn match pythonBuiltinFunc ''\\v\\.@<!\\zs<%(' . s:funcs_re . ')>'$/;"	v
s:function	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
s:function_range_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:function_range_at(linum) abort$/;"	f
s:function_return_types	plugged/neco-vim/autoload/necovim/helper.vim	/^let s:function_return_types = {}$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb = {}$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_aqua    = ['#8ec07c', 108]     " 142-192-124$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_blue    = ['#83a598', 109]     " 131-165-152$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_green   = ['#b8bb26', 142]     " 184-187-38$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_orange  = ['#fe8019', 208]     " 254-128-25$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_purple  = ['#d3869b', 175]     " 211-134-155$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_red     = ['#fb4934', 167]     " 251-73-52$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_yellow  = ['#fabd2f', 214]     " 250-189-47$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0       = ['#282828', 235]     " 40-40-40$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_hard  = ['#1d2021', 234]     " 29-32-33$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_soft  = ['#32302f', 236]     " 50-48-47$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark1       = ['#3c3836', 237]     " 60-56-54$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark2       = ['#504945', 239]     " 80-73-69$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark3       = ['#665c54', 241]     " 102-92-84$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4       = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4_256   = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_aqua     = ['#427b58', 66]      " 66-123-88$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_blue     = ['#076678', 24]      " 7-102-120$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_green    = ['#79740e', 100]     " 121-116-14$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_orange   = ['#af3a03', 130]     " 175-58-3$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_purple   = ['#8f3f71', 96]      " 143-63-113$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_red      = ['#9d0006', 88]      " 157-0-6$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_yellow   = ['#b57614', 136]     " 181-118-20$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_244    = ['#928374', 244]     " 146-131-116$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_245    = ['#928374', 245]     " 146-131-116$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0      = ['#fbf1c7', 229]     " 253-244-193$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_hard = ['#f9f5d7', 230]     " 249-245-215$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_soft = ['#f2e5bc', 228]     " 242-229-188$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light1      = ['#ebdbb2', 223]     " 235-219-178$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light2      = ['#d5c4a1', 250]     " 213-196-161$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light3      = ['#bdae93', 248]     " 189-174-147$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4      = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4_256  = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_aqua   = ['#689d6a', 72]      " 104-157-106$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_blue   = ['#458588', 66]      " 69-133-136$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_green  = ['#98971a', 106]     " 152-151-26$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_orange = ['#d65d0e', 166]     " 214-93-14$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_purple = ['#b16286', 132]     " 177-98-134$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_red    = ['#cc241d', 124]     " 204-36-29$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_yellow = ['#d79921', 172]     " 215-153-33$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:genFunctions	plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:genFunctions(functions)$/;"	f
s:generate_suffix_groups	plugged/vim-polyglot/syntax/hostconf.vim	/^function s:generate_suffix_groups(list_of_order_of_orders, context, trailing_context)$/;"	f
s:generate_wildignore_options	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
s:get	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:get() abort$/;"	f
s:getAuthor	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! s:getAuthor(zonestart, zoneend)$/;"	f
s:getChildren	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildren() dict abort$/;"	f
s:getChildrenByName	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildrenByName(tagname) dict abort$/;"	f
s:getClosedParentTline	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getClosedParentTline() abort dict$/;"	f
s:getDataType	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getDataType() abort dict$/;"	f
s:getDataType	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:getDataType() abort dict$/;"	f
s:getDistro	plugged/vim-devicons/plugin/webdevicons.vim	/^function s:getDistro()$/;"	f
s:getField	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! s:getField(f, lnum)$/;"	f
s:getGitWorkdir	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:getGitWorkdir(ntRoot) abort$/;"	f
s:getGruvColor	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^function! s:getGruvColor(group)$/;"	f
s:getHLStack	plugged/vim-polyglot/indent/haskell.vim	/^function! s:getHLStack(line, col)$/;"	f
s:getIncIndent	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:getIncIndent() abort$/;"	f
s:getIndicator	plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:getIndicator(status) abort$/;"	f
s:getKind	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:getKind(kind) abort dict$/;"	f
s:getNesting	plugged/vim-polyglot/indent/haskell.vim	/^function! s:getNesting(hlstack)$/;"	f
s:getPrototype	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getPrototype	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getPrototype	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
s:getStatusKey	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! s:getStatusKey(x, y) abort$/;"	f
s:getTags	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTags() dict abort$/;"	f
s:getTagsByName	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTagsByName(tagname) dict abort$/;"	f
s:getType	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! s:getType(fname) abort$/;"	f
s:get_256color	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:get_256color(colors) abort$/;"	f
s:get_accented_line	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
s:get_airline_themes	plugged/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
s:get_array	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(guifg, guibg, ctermfg, ctermbg, opts) abort$/;"	f
s:get_augrouplist	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_augrouplist() abort$/;"	f
s:get_base	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:get_base(bufnr, vcs) abort$/;"	f
s:get_base_cmd	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:get_base_cmd(bufnr, vcs, vcs_cmds) abort$/;"	f
s:get_base_indent	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:get_base_indent(lnum, text)$/;"	f
s:get_cached_script_candidates	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_cached_script_candidates() abort$/;"	f
s:get_cmdlist	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_cmdlist() abort$/;"	f
s:get_color_map	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_color_map()$/;"	f
s:get_complete_buffer	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_complete_buffer()$/;"	f
s:get_counts	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! s:get_counts()$/;"	f
s:get_ctags_executable	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_cursorline	plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:get_cursorline(topline, lines, scrolloff, width, height) abort$/;"	f
s:get_diagnostics	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:get_diagnostics()$/;"	f
s:get_echorizer	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:get_echorizer(str) abort$/;"	f
s:get_envlist	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_envlist() abort$/;"	f
s:get_fsi_command	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_fsi_command()$/;"	f
s:get_func_identifiers	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:get_func_identifiers(line) abort$/;"	f
s:get_functionlist	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_functionlist() abort$/;"	f
s:get_git_status_output	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:get_git_status_output(workdir) abort$/;"	f
s:get_git_version	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:get_git_version() abort$/;"	f
s:get_hi_str	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:get_hi_str(color, place) abort$/;"	f
s:get_hunks_changes	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes() abort$/;"	f
s:get_hunks_coc	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_coc() abort$/;"	f
s:get_hunks_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty() abort$/;"	f
s:get_hunks_gitgutter	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter() abort$/;"	f
s:get_hunks_signify	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify() abort$/;"	f
s:get_identifiers	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:get_identifiers(line) abort$/;"	f
s:get_indentexpr	plugged/vim-polyglot/indent/vue.vim	/^function! s:get_indentexpr(language)$/;"	f
s:get_last_status	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:get_last_status() abort$/;"	f
s:get_levels	plugged/vim-signify/autoload/sy/fold.vim	/^function! s:get_levels(lines) abort$/;"	f
s:get_line_trimmed	plugged/vim-polyglot/indent/reason.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
s:get_line_trimmed	plugged/vim-polyglot/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
s:get_lines	plugged/vim-signify/autoload/sy/fold.vim	/^function! s:get_lines() abort$/;"	f
s:get_local_variables	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_local_variables() abort$/;"	f
s:get_map_str	plugged/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
s:get_mappinglist	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_mappinglist() abort$/;"	f
s:get_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_mode()$/;"	f
s:get_number	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:get_number(index)$/;"	f
s:get_options	plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:get_options(winid) abort$/;"	f
s:get_paragraph_start	plugged/vim-polyglot/indent/rst.vim	/^function! s:get_paragraph_start()$/;"	f
s:get_path	plugged/vim-signify/autoload/sy.vim	/^function! s:get_path(bufnr)$/;"	f
s:get_raw_map_info	plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:get_raw_map_info(key) abort$/;"	f
s:get_register	plugged/vim-which-key/autoload/which_key.vim	/^function! s:get_register() abort$/;"	f
s:get_save_pos	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:get_save_pos(...)$/;"	f
s:get_script_candidates	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_script_candidates(bufnumber) abort$/;"	f
s:get_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
s:get_separator_change	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change(new_group, old_group, end_group, sep_size, alt_sep_size)$/;"	f
s:get_separator_change_with_end	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change_with_end(new_group, old_group, new_end_group, old_end_group, se/;"	f
s:get_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
s:get_shiftwidth	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  func! s:get_shiftwidth(indents) abort$/;"	f
s:get_syn	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what, mode) abort$/;"	f
s:get_tag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f
s:get_tag	plugged/vim-polyglot/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f
s:get_tools_width	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! s:get_tools_width()$/;"	f
s:get_topline	plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:get_topline(topline, lines, forward, height, width) abort$/;"	f
s:get_transaction_extents	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:get_transaction_extents(lnum) abort$/;"	f
s:get_transitioned_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
s:get_variable_type	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_variable_type(expression) abort$/;"	f
s:get_variablelist	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:get_variablelist(dict, prefix) abort$/;"	f
s:get_vcs_path	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:get_vcs_path(bufnr, vcs) abort$/;"	f
s:get_visual_selection	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_visual_selection()$/;"	f
s:get_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  function! s:get_wordcount(visual_mode_active)$/;"	f
s:getchar	plugged/vim-which-key/autoload/which_key.vim	/^function! s:getchar() abort$/;"	f
s:getcmdwintype_exists	plugged/ale/autoload/ale.vim	/^let s:getcmdwintype_exists = exists('*getcmdwintype')$/;"	v
s:getmapchars	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:getmapchars(function)$/;"	f
s:gettime	plugged/tagbar/autoload/tagbar/debug.vim	/^    function! s:gettime() abort$/;"	f
s:git_dir	autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
s:git_local_branch	autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
s:git_origin_branch	autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
s:git_origin_url	autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
s:git_revision	autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
s:git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:git_versions	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:gitdiffcached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
s:glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:global_candidates_list	plugged/neco-vim/autoload/necovim/helper.vim	/^  let s:global_candidates_list = {$/;"	v
s:global_variable_list	plugged/ale/autoload/ale/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:global_variable_list	plugged/vim-polyglot/autoload/rust/debugging.vim	/^let s:global_variable_list = [$/;"	v
s:globs	plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^let s:globs = {$/;"	v
s:globsubs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:go_to_definition_map	plugged/ale/autoload/ale/definition.vim	/^let s:go_to_definition_map = {}$/;"	v
s:got_fmt_error	plugged/vim-polyglot/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:goto_col	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:goto_col(pos, min_spaces) abort$/;"	f
s:goto_definition	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:goto_definition() abort$/;"	f
s:goto_markedwin	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
s:goto_tagbar	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
s:goto_win	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
s:gray	plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_244$/;"	v
s:gray	plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_245$/;"	v
s:gray	plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:gray     = g:dracula#palette.selection$/;"	v
s:green	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:green = s:getGruvColor('GruvboxGreen')$/;"	v
s:green	plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.bright_green$/;"	v
s:green	plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.faded_green$/;"	v
s:green	plugged/gruvbox/colors/gruvbox.vim	/^  let s:green[1]  = 10$/;"	v
s:green	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:green = [ s:colors.green.gui, s:term_green ]$/;"	v
s:green	plugged/onedark.vim/colors/onedark.vim	/^let s:green = s:colors.green$/;"	v
s:green	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:green    = g:dracula#palette.green$/;"	v
s:green	plugged/vim/colors/dracula.vim	/^let s:green     = g:dracula#palette.green$/;"	v
s:grey	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:grey = [ s:colors.visual_grey.gui, s:term_grey ]$/;"	v
s:group	plugged/vim-polyglot/syntax/ruby.vim	/^  let s:group = 'ruby' . s:names[s:delimiter] . 'Escape'$/;"	v
s:group_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
s:group_colors	plugged/onedark.vim/colors/onedark.vim	/^let s:group_colors = {} " Cache of default highlight group settings, for later reference via `on/;"	v
s:group_not_done	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:group_not_done(list, name) abort$/;"	f
s:gsub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:guess	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  func! s:guess(lines) abort$/;"	f
s:gui2cui	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback) abort$/;"	f
s:gutter_fg_grey	plugged/onedark.vim/colors/onedark.vim	/^let s:gutter_fg_grey = s:colors.gutter_fg_grey$/;"	v
s:h	plugged/onedark.vim/colors/onedark.vim	/^function! s:h(group, style, ...)$/;"	f
s:h	plugged/vim/colors/dracula.vim	/^function! s:h(scope, fg, ...) " bg, attr_list, special$/;"	f
s:handleLeftClick	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick() abort$/;"	f
s:handleMiddleMouse	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse() abort$/;"	f
s:handle_char_on_start_is_ok	plugged/vim-which-key/autoload/which_key.vim	/^function! s:handle_char_on_start_is_ok(c) abort$/;"	f
s:handle_diff	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:handle_diff(options, exitval) abort$/;"	f
s:handle_input	plugged/vim-which-key/autoload/which_key.vim	/^function! s:handle_input(input) " {{{$/;"	f
s:handle_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:handle_with(start_lnum, start_col, context)$/;"	f
s:hardRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:hardRefreshNerdTree()$/;"	f
s:has	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
s:hasPrefix	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:hasPrefix(text, prefix) abort$/;"	f
s:has_children	plugged/vim-which-key/autoload/which_key.vim	/^function! s:has_children(input) abort$/;"	f
s:has_cmdline	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:has_cmdline() abort$/;"	f
s:has_common_items	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
s:has_features	plugged/ale/plugin/ale.vim	/^    let s:has_features = has('timers') && exists('*job_start') && exists('*ch_close_in')$/;"	v
s:has_features	plugged/ale/plugin/ale.vim	/^    let s:has_features = has('timers') && has('nvim-0.2.0')$/;"	v
s:has_float	plugged/vim-translator/autoload/translator/window.vim	/^let s:has_float = has('nvim') && exists('*nvim_win_set_config')$/;"	v
s:has_floating_win	plugged/vista.vim/autoload/vista/win.vim	/^let s:has_floating_win = exists('*nvim_open_win')$/;"	v
s:has_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
s:has_nvim_highlight	plugged/ale/autoload/ale/highlight.vim	/^let s:has_nvim_highlight = exists('*nvim_buf_add_highlight') && exists('*nvim_buf_clear_namespac/;"	v
s:has_popup	plugged/vim-translator/autoload/translator/window.vim	/^let s:has_popup = has('textprop') && has('patch-8.2.0286')$/;"	v
s:has_popup	plugged/vista.vim/autoload/vista/win.vim	/^let s:has_popup = exists('*popup_create')$/;"	v
s:has_service_field	plugged/vim-polyglot/syntax/pamconf.vim	/^let s:has_service_field = exists("b:pamconf_has_service_field")$/;"	v
s:has_strcharpart	plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strcharpart = exists('*strcharpart')$/;"	v
s:has_strchars	plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strchars = exists('*strchars')$/;"	v
s:has_vimproc	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:has_vimproc() abort$/;"	f
s:has_webapi	plugged/vim-polyglot/autoload/rust.vim	/^function! s:has_webapi()$/;"	f
s:hash	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:hash(str) abort$/;"	f
s:hash_colors	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:head_cache	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:head_cache = {}$/;"	v
s:head_format	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:headersRegexp	plugged/vim-polyglot/ftplugin/markdown.vim	/^let s:headersRegexp = '\\v^(#|.+\\n(\\=+|-+)$)'$/;"	v
s:hex_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:hex_regex = '0x\\x\\%(_\\?\\x\\)*\\%(\\>\\|im\\>\\|\\ze\\X\\)'$/;"	v
s:hexfloat_regex1	plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex1 = '0x\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?[pP][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\/;"	v
s:hexfloat_regex2	plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex2 = '0x\\x\\%(_\\?\\x\\)*\\%\\(\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?\\)\\?[pP][-/;"	v
s:hi	plugged/vim-polyglot/syntax/go.vim	/^function! s:hi()$/;"	f
s:hide_cursor	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:hide_cursor() abort$/;"	f
s:highlightFromGroup	plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:highlightFromGroup(group) abort$/;"	f
s:highlight_close_tag	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:highlight_close_tag = get(g:, 'vim_jsx_pretty_highlight_close_tag', 0)$/;"	v
s:highlight_groups	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_groups	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
s:highlight_keys	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! s:highlight_keys(winid, items)$/;"	f
s:highlight_line	plugged/ale/autoload/ale/highlight.vim	/^function! s:highlight_line(bufnr, lnum, group) abort$/;"	f
s:highlight_range	plugged/ale/autoload/ale/highlight.vim	/^function! s:highlight_range(bufnr, range, group) abort$/;"	f
s:highlight_timer	plugged/vista.vim/autoload/vista/cursor.vim	/^let s:highlight_timer = -1$/;"	v
s:hilink	plugged/vim-quickui/plugin/quickui.vim	/^function! s:hilink(name, target)$/;"	f
s:history_file	plugged/vim-translator/autoload/translator/history.vim	/^let s:history_file = expand('<sfile>:p:h') . '\/..\/..\/translation_history.data'$/;"	v
s:hl_group_exists	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:hl_group_exists(group) abort$/;"	f
s:hl_groups	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:hl_groups = {}$/;"	v
s:hls_cursor	plugged/gruvbox/colors/gruvbox.vim	/^  let s:hls_cursor = get(s:gb, g:gruvbox_hls_cursor)$/;"	v
s:hls_cursor	plugged/gruvbox/colors/gruvbox.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hog_keyword_match	plugged/vim-polyglot/ftplugin/hog.vim	/^let s:hog_keyword_match = '\\c^\\s*\\<\\(preprocessor\\\\|config\\\\|output\\\\|include\\\\|ipva/;"	v
s:home	plugged/vim-quickui/plugin/quickui.vim	/^let s:home = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:hover_map	plugged/ale/autoload/ale/hover.vim	/^let s:hover_map = {}$/;"	v
s:html_indent	plugged/vim-polyglot/indent/svelte.vim	/^let s:html_indent = &l:indentexpr$/;"	v
s:html_indent	plugged/vim-polyglot/indent/vue.vim	/^let s:html_indent = s:get_indentexpr('html')$/;"	v
s:htmlindent	plugged/vim-polyglot/indent/blade.vim	/^let s:htmlindent = &indentexpr$/;"	v
s:hunk_symbols	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = s:idef$/;"	v
s:i	plugged/vim-polyglot/syntax/help.vim	/^let s:i = match(expand("%"), '\\.\\a\\ax$')$/;"	v
s:iTerm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:iTerm_escape_template = '\\033]Pl%s\\033\\\\'$/;"	v
s:icons	plugged/vista.vim/autoload/vista/renderer.vim	/^let s:icons = {$/;"	v
s:icons	plugged/vista.vim/syntax/vista.vim	/^let s:icons = join(values(g:vista#renderer#icons), '\\|')$/;"	v
s:icons	plugged/vista.vim/syntax/vista_kind.vim	/^let s:icons = join(values(g:vista#renderer#icons), '\\|')$/;"	v
s:iconv	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:iconv	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
s:ics	plugged/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:id	plugged/nvim-yarp/autoload/yarp/core.vim	/^let s:id = 1$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idregex	plugged/vim-polyglot/autoload/julia.vim	/^let s:idregex = '[^' . s:nonidS_chars . '0-9!' . s:uniop_chars . s:binop_chars . '][^' . s:nonid/;"	v
s:idregex	plugged/vim-polyglot/syntax/julia.vim	/^let s:idregex = '\\%([^' . s:nonidS_chars . '0-9!?' . s:uniop_chars . s:binop_chars . '][^' . s:/;"	v
s:ignore_list	plugged/vista.vim/autoload/vista.vim	/^let s:ignore_list = ['vista', 'vista_kind', 'nerdtree', 'startify', 'tagbar', 'fzf', 'gitcommit'/;"	v
s:ignorecase	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ignorecase=0$/;"	v
s:ignored_region	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:ignored_region()$/;"	f
s:ignored_region	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:ignored_region()$/;"	f
s:import	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:in_comm	plugged/vim-polyglot/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:inactive_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:include	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^let s:include = &l:include$/;"	v
s:include	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:include = &l:include$/;"	v
s:incompleteFont	plugged/vim-polyglot/after/syntax/idris.vim	/^    let s:incompleteFont = [ 'Consolas'$/;"	v
s:incompleteFont	plugged/vim-polyglot/after/syntax/idris2.vim	/^    let s:incompleteFont = [ 'Consolas'$/;"	v
s:increase	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:increase(...)$/;"	f
s:indentGuard	plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentGuard(pos, prevline)$/;"	f
s:indentMatching	plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentMatching(char)$/;"	f
s:indent_access_modifier_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indent_like_block	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_block(lnum)$/;"	f
s:indent_like_block	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_block(lnum)$/;"	f
s:indent_like_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
s:indent_like_opening_paren	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
s:indent_like_previous_line	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
s:indent_like_previous_line	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
s:indent_size	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^let s:indent_size = g:vista#renderer#enable_icon ? 2 : 4$/;"	v
s:indent_size	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^let s:indent_size = g:vista#renderer#enable_icon ? 2 : 4$/;"	v
s:indent_tags	plugged/vim-polyglot/after/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:indent_tags	plugged/vim-polyglot/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:indent_to_innermost_parentheses	plugged/vim-polyglot/indent/dtd.vim	/^function s:indent_to_innermost_parentheses(line, end)$/;"	f
s:indexes	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:indicatorMap	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^    let s:indicatorMap = {$/;"	v
s:infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:info	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:info    = 1 | :lockvar s:info$/;"	v
s:init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:init=0$/;"	v
s:init	plugged/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
s:initCustomOpenArgs	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs() abort$/;"	f
s:initFoldState	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:initFoldState(known_files) abort dict$/;"	f
s:initVariable	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:initVariable(var, value) abort$/;"	f
s:init_buffer	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
s:init_done	plugged/tagbar/autoload/tagbar.vim	/^let s:init_done = 0$/;"	v
s:init_path	plugged/ale/autoload/ale/gradle.vim	/^let s:init_path = has('win32')$/;"	v
s:init_var	plugged/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
s:initialize	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initialize()$/;"	f
s:initialize_buffer_job	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:initialize_buffer_job(bufnr, vcs) abort$/;"	f
s:initialize_exit_code	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! s:initialize_exit_code() abort$/;"	f
s:initialize_job	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:initialize_job(bufnr, vcs) abort$/;"	f
s:inline_pattern	plugged/ale/autoload/ale/handlers/gcc.vim	/^let s:inline_pattern = '\\v inlined from .* at \\<stdin\\>:(\\d+):(\\d+):$'$/;"	v
s:inputPrompt	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
s:insidePlantUMLTags	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:insidePlantUMLTags(lnum) abort$/;"	f
s:install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:int_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:int_regex = '\\%(' . s:hex_regex .$/;"	v
s:int_suf	plugged/vim-polyglot/syntax/nim.vim	/^  let s:int_suf = '%(''%(%(i|I|u|U)%(8|16|32|64)|u|U))'$/;"	v
s:internal_candidates_list	plugged/neco-vim/autoload/necovim/helper.vim	/^  let s:internal_candidates_list = {}$/;"	v
s:interp_dollar	plugged/vim-polyglot/syntax/julia.vim	/^let s:interp_dollar = '\\([' . s:nonidS_chars . s:uniop_chars . s:binop_chars . '!?]\\|^\\)\\@'./;"	v
s:interpreters	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:interpreters = {$/;"	v
s:intersect	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
s:inverse	plugged/gruvbox/colors/gruvbox.vim	/^  let s:inverse = ''$/;"	v
s:inverse	plugged/gruvbox/colors/gruvbox.vim	/^let s:inverse = 'inverse,'$/;"	v
s:invert	plugged/vim-polyglot/scripts/eregex.vim	/^let s:invert=0$/;"	v
s:invert_selection	plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_signs	plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_signs = ''$/;"	v
s:invert_tabline	plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_tabline = ''$/;"	v
s:invoke_funcrefs	plugged/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
s:isDarwin	plugged/vim-devicons/plugin/webdevicons.vim	/^function s:isDarwin()$/;"	f
s:isEOF	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:isEOF(data) abort$/;"	f
s:isFoldable	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFoldable() abort dict$/;"	f
s:isFoldable	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFoldable() abort dict$/;"	f
s:isFolded	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFolded() abort dict$/;"	f
s:isFolded	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFolded() abort dict$/;"	f
s:isInBlock	plugged/vim-polyglot/indent/haskell.vim	/^function! s:isInBlock(hlstack)$/;"	f
s:isKindheader	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isKindheader() abort dict$/;"	f
s:isKindheader	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isKindheader() abort dict$/;"	f
s:isNormalTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isNormalTag() abort dict$/;"	f
s:isNormalTag	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:isNormalTag() abort dict$/;"	f
s:isPseudoTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
s:isPseudoTag	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
s:isSYN	plugged/vim-polyglot/indent/haskell.vim	/^function! s:isSYN(grp, line, col)$/;"	f
s:isSplitTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isSplitTag() abort dict$/;"	f
s:isSplitTag	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:isSplitTag() abort dict$/;"	f
s:is_AppleTerminal	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_AppleTerminal = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'Apple_Terminal'$/;"	v
s:is_available	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:is_available() abort$/;"	f
s:is_branch_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty() abort$/;"	f
s:is_closing_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_closing_tag(syntax)$/;"	f
s:is_comment	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_comment(syntax)$/;"	f
s:is_concealed	plugged/vim-polyglot/indent/cython.vim	/^    function! s:is_concealed(line, col)$/;"	f
s:is_concealed	plugged/vim-polyglot/indent/python.vim	/^    function! s:is_concealed(line, col)$/;"	f
s:is_cur_line_in_hunk	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:is_cur_line_in_hunk(hunkline) abort$/;"	f
s:is_dark	plugged/gruvbox/colors/gruvbox.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_dedented_already	plugged/vim-polyglot/indent/cython.vim	/^function! s:is_dedented_already(current, base)$/;"	f
s:is_dedented_already	plugged/vim-polyglot/indent/python.vim	/^function! s:is_dedented_already(current, base)$/;"	f
s:is_excluded_window	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
s:is_good	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_good = !has('gui_running') && !s:is_win && !s:is_AppleTerminal$/;"	v
s:is_iTerm	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_iTerm = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'iTerm.app'$/;"	v
s:is_jsx_backticks	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_backticks(syntax)$/;"	f
s:is_jsx_brace	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_brace(syntax)$/;"	f
s:is_jsx_comment	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_comment(syntax)$/;"	f
s:is_jsx_element	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_element(syntax)$/;"	f
s:is_jsx_expression	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_expression(syntax)$/;"	f
s:is_jsx_region	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_region(syntax)$/;"	f
s:is_linux	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:is_linux = has('unix') && !has('macunix') && !has('win32unix')$/;"	v
s:is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_mac	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:is_mac = has('macunix')$/;"	v
s:is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_maximized	plugged/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_method_special_case	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_method_special_case(position)$/;"	f
s:is_nvim	plugged/vista.vim/autoload/vista/finder.vim	/^let s:is_nvim = has('nvim')$/;"	v
s:is_opening_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_opening_tag(syntax)$/;"	f
s:is_paren	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_paren()$/;"	f
s:is_paren	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:is_paren()$/;"	f
s:is_parent_element	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_parent_element(pos, element_count)$/;"	f
s:is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_python_string	plugged/vim-polyglot/indent/cython.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
s:is_python_string	plugged/vim-polyglot/indent/python.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
s:is_reader_conditional_special_case	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_reader_conditional_special_case(position)$/;"	f
s:is_section_delim	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:is_section_delim(line, func_delim) abort$/;"	f
s:is_string_comment	plugged/vim-polyglot/indent/reason.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
s:is_string_comment	plugged/vim-polyglot/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
s:is_string_or_comment	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:is_string_or_comment(line, col)$/;"	f
s:is_unix	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_vital_vim	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:is_win = gitstatus#isWin()$/;"	v
s:is_win	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win32term	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) &&$/;"	v
s:is_windows	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:isabsolute	autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
s:iskeyword_save	plugged/vim-polyglot/syntax/php.vim	/^let s:iskeyword_save = &iskeyword$/;"	v
s:italic	plugged/gruvbox/colors/gruvbox.vim	/^  let s:italic = ''$/;"	v
s:italic	plugged/gruvbox/colors/gruvbox.vim	/^let s:italic = 'italic,'$/;"	v
s:italicize_comments	plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_strings	plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_strings = ''$/;"	v
s:item_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:item_pattern = s:file_commit_pattern . '\\|^@@'$/;"	v
s:itemization_pattern	plugged/vim-polyglot/indent/rst.vim	/^let s:itemization_pattern = '^\\s*[-*+]\\s'$/;"	v
s:job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_kill_timers	plugged/ale/autoload/ale/job.vim	/^    let s:job_kill_timers = {}$/;"	v
s:job_map	plugged/ale/autoload/ale/job.vim	/^    let s:job_map = {}$/;"	v
s:job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:jobstart	plugged/nvim-yarp/autoload/yarp/core.vim	/^    let s:jobstart = 'jobstart'$/;"	v
s:jobstart	plugged/nvim-yarp/autoload/yarp/core.vim	/^    let s:jobstart = get(g:, 'yarp_jobstart', 'neovim_rpc#jobstart')$/;"	v
s:join	plugged/vim-which-key/autoload/which_key.vim	/^function! s:join(...) abort$/;"	f
s:join_posix_lines	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
s:js_keywords	plugged/vim-polyglot/indent/solidity.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\/;"	v
s:js_keywords	plugged/vim-polyglot/indent/typescript.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\/;"	v
s:jsx_cpo	plugged/vim-polyglot/after/syntax/jsx.vim	/^let s:jsx_cpo = &cpo$/;"	v
s:jsx_cpo	plugged/vim-polyglot/after/syntax/tsx.vim	/^let s:jsx_cpo = &cpo$/;"	v
s:jsx_indent_backticks	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_backticks(lnum)$/;"	f
s:jsx_indent_closing_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_closing_tag(lnum)$/;"	f
s:jsx_indent_comment	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_comment(lnum)$/;"	f
s:jsx_indent_element	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_element(lnum)$/;"	f
s:jsx_indent_trail_punct	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_trail_punct(lnum)$/;"	f
s:julia_blocks_functions	plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:julia_blocks_functions = {$/;"	v
s:julia_highlight_operators	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_highlight_operators = get(g:, "julia_highlight_operators", 1)$/;"	v
s:julia_spellcheck_comments	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_comments = get(g:, "julia_spellcheck_comments", 1)$/;"	v
s:julia_spellcheck_docstrings	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_docstrings = get(g:, "julia_spellcheck_docstrings", 1)$/;"	v
s:julia_spellcheck_strings	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_strings = get(g:, "julia_spellcheck_strings", 0)$/;"	v
s:jump	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
s:jumpToChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last) abort$/;"	f
s:jumpToFirstChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node) abort$/;"	f
s:jumpToLastChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node) abort$/;"	f
s:jumpToNextHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToNextHunk(node)$/;"	f
s:jumpToNextSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node) abort$/;"	f
s:jumpToParent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node) abort$/;"	f
s:jumpToPrevHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToPrevHunk(node)$/;"	f
s:jumpToPrevSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node) abort$/;"	f
s:jumpToRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot() abort$/;"	f
s:jumpToSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward) abort$/;"	f
s:jump_to_identifier_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:jump_to_identifier_at(linum, ident) abort$/;"	f
s:jump_to_impl	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:jump_to_impl(impl) abort$/;"	f
s:jump_to_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
s:just_inserted_rule_rx	plugged/vim-polyglot/indent/make.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:just_inserted_rule_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:justify_equal_spacing	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
s:keepcpo	plugged/vim-polyglot/after/indent/jsx.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/after/indent/tsx.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/autoload/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/compiler/cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/compiler/tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/meson.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/pyrex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/css.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/gdscript3.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/java.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/meson.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/mp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/pgsql.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/scss.vim	/^let s:keepcpo= &cpoptions$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/svg.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/xinetd.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/autoit.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/datascript.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/fvwm.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/lsl.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/po.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/raku.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/sil.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/taskdata.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/taskedit.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:kernels	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:kernels = ['linux', 'hurd', 'kfreebsd', 'knetbsd', 'kopensolaris', 'netbsd']$/;"	v
s:keyMaps	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:key_value	plugged/vim-polyglot/indent/ansible.vim	/^let s:key_value = '\\v^\\s*[^:-]+:\\s*\\S' " apt: name=package$/;"	v
s:keymaps	plugged/vim-quickui/autoload/quickui/tools.vim	/^let s:keymaps = '123456789abcdefimnopqrstuvwxyz'$/;"	v
s:keyword	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:keyword(expr)$/;"	f
s:keywords	plugged/vim-polyglot/syntax/raku.vim	/^let s:keywords = {$/;"	v
s:known_files	plugged/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:known_files	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_files.get	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
s:known_files.has	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
s:known_files.put	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
s:known_files.rm	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
s:known_projects	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = ""$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = &langmenu$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = s:lang . '.' . &enc$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^      let s:lang = substitute(s:lang, '\\.[^.]*', "", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, " ", "_", "g")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, "@euro", "", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, '\\.iso8859', ".iso_8859", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(s:lang, 'iso_8859-15\\=$', "latin1", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = substitute(tolower(s:lang), '\\.iso-', ".iso_", "")$/;"	v
s:lang	plugged/vim-polyglot/extras/menu.vim	/^    let s:lang = v:lang$/;"	v
s:language	plugged/vim-polyglot/indent/vue.vim	/^    let s:language.indentexpr = s:get_indentexpr(s:language.name)$/;"	v
s:language_opt	plugged/vista.vim/autoload/vista/types/uctags.vim	/^let s:language_opt = map(s:language_opt,$/;"	v
s:language_opt	plugged/vista.vim/autoload/vista/types/uctags.vim	/^let s:language_opt = {$/;"	v
s:languageclient_refresh	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:languageclient_refresh()$/;"	f
s:languages	plugged/vim-polyglot/indent/vue.vim	/^let s:languages = [$/;"	v
s:languages	plugged/vim-polyglot/syntax/svelte.vim	/^  let s:languages += g:svelte_preprocessor_tags$/;"	v
s:languages	plugged/vim-polyglot/syntax/svelte.vim	/^let s:languages = [$/;"	v
s:languages	plugged/vim-polyglot/syntax/vue.vim	/^let s:languages = [$/;"	v
s:last_alt_bufnr	plugged/tagbar/autoload/tagbar.vim	/^let s:last_alt_bufnr = -1$/;"	v
s:last_changedtick	plugged/vim-polyglot/indent/erlang.vim	/^let s:last_changedtick = -1$/;"	v
s:last_done_pos	plugged/ale/autoload/ale/completion.vim	/^let s:last_done_pos = []$/;"	v
s:last_event	plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:last_event = []$/;"	v
s:last_highlight_tline	plugged/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_list	plugged/ale/autoload/ale/preview.vim	/^    let s:last_list = []$/;"	v
s:last_lnum	plugged/vista.vim/autoload/vista/floating.vim	/^let s:last_lnum = -1$/;"	v
s:last_lnum	plugged/vista.vim/autoload/vista/popup.vim	/^let s:last_lnum = -1$/;"	v
s:last_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:last_mode = ''$/;"	v
s:last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_options	plugged/ale/autoload/ale/preview.vim	/^    let s:last_options = {}$/;"	v
s:last_pattern_options	plugged/ale/autoload/ale/pattern_options.vim	/^let s:last_pattern_options = {}$/;"	v
s:last_pos	plugged/ale/autoload/ale/cursor.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_pos	plugged/ale/autoload/ale/hover.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_pos	plugged/ale/autoload/ale/virtualtext.vim	/^let s:last_pos = [0, 0, 0]$/;"	v
s:last_req_id	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:last_req_id = 0$/;"	v
s:last_rtp	autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:last_time	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:last_time = reltime()$/;"	v
s:last_times	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:last_times = {}$/;"	v
s:last_vlnum	plugged/vista.vim/autoload/vista/cursor.vim	/^let s:last_vlnum = v:null$/;"	v
s:last_wildignores	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:layout	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:lazy	autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:lb1	plugged/vim-polyglot/syntax/ledger.vim	/^let s:lb1 = '\\@1<='$/;"	v
s:leaderf_path	plugged/LeaderF/plugin/leaderf.vim	/^let s:leaderf_path = expand("<sfile>:p:h:h")$/;"	v
s:leading_operator_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*\\%(&\\=\\.\\)'$/;"	v
s:leaving	plugged/nvim-yarp/autoload/yarp/core.vim	/^let s:leaving = 0$/;"	v
s:ledgerAmount_contains	plugged/vim-polyglot/syntax/ledger.vim	/^    let s:ledgerAmount_contains .= '@NoSpell'$/;"	v
s:ledgerAmount_contains	plugged/vim-polyglot/syntax/ledger.vim	/^let s:ledgerAmount_contains = ''$/;"	v
s:ledger_cmd	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:ledger_cmd(file, args) abort$/;"	f
s:leftSep	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^let s:leftSep = {$/;"	v
s:leftSep	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^let s:leftSep = {$/;"	v
s:legacy_airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:legacy_airline_ale_get_line_number(cnt, type) abort$/;"	f
s:lenSpaceStr	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:length_pattern	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:length_pattern = '\\%(\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|/;"	v
s:letlim	plugged/vim-polyglot/indent/ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letlim	plugged/vim-polyglot/indent/sml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	plugged/vim-polyglot/indent/ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|externa/;"	v
s:letpat	plugged/vim-polyglot/indent/sml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|externa/;"	v
s:levelRegexpDict	plugged/vim-polyglot/ftplugin/markdown.vim	/^let s:levelRegexpDict = {$/;"	v
s:levenshtein_distance	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
s:lex	plugged/vim-polyglot/indent/dtd.vim	/^function s:lex(input, start, ...)$/;"	f
s:lex1	plugged/vim-polyglot/indent/dtd.vim	/^function s:lex1(input, start, ...)$/;"	f
s:likely	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:likely(str) abort$/;"	f
s:lim	plugged/vim-polyglot/indent/ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lim	plugged/vim-polyglot/indent/sml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lineLens	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:lineLens(projectPath, cont)$/;"	f
s:line_comment_chars	plugged/vim-polyglot/syntax/ledger.vim	/^let s:line_comment_chars = b:is_hledger ? ';*#' : ';|*#%'$/;"	v
s:line_term	plugged/vim-polyglot/indent/json.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	plugged/vim-polyglot/indent/solidity.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	plugged/vim-polyglot/indent/typescript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:linechars	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
s:lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:lines	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:lines(str) abort$/;"	f
s:lines	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:lines = join(getline(1, 5) + [getline('$')], "\\n")$/;"	v
s:lines	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/eelixir.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/jst.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	plugged/vim-polyglot/syntax/ragel.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lint_timer	plugged/ale/autoload/ale.vim	/^let s:lint_timer = -1$/;"	v
s:linters	plugged/ale/autoload/ale/linter.vim	/^let s:linters = {}$/;"	v
s:lisp_regex	plugged/ale/autoload/ale/completion.vim	/^let s:lisp_regex = '\\v[a-zA-Z_\\-][a-zA-Z_\\-0-9]*$'$/;"	v
s:listSyntax	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:listSyntax(syntaxKeyword) abort$/;"	f
s:listener	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:listener = gitstatus#listener#New(g:)$/;"	v
s:liststartregex	plugged/vim-polyglot/indent/yaml.vim	/^let s:liststartregex='\\v^\\s*%(\\-%(\\ |$))'$/;"	v
s:listtype	plugged/vim-polyglot/autoload/zig/list.vim	/^function! s:listtype(listtype) abort$/;"	f
s:lmax	plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	plugged/vim-polyglot/indent/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	plugged/vim-polyglot/indent/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	plugged/vim-polyglot/syntax/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	plugged/vim-polyglot/syntax/fortran.vim	/^    let s:lmax = 500$/;"	v
s:ln	plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	plugged/vim-polyglot/indent/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	plugged/vim-polyglot/indent/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	plugged/vim-polyglot/syntax/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	plugged/vim-polyglot/syntax/fortran.vim	/^    let s:ln=1$/;"	v
s:lnum	plugged/ncm2/autoload/ncm2.vim	/^let s:lnum = 0$/;"	v
s:load	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:load(arg)$/;"	f
s:load	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:load(...) abort dict$/;"	f
s:load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	plugged/ncm2-bufword/autoload/ncm2_bufword.vim	/^let s:loaded = 1$/;"	v
s:loaded	plugged/ncm2-go/autoload/ncm2_go.vim	/^let s:loaded = 1$/;"	v
s:loaded	plugged/ncm2-jedi/autoload/ncm2_jedi.vim	/^let s:loaded = 1$/;"	v
s:loaded	plugged/ncm2-path/autoload/ncm2_path.vim	/^let s:loaded = 1$/;"	v
s:loaded	plugged/ncm2-ultisnips/autoload/ncm2_ultisnips.vim	/^let s:loaded = 1$/;"	v
s:loaded	plugged/ncm2-vim/autoload/ncm2_vim.vim	/^let s:loaded = 1$/;"	v
s:loaded	plugged/nvim-yarp/autoload/yarp/core.vim	/^let s:loaded = 1$/;"	v
s:loaded	plugged/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:loaded = {}$/;"	v
s:loaded_ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:loaded_ext = []$/;"	v
s:loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:loaded_vim_devicons	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_devicons() abort$/;"	f
s:loaded_vim_nerdtree_syntax_highlight	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_nerdtree_syntax_highlight() abort$/;"	f
s:loaded_vim_nerdtree_tabs	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_nerdtree_tabs() abort$/;"	f
s:local_candidates_list	plugged/neco-vim/autoload/necovim/helper.vim	/^  let s:local_candidates_list = {}$/;"	v
s:lock	plugged/ncm2/autoload/ncm2.vim	/^let s:lock = {}$/;"	v
s:lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log	plugged/vim-translator/autoload/translator/logger.vim	/^let s:log = []$/;"	v
s:log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:log_diff_context	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:log_diff_context = '{"filename": fugitive#Find(v:val . from, a:dir), "lnum": get(offsets, /;"	v
s:logger	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:logger = gitstatus#log#NewLogger(g:NERDTreeGitStatusLogLevel)$/;"	v
s:logging_enabled	plugged/vista.vim/autoload/vista.vim	/^let s:logging_enabled = exists('g:vista_log_file') && !empty(g:vista_log_file)$/;"	v
s:logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:lsp_linter_map	plugged/ale/autoload/ale/lsp_linter.vim	/^    let s:lsp_linter_map = {}$/;"	v
s:m	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:m_char	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! s:m_char(char)$/;"	f
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:macro_end	plugged/vim-polyglot/indent/sas.vim	/^let s:macro_end = '\\v%(^|;)\\s*\\%mend\\s*;'$/;"	v
s:macro_regex	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:macro_regex = '\\%(@\\%([#(]\\@!\\S\\)\\+\\|\\<\\%(local\\|global\\)\\)\\s\\+'$/;"	v
s:macro_str	plugged/vim-polyglot/indent/sas.vim	/^let s:macro_str = '\\v%(^|;)\\s*\\%macro>'$/;"	v
s:mainfont	plugged/vim-polyglot/after/syntax/idris.vim	/^    let s:mainfont = substitute( &guifont, '^\\([^:,]\\+\\).*', '\\1', '')$/;"	v
s:mainfont	plugged/vim-polyglot/after/syntax/idris2.vim	/^    let s:mainfont = substitute( &guifont, '^\\([^:,]\\+\\).*', '\\1', '')$/;"	v
s:maj	plugged/vim-polyglot/scripts/eregex.vim	/^let s:maj=matchstr(s:tmp, '\\d\\+') * 100$/;"	v
s:make_cache_commands	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:make_cache_commands() abort$/;"	f
s:make_cache_features	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:make_cache_features() abort$/;"	f
s:make_cache_functions	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:make_cache_functions() abort$/;"	f
s:make_cache_options	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:make_cache_options() abort$/;"	f
s:make_completion_list	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:make_completion_list(list) abort$/;"	f
s:manual_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f
s:map_accum	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
s:map_aux	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_aux(function)$/;"	f
s:map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
s:map_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_move(function, toend, backwards)$/;"	f
s:map_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_select(function)$/;"	f
s:mapkeyregex	plugged/vim-polyglot/indent/yaml.vim	/^let s:mapkeyregex='\\v^\\s*\\#@!\\S@=%(\\''%([^'']|\\''\\'')*\\'''.$/;"	v
s:mapkeys	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        fun! s:mapkeys(keys, plug)$/;"	f
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps = {}$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["G"] = 'BOTTOM'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<CR>"] = 'ENTER'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<DOWN>"] = 'DOWN'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<END>"] = 'END'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<ESC>"] = 'ESC'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<HOME>"] = 'HOME'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<LEFT>"] = 'LEFT'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<PageDown>"] = 'PAGEDOWN'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<PageUp>"] = 'PAGEUP'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<RIGHT>"] = 'RIGHT'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<SPACE>"] = 'ENTER'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<UP>"] = 'UP'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-b>"] = 'PAGEUP'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-d>"] = 'HALFDOWN'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-f>"] = 'PAGEDOWN'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-g>"] = 'NOHL'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-h>"] = 'LEFT'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-j>"] = 'DOWN'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-k>"] = 'UP'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-l>"] = 'RIGHT'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-n>"] = 'NEXT'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-p>"] = 'PREV'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["\\<c-u>"] = 'HALFUP'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps["g"] = 'TOP'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['H'] = 'PAGEUP'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['J'] = 'HALFDOWN'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['K'] = 'HALFUP'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['L'] = 'PAGEDOWN'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['N'] = 'PREV'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['h'] = 'LEFT'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['j'] = 'DOWN'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['k'] = 'UP'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['l'] = 'RIGHT'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['n'] = 'NEXT'$/;"	v
s:maps	plugged/vim-quickui/autoload/quickui/utils.vim	/^let s:maps['q'] = 'ESC'$/;"	v
s:mark_complements	plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_complements=s:mark_left . 'cOmPLemEnTs' . s:mark_right$/;"	v
s:mark_left	plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_left="\\<Esc>" . strftime("%X") . ":" . strftime("%d") . "\\<C-f>"$/;"	v
s:mark_right	plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_right="\\<C-l>" . strftime("%X") . ":" . strftime("%d") . "\\<Esc>"$/;"	v
s:mark_window	plugged/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
s:markdown_common	plugged/vista.vim/autoload/vista/toc.vim	/^let s:markdown_common = ['markdown', 'vimwiki', 'pandoc', 'apiblueprint']$/;"	v
s:matchModeMap	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^let s:matchModeMap = {$/;"	v
s:match_expr_on_line	plugged/vim-polyglot/indent/cython.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
s:match_expr_on_line	plugged/vim-polyglot/indent/python.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
s:match_one	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_one(patterns, string)$/;"	f
s:match_one	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:match_one(patterns, string)$/;"	f
s:match_pairs	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
s:match_pairs	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
s:match_words	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/config.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:match_words = ''$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words . "," . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:match_words = ""$/;"	v
s:matchaddpos	plugged/ale/autoload/ale/highlight.vim	/^function! s:matchaddpos(group, pos_list) abort$/;"	f
s:matches	plugged/ncm2/autoload/ncm2.vim	/^let s:matches = []$/;"	v
s:matchit	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:matchit()$/;"	f
s:matchlastpos	plugged/vim-translator/autoload/translator/cmdline.vim	/^function! s:matchlastpos(expr, pat) abort$/;"	f
s:max_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
s:max_firstline	plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:max_firstline(lines, height, width) abort$/;"	f
s:maxoff	plugged/vim-polyglot/indent/bzl.vim	/^let s:maxoff = 50$/;"	v
s:maxoff	plugged/vim-polyglot/indent/gdscript3.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maxoff	plugged/vim-polyglot/indent/meson.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maxoff	plugged/vim-polyglot/indent/zimbu.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maybe_map_scope	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:maybe_map_scope(scopestr) abort$/;"	f
s:me	autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:menu_grey	plugged/onedark.vim/colors/onedark.vim	/^let s:menu_grey = s:colors.menu_grey$/;"	v
s:merge	plugged/vim-which-key/autoload/which_key.vim	/^function! s:merge(target, native) " {{{$/;"	f
s:merge_heads	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:merge_heads = ['MERGE_HEAD', 'REBASE_HEAD', 'CHERRY_PICK_HEAD', 'REVERT_HEAD']$/;"	v
s:message	plugged/ale/autoload/ale/codefix.vim	/^function! s:message(message) abort$/;"	f
s:message	plugged/ale/autoload/ale/completion.vim	/^function! s:message(message) abort$/;"	f
s:message	plugged/ale/autoload/ale/rename.vim	/^function! s:message(message) abort$/;"	f
s:meta_chars	plugged/vim-polyglot/scripts/eregex.vim	/^let s:meta_chars='$*.[\\]^~'$/;"	v
s:midBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:midBlock = ['case', 'catch', 'else', 'elseif', 'otherwise',$/;"	v
s:middle_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:middle_patt = '\\C\\<\\%(else\\|elseif\\)\\>'$/;"	v
s:migrateVariable	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:migrateVariable(oldv, newv) abort$/;"	f
s:min	plugged/vim-polyglot/scripts/eregex.vim	/^let s:min=matchstr(s:tmp, '\\.\\zs\\d\\+') + 0$/;"	v
s:min_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
s:mindmapHilightLinks	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:mindmapHilightLinks = [$/;"	v
s:mmssff_pattern	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:mmssff_pattern = '\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\/;"	v
s:modeMap	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^let s:modeMap = {$/;"	v
s:modeline	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:modeline = lnum? getline(lnum): ""$/;"	v
s:modifierMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:modifierMatcher = s:annotationMatcher . '\\|\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)/;"	v
s:module	plugged/vim-polyglot/indent/ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:module	plugged/vim-polyglot/indent/sml.vim	/^let s:module = '\\<\\%(let\\|sig\\|struct\\)\\>'$/;"	v
s:mouse_click	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! s:mouse_click()$/;"	f
s:move_around	plugged/vim-polyglot/ftplugin/mf.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f
s:move_around	plugged/vim-polyglot/ftplugin/mp.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f
s:move_before_begin	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:move_before_begin()$/;"	f
s:move_to_following_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:move_to_following_block() abort$/;"	f
s:move_to_pred_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:move_to_pred_block() abort$/;"	f
s:movement	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! s:movement(key)$/;"	f
s:moveto_block_delim	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_block_delim(toend, backwards, ...)$/;"	f
s:moveto_currentblock_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_currentblock_end()$/;"	f
s:mp_regex	plugged/vim-polyglot/ftplugin/mf.vim	/^let s:mp_regex = {$/;"	v
s:mp_regex	plugged/vim-polyglot/ftplugin/mp.vim	/^let s:mp_regex = {$/;"	v
s:mq_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:mq_jobs        = {}$/;"	v
s:msl_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_ter/;"	v
s:msl_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:msl_regex = s:continuation_regex$/;"	v
s:multiline	plugged/vim-polyglot/scripts/eregex.vim	/^let s:multiline=0$/;"	v
s:name	plugged/vim-quickui/autoload/quickui/menu.vim	/^let s:name = 'system'$/;"	v
s:named_module_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:named_module_entry = '\\v^\\s*-\\s*(name|hosts|role):\\s*\\S' " - name: 'do stuff'$/;"	v
s:names	autoload/plug.vim	/^function! s:names(...)$/;"	f
s:names	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:names = {'0': 'index', '1': 'orig', '2':'fetch', '3':'merge'}$/;"	v
s:names	plugged/vim-polyglot/syntax/ruby.vim	/^let s:names = { '~': 'Tilde', '`': 'BackQuote', '!': 'Bang', '@': 'At', '#': 'Hash', '$': 'Dolla/;"	v
s:namespace	plugged/vim-quickui/autoload/quickui/menu.vim	/^let s:namespace = { 'system':{'config':{}, 'weight':100, 'index':0} }$/;"	v
s:nearby_disabled	plugged/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:nearest_cargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! s:nearest_cargo(...) abort$/;"	f
s:need_migrate_vals	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:need_migrate_vals = {$/;"	v
s:need_trans	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:neoterm_id	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:neoterm_id(bufnr) abort$/;"	f
s:neovim_click	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! s:neovim_click()$/;"	f
s:neovim_dropdown	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! s:neovim_dropdown()$/;"	f
s:new	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:new(plugin_name) abort$/;"	f
s:newJob	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:newJob(name, opts) abort$/;"	f
s:new_airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:new_airline_ale_get_line_number(cnt, type) abort$/;"	f
s:new_polyglot_disabled	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let s:new_polyglot_disabled = []$/;"	v
s:new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
s:new_window	plugged/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_section	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:next_section(stop_func_begin) abort$/;"	f
s:nm	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:nm  = s:type$/;"	v
s:nm	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:nm = substitute(s:type, '=.*', '', '')$/;"	v
s:nodot	plugged/vim-polyglot/syntax/julia.vim	/^let s:nodot = '\\%(\\.\\)\\@'.s:d(1).'<!'$/;"	v
s:nomacro	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:nomacro = '\\%(' . s:macro_regex . '\\)\\@<!'$/;"	v
s:nomodeline	plugged/vim-airline/autoload/airline/util.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has("patch438"))) ? '<nomodeline>' :/;"	v
s:non_bracket_continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]/;"	v
s:non_bracket_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:non_zero_only	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:none	plugged/gruvbox/colors/gruvbox.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:none	plugged/vim/colors/dracula.vim	/^let s:none      = ['NONE', 'NONE']$/;"	v
s:nonidS_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:nonidS_chars = "[:space:])\\\\U5D}" . s:nonid_chars$/;"	v
s:nonidS_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:nonidS_chars = "[:space:])\\\\U5D}" . s:nonid_chars$/;"	v
s:nonid_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:nonid_chars = "\\U01-\\U07" . "\\U0E-\\U1F" .$/;"	v
s:nonid_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:nonid_chars = "\\U01-\\U07" . "\\U0E-\\U1F" .$/;"	v
s:not_end	plugged/vim-polyglot/ftplugin/framescript.vim	/^  let s:not_end = '\\c\\%(\\<End\\)\\@<!'$/;"	v
s:notag	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:notag()$/;"	f
s:note_pattern	plugged/vim-polyglot/indent/rst.vim	/^let s:note_pattern = '^\\.\\. '$/;"	v
s:notelse	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notelse = '\\%(\\<end\\s\\+\\|\\<else\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/ada.vim	/^   let s:notend      = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notprocedure	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notprocedure = '\\%(\\s\\+procedure\\>\\)\\@!'$/;"	v
s:notselect	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notselect = '\\%(\\<select\\s\\+\\)\\@<!'$/;"	v
s:nowait	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nowait	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nr2byte	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
s:nr2enc_char	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
s:nr2hex	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
s:ns_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char = '\\%([\\n\\r\\uFEFF \\t]\\@!\\p\\)'$/;"	v
s:ns_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char = s:SimplifyToAssumeAllPrintable(s:ns_char)$/;"	v
s:ns_char_without_c_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = s:SimplifyToAssumeAllPrintable(s:ns_char_without_c_indicator/;"	v
s:ns_char_without_c_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = substitute(s:ns_char, '\\v\\C[\\zs', '\\=s:c_indicator[1:-2]/;"	v
s:ns_directive_name	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_directive_name = s:ns_char.'\\+'$/;"	v
s:ns_global_tag_prefix	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'$/;"	v
s:ns_id	plugged/ale/autoload/ale/highlight.vim	/^    let s:ns_id = nvim_create_namespace('ale_highlight')$/;"	v
s:ns_id	plugged/ale/autoload/ale/virtualtext.vim	/^    let s:ns_id = nvim_create_namespace('ale')$/;"	v
s:ns_local_tag_prefix	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'$/;"	v
s:ns_plain_char_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_char_in  = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_in.'\\|'.s:ns_plain_safe_in_w/;"	v
s:ns_plain_char_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_char_out = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_out.'\\|'.s:ns_plain_safe_out/;"	v
s:ns_plain_first_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_first_in  = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe/;"	v
s:ns_plain_first_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_first_out = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe/;"	v
s:ns_plain_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'$/;"	v
s:ns_plain_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'$/;"	v
s:ns_plain_safe_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in  = '\\%('.s:c_flow_indicator.'\\@!'.s:ns_char.'\\)'$/;"	v
s:ns_plain_safe_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in = substitute(s:ns_plain_safe_in, '\\V\\C\\\\%('.s:_collection.'\\\\@!'.s:/;"	v
s:ns_plain_safe_in_without_colhash	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in_without_colhash = substitute(s:ns_plain_safe_in, '\\V\\C'.s:_neg_collecti/;"	v
s:ns_plain_safe_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_out = s:ns_char$/;"	v
s:ns_plain_safe_out_without_colhash	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_out_without_colhash = substitute(s:ns_plain_safe_out, '\\V\\C'.s:_neg_collec/;"	v
s:ns_tag_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_tag_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'|[#\/;?:@&=+$.~*''()])'$/;"	v
s:ns_tag_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$.~*''()]\\)'$/;"	v
s:ns_tag_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_char = s:SimplifyAdjacentCollections(s:ns_tag_char)$/;"	v
s:ns_tag_prefix	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_prefix = s:ns_local_tag_prefix.$/;"	v
s:ns_uri_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_uri_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'\\v|[#\/;?:@&=+$,.!~*''()[\\]])'$/;"	v
s:ns_uri_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_uri_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$,.!~*''()[\\]]\\)'$/;"	v
s:ns_uri_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_uri_char = s:SimplifyAdjacentCollections(s:ns_uri_char)$/;"	v
s:ns_word_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_word_char = '\\v[[:alnum:]_\\-]'$/;"	v
s:ns_word_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_word_char = '[[:alnum:]_\\-]'$/;"	v
s:nsplit	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
s:number_column	plugged/gruvbox/colors/gruvbox.vim	/^  let s:number_column = get(s:gb, g:gruvbox_number_column)$/;"	v
s:number_column	plugged/gruvbox/colors/gruvbox.vim	/^let s:number_column = s:none$/;"	v
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait'))$/;"	v
s:nvim_autocmd	plugged/vim-quickui/autoload/quickui/preview.vim	/^function! s:nvim_autocmd()$/;"	f
s:nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:nvim_create_context	plugged/vim-quickui/autoload/quickui/context.vim	/^function! s:nvim_create_context(textlist, opts)$/;"	f
s:nvim_create_listbox	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! s:nvim_create_listbox(textlist, opts)$/;"	f
s:nvim_create_listbox	plugged/vim-quickui/test/test_nvim_list.vim	/^function! s:nvim_create_listbox(textlist, opts)$/;"	f
s:nvim_create_textbox	plugged/vim-quickui/autoload/quickui/textbox.vim	/^function! s:nvim_create_textbox(textlist, opts)$/;"	f
s:nvim_job_exit_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:nvim_mq_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_mq_job_handler(job_id, data, event) dict$/;"	f
s:nvim_output_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_output_handler(job_id, data, event) dict$/;"	f
s:nvim_po_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_po_job_handler(job_id, data, event) dict$/;"	f
s:nvim_term_exit	plugged/vim-quickui/autoload/quickui/terminal.vim	/^function! s:nvim_term_exit(jobid, data, event)$/;"	f
s:nvim_untracked_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_untracked_job_handler(job_id, data, event) dict$/;"	f
s:obj	plugged/vim-polyglot/indent/ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|ob/;"	v
s:obj	plugged/vim-polyglot/indent/sml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|ob/;"	v
s:ocaml_word_char	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    let s:ocaml_word_char = '\\w|[\\xc0-\\xff]|'''$/;"	v
s:oct_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:oct_regex = '0o\\o\\%(_\\?\\o\\)*\\%(\\>\\|im\\>\\|\\ze\\O\\)'$/;"	v
s:oe	plugged/vim-polyglot/syntax/ledger.vim	/^let s:oe = '\\%#=1'$/;"	v
s:offset	plugged/vim-signify/autoload/sy/util.vim	/^function! s:offset() abort$/;"	f
s:old_cpo	plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:old_spec	plugged/vim-polyglot/syntax/rst.vim	/^    let s:old_spec = g:rst_syntax_code_list$/;"	v
s:old_style	plugged/vim-polyglot/syntax/erlang.vim	/^let s:old_style = (exists("g:erlang_old_style_highlight") &&$/;"	v
s:oldcolumn	plugged/vim-polyglot/syntax/lhaskell.vim	/^let s:oldcolumn=col(".")$/;"	v
s:oldline	plugged/vim-polyglot/syntax/lhaskell.vim	/^let s:oldline=line(".")$/;"	v
s:omni_start_map	plugged/ale/autoload/ale/completion.vim	/^let s:omni_start_map = {$/;"	v
s:onCursorHold	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onCursorHold(fname)$/;"	f
s:onFileUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onFileUpdate(fname)$/;"	f
s:onGitStatusFailedCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitStatusFailedCB(job) abort$/;"	f
s:onGitStatusSuccessCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitStatusSuccessCB(job) abort$/;"	f
s:onGitWorkdirFailedCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitWorkdirFailedCB(job) abort$/;"	f
s:onGitWorkdirSuccessCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitWorkdirSuccessCB(job) abort$/;"	f
s:onNERDTreeDirChanged	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onNERDTreeDirChanged(path) abort$/;"	f
s:onNERDTreeInit	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onNERDTreeInit(path) abort$/;"	f
s:on_begin	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_begin()$/;"	f
s:on_click	plugged/vim-quickui/autoload/quickui/context.vim	/^function! s:on_click(hwnd)$/;"	f
s:on_colorscheme_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
s:on_complete_done	plugged/ncm2/autoload/ncm2.vim	/^func! s:on_complete_done()$/;"	f
s:on_confirm	plugged/vim-quickui/autoload/quickui/context.vim	/^function! s:on_confirm(hwnd)$/;"	f
s:on_cursor_moved	plugged/vim-airline/plugin/airline.vim	/^function! s:on_cursor_moved()$/;"	f
s:on_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_end()$/;"	f
s:on_exit	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^  function! s:on_exit(_job, _data, _event) abort dict$/;"	f
s:on_exit_clean	plugged/vim-airline/autoload/airline/async.vim	/^function! s:on_exit_clean(...) dict abort$/;"	f
s:on_exit_mq	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
s:on_exit_nvim	plugged/vim-translator/autoload/translator/job.vim	/^  function! s:on_exit_nvim(jobid, code, event) abort$/;"	f
s:on_exit_po	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_po(channel) dict abort$/;"	f
s:on_exit_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_untracked(channel) dict abort$/;"	f
s:on_exit_vim	plugged/vim-translator/autoload/translator/job.vim	/^  function! s:on_exit_vim(ch, code) abort$/;"	f
s:on_focus_gained	plugged/vim-airline/plugin/airline.vim	/^function! s:on_focus_gained()$/;"	f
s:on_insert_enter	plugged/ncm2/autoload/ncm2.vim	/^func! s:on_insert_enter()$/;"	f
s:on_stdout	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
s:on_stdout_nvim	plugged/vim-translator/autoload/translator/job.vim	/^  function! s:on_stdout_nvim(type, jobid, data, event) abort$/;"	f
s:on_stdout_vim	plugged/vim-translator/autoload/translator/job.vim	/^  function! s:on_stdout_vim(type, event, ch, msg) abort$/;"	f
s:on_warmup	plugged/ncm2/autoload/ncm2.vim	/^func! s:on_warmup(...)$/;"	f
s:on_window_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_window_changed(event)$/;"	f
s:one_line_scope_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:one_line_scope_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:oneline	plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ' oneline'$/;"	v
s:oneline	plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ''$/;"	v
s:openBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:openBlock = s:beginBlock + s:midBlock$/;"	v
s:openExplorer	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node) abort$/;"	f
s:openFold	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openFold() abort dict$/;"	f
s:openFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:openFold() abort dict$/;"	f
s:openHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target) abort$/;"	f
s:openHSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplitBookmark(bm) abort$/;"	f
s:openInNewTab	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target) abort$/;"	f
s:openInNewTabSilent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target) abort$/;"	f
s:openKindFold	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:openKindFold(kind) abort dict$/;"	f
s:openNodeRecursively	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node) abort$/;"	f
s:openParents	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openParents() abort dict$/;"	f
s:openVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target) abort$/;"	f
s:openVSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplitBookmark(bm) abort$/;"	f
s:open_browser	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:open_browser(url) abort$/;"	f
s:open_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:open_patt = '\\C\\%(\\<\\%(function\\|if\\|repeat\\|do\\)\\>\\|(\\|{\\)'$/;"	v
s:open_split_win	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:open_split_win() abort$/;"	f
s:operators	plugged/vim-polyglot/autoload/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&!]\\|\/\/\\|\\\\\\|<<\\|>>>\\?\\)\\?=' .$/;"	v
s:operators	plugged/vim-polyglot/syntax/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&!]\\|\/\/\\|\\\\\\|<<\\|>>>\\?\\)\\?=' .$/;"	v
s:opfirst	plugged/vim-polyglot/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:opt	plugged/ncm2/autoload/ncm2.vim	/^func! s:opt(name, default)$/;"	f
s:optionalblock	plugged/vim-polyglot/indent/cobol.vim	/^function! s:optionalblock(lnum,ind,blocks,clauses)$/;"	f
s:or	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:or(xs) abort$/;"	f
s:or_replace	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:or_replace = '\\%(or\\s\\+replace\\s\\+\\)\\?'$/;"	v
s:orange	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:orange = s:getGruvColor('GruvboxOrange')$/;"	v
s:orange	plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.bright_orange$/;"	v
s:orange	plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.faded_orange$/;"	v
s:orange	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:orange   = g:dracula#palette.orange$/;"	v
s:orange	plugged/vim/colors/dracula.vim	/^let s:orange    = g:dracula#palette.orange$/;"	v
s:orders	plugged/vim-polyglot/syntax/hostconf.vim	/^let s:orders = ['bind', 'hosts', 'nis']$/;"	v
s:ordot	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let s:ordot = '\\|\\ze\\.\\%( \\@=\\|$\\)'$/;"	v
s:original_cpo	plugged/vim-polyglot/syntax/tmux.vim	/^let s:original_cpo = &cpo$/;"	v
s:other_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let s:other_mf_macros = g:other_mf_macros$/;"	v
s:override_source	plugged/ncm2/autoload/ncm2.vim	/^func! s:override_source(sr)$/;"	f
s:overrides	plugged/onedark.vim/autoload/onedark.vim	/^let s:overrides = get(g:, "onedark_color_overrides", {})$/;"	v
s:overrides	plugged/onedark.vim/build/templates/autoload.template.vim	/^let s:overrides = get(g:, "onedark_color_overrides", {})$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p = {'normal':{}, 'inactive':{}, 'insert':{}, 'replace':{}, 'visual':{}, 'tabline':{}, '/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.left =  [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.middle = [ [ s:bg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.right = [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.left = [ [ s:bg0, s:blue, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.right = [ [ s:bg0, s:blue ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.error = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.left = [ [ s:bg0, s:fg4, 'bold' ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.right = [ [ s:bg0, s:fg4 ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.warning = [ [ s:bg2, s:yellow ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.left = [ [ s:bg0, s:aqua, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.right = [ [ s:bg0, s:aqua ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.left = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.middle = [ [ s:bg0, s:bg0 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.right = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.tabsel = [ [ s:bg0, s:fg4 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.left = [ [ s:bg0, s:green, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.right = [ [ s:bg0, s:green ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.left = [ [ s:bg0, s:orange, 'bold' ], [ s:bg0, s:bg4 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.right = [ [ s:bg0, s:orange ], [ s:bg0, s:bg4 ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.inactive.left =  [ [ s:white, s:grey ], [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.inactive.middle = [ [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.inactive.right = [ [ s:black, s:white ], [ s:black, s:white ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.insert.left = [ [ s:black, s:blue ], [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.insert.right = [ [ s:black, s:blue ], [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.normal.error = [ [ s:black, s:red ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.normal.left = [ [ s:black, s:green ], [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.normal.middle = [ [ s:white, s:black ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.normal.right = [ [ s:black, s:green ], [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.normal.warning = [ [ s:black, s:yellow ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.replace.right = [ [ s:black, s:red ], [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.tabline.left = [ [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.tabline.middle = [ [ s:white, s:black ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.tabline.right = [ [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:white ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.visual.left = [ [ s:black, s:purple ], [ s:white, s:grey ] ]$/;"	v
s:p	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:p.visual.right = [ [ s:black, s:purple ], [ s:white, s:grey ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline':/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.inactive.left =  [ [ s:cyan, s:black ], [ s:white, s:black ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.inactive.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.inactive.right = [ [ s:black, s:darkblue ], [ s:white, s:black ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.insert.left = [ [ s:black, s:green ], [ s:cyan, s:gray ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.normal.left = [ [ s:black, s:purple ], [ s:cyan, s:gray ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.normal.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.normal.right = [ [ s:black, s:purple ], [ s:white, s:darkblue ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.replace.left = [ [ s:black, s:red ], [ s:cyan, s:gray ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.tabline.left = [ [ s:darkblue, s:gray ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.tabline.middle = [ [ s:darkblue, s:gray ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.tabline.tabsel = [ [ s:cyan, s:black ] ]$/;"	v
s:p	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^  let s:p.visual.left = [ [ s:black, s:orange ], [ s:cyan, s:gray ] ]$/;"	v
s:pad_between_letters	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
s:pad_both_sides	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
s:pad_left	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
s:pad_right	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
s:padding_by_displaywidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
s:padding_end	plugged/vim-translator/autoload/translator/history.vim	/^function! s:padding_end(text, length) abort$/;"	f
s:pair_skip_expr	plugged/vim-polyglot/indent/graphql.vim	/^let s:pair_skip_expr =$/;"	v
s:pairs	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:pairs = [$/;"	v
s:palette	plugged/LeaderF/autoload/leaderf/colorscheme/default.vim	/^let s:palette = {$/;"	v
s:palette	plugged/LeaderF/autoload/leaderf/colorscheme/gruvbox_material.vim	/^    let s:palette = {$/;"	v
s:palette	plugged/LeaderF/autoload/leaderf/colorscheme/one.vim	/^let s:palette = {$/;"	v
s:palette	plugged/LeaderF/autoload/leaderf/colorscheme/powerline.vim	/^let s:palette = {$/;"	v
s:paren_pairs	plugged/vim-polyglot/indent/cython.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
s:paren_pairs	plugged/vim-polyglot/indent/python.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
s:parseJSON	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! s:parseJSON(buffer, lines) abort$/;"	f
s:parseLines	plugged/ale/autoload/ale/handlers/eslint.vim	/^function! s:parseLines(buffer, lines) abort$/;"	f
s:parse_errors	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! s:parse_errors(filename, content) abort$/;"	f
s:parse_menu	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! s:parse_menu(name, padding)$/;"	f
s:parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:partial_timers	plugged/ale/autoload/ale/util.vim	/^    let s:partial_timers = {}$/;"	v
s:partition	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
s:parts	plugged/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:pat	plugged/vim-polyglot/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pat	plugged/vim-polyglot/compiler/ls.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:path	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^let s:path = expand('<sfile>:h')$/;"	v
s:path	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^let s:path = &l:path$/;"	v
s:path	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:path = &l:path$/;"	v
s:path2str	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:path2str(path) abort$/;"	f
s:path_separator	plugged/vista.vim/autoload/vista/util.vim	/^let s:path_separator = has('win32') ? '\\' : '\/'$/;"	v
s:pattern	plugged/ale/autoload/ale/handlers/gcc.vim	/^let s:pattern = '\\v^([a-zA-Z]?:?[^:]+):(\\d+)?:?(\\d+)?:? ([^:]+): (.+)$'$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? /;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@3<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^                let s:pattern .= ':'$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^            let s:pattern .= '{%\\s*\\<' . s:tag . '\\>\\s*\\%(.*=\\)\\@![^}]\\{-}%}'$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^        let s:pattern .= ':{%\\s*\\<' . s:element[-1:][0] . '\\>\\s*.\\{-}%}'$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^        let s:pattern = ''$/;"	v
s:pattern	plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
s:pattern	plugged/vista.vim/syntax/vista_kind.vim	/^let s:pattern = join(s:prefixes, '\\|')$/;"	v
s:paused	plugged/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:permutations	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
s:permute_suffixes	plugged/vim-polyglot/syntax/hostconf.vim	/^function s:permute_suffixes(list)$/;"	f
s:phpindent	plugged/vim-polyglot/indent/blade.vim	/^let s:phpindent = &indentexpr$/;"	v
s:pink	plugged/vim/colors/dracula.vim	/^let s:pink      = g:dracula#palette.pink$/;"	v
s:plain_delims	plugged/vim-polyglot/syntax/raku.vim	/^let s:plain_delims = [$/;"	v
s:plain_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let s:plain_mf_macros = g:plain_mf_macros$/;"	v
s:plain_mf_modes	plugged/vim-polyglot/syntax/mp.vim	/^  let s:plain_mf_modes = g:plain_mf_modes$/;"	v
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_call	autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
s:plug_expand	autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
s:plug_fnamemodify	autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
s:plug_getcwd	autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_tempname	autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
s:plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:plugin_home	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:plugin_home = expand('<sfile>:p:h:h')$/;"	v
s:plugin_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:plugin_name() abort dict$/;"	f
s:plugin_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_path	plugged/vim-polyglot/autoload/nim.vim	/^let s:plugin_path = escape(expand('<sfile>:p:h'), '\\')$/;"	v
s:po_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:po_jobs        = {}$/;"	v
s:po_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:po_output(buf, file)$/;"	f
s:pop	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:pop(list) abort$/;"	f
s:popup_close_check_state	plugged/ncm2/autoload/ncm2.vim	/^let s:popup_close_check_state = 0$/;"	v
s:popup_close_tick	plugged/ncm2/autoload/ncm2.vim	/^let s:popup_close_tick = []$/;"	v
s:popup_closed_by_user	plugged/ncm2/autoload/ncm2.vim	/^let s:popup_closed_by_user = 0$/;"	v
s:popup_delay	plugged/vista.vim/autoload/vista/popup.vim	/^let s:popup_delay = get(g:, 'vista_floating_delay', 100)$/;"	v
s:popup_exit	plugged/vim-quickui/autoload/quickui/context.vim	/^function! s:popup_exit(winid, code)$/;"	f
s:popup_exit	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! s:popup_exit(winid, code)$/;"	f
s:popup_exit	plugged/vim-quickui/autoload/quickui/preview.vim	/^function! s:popup_exit(winid, code)$/;"	f
s:popup_exit	plugged/vim-quickui/autoload/quickui/textbox.vim	/^function! s:popup_exit(winid, code)$/;"	f
s:popup_filter	plugged/vim-quickui/autoload/quickui/context.vim	/^function! s:popup_filter(winid, key)$/;"	f
s:popup_filter	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! s:popup_filter(winid, key)$/;"	f
s:popup_filter	plugged/vim-quickui/autoload/quickui/textbox.vim	/^function! s:popup_filter(winid, key)$/;"	f
s:popup_filter	plugged/vim-translator/autoload/translator/window/popup.vim	/^function! s:popup_filter(winid, key) abort$/;"	f
s:popup_open	plugged/ncm2/autoload/ncm2.vim	/^let s:popup_open = 0$/;"	v
s:popup_timed	plugged/ncm2/autoload/ncm2.vim	/^func! s:popup_timed(_)$/;"	f
s:popup_timer	plugged/ncm2/autoload/ncm2.vim	/^let s:popup_timer = 0$/;"	v
s:popup_timer	plugged/vista.vim/autoload/vista/popup.vim	/^let s:popup_timer = -1$/;"	v
s:popup_timer_args	plugged/ncm2/autoload/ncm2.vim	/^let s:popup_timer_args = []$/;"	v
s:popup_timer_tick	plugged/ncm2/autoload/ncm2.vim	/^let s:popup_timer_tick = []$/;"	v
s:popup_window	plugged/vim-signify/autoload/sy/util.vim	/^let s:popup_window = 0$/;"	v
s:pragma_error	plugged/ale/autoload/ale/handlers/gcc.vim	/^let s:pragma_error = '#pragma once in main file'$/;"	v
s:prefixes	plugged/vista.vim/syntax/vista_kind.vim	/^let s:prefixes = filter($/;"	v
s:prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:prepare_env	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:press_esc	plugged/vim-quickui/autoload/quickui/preview.vim	/^function! s:press_esc()$/;"	f
s:prettify	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettify(obj) abort$/;"	f
s:prettifyDict	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettifyDict(obj, prefix, level, indent) abort$/;"	f
s:prettifyList	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettifyList(obj, prefix, level, indent) abort$/;"	f
s:prev_ends_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:prev_ends_with(context, expr)$/;"	f
s:prev_lnum	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:prev_lnum(lnum)$/;"	f
s:prev_non_connected_line	plugged/vim-polyglot/indent/applescript.vim	/^func! s:prev_non_connected_line(line)$/;"	f
s:prev_section	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:prev_section(stop_func_begin) abort$/;"	f
s:prev_starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:prev_starts_with(context, expr)$/;"	f
s:prevgood	plugged/vim-polyglot/indent/bst.vim	/^function! s:prevgood(lnum)$/;"	f
s:prevgood	plugged/vim-polyglot/indent/cobol.vim	/^function! s:prevgood(lnum)$/;"	f
s:previewBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark) abort$/;"	f
s:previewNodeCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node) abort$/;"	f
s:previewNodeHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node) abort$/;"	f
s:previewNodeHSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplitBookmark(bookmark) abort$/;"	f
s:previewNodeVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node) abort$/;"	f
s:previewNodeVSplitBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplitBookmark(bookmark) abort$/;"	f
s:preview_color	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:preview_color(linenr) abort$/;"	f
s:preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:previous_cursor	plugged/vim-quickui/autoload/quickui/tools.vim	/^let s:previous_cursor = {}$/;"	v
s:prevnonblanknoncomment	plugged/vim-polyglot/indent/css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	plugged/vim-polyglot/indent/scss.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	plugged/vim-polyglot/indent/stylus.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:prevnonblanknoncomment	plugged/vim-polyglot/indent/tcl.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:private	plugged/vim-quickui/autoload/quickui/preview.vim	/^let s:private = {'winid': -1, 'background': -1, 'state':0}$/;"	v
s:process_options_file	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:process_rtp	plugged/vim-polyglot/ftdetect/polyglot.vim	/^func! s:process_rtp(rtp)$/;"	f
s:product	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:product(lists) abort$/;"	f
s:program_end	plugged/vim-polyglot/indent/sas.vim	/^let s:program_end = '\\v%(^|;)\\s*endsas\\s*;'$/;"	v
s:progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:project	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:project(projectPath, cont)$/;"	f
s:project_root	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_sink	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! s:project_sink(line) abort$/;"	f
s:prompt	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:prompt(msg)$/;"	f
s:promptToDelBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
s:prompt_snapshot_file	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:property	plugged/vim-polyglot/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype.overflow_group = 'airline_tab'$/;"	v
s:prototype.add_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
s:prototype.add_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
s:prototype.add_section_spaced	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
s:prototype.build	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.build	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype.get_position	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.get_position() dict$/;"	f
s:prototype.insert_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_raw(text, position) dict$/;"	f
s:prototype.insert_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_section(group, contents, position) dict$/;"	f
s:prototype.insert_titles	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.insert_titles(current, first, last) dict$/;"	f
s:prototype.split	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
s:prototype.try_insert_title	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.try_insert_title(index, group, pos, sep_size, force) dict$/;"	f
s:provider	plugged/vista.vim/autoload/vista/executive/ale.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	plugged/vista.vim/autoload/vista/executive/coc.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	plugged/vista.vim/autoload/vista/extension/markdown.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:provider	plugged/vista.vim/autoload/vista/extension/rst.vim	/^let s:provider = fnamemodify(expand('<sfile>'), ':t:r')$/;"	v
s:ps1xml_cpo_save	plugged/vim-polyglot/syntax/ps1xml.vim	/^let s:ps1xml_cpo_save = &cpo$/;"	v
s:purple	plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.bright_purple$/;"	v
s:purple	plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.faded_purple$/;"	v
s:purple	plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple[1] = 13$/;"	v
s:purple	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:purple = [ s:colors.purple.gui, s:term_purple ]$/;"	v
s:purple	plugged/onedark.vim/colors/onedark.vim	/^let s:purple = s:colors.purple$/;"	v
s:purple	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:purple   = g:dracula#palette.purple$/;"	v
s:purple	plugged/vim/colors/dracula.vim	/^let s:purple    = g:dracula#palette.purple$/;"	v
s:push	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
s:pwin_by_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:py3exe	plugged/nvim-yarp/autoload/yarp/pyx.vim	/^func! s:py3exe() dict$/;"	f
s:py_file	plugged/vim-translator/autoload/translator.vim	/^  let s:py_file = shellescape(s:py_file)$/;"	v
s:py_file	plugged/vim-translator/autoload/translator.vim	/^let s:py_file = expand('<sfile>:p:h') . '\/..\/script\/translator.py'$/;"	v
s:pyexe	plugged/nvim-yarp/autoload/yarp/pyx.vim	/^func! s:pyexe() dict$/;"	f
s:python_executable	plugged/vim-translator/autoload/translator.vim	/^    let s:python_executable = 'python'$/;"	v
s:python_executable	plugged/vim-translator/autoload/translator.vim	/^    let s:python_executable = 'python3'$/;"	v
s:python_executable	plugged/vim-translator/autoload/translator.vim	/^    let s:python_executable = g:python3_host_prog$/;"	v
s:python_executable	plugged/vim-translator/autoload/translator.vim	/^  let s:python_executable = shellescape(s:python_executable)$/;"	v
s:python_system	plugged/vim-quickui/autoload/quickui/utils.vim	/^function! s:python_system(cmd, version)$/;"	f
s:query_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f
s:quickfix_populate	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:quickfix_populate(data) abort$/;"	f
s:quickfix_toggle	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:quickfix_toggle(...) abort$/;"	f
s:quotable	plugged/vim-polyglot/syntax/julia.vim	/^let s:quotable = '\\%(' . s:idregex . '\\|?\\|' . s:operators . '\\|' . s:float_regex . '\\|' . /;"	v
s:quoting_colon	plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colon = '\\%(\\%(^\\s*\\|\\s\\{6,\\}\\|[' . s:nonid_chars . s:uniop_chars . s:bino/;"	v
s:quoting_colonS	plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colonS = '\\s\\@'.s:d(1).'<=:'$/;"	v
s:r_env	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_env = '^\\%(\\' . s:r_envflag . '\\s\\+\\)*\\(\\S\\+\\)'$/;"	v
s:r_envflag	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_envflag = '%(\\S\\+=\\S\\+\\|-[iS]\\|--ignore-environment\\|--split-string\\)'$/;"	v
s:r_hashbang	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_hashbang = '^#!\\s*\\(\\S\\+\\)\\s*\\(.*\\)\\s*'$/;"	v
s:radix_chars	plugged/vim-polyglot/syntax/clojure.vim	/^let s:radix_chars = "0123456789abcdefghijklmnopqrstuvwxyz"$/;"	v
s:rand	plugged/vim-airline/plugin/airline.vim	/^function! s:rand(max) abort$/;"	f
s:random_theme	plugged/vim-airline/plugin/airline.vim	/^function! s:random_theme() abort$/;"	f
s:ranger_command	plugged/ranger.vim/plugin/ranger.vim	/^  let s:ranger_command = 'ranger'$/;"	v
s:ranger_command	plugged/ranger.vim/plugin/ranger.vim	/^  let s:ranger_command = g:ranger_command_override$/;"	v
s:re_escaped	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_escaped='\\%(\\\\\\)\\@<!\\%(\\\\\\\\\\)*\\zs\\\\'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{0}='\\\\\\%([^x_]\\|x\\x\\{0,2}\\|_[.$^]\\=\\)'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{1}= '\\[:\\%(alnum\\|alpha\\|blank\\|cntrl\\|digit\\|graph\\|lower\\|print\\|pun/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{2}='\\[\\%([^^][^]]*\\|\\^.[^]]*\\)\\]'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{3}='{[0-9,]\\+}?\\='$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{4}='(?[iImM]\\{1,2})'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{5}='(\\(?:\\|?=\\|?!\\|?<=\\|?<!\\|?>\\|?[-#ixm]\\)\\=[^()]*)'$/;"	v
s:re_factor_size	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor_size=6$/;"	v
s:re_unescaped	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_unescaped='\\%(\\\\\\)\\@<!\\%(\\\\\\\\\\)*\\zs'$/;"	v
s:reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:rebase_abbrevs	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:record_diagnostics	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:record_diagnostics(state)$/;"	f
s:red	plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.bright_red$/;"	v
s:red	plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.faded_red$/;"	v
s:red	plugged/gruvbox/colors/gruvbox.vim	/^  let s:red[1]    = 9$/;"	v
s:red	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:red = [ s:colors.red.gui, s:term_red ]$/;"	v
s:red	plugged/onedark.vim/colors/onedark.vim	/^let s:red = s:colors.red$/;"	v
s:red	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:red      = g:dracula#palette.red$/;"	v
s:red	plugged/vim/colors/dracula.vim	/^let s:red       = g:dracula#palette.red$/;"	v
s:redir	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:redir(command) abort$/;"	f
s:redirects	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:redirects = {}$/;"	v
s:ref_header	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:ref_header = '\\%(Merge\\|Rebase\\|Upstream\\|Pull\\|Push\\)'$/;"	v
s:references_map	plugged/ale/autoload/ale/references.vim	/^let s:references_map = {}$/;"	v
s:refreshCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node) abort$/;"	f
s:refreshGitStatus	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:refreshGitStatus(name, workdir) abort$/;"	f
s:refreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot() abort$/;"	f
s:reg	plugged/nvim-yarp/autoload/yarp/core.vim	/^let s:reg = {}$/;"	v
s:register	plugged/vim-which-key/autoload/which_key.vim	/^function! s:register() abort$/;"	f
s:registered	plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:registered = []$/;"	v
s:regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:rel	plugged/vim-polyglot/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:reload_only	plugged/vista.vim/autoload/vista/executive/ale.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	plugged/vista.vim/autoload/vista/executive/coc.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^let s:reload_only = v:false$/;"	v
s:reload_only	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:reload_only = v:false$/;"	v
s:reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:remember_cursor_context	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! s:remember_cursor_context(code)$/;"	f
s:remember_cursor_listbox	plugged/vim-quickui/autoload/quickui/tools.vim	/^function! s:remember_cursor_listbox(code)$/;"	f
s:removeChild	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:removeChild(tag) dict abort$/;"	f
s:removeTag	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:removeTag(tag) dict abort$/;"	f
s:remove_ansi_sequences	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
s:remove_continuation	plugged/vim-polyglot/indent/make.vim	/^function s:remove_continuation(line)$/;"	f
s:remove_continuation	plugged/vim-polyglot/indent/omake.vim	/^function s:remove_continuation(line)$/;"	f
s:remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:renameBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
s:rename_map	plugged/ale/autoload/ale/rename.vim	/^let s:rename_map = {}$/;"	v
s:reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:repair_posix_text	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
s:repeat	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:repeat(str,count)$/;"	f
s:repeated_find	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:repeated_find(ai_mode)$/;"	f
s:replace	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
s:replace	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:replace(cmd, pat, sub)$/;"	f
s:replace_first	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
s:repo_bare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
s:repo_config	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
s:repo_dir	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
s:repo_find	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
s:repo_git_chomp	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
s:repo_git_chomp_in_tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
s:repo_git_command	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
s:repo_head	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
s:repo_list	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! s:repo_list() abort$/;"	f
s:repo_prepare	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_prepare(...) dict abort$/;"	f
s:repo_prototype	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_rev_parse	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
s:repo_superglob	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
s:repo_translate	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
s:repo_tree	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
s:repo_user	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
s:repos	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:request	plugged/ncm2/autoload/ncm2.vim	/^func! s:request(event, ...)$/;"	f
s:reset	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:reset() abort dict$/;"	f
s:reset_colors	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:reset_colors() abort$/;"	f
s:reset_untracked_cache	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
s:restore_view	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:restore_view()$/;"	f
s:restorehistory	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:restorehistory(name, history) abort$/;"	f
s:resume_queue	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:resume_queue = []$/;"	v
s:retry	autoload/plug.vim	/^function! s:retry()$/;"	f
s:returnAppleScriptIndent	plugged/vim-polyglot/indent/applescript.vim	/^func! s:returnAppleScriptIndent()$/;"	f
s:returnTypeMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
s:reuseWin	plugged/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
s:reverse	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
s:revert	autoload/plug.vim	/^function! s:revert()$/;"	f
s:rg_type_list	plugged/LeaderF/autoload/leaderf/Rg.vim	/^function! s:rg_type_list() abort$/;"	f
s:rightSep	plugged/LeaderF/autoload/leaderf/colorscheme.vim	/^let s:rightSep = {$/;"	v
s:rightSep	plugged/LeaderF/autoload/leaderf/colorscheme/popup.vim	/^let s:rightSep = {$/;"	v
s:rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:rootNERDTreePath	plugged/nerdtree/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:rpcnotify	plugged/nvim-yarp/autoload/yarp/core.vim	/^    let s:rpcnotify = 'rpcnotify'$/;"	v
s:rpcnotify	plugged/nvim-yarp/autoload/yarp/core.vim	/^    let s:rpcnotify = get(g:, 'yarp_rpcnotify', 'neovim_rpc#rpcnotify')$/;"	v
s:rpcrequest	plugged/nvim-yarp/autoload/yarp/core.vim	/^    let s:rpcrequest = 'rpcrequest'$/;"	v
s:rpcrequest	plugged/nvim-yarp/autoload/yarp/core.vim	/^    let s:rpcrequest = get(g:, 'yarp_rpcrequest', 'neovim_rpc#rpcrequest')$/;"	v
s:rtp	autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
s:rtp	plugged/vim-quickui/plugin/quickui.vim	/^let s:rtp = fnamemodify(s:home, ':h')$/;"	v
s:ruby_deindent_keywords	plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:rule_rx	plugged/vim-polyglot/indent/make.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:rule_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:run	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:run(vcs)$/;"	f
s:run_cmd	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_cmd(cmd) abort$/;"	f
s:run_lli	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:run_lli(...) abort$/;"	f
s:run_processing_procs	plugged/vim-polyglot/indent/sas.vim	/^let s:run_processing_procs = [$/;"	v
s:run_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_spec(root, path, ...) abort$/;"	f
s:run_syntax_fold	plugged/vim-polyglot/syntax/crystal.vim	/^function! s:run_syntax_fold(args) abort$/;"	f
s:run_syntax_fold	plugged/vim-polyglot/syntax/ruby.vim	/^function! s:run_syntax_fold(args) abort$/;"	f
s:run_system	plugged/tagbar/autoload/tagbar.vim	/^function! s:run_system(cmd, version) abort$/;"	f
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = '"' . gutentags#get_plat_file('update_tags') . '"'$/;"	v
s:runtime	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let s:runtime = resolve($VIMRUNTIME)$/;"	v
s:runtime_loaded_map	plugged/ale/autoload/ale/linter.vim	/^let s:runtime_loaded_map = {}$/;"	v
s:save_cpo	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-airline/plugin/airline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/after/indent/objc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/autoload/requirements.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/cargo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/rustc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/swift.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/ant.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/csc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/dtd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/hcl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/html.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/java.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/julia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/raku.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/tex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/toml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/ansible.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/clojure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/fennel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/yaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/gdscript3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/gsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/named.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/teraterm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-which-key/plugin/which_key.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_expandtab	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_expandtab = &l:expandtab$/;"	v
s:save_shiftwidth	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_shiftwidth = &l:shiftwidth$/;"	v
s:save_softtabstop	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_softtabstop = &l:softtabstop$/;"	v
s:save_tabstop	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_tabstop = &l:tabstop$/;"	v
s:savehistory	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:savehistory(name) abort$/;"	f
s:scalar_value	plugged/vim-polyglot/indent/ansible.vim	/^let s:scalar_value = '\\v:\\s*[>|\\|]\\s*$' " shell: >$/;"	v
s:scan	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
s:scheme	plugged/vim-quickui/plugin/quickui.vim	/^let s:scheme = get(g:, 'quickui_color_scheme', '')$/;"	v
s:scope_icon	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^let s:scope_icon = ['⊕', '⊖']$/;"	v
s:scope_icon	plugged/vista.vim/autoload/vista/renderer/line.vim	/^let s:scope_icon = ['⊕', '⊖']$/;"	v
s:script_candidates_list	plugged/neco-vim/autoload/necovim/helper.vim	/^  let s:script_candidates_list = {}$/;"	v
s:script_checks	plugged/vim-polyglot/tests/native.vim	/^let s:script_checks = {$/;"	v
s:script_env_checks	plugged/vim-polyglot/tests/native.vim	/^let s:script_env_checks = {$/;"	v
s:script_path	plugged/ale/autoload/ale/gradle.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:script_path	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:script_root_dir	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:script_root_dir = expand('<sfile>:p:h') . "\/..\/"$/;"	v
s:search	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:search(pattern) abort dict$/;"	f
s:searchfor	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^  function! s:searchfor(str, line, col, direction, ...) abort$/;"	f
s:searchsyn	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f
s:section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:section_a	plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_a = airline#section#create_left(['terminal', 'tmode'])$/;"	v
s:section_commit_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_commit_pattern = s:section_pattern . '\\|^commit '$/;"	v
s:section_compare	plugged/vim-quickui/autoload/quickui/menu.vim	/^function! s:section_compare(s1, s2)$/;"	f
s:section_delim_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:section_delim_at(lnum) abort$/;"	f
s:section_end	plugged/vim-polyglot/indent/sas.vim	/^let s:section_end = '\\v%(^|;)\\s*%(quit|enddata)\\s*;'$/;"	v
s:section_is_empty	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
s:section_pattern	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_pattern = '^[A-Z][a-z][^:]*$'$/;"	v
s:section_run	plugged/vim-polyglot/indent/sas.vim	/^let s:section_run = '\\v%(^|;)\\s*run\\s*;'$/;"	v
s:section_str	plugged/vim-polyglot/indent/sas.vim	/^let s:section_str = '\\v%(^|;)\\s*%(data|proc)>'$/;"	v
s:section_truncate_width	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:section_use_groups	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:section_z	plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_z = airline#section#create(['linenr', 'maxlinenr'])$/;"	v
s:sectionend	plugged/vim-polyglot/ftplugin/j.vim	/^let s:sectionend = '\\s*)\\s*'$/;"	v
s:sectionmovement	plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:sectionmovement(pattern,flags,mode,count)$/;"	f
s:sections	plugged/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:sections	plugged/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:sections	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:sections = [$/;"	v
s:sectionstart	plugged/vim-polyglot/ftplugin/j.vim	/^let s:sectionstart = '\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|ver/;"	v
s:select_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
s:selection	plugged/vim/colors/dracula.vim	/^let s:selection = g:dracula#palette.selection$/;"	v
s:sep	plugged/ale/autoload/ale/c.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	plugged/ale/autoload/ale/handlers/eslint.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	plugged/ale/autoload/ale/python.vim	/^let s:sep = has('win32') ? '\\' : '\/'$/;"	v
s:sep	plugged/vim-which-key/syntax/which_key.vim	/^let s:sep = which_key#get_sep()$/;"	v
s:separators	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:serveraddr	plugged/nvim-yarp/autoload/yarp/core.vim	/^    let s:serveraddr = function('s:_serveraddr')$/;"	v
s:serveraddr	plugged/nvim-yarp/autoload/yarp/core.vim	/^    let s:serveraddr = get(g:, 'yarp_serveraddr', 'neovim_rpc#serveraddr')$/;"	v
s:set	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:set(var, default) abort$/;"	f
s:setCursorHold	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setCursorHold()$/;"	f
s:setDictionaries	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setDictionaries()$/;"	f
s:setFolded	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:setFolded(folded) abort dict$/;"	f
s:setHightlighting	plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:setHightlighting() abort$/;"	f
s:setSyntax	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setSyntax()$/;"	f
s:set_clean_jobs_variable	plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_jobs_variable(vcs, file, id)$/;"	f
s:set_clean_variables	plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_variables(file, vcs, val)$/;"	f
s:set_cursor_color_for	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:set_cursor_color_for(mode)$/;"	f
s:set_dictionary_helper	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:set_dictionary_helper(variable, keys, pattern) abort$/;"	f
s:set_dictionary_helper	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:set_dictionary_helper(variable, keys, value) abort$/;"	f
s:set_guicolors	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:set_guicolors() abort$/;"	f
s:set_mark_tick	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:set_mark_tick(...)$/;"	f
s:set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  function! s:set_match_words() abort$/;"	f
s:set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:set_variables	plugged/ale/autoload/ale/fixers/astyle.vim	/^function! s:set_variables() abort$/;"	f
s:set_variables	plugged/ale/autoload/ale/fixers/clangtidy.vim	/^function! s:set_variables() abort$/;"	f
s:setupNERDTreeKeyMappings	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:setupNERDTreeKeyMappings()$/;"	f
s:setupNERDTreeListeners	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:setupNERDTreeListeners(listener) abort$/;"	f
s:setup_keymaps	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
s:setup_options	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
s:severity_error	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_error = 1$/;"	v
s:severity_hint	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_hint = 4$/;"	v
s:severity_info	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_info = 3$/;"	v
s:severity_warning	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_warning = 2$/;"	v
s:sha1size	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:sha1size = get(g:, 'airline#extensions#branch#sha1_len', 7)$/;"	v
s:shellesc	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
s:shellesc_ps1	autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
s:shellesc_sh	autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
s:shellescape	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
s:shift	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:shift(list) abort$/;"	f
s:shiftwidth	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:shiftwidth = &shiftwidth$/;"	v
s:shiftwidth	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:shiftwidth = ''$/;"	v
s:shiftwidth	plugged/vim-polyglot/indent/pgsql.vim	/^    fun! s:shiftwidth()$/;"	f
s:shiftwidth	plugged/vim-polyglot/indent/rust.vim	/^    function! s:shiftwidth()$/;"	f
s:short_help	plugged/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:should_complete_map	plugged/ale/autoload/ale/completion.vim	/^let s:should_complete_map = {$/;"	v
s:should_display	plugged/vista.vim/autoload/vista/executive/ale.vim	/^let s:should_display = v:false$/;"	v
s:should_display	plugged/vista.vim/autoload/vista/executive/coc.vim	/^let s:should_display = v:false$/;"	v
s:should_display	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:should_display = v:false$/;"	v
s:should_display	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^let s:should_display = v:false$/;"	v
s:should_display	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^let s:should_display = v:false$/;"	v
s:should_display	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^let s:should_display = v:false$/;"	v
s:should_note_winid	plugged/vim-which-key/autoload/which_key.vim	/^let s:should_note_winid = exists('*win_getid')$/;"	v
s:should_register	plugged/vim-polyglot/syntax/vue.vim	/^function! s:should_register(language, start_pattern)$/;"	f
s:should_skip	plugged/ncm2/autoload/ncm2.vim	/^func! s:should_skip()$/;"	f
s:showMenu	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node) abort$/;"	f
s:show_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_errors	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! s:show_errors(errors) abort$/;"	f
s:show_floating_win	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:show_floating_win(rows, layout) abort$/;"	f
s:show_line_numbers	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:show_line_numbers = get(g:, 'airline#extensions#languageclient#show_line_numbers', 1)$/;"	v
s:show_message	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_next_level_mappings	plugged/vim-which-key/autoload/which_key.vim	/^function! s:show_next_level_mappings(next_runtime) abort$/;"	f
s:show_old_win	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:show_old_win(rows, layout) abort$/;"	f
s:show_popup	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:show_popup(rows) abort$/;"	f
s:show_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
s:show_toc	plugged/vim-polyglot/ftplugin/help.vim	/^  function! s:show_toc() abort$/;"	f
s:show_upper_level_mappings	plugged/vim-which-key/autoload/which_key.vim	/^function! s:show_upper_level_mappings() abort$/;"	f
s:sid2sfuncs	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
s:sign_add	plugged/vim-signify/autoload/sy/highlight.vim	/^  let s:sign_add               = ' '$/;"	v
s:sign_add	plugged/vim-signify/autoload/sy/highlight.vim	/^  let s:sign_add               = get(g:, 'signify_sign_add',               '+')$/;"	v
s:sign_change	plugged/vim-signify/autoload/sy/highlight.vim	/^  let s:sign_change            = ' '$/;"	v
s:sign_change	plugged/vim-signify/autoload/sy/highlight.vim	/^  let s:sign_change            = get(g:, 'signify_sign_change',            '!')$/;"	v
s:sign_column	plugged/gruvbox/colors/gruvbox.vim	/^    let s:sign_column = get(s:gb, g:gruvbox_sign_column)$/;"	v
s:sign_column	plugged/gruvbox/colors/gruvbox.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	plugged/gruvbox/colors/gruvbox.vim	/^let s:sign_column = s:bg1$/;"	v
s:sign_delete	plugged/vim-signify/autoload/sy/sign.vim	/^  let s:sign_delete = ' '$/;"	v
s:sign_delete	plugged/vim-signify/autoload/sy/sign.vim	/^  let s:sign_delete = get(g:, 'signify_sign_delete', '_')$/;"	v
s:sign_delete_first_line	plugged/vim-signify/autoload/sy/highlight.vim	/^  let s:sign_delete_first_line = ' '$/;"	v
s:sign_delete_first_line	plugged/vim-signify/autoload/sy/highlight.vim	/^  let s:sign_delete_first_line = get(g:, 'signify_sign_delete_first_line', '‾')$/;"	v
s:sign_priority	plugged/vim-signify/autoload/sy/sign.vim	/^  let s:sign_priority = ''$/;"	v
s:sign_priority	plugged/vim-signify/autoload/sy/sign.vim	/^  let s:sign_priority = printf('priority=%d', get(g:, 'signify_priority', 10))$/;"	v
s:sign_show_count	plugged/vim-signify/autoload/sy/highlight.vim	/^let s:sign_show_count = get(g:, 'signify_sign_show_count', 1)$/;"	v
s:sign_show_count	plugged/vim-signify/autoload/sy/sign.vim	/^let s:sign_show_count  = get(g:, 'signify_sign_show_count', 1)$/;"	v
s:signature	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:signature(filePath, line, character, cont)$/;"	f
s:signatureData	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:signatureData(filePath, line, character, cont)$/;"	f
s:singular_types	plugged/tagbar/autoload/tagbar.vim	/^let s:singular_types = {$/;"	v
s:skip	plugged/vim-polyglot/indent/cobol.vim	/^let s:skip = 'getline(".") =~ "^.\\\\{6\\\\}[*\/$-]\\\\|\\"[^\\"]*\\""'$/;"	v
s:skip	plugged/vim-polyglot/syntax/ledger.vim	/^  let s:skip .= '\\n\\@!'$/;"	v
s:skip	plugged/vim-polyglot/syntax/ledger.vim	/^let s:skip = s:fb > 0 ? '\\|^\\n' : ''$/;"	v
s:skip	plugged/vim-signify/autoload/sy.vim	/^function! s:skip(bufnr, path)$/;"	f
s:skip2	plugged/vim-polyglot/autoload/pony.vim	/^let s:skip2 = '<SID>InLiteral(line("."), col(".")) || <SID>InComment(line("."), col(".")) == 1'$/;"	v
s:skip3	plugged/vim-polyglot/autoload/pony.vim	/^let s:skip3 = '!<SID>InKeyword(line("."), col("."))'$/;"	v
s:skip4	plugged/vim-polyglot/autoload/pony.vim	/^let s:skip4 = '!<SID>InBracket(line("."), col("."))'$/;"	v
s:skipPatterns	plugged/vim-polyglot/indent/julia.vim	/^let s:skipPatterns = '\\<julia\\%(Comprehension\\%(For\\|If\\)\\|RangeKeyword\\|Comment\\%([LM]\\/;"	v
s:skip_after_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_after_opening_paren	plugged/vim-polyglot/indent/python.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_check_ft	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file'],$/;"	v
s:skip_context_id	plugged/ncm2/autoload/ncm2.vim	/^let s:skip_context_id = 0$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/lua.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~# 'luaComment\\\\|luaString'"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/solidity.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_if_not	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:skip_if_not(current_lnum, ...)$/;"	f
s:skip_symbol	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:skip_syntax	plugged/vim-polyglot/indent/nix.vim	/^let s:skip_syntax = '\\%(Comment\\|String\\)$'$/;"	v
s:snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:softRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:softRefreshNerdTree()$/;"	f
s:sort	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
s:sortTags	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:sortTags(compare_typeinfo) abort dict$/;"	f
s:sort_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
s:sorted_items	plugged/ale/autoload/ale/pattern_options.vim	/^let s:sorted_items = []$/;"	v
s:source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:source	plugged/neco-vim/autoload/neocomplete/sources/vim.vim	/^let s:source = {$/;"	v
s:source	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:source.gather_candidates	plugged/neco-vim/autoload/neocomplete/sources/vim.vim	/^function! s:source.gather_candidates(context) abort$/;"	f
s:source.gather_candidates	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context) abort$/;"	f
s:source.get_complete_position	plugged/neco-vim/autoload/neocomplete/sources/vim.vim	/^function! s:source.get_complete_position(context) abort$/;"	f
s:sources	plugged/ncm2/autoload/ncm2.vim	/^let s:sources = {}$/;"	v
s:sources_override	plugged/ncm2/autoload/ncm2.vim	/^let s:sources_override = {}$/;"	v
s:spaceStr	plugged/nerdcommenter/plugin/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:span	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
s:spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:spawn	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-devicons/autoload/airline/extensions/webdevicons.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:special_chars_syn_pattern	plugged/vim-polyglot/indent/cython.vim	/^let s:special_chars_syn_pattern = "\\\\vstring|comment|^pythonbytes%(contents)=$|pythonTodo|jedi/;"	v
s:special_chars_syn_pattern	plugged/vim-polyglot/indent/python.vim	/^let s:special_chars_syn_pattern = "\\\\vstring|comment|^pythonbytes%(contents)=$|pythonTodo|jedi/;"	v
s:special_grey	plugged/onedark.vim/colors/onedark.vim	/^let s:special_grey = s:colors.special_grey$/;"	v
s:special_keys	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^  let s:special_keys[code] = key$/;"	v
s:special_keys	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^let s:special_keys = {$/;"	v
s:spell_cluster	plugged/vim-polyglot/syntax/crystal.vim	/^let s:spell_cluster = exists('crystal_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:spell_cluster	plugged/vim-polyglot/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:splat_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:split3	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
s:split_args	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:split_args(cur_text, complete_str) abort$/;"	f
s:split_by_displaywidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
s:split_leftright	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
s:split_or_new	plugged/vim-which-key/autoload/which_key/window.vim	/^function! s:split_or_new() abort$/;"	f
s:split_posix_text	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
s:split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:st	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:st = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:stack_size	plugged/vim-polyglot/scripts/eregex.vim	/^let s:stack_size=0$/;"	v
s:start	plugged/vim-polyglot/syntax/svelte.vim	/^  let s:start = '<' . s:language.tag . '\\>\\_[^>]*' . s:attr . '\\_[^>]*>'$/;"	v
s:start	plugged/vim-translator/autoload/translator/job.vim	/^function! s:start(type, data, event) abort$/;"	f
s:start_col	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:start_col(lnum)$/;"	f
s:start_pattern	plugged/vim-polyglot/syntax/vue.vim	/^  let s:start_pattern = '<' . s:language.tag . '\\>\\_[^>]*' . s:attr_pattern . '\\_[^>]*>'$/;"	v
s:start_syntax	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:start_syntax(lnum)$/;"	f
s:start_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^let s:start_tag = '<\\_s*\\%(>\\|\\${\\|\\%(\\<[-:._$A-Za-z0-9]\\+\\>\\)\\)'$/;"	v
s:startbcol	plugged/ncm2/autoload/ncm2.vim	/^let s:startbcol = 1$/;"	v
s:startexp	plugged/vim-polyglot/indent/typescriptreact.vim	/^let s:startexp = '[\\{\\(]\\s*$'$/;"	v
s:starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:starts_with(context, expr)$/;"	f
s:starts_with	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
s:status	autoload/plug.vim	/^function! s:status()$/;"	f
s:status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:statusline_in_use	plugged/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:stepmatch	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
s:steps	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
s:stop_statement	plugged/vim-polyglot/indent/cython.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:stop_statement	plugged/vim-polyglot/indent/python.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:str	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:str(longsig, full) abort dict$/;"	f
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = b:tt2_syn_tags . ' '$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,' \\+',' ','g')$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,'^ \\+','','g')$/;"	v
s:str_modifiers	plugged/vim-polyglot/scripts/eregex.vim	/^let s:str_modifiers='iISCDMm'$/;"	v
s:strchars	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
s:strchars	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:strfmt	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:strfmt() abort dict$/;"	f
s:strfmt	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:strfmt() abort dict$/;"	f
s:string_to_keys	plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! s:string_to_keys(input) abort$/;"	f
s:strip	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:strip(input)$/;"	f
s:strip	plugged/vim-polyglot/indent/bst.vim	/^function! s:strip(lnum)$/;"	f
s:stripComment	plugged/vim-polyglot/indent/haskell.vim	/^function! s:stripComment(line)$/;"	f
s:strip_context	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:strip_context(context)$/;"	f
s:strip_namespace_and_macro_chars	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:strip_namespace_and_macro_chars(word)$/;"	f
s:stripped	plugged/vim-polyglot/indent/cobol.vim	/^function! s:stripped(lnum)$/;"	f
s:strwidthpart	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
s:strwidthpart_reverse	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:sub	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
s:subscope_detectors	plugged/ncm2/autoload/ncm2.vim	/^let s:subscope_detectors = {}$/;"	v
s:substitute_last	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
s:subtle	plugged/vim/colors/dracula.vim	/^let s:subtle    = g:dracula#palette.subtle$/;"	v
s:subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:suffixesadd	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
s:suffixesadd	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
s:suite	plugged/nerdtree-git-plugin/tests/test_all.vim	/^let s:suite = themis#suite('Test for nerdtree-git-plugin')$/;"	v
s:suite	plugged/vim-devicons/test/default_setting.vim	/^let s:suite = themis#suite('Webdevicons-default-value')$/;"	v
s:suite	plugged/vim-devicons/test/fileformat.vim	/^let s:suite = themis#suite('WebDevIconsGetFileFormatSymbol')$/;"	v
s:suite	plugged/vim-devicons/test/filetype.vim	/^let s:suite = themis#suite('WebDevIconsGetFileTypeSymbol')$/;"	v
s:suite.BuildGitStatusCommand	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.BuildGitStatusCommand() abort$/;"	f
s:suite.BuildGitWorkdirCommand	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.BuildGitWorkdirCommand() abort$/;"	f
s:suite.CSSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.CSSymbol()$/;"	f
s:suite.CSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.CSymbol()$/;"	f
s:suite.ConfigOptions	plugged/vim-devicons/test/default_setting.vim	/^function! s:suite.ConfigOptions()$/;"	f
s:suite.CppSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.CppSymbol()$/;"	f
s:suite.CustomIndicator	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.CustomIndicator() abort$/;"	f
s:suite.DBSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.DBSymbol()$/;"	f
s:suite.DefaultIcon	plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.DefaultIcon()$/;"	f
s:suite.DockerSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.DockerSymbol()$/;"	f
s:suite.DropboxSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.DropboxSymbol()$/;"	f
s:suite.ElixirSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ElixirSymbol()$/;"	f
s:suite.ElmSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ElmSymbol()$/;"	f
s:suite.ErlangSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ErlangSymbol()$/;"	f
s:suite.ExtensionConfig	plugged/vim-devicons/test/default_setting.vim	/^function! s:suite.ExtensionConfig()$/;"	f
s:suite.FileNodesDefaultSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.FileNodesDefaultSymbol()$/;"	f
s:suite.GearSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.GearSymbol()$/;"	f
s:suite.GoSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.GoSymbol()$/;"	f
s:suite.HaskellSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.HaskellSymbol()$/;"	f
s:suite.Initializing	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.Initializing() abort$/;"	f
s:suite.JavaScriptSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.JavaScriptSymbol()$/;"	f
s:suite.JavaSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.JavaSymbol()$/;"	f
s:suite.JsonSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.JsonSymbol()$/;"	f
s:suite.LicenseSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.LicenseSymbol()$/;"	f
s:suite.Logger	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.Logger() abort$/;"	f
s:suite.LuaSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.LuaSymbol()$/;"	f
s:suite.MacIcon	plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.MacIcon()$/;"	f
s:suite.MarkdownSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.MarkdownSymbol()$/;"	f
s:suite.NodeModuleSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.NodeModuleSymbol()$/;"	f
s:suite.PhpSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.PhpSymbol()$/;"	f
s:suite.PythonSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.PythonSymbol()$/;"	f
s:suite.RSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.RSymbol()$/;"	f
s:suite.ReactSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ReactSymbol()$/;"	f
s:suite.RssSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.RssSymbol()$/;"	f
s:suite.RubySymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.RubySymbol()$/;"	f
s:suite.RustSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.RustSymbol()$/;"	f
s:suite.ScalaSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ScalaSymbol()$/;"	f
s:suite.ShellSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.ShellSymbol()$/;"	f
s:suite.SwiftSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.SwiftSymbol()$/;"	f
s:suite.TexSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.TexSymbol()$/;"	f
s:suite.TypeScript	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.TypeScript()$/;"	f
s:suite.UpdateParentDirsStatus	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.UpdateParentDirsStatus() abort$/;"	f
s:suite.VimSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.VimSymbol()$/;"	f
s:suite.VueSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suite.VueSymbol()$/;"	f
s:suite.WindowsIcon	plugged/vim-devicons/test/fileformat.vim	/^function! s:suite.WindowsIcon()$/;"	f
s:suitePerlSymbol	plugged/vim-devicons/test/filetype.vim	/^function! s:suitePerlSymbol()$/;"	f
s:support_json_format	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^let s:support_json_format =$/;"	v
s:supported	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:supported = [$/;"	v
s:supported	plugged/vim-polyglot/syntax/debsources.vim	/^let s:supported = [$/;"	v
s:supports_sign_groups	plugged/ale/autoload/ale/sign.vim	/^let s:supports_sign_groups = has('nvim-0.4.2') || has('patch-8.1.614')$/;"	v
s:sw	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^  function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/caddyfile.vim	/^	function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/crystal.vim	/^  function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/crystal.vim	/^  let s:sw = function('shiftwidth')$/;"	v
s:sw	plugged/vim-polyglot/indent/cython.vim	/^    function! s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/ecrystal.vim	/^  function s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/ecrystal.vim	/^  let s:sw = function('shiftwidth')$/;"	v
s:sw	plugged/vim-polyglot/indent/javascript.vim	/^  function s:sw()$/;"	f
s:sw	plugged/vim-polyglot/indent/python.vim	/^    function! s:sw()$/;"	f
s:switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:symbol	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:symbol_kind	plugged/vista.vim/autoload/vista/parser/lsp.vim	/^let s:symbol_kind = {$/;"	v
s:symbol_map	plugged/ale/autoload/ale/symbol.vim	/^let s:symbol_map = {}$/;"	v
s:symchar	plugged/vim-polyglot/syntax/fennel.vim	/^let s:symchar = '0-9' . s:symcharnodig$/;"	v
s:symcharnodig	plugged/vim-polyglot/syntax/fennel.vim	/^let s:symcharnodig = '\\!\\$%\\&\\#\\*\\+\\-.\/:<=>?A-Z^_a-z|\\x80-\\U10FFFF'$/;"	v
s:syn	plugged/vim-polyglot/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
s:syn_blocks	plugged/vim-polyglot/indent/hog.vim	/^let s:syn_blocks = '\\<SnortRuleTypeBody\\>'$/;"	v
s:syn_contains	plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! s:syn_contains(lnum, cnum, syn_name)$/;"	f
s:syn_id_name	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:syn_id_name()$/;"	f
s:syn_id_name	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:syn_id_name()$/;"	f
s:syn_name	plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! s:syn_name(lnum, cnum)$/;"	f
s:syng_linecom	plugged/vim-polyglot/autoload/yats.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_linecom	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	plugged/vim-polyglot/autoload/yats.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_multiline	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/falcon.vim	/^let s:syng_strcom = '\\<falcon\\%(String\\|StringEscape\\|Comment\\)\\>'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_strcom = s:syng_stringdoc + [$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	plugged/vim-polyglot/indent/falcon.vim	/^let s:syng_string = '\\<falcon\\%(String\\|StringEscape\\)\\>'$/;"	v
s:syng_string	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_string	plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_stringdoc	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_stringdoc = s:syng_string + ['Documentation']$/;"	v
s:synid	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:synid() abort$/;"	f
s:syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
s:syntax_at	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_at(lnum, col)$/;"	f
s:syntax_context	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_context(lnum)$/;"	f
s:syntax_keyword	plugged/vim-polyglot/syntax/clojure.vim	/^function! s:syntax_keyword(dict)$/;"	f
s:syntax_name	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:syntax_name(line, col)$/;"	f
s:syntax_stack_at	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_stack_at(lnum, col)$/;"	f
s:system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system	plugged/vim-polyglot/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f
s:system	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:system(str, ...) abort$/;"	f
s:system	plugged/vim-polyglot/autoload/zig/util.vim	/^function! s:system(cmd, ...) abort$/;"	f
s:system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:system_in_dir	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:system_in_dir(cmd) abort$/;"	f
s:tab_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tabline_evaluated_length	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:tabline_evaluated_length(tabline)$/;"	f
s:taboo	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:tabws	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tabws = get(g:, 'tabws_loaded', 0)$/;"	v
s:tag	plugged/vim-polyglot/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-polyglot/indent/pug.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-polyglot/indent/slim.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-polyglot/indent/slime.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tagname	plugged/vim-polyglot/indent/html.vim	/^let s:tagname = '\\w\\+\\(-\\w\\+\\)*'$/;"	v
s:tags	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:tags	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:tags = get(g:, 'vim_jsx_pretty_template_tags', ['html', 'jsx'])$/;"	v
s:tags	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:take_while	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
s:temp	plugged/vim-polyglot/syntax/raku.vim	/^    let s:temp = split(s:words_space)$/;"	v
s:temp	plugged/vim-polyglot/syntax/raku.vim	/^let s:temp = split(s:words_space)$/;"	v
s:temp_dir	plugged/ale/autoload/ale/handlers/haskell.vim	/^let s:temp_dir = fnamemodify(ale#util#Tempname(), ':h')$/;"	v
s:temp_dir	plugged/ale/autoload/ale/path.vim	/^let s:temp_dir = ale#path#Simplify(fnamemodify(ale#util#Tempname(), ':h:h'))$/;"	v
s:temp_files	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_regex_prefix	plugged/ale/autoload/ale/handlers/haskell.vim	/^let s:temp_regex_prefix =$/;"	v
s:temp_scripts	plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_scripts = {}$/;"	v
s:template_sink	plugged/vim-polyglot/autoload/fzf_gitignore.vim	/^function! s:template_sink(templates) abort$/;"	f
s:term_black	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_black = s:colors.black.cterm$/;"	v
s:term_black	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_black = s:colors.black.cterm16$/;"	v
s:term_blue	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_blue = s:colors.blue.cterm$/;"	v
s:term_blue	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_blue = s:colors.blue.cterm16$/;"	v
s:term_green	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_green = s:colors.green.cterm$/;"	v
s:term_green	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_green = s:colors.green.cterm16$/;"	v
s:term_grey	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_grey = s:colors.cursor_grey.cterm$/;"	v
s:term_grey	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_grey = s:colors.cursor_grey.cterm16$/;"	v
s:term_purple	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_purple = s:colors.purple.cterm$/;"	v
s:term_purple	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_purple = s:colors.purple.cterm16$/;"	v
s:term_red	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_red = s:colors.red.cterm$/;"	v
s:term_red	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_red = s:colors.red.cterm16$/;"	v
s:term_white	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_white = s:colors.white.cterm$/;"	v
s:term_white	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_white = s:colors.white.cterm16$/;"	v
s:term_yellow	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_yellow = s:colors.yellow.cterm$/;"	v
s:term_yellow	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^  let s:term_yellow = s:colors.yellow.cterm16$/;"	v
s:termname	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:termname(bufnr) abort$/;"	f
s:ternary	plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary	plugged/vim-polyglot/indent/typescript.vim	/^let s:ternary = '^\\s\\+[?:]'$/;"	v
s:ternary_q	plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:ternary_q	plugged/vim-polyglot/indent/typescript.vim	/^let s:ternary_q = '^\\s\\+?[.?]\\@!'$/;"	v
s:test	plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	plugged/vim-polyglot/indent/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	plugged/vim-polyglot/syntax/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:texMathDelimList	plugged/vim-polyglot/syntax/tex.vim	/^    let s:texMathDelimList= s:texMathDelimList + [$/;"	v
s:texMathDelimList	plugged/vim-polyglot/syntax/tex.vim	/^  let s:texMathDelimList=[$/;"	v
s:texMathList	plugged/vim-polyglot/syntax/tex.vim	/^    let s:texMathList= s:texMathList + [$/;"	v
s:texMathList	plugged/vim-polyglot/syntax/tex.vim	/^  let s:texMathList=[$/;"	v
s:tex_comment_nospell	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_comment_nospell= 0$/;"	v
s:tex_comment_nospell	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_comment_nospell= 1$/;"	v
s:tex_conceal	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_conceal= 'abdmgsS'$/;"	v
s:tex_conceal	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_conceal= g:tex_conceal$/;"	v
s:tex_excludematcher	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_excludematcher= 0$/;"	v
s:tex_excludematcher	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_excludematcher= g:tex_excludematcher$/;"	v
s:tex_fast	plugged/vim-polyglot/syntax/tex.vim	/^  let s:tex_fast= ""$/;"	v
s:tex_fast	plugged/vim-polyglot/syntax/tex.vim	/^  let s:tex_fast= g:tex_fast$/;"	v
s:tex_fast	plugged/vim-polyglot/syntax/tex.vim	/^let s:tex_fast= "bcmMprsSvV"$/;"	v
s:tex_fold_enabled	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_fold_enabled= 0$/;"	v
s:tex_fold_enabled	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_fold_enabled= 1$/;"	v
s:tex_matchcheck	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_matchcheck= '[({[]'$/;"	v
s:tex_matchcheck	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_matchcheck= g:tex_matchcheck$/;"	v
s:tex_no_error	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_no_error= 0$/;"	v
s:tex_no_error	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_no_error= 1$/;"	v
s:tex_nospell	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_nospell = 0$/;"	v
s:tex_nospell	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_nospell = 1$/;"	v
s:tex_subscripts	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_subscripts= '[0-9aehijklmnoprstuvx,+-\/().]'$/;"	v
s:tex_subscripts	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_subscripts= g:tex_subscripts$/;"	v
s:tex_superscripts	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_superscripts= '[0-9a-zA-W.,:;+-<>\/()=]'$/;"	v
s:tex_superscripts	plugged/vim-polyglot/syntax/tex.vim	/^ let s:tex_superscripts= g:tex_superscripts$/;"	v
s:throw	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
s:tick	autoload/plug.vim	/^function! s:tick()$/;"	f
s:timer_args	plugged/ale/autoload/ale/list.vim	/^    let s:timer_args = {}$/;"	v
s:timer_id	plugged/ale/autoload/ale/completion.vim	/^let s:timer_id = -1$/;"	v
s:tmp	plugged/vim-polyglot/scripts/eregex.vim	/^let s:tmp=matchstr("$Revision: 2.60 $", '[0-9.]\\+')$/;"	v
s:tmuxline_snapshot_file	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:toc_supported	plugged/vista.vim/autoload/vista/toc.vim	/^let s:toc_supported = ['markdown', 'rst', 'vimwiki', 'pandoc', 'apiblueprint']$/;"	v
s:toend	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:toend(direction)$/;"	f
s:toggleFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:toggleFold(fileinfo) abort dict$/;"	f
s:toggleIgnoreFilter	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter() abort$/;"	f
s:toggleShowBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks() abort$/;"	f
s:toggleShowFiles	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles() abort$/;"	f
s:toggleShowHidden	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden() abort$/;"	f
s:toggleZoom	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom() abort$/;"	f
s:toggle_off	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
s:toggle_on	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
s:token_pattern	plugged/vim-polyglot/indent/dtd.vim	/^let s:token_pattern = '^[^[:space:]]\\+'$/;"	v
s:topLev	plugged/vim-polyglot/after/indent/objc.vim	/^let s:topLev = '^\\s*@\\%(class\\|end\\|implementation\\|interface\\|protocol\\|\\)\\>'$/;"	v
s:topindent	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function s:topindent(lnum)$/;"	f
s:transaction	plugged/vim-polyglot/autoload/ledger.vim	/^let s:transaction = {} "{{{1$/;"	v
s:transaction.format_head	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.format_head() abort dict "{{{2$/;"	f
s:transaction.from_lnum	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.from_lnum(lnum) abort dict "{{{2$/;"	f
s:transaction.new	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.new() abort dict$/;"	f
s:transaction.parse_body	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.parse_body(...) abort dict "{{{2$/;"	f
s:transaction.set_state	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.set_state(char) abort dict "{{{2$/;"	f
s:tree_up_dir_line	plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trees	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:trigger_character_map	plugged/ale/autoload/ale/completion.vim	/^let s:trigger_character_map = {$/;"	v
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:trim	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:trim(line)$/;"	f
s:trim	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim(str) abort$/;"	f
s:trim_end	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
s:trim_start	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
s:truncate	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
s:truncate_skipping	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
s:try_rnotify	plugged/ncm2/autoload/ncm2.vim	/^func! s:try_rnotify(event, ...)$/;"	f
s:type	plugged/vim-polyglot/indent/ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:type	plugged/vim-polyglot/indent/sml.vim	/^let s:type = '^\\s*\\%(let\\|type\\)\\>.*='$/;"	v
s:typeKeywordIncPattern	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:typeKeywordIncPattern() abort$/;"	f
s:typeSpecMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters = {}$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.BOOL]    = { bol -> bol ? 'v:true' : 'v:false' }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.DICT]    = { dct -> s:prettifyDict(dct, '  \\ ', 0, '  ') }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.FLOAT]   = { flt -> string(flt) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.FUNCREF] = { fn  -> string(fn) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.LIST]    = { lst -> s:prettifyList(lst, '  \\ ', 0, '  ') }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.NULL]    = { nul -> string(nul) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.NUMBER]  = { nbr -> string(nbr) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.STRING]  = { str -> printf("'%s'", str) }$/;"	v
s:type_init_done	plugged/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:type_list	plugged/LeaderF/autoload/leaderf/Rg.vim	/^let s:type_list = []$/;"	v
s:types	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:types = {$/;"	v
s:types	plugged/vim-polyglot/syntax/raku.vim	/^let s:types = [$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.lang = 'ada'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ada.vim	/^let s:types.sro = '.' " Not sure if possible$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ant.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ant.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ant.vim	/^let s:types.lang = 'ant'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/asm.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/asm.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/asm.vim	/^let s:types.lang = 'asm'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/aspvbs.vim	/^let s:types.lang = 'asp'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.lang = 'c'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/asy.vim	/^let s:types.sro = '::'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/automake.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/automake.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/automake.vim	/^let s:types.lang = 'automake'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/awk.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/awk.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/awk.vim	/^let s:types.lang = 'awk'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/basic.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/basic.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/basic.vim	/^let s:types.lang = 'basic'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/beta.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/beta.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/beta.vim	/^let s:types.lang = 'beta'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.lang = 'c'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/c.vim	/^let s:types.sro = '::'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.lang = 'clojure'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/clojure.vim	/^let s:types.sro = '.'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cobol.vim	/^let s:types.lang = 'cobol'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/config.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/config.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/config.vim	/^let s:types.lang = 'autoconf'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.lang = 'c++'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cpp.vim	/^let s:types.sro = '::'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.lang = 'c#'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/cs.vim	/^let s:types.sro = '.'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/css.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/css.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/css.vim	/^let s:types.lang = 'css'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.lang = 'ctags'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ctags.vim	/^let s:types.sro = '.' " Not actually possible$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.lang = 'D'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/d.vim	/^let s:types.sro = '.'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/dosbatch.vim	/^let s:types.lang = 'dosbatch'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.lang = 'eiffel'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/eiffel.vim	/^let s:types.sro = '.' " Not sure, is nesting even possible?$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.lang = 'elm'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/elm.vim	/^let s:types.sro = ':'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.lang = 'erlang'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/erlang.vim	/^let s:types.sro        = '.' " Not sure, is nesting even possible?$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.lang = 'fortran'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/fortran.vim	/^let s:types.sro = '.' " Not sure, is nesting even possible?$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/html.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/html.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/html.vim	/^let s:types.lang = 'html'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.lang = 'java'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/java.vim	/^let s:types.sro = '.'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.lang = 'javascript'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/javascript.vim	/^let s:types.sro        = '.'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/lisp.vim	/^let s:types.lang = 'lisp'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/lua.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/lua.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/lua.vim	/^let s:types.lang = 'lua'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/make.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/make.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/make.vim	/^let s:types.lang = 'make'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/matlab.vim	/^let s:types.lang = 'matlab'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.lang = 'flex'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/mxml.vim	/^let s:types.sro        = '.'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.lang = 'objectivec'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/objc.vim	/^let s:types.sro = ':'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.lang = 'ocaml'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ocaml.vim	/^let s:types.sro = '.' " Not sure, is nesting even possible?$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/pascal.vim	/^let s:types.lang = 'pascal'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/perl.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/perl.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/perl.vim	/^let s:types.lang = 'perl'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.lang = 'php'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/php.vim	/^let s:types.sro = '\\\\'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/proto.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/proto.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/proto.vim	/^let s:types.lang = 'Protobuf'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.kinds     = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.lang = 'python'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/python.vim	/^let s:types.sro        = '.'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/r.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/r.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/r.vim	/^let s:types.lang = 'R'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let s:types.kinds     = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/rexx.vim	/^let s:types.lang = 'rexx'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.lang = 'ruby'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/ruby.vim	/^let s:types.sro = '.'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.lang = 'rust'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/rust.vim	/^let s:types.sro = '::'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/scheme.vim	/^let s:types.lang = 'scheme'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/sh.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/sh.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/sh.vim	/^let s:types.lang = 'sh'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/slang.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/slang.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/slang.vim	/^let s:types.lang = 'slang'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/sml.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/sml.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/sml.vim	/^let s:types.lang = 'sml'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/sql.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/sql.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/sql.vim	/^let s:types.lang = 'sql'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tcl.vim	/^let s:types.lang = 'tcl'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.lang = 'tex'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.sort = 0$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/tex.vim	/^let s:types.sro = '""'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.lang = 'vala'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vala.vim	/^let s:types.sro = '.'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.kind2scope = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.lang = 'vera'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.scope2kind = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vera.vim	/^let s:types.sro        = '.' " Nesting doesn't seem to be possible$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/verilog.vim	/^let s:types.lang = 'verilog'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vhdl.vim	/^let s:types.lang = 'vhdl'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vim.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vim.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/vim.vim	/^let s:types.lang = 'vim'$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let s:types = {}$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let s:types.kinds = {$/;"	v
s:types	plugged/vista.vim/autoload/vista/types/uctags/yacc.vim	/^let s:types.lang = 'yacc'$/;"	v
s:types6	plugged/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let s:types6 = {}$/;"	v
s:types6	plugged/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let s:types6.kinds = {$/;"	v
s:types6	plugged/vista.vim/autoload/vista/types/uctags/perl6.vim	/^let s:types6.lang = 'perl6'$/;"	v
s:undercurl	plugged/gruvbox/colors/gruvbox.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	plugged/gruvbox/colors/gruvbox.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:underline	plugged/gruvbox/colors/gruvbox.vim	/^  let s:underline = ''$/;"	v
s:underline	plugged/gruvbox/colors/gruvbox.vim	/^let s:underline = 'underline,'$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . ' | ' . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:undo_ftplugin = ''$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/embeddedpuppet.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/hog.vim	/^let s:undo_ftplugin = "setl fo< com< cms< def< inc<"$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_hunk	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:undo_hunk(sy, vcs, diff) abort$/;"	f
s:undo_spelllang	plugged/vim-polyglot/extras/menu.vim	/^  let s:undo_spelllang = ['aun &Tools.&Spelling.&Find\\ More\\ Languages']$/;"	v
s:unescape	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
s:unescape_pattern	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
s:unfnameescape	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:unfnameescape(str) abort$/;"	f
s:unformat_ocaml_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function s:unformat_ocaml_type(res)$/;"	f
s:uniop_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:uniop_chars = "+\\\\U2D~¬√∛∜"$/;"	v
s:uniop_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:uniop_chars = "+\\\\U2D~¬√∛∜⋆"$/;"	v
s:uniq	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
s:uniq_by	plugged/neco-vim/autoload/necovim/helper.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:uniq_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
s:unite_source.action_table.expand.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate) abort$/;"	f
s:unite_source.action_table.preview.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate) abort$/;"	f
s:unite_source.gather_candidates	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context) abort$/;"	f
s:unite_source.get_longest_snippet_len	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list) abort$/;"	f
s:unite_source.hooks.on_syntax	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unload	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:unload() abort dict$/;"	f
s:unmap	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:unmap(function)$/;"	f
s:unmerged_status	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^let s:unmerged_status = {$/;"	v
s:unshift	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
s:unsupported	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:unsupported = [$/;"	v
s:unsupported	plugged/vim-polyglot/syntax/debsources.vim	/^let s:unsupported = [$/;"	v
s:untracked_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:untracked_jobs = {}$/;"	v
s:untracked_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:untracked_output(dict, buf)$/;"	f
s:upDirCurrentRootClosed	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed() abort$/;"	f
s:upDirCurrentRootOpen	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen() abort$/;"	f
s:update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
s:update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch()$/;"	f
s:update_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch()$/;"	f
s:update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:update_tabline(forceit)$/;"	f
s:update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:update_timer	plugged/vista.vim/autoload/vista/autocmd.vim	/^let s:update_timer = -1$/;"	v
s:update_untracked	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
s:update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:update_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:update_wordcount(force_update)$/;"	f
s:upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:urgency	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:urgency='urgency=\\(low\\|medium\\|high\\|emergency\\|critical\\)\\( [^[:space:],][^,]*\\)/;"	v
s:use_popup	plugged/vim-which-key/autoload/which_key/window.vim	/^let s:use_popup = exists('*popup_create') && g:which_key_use_floating_win$/;"	v
s:val	plugged/vim-polyglot/indent/sml.vim	/^let s:val = '^\\s*\\(val\\|external\\)\\>.*:'$/;"	v
s:valMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:valMatcher = '\\%(' . s:modifierMatcher . '\\|lazy\\s\\+\\)*\\<va[lr]\\>'$/;"	v
s:vala_cpo_save	plugged/vim-polyglot/syntax/vala.vim	/^let s:vala_cpo_save = &cpo$/;"	v
s:valid_dir	plugged/vim-airline/autoload/airline/async.vim	/^function! s:valid_dir(dir)$/;"	f
s:var	plugged/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(%\\|#<\\=\\d\\+\\|##\\=\\)'$/;"	v
s:var_stmt	plugged/vim-polyglot/indent/solidity.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:var_stmt	plugged/vim-polyglot/indent/typescript.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:vcs_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
s:vcs_dict	plugged/vim-signify/autoload/sy/repo.vim	/^let s:vcs_dict = map(copy(g:signify_vcs_cmds), 'split(v:val)[0]')$/;"	v
s:vcs_list	plugged/vim-signify/autoload/sy/repo.vim	/^    let s:vcs_list = filter(copy(g:signify_skip.vcs.allow), 'executable(s:vcs_dict[v:val])')$/;"	v
s:vcs_list	plugged/vim-signify/autoload/sy/repo.vim	/^    let s:vcs_list = keys(filter(s:vcs_dict, 'executable(v:val)'))$/;"	v
s:vcs_list	plugged/vim-signify/autoload/sy/repo.vim	/^  let s:vcs_list = keys(filter(s:vcs_dict, 'executable(v:val)'))$/;"	v
s:version	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:version = '0.11.0'$/;"	v
s:version	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:version() abort$/;"	f
s:version	plugged/vim-polyglot/scripts/eregex.vim	/^let s:version = s:maj + s:min$/;"	v
s:version_cache	plugged/ale/ale_linters/java/eclipselsp.vim	/^let s:version_cache = {}$/;"	v
s:version_cache	plugged/ale/autoload/ale/semver.vim	/^let s:version_cache = {}$/;"	v
s:version_file	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:vert_split	plugged/gruvbox/colors/gruvbox.vim	/^  let s:vert_split = get(s:gb, g:gruvbox_vert_split)$/;"	v
s:vert_split	plugged/gruvbox/colors/gruvbox.vim	/^let s:vert_split = s:bg0$/;"	v
s:vertsplit	plugged/onedark.vim/colors/onedark.vim	/^let s:vertsplit = s:colors.vertsplit$/;"	v
s:viewer	plugged/vista.vim/autoload/vista/renderer/kind.vim	/^let s:viewer = {}$/;"	v
s:viewer.init	plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:viewer.init(data) abort$/;"	f
s:viewer.render	plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! s:viewer.render() abort$/;"	f
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim8	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vimReturnFocus	plugged/vim-polyglot/autoload/fsharp.vim	/^    function! s:vimReturnFocus(window)$/;"	f
s:vim_bg	plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_create_context	plugged/vim-quickui/autoload/quickui/context.vim	/^function! s:vim_create_context(textlist, opts)$/;"	f
s:vim_create_listbox	plugged/vim-quickui/autoload/quickui/listbox.vim	/^function! s:vim_create_listbox(textlist, opts)$/;"	f
s:vim_create_textbox	plugged/vim-quickui/autoload/quickui/textbox.vim	/^function! s:vim_create_textbox(textlist, opts)$/;"	f
s:vim_fg	plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_jsx_pretty_colorful_config	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:vim_jsx_pretty_colorful_config = get(g:, 'vim_jsx_pretty_colorful_config', 0)$/;"	v
s:vim_popup_callback	plugged/vim-quickui/autoload/quickui/terminal.vim	/^function! s:vim_popup_callback(winid, code)$/;"	f
s:vim_quitting	plugged/tagbar/autoload/tagbar.vim	/^let s:vim_quitting = 0$/;"	v
s:vim_term_exit	plugged/vim-quickui/autoload/quickui/terminal.vim	/^function! s:vim_term_exit(job, message)$/;"	f
s:visibility_icon	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^let s:visibility_icon = {$/;"	v
s:visibility_icon	plugged/vista.vim/autoload/vista/renderer/line.vim	/^let s:visibility_icon = {$/;"	v
s:visibility_symbols	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^    let s:visibility_symbols = g:tagbar_visibility_symbols$/;"	v
s:visibility_symbols	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^let s:visibility_symbols = {$/;"	v
s:vista_cache_dir	plugged/vista.vim/autoload/vista/util.vim	/^let s:vista_cache_dir = s:cache_dir.'vista'.s:path_separator$/;"	v
s:visual_black	plugged/onedark.vim/colors/onedark.vim	/^let s:visual_black = s:colors.visual_black " Black out selected text in 16-color visual mode$/;"	v
s:visual_grey	plugged/onedark.vim/colors/onedark.vim	/^let s:visual_grey = s:colors.visual_grey$/;"	v
s:vital_base_dir	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:vital_files() abort$/;"	f
s:wait_with_timeout	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! s:wait_with_timeout(timeout) abort$/;"	f
s:warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:warn	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:warn(...) abort$/;"	f
s:warning	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:warning = 2 | :lockvar s:warning$/;"	v
s:warning	plugged/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
s:warning_message	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:warning_message(msg) abort$/;"	f
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#coc#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#languageclient#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#syntastic#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
s:warnings	plugged/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
s:wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:when_no_matched_or_others	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:when_no_matched_or_others = '\\%(\\<when\\>\\%(\\s\\+\\%(\\%(\\<not\\>\\s\\+\\)\\?<matched/;"	v
s:white	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:white = [ s:colors.white.gui, s:term_white ]$/;"	v
s:white	plugged/onedark.vim/colors/onedark.vim	/^let s:white = s:colors.white$/;"	v
s:white	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:white    = g:dracula#palette.fg$/;"	v
s:wildignores_options_path	plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:win_close_float	plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:win_close_float() abort$/;"	f
s:win_close_preview	plugged/vim-translator/autoload/translator/window/preview.vim	/^function! s:win_close_preview() abort$/;"	f
s:win_execute	plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:win_execute(winid, command) abort$/;"	f
s:win_exists	plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:win_exists(winid) abort$/;"	f
s:win_exists	plugged/vim-translator/autoload/translator/window/preview.vim	/^function! s:win_exists(winid) abort$/;"	f
s:win_getoptions	plugged/vim-translator/autoload/translator/window.vim	/^function! s:win_getoptions(width, height) abort$/;"	f
s:win_getsize	plugged/vim-translator/autoload/translator/window.vim	/^function! s:win_getsize(translation, max_width, max_height) abort$/;"	f
s:win_gettype	plugged/vim-translator/autoload/translator/window.vim	/^function! s:win_gettype() abort$/;"	f
s:win_gotoid_safe	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:win_gotoid_safe(winid)$/;"	f
s:win_sep	plugged/vim-polyglot/ftplugin/dart.vim	/^let s:win_sep = (has('win32') || has('win64')) ? '\/' : ''$/;"	v
s:win_setview	plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:win_setview(winid, topline, lnum) abort$/;"	f
s:window_expanded	plugged/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	plugged/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winid	plugged/vim-translator/autoload/translator/window/float.vim	/^let s:winid = -1$/;"	v
s:winid	plugged/vim-translator/autoload/translator/window/preview.vim	/^let s:winid = -1$/;"	v
s:winnr	plugged/vim-which-key/autoload/which_key/window.vim	/^let s:winnr = -1$/;"	v
s:winpos_map	plugged/vim-polyglot/autoload/ledger.vim	/^let s:winpos_map = {$/;"	v
s:winrestcmd	plugged/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:winshell	plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
s:wintype	plugged/vim-translator/autoload/translator/window.vim	/^let s:wintype = s:win_gettype()$/;"	v
s:with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
s:with_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
s:word_regex_list	plugged/ale/ale_linters/vim/vint.vim	/^let s:word_regex_list = [$/;"	v
s:wordcount_cache	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:wordcount_cache = 0  " cache wordcount for performance when force_update=0$/;"	v
s:words	plugged/vim-polyglot/autoload/clojurecomplete.vim	/^let s:words = ["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-/;"	v
s:words	plugged/vim-polyglot/syntax/raku.vim	/^    let s:words = join(s:temp, "\\\\|")$/;"	v
s:words	plugged/vim-polyglot/syntax/raku.vim	/^let s:words = join(s:temp, "\\\\|")$/;"	v
s:words_space	plugged/vim-polyglot/syntax/raku.vim	/^    let s:words_space = join(s:words_list, " ")$/;"	v
s:words_space	plugged/vim-polyglot/syntax/raku.vim	/^let s:words_space = join(s:alpha_metaops, " ")$/;"	v
s:words_space	plugged/vim-polyglot/syntax/raku.vim	/^let s:words_space = join(s:types, " ")$/;"	v
s:workspace	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:workspace = []$/;"	v
s:workspaceLoad	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:workspaceLoad(files, cont)$/;"	f
s:workspacePeek	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:workspacePeek(directory, depth, excludedDirs, cont)$/;"	f
s:worktree_for_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:wrap	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
s:wrap_a	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f
s:wrap_accent	plugged/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
s:wrap_around	plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:wrap_around()$/;"	f
s:wrap_cmd	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:wrap_cmd(bufnr, vcs, cmd) abort$/;"	f
s:wrap_cmds	autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:wrap_i	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f
s:wrap_inside	plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:wrap_inside()$/;"	f
s:write_buffer	plugged/vim-signify/autoload/sy/repo.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
s:write_to_preview_window	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:write_to_preview_window(content, ftype, buffername)$/;"	f
s:write_triggered_update_tags	plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:ws_refresh	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
s:wsh_cpo_save	plugged/vim-polyglot/syntax/wsh.vim	/^let s:wsh_cpo_save = &cpo$/;"	v
s:xml_cpo_save	plugged/vim-polyglot/syntax/xml.vim	/^let s:xml_cpo_save = &cpo$/;"	v
s:xterm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:xterm_escape_template = '\\033]12;%s\\007'$/;"	v
s:yamlKey	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = "yamlBlockMappingKey"$/;"	v
s:yamlKey	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = g:ansible_yamlKeyName$/;"	v
s:yellow	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:yellow = s:getGruvColor('GruvboxYellow')$/;"	v
s:yellow	plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.faded_yellow$/;"	v
s:yellow	plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow[1] = 11$/;"	v
s:yellow	plugged/onedark.vim/autoload/lightline/colorscheme/onedark.vim	/^let s:yellow = [ s:colors.yellow.gui, s:term_yellow ]$/;"	v
s:yellow	plugged/onedark.vim/colors/onedark.vim	/^let s:yellow = s:colors.yellow$/;"	v
s:yellow	plugged/vim/autoload/lightline/colorscheme/dracula.vim	/^let s:yellow   = g:dracula#palette.yellow$/;"	v
s:yellow	plugged/vim/colors/dracula.vim	/^let s:yellow    = g:dracula#palette.yellow$/;"	v
s:yesmacro	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:yesmacro = s:nomacro . '\\%('. s:macro_regex . '\\)\\+'$/;"	v
s:z	plugged/vim-polyglot/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
s:zip	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip(...) abort$/;"	f
s:zip_fill	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
s:zoomwintab_status_zoomed_in	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_in =$/;"	v
s:zoomwintab_status_zoomed_out	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_out =$/;"	v
safe-buffer	plugged/onedark.vim/build/package-lock.json	/^        "safe-buffer": "~5.2.0"$/;"	s	object:dependencies.string_decoder.requires
safe-buffer	plugged/onedark.vim/build/package-lock.json	/^    "safe-buffer": {$/;"	o	object:dependencies
saveToCache	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^    def saveToCache(self, buf_name_list):$/;"	m	class:Mru
save_mark	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def save_mark(name):$/;"	f
scala	plugged/vim-polyglot/ctags/scala.ctags	/^--langdef=scala$/;"	l
scala#ConditionalConfirm	plugged/vim-polyglot/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f
scala#CountBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f
scala#CountCurlies	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f
scala#CountParens	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f
scala#CurlyMatcher	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f
scala#GetDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetDirForFuzzyFinder(from, addon)$/;"	f
scala#GetLine	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f
scala#GetLineAndColumnThatMatchesBracket	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineAndColumnThatMatchesCurly	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f
scala#GetLineAndColumnThatMatchesParen	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f
scala#GetLineThatMatchesBracket	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineThatMatchesCurly	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f
scala#GetLineThatMatchesParen	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f
scala#GetMainDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetMainDirForFuzzyFinder(from)$/;"	f
scala#GetPrevCodeLine	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f
scala#GetRootDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetRootDirForFuzzyFinder(from)$/;"	f
scala#GetTestDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetTestDirForFuzzyFinder(from)$/;"	f
scala#InvertBracketType	plugged/vim-polyglot/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f
scala#IsParentCase	plugged/vim-polyglot/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f
scala#LineCompletesBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f
scala#LineCompletesDefValr	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f
scala#LineCompletesIfElse	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f
scala#LineCompletesXML	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f
scala#LineEndsInIncomplete	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f
scala#LineIsAClosingXML	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f
scala#LineIsCompleteIf	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f
scala#MatchesIncompleteDefValr	plugged/vim-polyglot/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f
scala#NumberOfBraceGroups	plugged/vim-polyglot/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f
scala#SanitizeDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#SanitizeDirForFuzzyFinder(dir)$/;"	f
scala#SpecificLineCompletesBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f
scala#Test	plugged/vim-polyglot/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f
scala#Testhelper	plugged/vim-polyglot/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f
score	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    float score;$/;"	m	struct:ValueElements	typeref:typename:float	file:
score	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.h	/^    float score;$/;"	m	struct:HighlightGroup	typeref:typename:float
screen shot (if possible)	plugged/vim-airline/.github/ISSUE_TEMPLATE.md	/^#### screen shot (if possible)$/;"	t
script_path	plugged/vim-translator/test/test_translator.py	/^script_path = os.path.join(curr_dir, "..\/script")$/;"	v
scripts	plugged/onedark.vim/build/package.json	/^  "scripts": {$/;"	o
second	plugged/LeaderF/install.bat	/^:second$/;"	l
sed_delimiter	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_delimiter = escape(nr2char(__sed_i), __sed_metacharacters)$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_i = __sed_i + 1$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_i = __sed_i + 1$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_last	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_last = 126$/;"	v
sed_last	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_last = 255$/;"	v
sed_metacharacters	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_metacharacters = '$*.\\^[~'$/;"	v
select	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def select(start, end):$/;"	f
selectAll	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def selectAll(self):$/;"	m	class:Manager
selectMulti	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def selectMulti(self):$/;"	m	class:Manager
select_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def select_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
selfExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/selfExpl.py	/^selfExplManager = SelfExplManager()$/;"	v
semi	plugged/onedark.vim/build/.eslintrc.json	/^        "semi": [$/;"	a	object:rules
semi	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def semi(snip):$/;"	f
semver	plugged/onedark.vim/build/package-lock.json	/^        "semver": "^7.2.1",$/;"	s	object:dependencies.eslint.requires
semver	plugged/onedark.vim/build/package-lock.json	/^    "semver": {$/;"	o	object:dependencies
semver-compare	plugged/onedark.vim/build/package-lock.json	/^        "semver-compare": "^1.0.0"$/;"	s	object:dependencies.please-upgrade-node.requires
semver-compare	plugged/onedark.vim/build/package-lock.json	/^    "semver-compare": {$/;"	o	object:dependencies
semver-regex	plugged/onedark.vim/build/package-lock.json	/^        "semver-regex": "^2.0.0"$/;"	s	object:dependencies.find-versions.requires
semver-regex	plugged/onedark.vim/build/package-lock.json	/^    "semver-regex": {$/;"	o	object:dependencies
send	plugged/ultisnips/test/vim_interface.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterface
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterface
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmuxNeovim
separator	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    const char* separator;$/;"	m	struct:RgParameter	typeref:typename:const char *	file:
separator_len	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t separator_len;$/;"	m	struct:RgParameter	typeref:typename:uint32_t	file:
serveraddr	plugged/nvim-yarp/pythonx/yarp.py	/^        serveraddr, port = serveraddr.split(':')$/;"	v
serveraddr	plugged/nvim-yarp/pythonx/yarp.py	/^serveraddr = sys.argv[1]$/;"	v
set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
setAmbiwidth	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def setAmbiwidth(val):$/;"	f
setArguments	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def setArguments(self, arguments):$/;"	m	class:GtagsExplManager
setArguments	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setArguments(self, arguments):$/;"	m	class:LfInstance
setArguments	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def setArguments(self, arguments):$/;"	m	class:Manager
setArguments	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def setArguments(self, arguments):$/;"	m	class:RgExplManager
setBuffer	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setBuffer(self, content, need_copy=False):$/;"	m	class:LfInstance
setBufferTimestamp	plugged/LeaderF/autoload/leaderf/python/leaderf/mru.py	/^    def setBufferTimestamp(self, buf_number):$/;"	m	class:Mru
setConfig	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def setConfig(self, category, config):$/;"	m	class:AnyExplorer
setContent	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^    def setContent(self, content):$/;"	m	class:Explorer
setContent	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer3.py	/^    def setContent(self, content):$/;"	m	class:Explorer
setContent	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def setContent(self, content):$/;"	m	class:FileExplorer
setContent	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def setContent(self, content):$/;"	m	class:GtagsExplorer
setCurrentMode	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def setCurrentMode(self, mode):$/;"	m	class:LfCli
setCwd	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setCwd(self, cwd):$/;"	m	class:LfInstance
setInstance	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def setInstance(self, instance):$/;"	m	class:LfCli
setLineNumber	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setLineNumber(self):$/;"	m	class:LfInstance
setNameOnlyFeature	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def setNameOnlyFeature(self, state):$/;"	m	class:LfCli
setPattern	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def setPattern(self, pattern):$/;"	m	class:LfCli
setPopupStl	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setPopupStl(self, current_mode):$/;"	m	class:LfInstance
setRefineFeature	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def setRefineFeature(self, state):$/;"	m	class:LfCli
setStlCategory	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setStlCategory(self, category):$/;"	m	class:LfInstance
setStlCwd	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setStlCwd(self, cwd):$/;"	m	class:LfInstance
setStlMode	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setStlMode(self, mode):$/;"	m	class:LfInstance
setStlResultsCount	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setStlResultsCount(self, count, check_ignored=False):$/;"	m	class:LfInstance
setStlRunning	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setStlRunning(self, running):$/;"	m	class:LfInstance
setStlTotal	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def setStlTotal(self, total):$/;"	m	class:LfInstance
setUp	plugged/ale/test/python/test_deoplete_source.py	/^    def setUp(self):$/;"	m	class:DeopleteSourceTest
setUp	plugged/ultisnips/test/vim_test_case.py	/^    def setUp(self):$/;"	m	class:VimTestCase
set_cursor_from_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_cursor_from_pos(pos):$/;"	f
set_mark_from_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_mark_from_pos(name, pos):$/;"	f
set_proxy	plugged/vim-translator/script/translator.py	/^    def set_proxy(self, proxy_url=None):$/;"	m	class:BasicTranslator
setup_other_plugins	plugged/ultisnips/test_all.py	/^def setup_other_plugins(all_plugins):$/;"	f
shebang-command	plugged/onedark.vim/build/package-lock.json	/^        "shebang-command": "^2.0.0",$/;"	s	object:dependencies.cross-spawn.requires
shebang-command	plugged/onedark.vim/build/package-lock.json	/^    "shebang-command": {$/;"	o	object:dependencies
shebang-regex	plugged/onedark.vim/build/package-lock.json	/^        "shebang-regex": "^3.0.0"$/;"	s	object:dependencies.shebang-command.requires
shebang-regex	plugged/onedark.vim/build/package-lock.json	/^    "shebang-regex": {$/;"	o	object:dependencies
shell_in_repro	plugged/ultisnips/Makefile	/^shell_in_repro:$/;"	t
shift	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
shouldCheck	plugged/onedark.vim/build/build.js	/^const shouldCheck = String(process.argv[2]).toLowerCase() === 'check'$/;"	C
show	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def show(self):$/;"	m	class:LfPopupInstance
show	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def show(self):$/;"	m	class:PopupWindow
showDevIcons	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^def showDevIcons(func):$/;"	f
showRelativePath	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^def showRelativePath(func):$/;"	f
show_warnings	plugged/vim-polyglot/scripts/build	/^def show_warnings(all_filetypes, expected_filetypes)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
sign	plugged/vim-translator/script/translator.py	/^    def sign(self, text, salt):$/;"	m	class:YoudaoTranslator
signify	plugged/vim-signify/autoload/sy.vim	/^  augroup signify$/;"	a
silent_call	plugged/ultisnips/test/vim_interface.py	/^def silent_call(cmd):$/;"	f
site	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*site[[:space:]]*([a-zA-Z0-9_\\-]+)\/\\1\/s,site\/$/;"	k	langdef:puppet
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = ($/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchContext
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
skip_if	plugged/ultisnips/test/test_Chars.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:_UmlautsBase
skip_if	plugged/ultisnips/test/test_ContextSnippets.py	/^    skip_if = lambda self: "Bug in Neovim." if self.vim_flavor == "neovim" else None$/;"	m	class:ContextSnippets_ReportErrorOnIndexOutOfRange
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
skip_if	plugged/ultisnips/test/test_Format.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_InDefValue_Leave
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_InDefValue_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_ShebangPython
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_SimpleExample
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_TextInNextLine
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TabStop_Shell_WithUmlauts
skip_if	plugged/ultisnips/test/test_SnippetOptions.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	m	class:Transformation_LowerCaseAsciiResult
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	m	class:Transformation_SimpleCaseAsciiResult
skip_if	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    skip_if = lambda self: running_on_windows()$/;"	m	class:TestLangmapWithUtf8_ExpectCorrectResult
skip_if	plugged/ultisnips/test/vim_test_case.py	/^    skip_if = lambda self: None$/;"	m	class:VimTestCase
slash	plugged/onedark.vim/build/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.husky.requires
slash	plugged/onedark.vim/build/package-lock.json	/^    "slash": {$/;"	o	object:dependencies
sleeptime	plugged/ultisnips/test/vim_test_case.py	/^    sleeptime = 0.00$/;"	v	class:VimTestCase
slice-ansi	plugged/onedark.vim/build/package-lock.json	/^        "slice-ansi": "^2.1.0",$/;"	s	object:dependencies.table.requires
slice-ansi	plugged/onedark.vim/build/package-lock.json	/^    "slice-ansi": {$/;"	o	object:dependencies
smt2#PrintSolverVersion	plugged/vim-polyglot/autoload/smt2.vim	/^function! smt2#PrintSolverVersion()$/;"	f
smt2#RunSolver	plugged/vim-polyglot/autoload/smt2.vim	/^function! smt2#RunSolver()$/;"	f
smt2#RunSolverAndShowResult	plugged/vim-polyglot/autoload/smt2.vim	/^function! smt2#RunSolverAndShowResult()$/;"	f
snipMate & UltiSnip Snippets	plugged/vim-snippets/README.md	/^snipMate & UltiSnip Snippets$/;"	c
snipMate_Disabled	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Disabled(_VimTest):$/;"	c
snipMate_EmptyLinesContinueSnippets	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
snipMate_Extends	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Extends(_VimTest):$/;"	c
snipMate_Interpolation	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
snipMate_InterpolationWithSystem	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
snipMate_Issue658	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue658(_VimTest):$/;"	c
snipMate_MultiMatches	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
snipMate_NoNestedTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
snipMate_OtherFiletype	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
snipMate_OverwrittenByRegExpTrigger	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
snipMate_SimpleSnippet	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
snipMate_SimpleSnippetInSnippetFile	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
snipMate_SimpleSnippetSubDirectory	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
snipMate_TestMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders_Overwrite	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
snipMate_TestNoBraceTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstops(_VimTest):$/;"	c
snipMate_TestNoBraceTabstopsAndMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstopsAndMirrors(_VimTest):$/;"	c
snipMate_Visual_Simple	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
snippet_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
snippet_escape_text	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/utils.py	/^def snippet_escape_text(txt):$/;"	f
snippet_placeholder	plugged/ncm2-go/pythonx/ncm2_go.py	/^    def snippet_placeholder(self, num, txt=''):$/;"	m	class:Source
snippet_placeholder	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^    def snippet_placeholder(self, num, txt=''):$/;"	m	class:Source
snippet_start	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippets	plugged/ultisnips/test/test_Autocommands.py	/^    snippets = ("test", "[ ${1:foo} ]")$/;"	v	class:Autocommands
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """Hello \\t ${1:default}\\n$2""")$/;"	v	class:LeaveTrailingWhitespace
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """Hello\\t ${1:default}\\n$2""", "", "s")$/;"	v	class:RemoveTrailingWhitespace
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """next line\\n\\nshould be empty""", "", "")$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("test", """next line\\n\\nshould be empty""", "", "m")$/;"	v	class:TrimSpacesAtEndOfLines
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü $1")$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üüüüüßßßß")$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndStartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_JustNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_StartNL
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:_MultiLineDefault
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${0|red,blue|}")$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}} ${3}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,,c|}")$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|} is ${2:color}\\nline 2")$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_WillBeExpandedToInlineSelection
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1||}")$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|Русский язык,中文,한국어,öääö|}")$/;"	v	class:Choices_CanTakeNonAsciiCharacters
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", r"${1|fun1(,fun2(param1\\, ,fun3(param1\\, param2\\, |}param_end) result/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 ${1:blah}")$/;"	v	class:Completion_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_ChangesInPlaceholder
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_CompletelyUndoSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime2
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1 Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveEditInTabstop
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1hello\\nnice\\nworld")$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hello} $1")$/;"	v	class:DeleteSnippetInsertion0
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\nend")$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:one}(${2:xxx})${3:three}")$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1}\\n`!p snip.rv = '\\\\n'.join(t[1].split())`\\n\\n${0:pass}")$/;"	v	class:JumpForward_DefSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${0:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_Zero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${2:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_NotZero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\n${1:Hello}World")$/;"	v	class:Undo_RemoveWholeSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"if $1: $2")$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ($/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo ${1:Welt}")$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:_SimpleExpands
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt\\n")$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", "SimpleText")$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("pd", "padding: ${1:0}px")$/;"	v	class:VirtualEdit
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${2:#2} ${1:#1};$0")$/;"	v	class:Bug1251994
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "\\t${1}${0}")$/;"	v	class:ShiftWidthZero
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "hello")$/;"	v	class:NonUnicodeDataInUnnamedRegister
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldOverwrite_Simple_ECR
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:PerlSyntaxFold
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("m", "\\tBlaahblah \\t\\t  ")$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}\\n$1\\n$0", "", "f")$/;"	v	class:FOSimple_Break_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOTextAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "Before${1:longer expand}After\\nstart$1end")$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "for\\n    blah")$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = (("m1", "Something"), ("m", "\\t$0"))$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """${1:hi} `!p res = t[1]+".blah"` End""")$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """${1:hi} `!p snip.rv = t[1]+".blah"` End""")$/;"	v	class:PythonCode_ReferencePlaceholder
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """`!p res = len(t[1])*"#"`\\n${1:some text}""")$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """`!p snip.rv = len(t[1])*"#"`\\n${1:some text}""")$/;"	v	class:PythonCode_ReferencePlaceholderBefore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi `!p res = "Hallo"` End""")$/;"	v	class:PythonCodeOld_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi `!p snip.rv = "Hallo"` End""")$/;"	v	class:PythonCode_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi `!v indent(".")` End""")$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", """hi`!p snip.rv = ""`End""")$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "`!p snip.rv = 5`")$/;"	v	class:Python_SnipRvCanBeNonText
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_SelectOneWord
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo` you!")$/;"	v	class:TabStop_Shell_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo`\\nWeiter")$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo höüäh` you!")$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""${2:${1\/.+\/egal\/}} ${1:$3} ${3:`!p snip.rv = "hi"`}""")$/;"	v	class:PythonCode_TrickyReferences
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""`echo \\`echo "\\\\$hi"\\``""")$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""`hi="blah"; echo \\`echo "$hi"\\``""")$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi `!p snip.rv = snip.opt("g:UStest") or "no"` End""")$/;"	v	class:PythonCode_OptExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi `!p snip.rv = snip.opt("g:UStest") or "no"` End""")$/;"	v	class:PythonCode_OptNoExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi`!p snip.rv = "a" * 100 + '\\n'*100 + "a"*100`end""")$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", r"""hi`!p snip.rv = "a" * 100`end""")$/;"	v	class:PythonCode_LongerTextThanSource_Chars
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_IndentedMultiline
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_CanOverwriteTabstop
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSw
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSwOffset
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentNoetSwTs
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentProblem
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_Locals
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppend
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShift
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShiftMethods
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendSimpleIndent
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultilineIndented
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_ResetIndent
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleAppend
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleMkline
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_TransformedBeforeMultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_UseNewOverOld
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:TabStop_Shell_ShebangPython
snippets	plugged/ultisnips/test/test_ListSnippets.py	/^    snippets = ($/;"	v	class:_ListAllSnippets
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "welt${1:welt${2:welt}welt} $2"$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "    $1\\n$1\\na$1b\\n$1\\ntest $1 mich")$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 Hinten\\n$1")$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1 Hinten")$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n${1:sometext}")$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1 Hinten")$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1")$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n\\n$1\\n\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ObenVorne $1 ObenHinten\\nVorne $1 Hinten")$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1 Hinten\\n$1")$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1\\n$1")$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h $1.c}\\ntest $1")$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}")$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("<trh", "<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3")$/;"	v	class:CursorMovement_BS_InEditMode
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Some}")$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:_MultipleMatches
snippets	plugged/ultisnips/test/test_Plugin.py	/^    snippets = ("long", "Hello", "", "w")$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $1\\nM END -> $0")$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ $1 $2 ] $1"), ("m1", "ASnip $1 ASnip $2 ASnip"))$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"${1:one}${0:explicit zero}${2:two}", "snip", "i"),)$/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"_${0:explicit zero}", "snip", "i"),)$/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "Just some Text"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "[ ${1:first} $0 ${2:sec} ]"), ("m", "[ ${1:first} ${2:sec} ]"))$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "${1:World}")$/;"	v	class:_SelectModeMappings
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:OldSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:OldSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("((?<=\\W)|^)(\\.)", "self.", "", "r")$/;"	v	class:_Regex_Self
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(.*test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test *)+", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test.*)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test ", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_WithSpace
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test me", "Expand me!")$/;"	v	class:MultiWordSnippet_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "\\t\\tExpand\\tme!\\t", "", "t")$/;"	v	class:_No_Tab_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:_TabExpand_RealWorld
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "w"),)$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "w"),)$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (r"cabfed", r"""`!p snip.rv =  match or "No match"`""")$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We do not overwrite", "Overwrite the two", "", -1),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", -5),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", 1),)$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "$0 run")$/;"	v	class:TabStop_Exit_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "echo ${1:Hallo}")$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "Hallo ${1:WELT} ups")$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 $1")$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work")$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} ${1:Beginning}")$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${1:End} ${0:Beginning}")$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte ${1:Beginning}")$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte${1:Beginning}")$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "nothing ${1:i} hups")$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $3  $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $3 $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """<div${1: id="${2:some_id}"}>\\n  $3 $0\\n<\/div>""")$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", """h${1:a$2b}l""")$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "[ $1$2 ] $1")$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\n\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "each_byte { |${1:byte}| $0 }")$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world")$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip $1")$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:default}")$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:i}")$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "t$1t${2: }t{\\n\\t$0\\n}")$/;"	v	class:TabStop_CROnlyOnSelectedNear
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes:no\\\\)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\:no\\))\/}"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\\\:no)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/$1\/a}")$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/\\L$1\\E\/a}")$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.)\/\\\\u$1\/}")$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\L$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\\\U$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\l$1\/}")$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/([ab])oo\/$1ull\/}")$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(^a).*\/(?0:began with an a)\/}")$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}")$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} $1")$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} ${1:replace me}")$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"${VISUAL\/^\/* \/mg}")$/;"	v	class:Transformation_OptionMultiline_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("te'stâ", "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict3
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("testâ", "abc123ά", "123'êabc")$/;"	v	class:VerifyVimDict1
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('te"stâ', "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict2
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("if", "if {\\n\\t${VISUAL}$0\\n}")$/;"	v	class:Visual_LineSelect_DedentLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${0:${VISUAL}}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend")$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforeaaa${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${2:ahh}${VISUAL}${1:ups}b", "Description", "i")$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_CrossOneLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_ExpandTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordExclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordInclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_Inword
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b${VISUAL}a")$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "hello\\n\\t ${1:${VISUAL}}\\nend")$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	plugged/ultisnips/test/vim_test_case.py	/^    snippets = ()$/;"	v	class:VimTestCase
snippets_in_current_scope	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self, search_all):$/;"	m	class:SnippetManager
sort	plugged/ncm2/pythonx/ncm2_sorter/abbrfuzzy.py	/^    def sort(matches: list):$/;"	f	function:Sorter	file:
sort	plugged/ncm2/pythonx/ncm2_sorter/alphanum.py	/^    def sort(matches: list):$/;"	f	function:Sorter	file:
sort	plugged/ncm2/pythonx/ncm2_sorter/none.py	/^    def sort(matches: list):$/;"	f	function:Sorter	file:
sort_packages	plugged/vim-polyglot/scripts/build	/^def sort_packages(packages)$/;"	f
sorter_get	plugged/ncm2/pythonx/ncm2_core.py	/^    def sorter_get(self, opt):$/;"	m	class:Ncm2Core
sorter_opt_formalize	plugged/ncm2/pythonx/ncm2_core.py	/^    def sorter_opt_formalize(self, opt):$/;"	m	class:Ncm2Core
sorter_opt_get	plugged/ncm2/pythonx/ncm2_core.py	/^    def sorter_opt_get(self, data, sr):$/;"	m	class:Ncm2Core
source	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    FeString*       source;$/;"	m	struct:FuzzyEngine	typeref:typename:FeString *	file:
source	plugged/ncm2-bufword/pythonx/ncm2_bufword.py	/^source = Source(vim)$/;"	v
source	plugged/ncm2-go/pythonx/ncm2_go.py	/^source = Source(vim)$/;"	v
source	plugged/ncm2-jedi/pythonx/ncm2_jedi.py	/^source = Source(vim)$/;"	v
source_check_scope	plugged/ncm2/pythonx/ncm2_core.py	/^    def source_check_scope(self, sr, ctx, contexts):$/;"	m	class:Ncm2Core
source_get_complete_len	plugged/ncm2/pythonx/ncm2_core.py	/^    def source_get_complete_len(self, data, sr, manual):$/;"	m	class:Ncm2Core
source_handle.extension	plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.extension() abort$/;"	f
source_handle.filetype	plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.filetype() abort$/;"	f
source_handle.get_winid	plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.get_winid() abort$/;"	f
source_handle.get_winnr	plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.get_winnr() abort$/;"	f
source_handle.line	plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.line(lnum) abort$/;"	f
source_handle.line_trimmed	plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.line_trimmed(lnum) abort$/;"	f
source_handle.lines	plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.lines() abort$/;"	f
source_handle.scope_seperator	plugged/vista.vim/autoload/vista/init.vim	/^  function! source_handle.scope_seperator() abort$/;"	f
space_before_function_paren	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def space_before_function_paren(snip):$/;"	f
spaces_to_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
spellmenu	plugged/vim-polyglot/extras/menu.vim	/^    augroup spellmenu$/;"	a
split	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def split(self):$/;"	m	class:LfShlex
split_at_whitespace	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def split_at_whitespace(string):$/;"	f
sprintf-js	plugged/onedark.vim/build/package-lock.json	/^        "sprintf-js": "~1.0.2"$/;"	s	object:dependencies.argparse.requires
sprintf-js	plugged/onedark.vim/build/package-lock.json	/^    "sprintf-js": {$/;"	o	object:dependencies
square_expansion	plugged/vim-polyglot/scripts/build	/^def square_expansion(s)$/;"	f	method:copy_file.rules_to_code.rule_to_code.generate_ftdetect
square_expansion	plugged/vim-polyglot/scripts/import_vim	/^def square_expansion(s)$/;"	f
start	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def start(self, arg_line, *args, **kwargs):$/;"	m	class:AnyHub
start	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def start(self):$/;"	m	class:TextObject
start	plugged/vim-polyglot/syntax/ld.vim	/^syn region  ldFileName      start=+"+ end=+"+$/;"	s
startExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def startExplorer(self, win_pos, *args, **kwargs):$/;"	m	class:AnyExplManager
startExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def startExplorer(self, win_pos, *args, **kwargs):$/;"	m	class:FileExplManager
startExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def startExplorer(self, win_pos, *args, **kwargs):$/;"	m	class:GtagsExplManager
startExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def startExplorer(self, win_pos, *args, **kwargs):$/;"	m	class:Manager
startExplorer	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def startExplorer(self, win_pos, *args, **kwargs):$/;"	m	class:RgExplManager
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ChoicesToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream, chars=r"{}\\$`"):$/;"	m	class:EscapeCharToken
statusline on top	plugged/vim-airline/README.md	/^### statusline on top$/;"	S
statusline_win	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def statusline_win(self):$/;"	m	class:LfPopupInstance
statusline_win	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def statusline_win(self, statusline_win):$/;"	m	class:LfPopupInstance
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 1), (0, -8), (0, 1)), ((0, 1), (0, 1), (0, 2)))$/;"	v	class:MovePosition_DelSameLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 12), (0, -4), (1, 0)), ((0, 12), (-1, 0), (0, 12)))$/;"	v	class:MovePosition_DelSecondLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 3), (0, 3), (0, 12)),)$/;"	v	class:MovePosition_InsSameLine2
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 4), (0, -3), (0, 3)), ((0, 8), (0, -1), (0, 3)))$/;"	v	class:MovePosition_DelSameLine1
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
str	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    char*    str;$/;"	m	struct:FeString	typeref:typename:char *	file:
strdisplaywidth	plugged/ncm2/pythonx/ncm2.py	/^    def strdisplaywidth(self, s):$/;"	m	class:Ncm2Base
string-width	plugged/onedark.vim/build/package-lock.json	/^        "string-width": "^3.0.0"$/;"	s	object:dependencies.table.requires
string-width	plugged/onedark.vim/build/package-lock.json	/^    "string-width": {$/;"	o	object:dependencies
string_decoder	plugged/onedark.vim/build/package-lock.json	/^        "string_decoder": "^1.1.1",$/;"	s	object:dependencies.readable-stream.requires
string_decoder	plugged/onedark.vim/build/package-lock.json	/^    "string_decoder": {$/;"	o	object:dependencies
strip-ansi	plugged/onedark.vim/build/package-lock.json	/^        "strip-ansi": "^5.1.0"$/;"	s	object:dependencies.string-width.requires
strip-ansi	plugged/onedark.vim/build/package-lock.json	/^        "strip-ansi": "^6.0.0",$/;"	s	object:dependencies.eslint.requires
strip-ansi	plugged/onedark.vim/build/package-lock.json	/^        "strip-ansi": {$/;"	o	object:dependencies.string-width.dependencies
strip-ansi	plugged/onedark.vim/build/package-lock.json	/^    "strip-ansi": {$/;"	o	object:dependencies
strip-json-comments	plugged/onedark.vim/build/package-lock.json	/^        "strip-json-comments": "^3.1.0",$/;"	s	object:dependencies.eslint.requires
strip-json-comments	plugged/onedark.vim/build/package-lock.json	/^        "strip-json-comments": "^3.1.1"$/;"	s	object:dependencies.@eslint/eslintrc.requires
strip-json-comments	plugged/onedark.vim/build/package-lock.json	/^    "strip-json-comments": {$/;"	o	object:dependencies
structure names	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?struct[ \\t]+([a-zA-Z0-9_]+)\/\\2\/s,structure names\/$/;"	k	langdef:Rust
substr_fuzzy_match	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def substr_fuzzy_match(b, s, abbrs, chcmp):$/;"	f
suffix	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^            const char* suffix;$/;"	m	struct:FuzzyEngine::__anon07ea32bd030a::__anon07ea32bd0508	typeref:typename:const char *	file:
supports-color	plugged/onedark.vim/build/package-lock.json	/^            "supports-color": "^5.3.0"$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk.requires
supports-color	plugged/onedark.vim/build/package-lock.json	/^        "supports-color": "^7.1.0"$/;"	s	object:dependencies.chalk.requires
supports-color	plugged/onedark.vim/build/package-lock.json	/^        "supports-color": {$/;"	o	object:dependencies.chalk.dependencies
supports-color	plugged/onedark.vim/build/package-lock.json	/^    "supports-color": {$/;"	o	object:dependencies
supportsMulti	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def supportsMulti(self):$/;"	m	class:AnyExplorer
supportsMulti	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^    def supportsMulti(self):$/;"	m	class:Explorer
supportsMulti	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer3.py	/^    def supportsMulti(self):$/;"	m	class:Explorer
supportsMulti	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def supportsMulti(self):$/;"	m	class:FileExplorer
supportsMulti	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def supportsMulti(self):$/;"	m	class:MruExplorer
supportsNameOnly	plugged/LeaderF/autoload/leaderf/python/leaderf/anyExpl.py	/^    def supportsNameOnly(self):$/;"	m	class:AnyExplorer
supportsNameOnly	plugged/LeaderF/autoload/leaderf/python/leaderf/bufExpl.py	/^    def supportsNameOnly(self):$/;"	m	class:BufferExplorer
supportsNameOnly	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer2.py	/^    def supportsNameOnly(self):$/;"	m	class:Explorer
supportsNameOnly	plugged/LeaderF/autoload/leaderf/python/leaderf/explorer3.py	/^    def supportsNameOnly(self):$/;"	m	class:Explorer
supportsNameOnly	plugged/LeaderF/autoload/leaderf/python/leaderf/fileExpl.py	/^    def supportsNameOnly(self):$/;"	m	class:FileExplorer
supportsNameOnly	plugged/LeaderF/autoload/leaderf/python/leaderf/mruExpl.py	/^    def supportsNameOnly(self):$/;"	m	class:MruExplorer
supportsNameOnly	plugged/LeaderF/autoload/leaderf/python/leaderf/qfloclistExpl.py	/^    def supportsNameOnly(self):$/;"	m	class:QfLocListExplorer
supportsNameOnly	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def supportsNameOnly(self):$/;"	m	class:RgExplorer
supportsNameOnly	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^    def supportsNameOnly(self):$/;"	m	class:WindowExplorer
suspend_proxy_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def suspend_proxy_edits():$/;"	f
sy#buffer_is_active	plugged/vim-signify/autoload/sy.vim	/^function! sy#buffer_is_active()$/;"	f
sy#debug#list_active_buffers	plugged/vim-signify/autoload/sy/debug.vim	/^function! sy#debug#list_active_buffers() abort$/;"	f
sy#fold#disable	plugged/vim-signify/autoload/sy/fold.vim	/^function! sy#fold#disable() abort$/;"	f
sy#fold#dispatch	plugged/vim-signify/autoload/sy/fold.vim	/^function! sy#fold#dispatch(do_tab) abort$/;"	f
sy#fold#enable	plugged/vim-signify/autoload/sy/fold.vim	/^function! sy#fold#enable(do_tab) abort$/;"	f
sy#fold#toggle	plugged/vim-signify/autoload/sy/fold.vim	/^function! sy#fold#toggle() abort$/;"	f
sy#highlight#line_disable	plugged/vim-signify/autoload/sy/highlight.vim	/^function! sy#highlight#line_disable() abort$/;"	f
sy#highlight#line_enable	plugged/vim-signify/autoload/sy/highlight.vim	/^function! sy#highlight#line_enable() abort$/;"	f
sy#highlight#line_toggle	plugged/vim-signify/autoload/sy/highlight.vim	/^function! sy#highlight#line_toggle() abort$/;"	f
sy#highlight#setup	plugged/vim-signify/autoload/sy/highlight.vim	/^function! sy#highlight#setup() abort$/;"	f
sy#jump#next_hunk	plugged/vim-signify/autoload/sy/jump.vim	/^function! sy#jump#next_hunk(count)$/;"	f
sy#jump#prev_hunk	plugged/vim-signify/autoload/sy/jump.vim	/^function! sy#jump#prev_hunk(count)$/;"	f
sy#repo#debug_detection	plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#debug_detection()$/;"	f
sy#repo#detect	plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#detect(bufnr) abort$/;"	f
sy#repo#diff_hunk	plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#diff_hunk() abort$/;"	f
sy#repo#diffmode	plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#diffmode(do_tab) abort$/;"	f
sy#repo#get_diff	plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#get_diff(bufnr, vcs, func) abort$/;"	f
sy#repo#get_stats	plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#get_stats(...) abort$/;"	f
sy#repo#get_stats_decorated	plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#get_stats_decorated(...)$/;"	f
sy#repo#undo_hunk	plugged/vim-signify/autoload/sy/repo.vim	/^function! sy#repo#undo_hunk() abort$/;"	f
sy#set_buflocal_autocmds	plugged/vim-signify/autoload/sy.vim	/^function! sy#set_buflocal_autocmds(bufnr) abort$/;"	f
sy#sign#get_current_signs	plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#get_current_signs(sy) abort$/;"	f
sy#sign#id_next	plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#id_next(sy) abort$/;"	f
sy#sign#parse_hunk	plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#parse_hunk(diffline) abort$/;"	f
sy#sign#process_diff	plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#process_diff(sy, vcs, diff) abort$/;"	f
sy#sign#remove_all_signs	plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#remove_all_signs(bufnr) abort$/;"	f
sy#sign#set_signs	plugged/vim-signify/autoload/sy/sign.vim	/^function! sy#sign#set_signs(sy, vcs, diff) abort$/;"	f
sy#start	plugged/vim-signify/autoload/sy.vim	/^function! sy#start(...) abort$/;"	f
sy#start_all	plugged/vim-signify/autoload/sy.vim	/^function! sy#start_all() abort$/;"	f
sy#stop	plugged/vim-signify/autoload/sy.vim	/^function! sy#stop(...) abort$/;"	f
sy#stop_all	plugged/vim-signify/autoload/sy.vim	/^function! sy#stop_all() abort$/;"	f
sy#toggle	plugged/vim-signify/autoload/sy.vim	/^function! sy#toggle() abort$/;"	f
sy#util#chdir	plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#chdir() abort$/;"	f
sy#util#escape	plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#escape(path) abort$/;"	f
sy#util#execute	plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#execute(cmd) abort$/;"	f
sy#util#hunk_text_object	plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#hunk_text_object(emptylines) abort$/;"	f
sy#util#popup_close	plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#popup_close() abort$/;"	f
sy#util#popup_create	plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#popup_create(hunkdiff) abort$/;"	f
sy#util#refresh_windows	plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#refresh_windows() abort$/;"	f
sy#util#return_if_no_changes	plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#return_if_no_changes() abort$/;"	f
sy#util#shell_redirect	plugged/vim-signify/autoload/sy/util.vim	/^function! sy#util#shell_redirect(path) abort$/;"	f
sy#verbose	plugged/vim-signify/autoload/sy.vim	/^function! sy#verbose(msg, ...) abort$/;"	f
t	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py b:Lf_AnyExplManager."accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "bufTagExplManager.accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "bufExplManager.accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "fileExplManager.accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "functionExplManager.accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "gtagsExplManager.accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "helpExplManager.accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "lineExplManager.accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "mruExplManager.accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "qfloclistExplManager.accept('t')"<CR/;"	m
t	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "rgExplManager.accept('t')"<CR>$/;"	m
t	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> t             :exec g:Lf_py "tagExplManager.accept('t')"<CR>$/;"	m
t	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> t :call ale#preview#OpenSelectionInTab()<CR>$/;"	m
table	plugged/onedark.vim/build/package-lock.json	/^        "table": "^5.2.3",$/;"	s	object:dependencies.eslint.requires
table	plugged/onedark.vim/build/package-lock.json	/^    "table": {$/;"	o	object:dependencies
tabpage	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def tabpage(self):$/;"	m	class:FloatWindow
tabpage	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def tabpage(self):$/;"	m	class:LfInstance
tabpage	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def tabpage(self):$/;"	m	class:PopupWindow
tabstop_pat1	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^tabstop_pat1 = re.compile(r'^\\$(\\d+)')$/;"	v
tabstop_pat2	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^tabstop_pat2 = re.compile(r'^\\$\\{(\\d+)\\}')$/;"	v
tads_minlines	plugged/vim-polyglot/syntax/tads.vim	/^  let tads_minlines = 15$/;"	v
tads_sync_dist	plugged/vim-polyglot/syntax/tads.vim	/^  let tads_sync_dist = 100$/;"	v
tagExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/tagExpl.py	/^tagExplManager = TagExplManager()$/;"	v
tag_getDigest	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^static void tag_getDigest(char** str, uint32_t* length, Parameter* param)$/;"	f	typeref:typename:void	file:
tagbar#CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#ForceUpdate	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#ForceUpdate() abort$/;"	f
tagbar#GetTagNearLine	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#GetTagNearLine(lnum, ...) abort$/;"	f
tagbar#OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StopAutoUpdate	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#StopAutoUpdate() abort$/;"	f
tagbar#ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow(...) abort$/;"	f
tagbar#Update	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#Update() abort$/;"	f
tagbar#autoopen	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#currenttagtype	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttagtype(fmt, default) abort$/;"	f
tagbar#debug#enabled	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#enabled() abort$/;"	f
tagbar#debug#log	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log(msg) abort$/;"	f
tagbar#debug#log_ctags_output	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log_ctags_output(output) abort$/;"	f
tagbar#debug#start_debug	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#start_debug(...) abort$/;"	f
tagbar#debug#stop_debug	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#stop_debug() abort$/;"	f
tagbar#gettypeconfig	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#is_paused	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#is_paused() abort$/;"	f
tagbar#printfileinfo	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#printfileinfo() abort$/;"	f
tagbar#prototypes#basetag#new	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! tagbar#prototypes#basetag#new(name) abort$/;"	f
tagbar#prototypes#fileinfo#new	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! tagbar#prototypes#fileinfo#new(fname, ftype, typeinfo) abort$/;"	f
tagbar#prototypes#kindheadertag#new	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! tagbar#prototypes#kindheadertag#new(name) abort$/;"	f
tagbar#prototypes#normaltag#new	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! tagbar#prototypes#normaltag#new(name) abort$/;"	f
tagbar#prototypes#pseudotag#new	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! tagbar#prototypes#pseudotag#new(name) abort$/;"	f
tagbar#prototypes#splittag#new	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! tagbar#prototypes#splittag#new(name) abort$/;"	f
tagbar#prototypes#typeinfo#new	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! tagbar#prototypes#typeinfo#new(...) abort$/;"	f
tagbar#sorting#sort	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! tagbar#sorting#sort(tags, compareby, compare_typeinfo) abort$/;"	f
tagbar#state#get_current_file	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#get_current_file(force_current) abort$/;"	f
tagbar#state#set_current_file	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_current_file(fileinfo) abort$/;"	f
tagbar#state#set_paused	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_paused() abort$/;"	f
tagbar#toggle_pause	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
tagbar#types#ctags#init	plugged/tagbar/autoload/tagbar/types/ctags.vim	/^function! tagbar#types#ctags#init(supported_types) abort$/;"	f
tagbar#types#uctags#init	plugged/tagbar/autoload/tagbar/types/uctags.vim	/^function! tagbar#types#uctags#init(supported_types) abort$/;"	f
tail	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t        tail;$/;"	m	struct:FeCircularQueue	typeref:typename:uint32_t	file:
task_cond	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    pthread_cond_t  task_cond;$/;"	m	struct:FeCircularQueue	typeref:typename:pthread_cond_t	file:
task_count	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t        task_count;$/;"	m	struct:FeCircularQueue	typeref:typename:uint32_t	file:
task_queue	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    FeCircularQueue task_queue;$/;"	m	struct:FuzzyEngine	typeref:typename:FeCircularQueue	file:
task_sem	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    HANDLE          task_sem;$/;"	m	struct:FeCircularQueue	typeref:typename:HANDLE	file:
tearDown	plugged/ultisnips/test/vim_test_case.py	/^    def tearDown(self):$/;"	m	class:VimTestCase
termcolors	plugged/onedark.vim/build/build.js	/^const termcolors = require('termcolors')$/;"	C
termcolors	plugged/onedark.vim/build/package-lock.json	/^    "termcolors": {$/;"	o	object:dependencies
termcolors	plugged/onedark.vim/build/package.json	/^    "termcolors": "0.7.2"$/;"	s	object:dependencies
terminalAppTemplate	plugged/onedark.vim/build/build.js	/^	let alacrittyTemplate, itermTemplate, kittyTemplate, terminalAppTemplate$/;"	v
terminalPalette	plugged/onedark.vim/build/build.js	/^	const terminalPalette = termcolors.xresources.import(xresources)$/;"	C
terraform#align	plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#align() abort$/;"	f
terraform#commands	plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#commands(ArgLead, CmdLine, CursorPos) abort$/;"	f
terraform#fmt	plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#fmt() abort$/;"	f
test	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^def test():$/;"	f
test	plugged/onedark.vim/build/package.json	/^    "test": "eslint build.js && node build.js check"$/;"	s	object:scripts
test	plugged/vim-polyglot/Makefile	/^test:$/;"	t
test0	plugged/vim-translator/script/translator.py	/^    def test0():$/;"	f
test1	plugged/vim-translator/script/translator.py	/^    def test1():$/;"	f
test2	plugged/vim-translator/script/translator.py	/^    def test2():$/;"	f
test3	plugged/vim-translator/script/translator.py	/^    def test3():$/;"	f
test4	plugged/vim-translator/script/translator.py	/^    def test4():$/;"	f
test5	plugged/vim-translator/script/translator.py	/^    def test5():$/;"	f
test6	plugged/vim-translator/script/translator.py	/^    def test6():$/;"	f
test7	plugged/vim-translator/script/translator.py	/^    def test7():$/;"	f
test_abbrev	plugged/ncm2/pythonx/ncm2_matcher/abbrfuzzy.py	/^def test_abbrev(s):$/;"	f
test_async_event	plugged/ale/test/python/test_deoplete_source.py	/^    def test_async_event(self):$/;"	m	class:DeopleteSourceTest
test_attributes	plugged/ale/test/python/test_deoplete_source.py	/^    def test_attributes(self):$/;"	m	class:DeopleteSourceTest
test_baicizhan	plugged/vim-translator/test/test_translator.py	/^    def test_baicizhan(self):$/;"	m	class:TestTranslator
test_bing	plugged/vim-translator/test/test_translator.py	/^    def test_bing(self):$/;"	m	class:TestTranslator
test_complete_position	plugged/ale/test/python/test_deoplete_source.py	/^    def test_complete_position(self):$/;"	m	class:DeopleteSourceTest
test_fuzzy_match	plugged/ncm2/pythonx/ncm2_matcher/substrfuzzy.py	/^def test_fuzzy_match(b, s, chcmp):$/;"	f
test_google	plugged/vim-translator/test/test_translator.py	/^    def test_google(self):$/;"	m	class:TestTranslator
test_haici	plugged/vim-translator/test/test_translator.py	/^    def test_haici(self):$/;"	m	class:TestTranslator
test_iciba	plugged/vim-translator/test/test_translator.py	/^    def test_iciba(self):$/;"	m	class:TestTranslator
test_request	plugged/vim-translator/script/translator.py	/^    def test_request(self, test_url):$/;"	m	class:BasicTranslator
test_request_completion_results	plugged/ale/test/python/test_deoplete_source.py	/^    def test_request_completion_results(self):$/;"	m	class:DeopleteSourceTest
test_request_completion_results_from_buffer_without_providers	plugged/ale/test/python/test_deoplete_source.py	/^    def test_request_completion_results_from_buffer_without_providers(self):$/;"	m	class:DeopleteSourceTest
test_snipmate_format	plugged/vim-snippets/tests.sh	/^function test_snipmate_format {$/;"	f
test_space_indented	plugged/vim-snippets/tests.sh	/^function test_space_indented {$/;"	f
test_translate_shell	plugged/vim-translator/test/test_translator.py	/^    def test_translate_shell(self):$/;"	m	class:TestTranslator
test_youdao	plugged/vim-translator/test/test_translator.py	/^    def test_youdao(self):$/;"	m	class:TestTranslator
tests	plugged/ale/run-tests.bat	/^if not "%1"=="" set tests=%1$/;"	v
tests	plugged/ale/run-tests.bat	/^set tests=test\/*.vader test\/*\/*.vader test\/*\/*\/*.vader test\/*\/*\/*\/*.vader$/;"	v
text	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    const char* text;$/;"	m	struct:TextContext	typeref:typename:const char *	file:
text	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text-table	plugged/onedark.vim/build/package-lock.json	/^        "text-table": "^0.2.0",$/;"	s	object:dependencies.eslint.requires
text-table	plugged/onedark.vim/build/package-lock.json	/^    "text-table": {$/;"	o	object:dependencies
text_after	plugged/ultisnips/test/test_Format.py	/^    text_after = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_after	plugged/ultisnips/test/vim_test_case.py	/^    text_after = "\\n\\n --- some text after --- "$/;"	v	class:VimTestCase
text_before	plugged/ultisnips/test/test_Format.py	/^    text_before = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	plugged/ultisnips/test/vim_test_case.py	/^    text_before = " --- some text before --- \\n\\n"$/;"	v	class:VimTestCase
text_len	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    uint16_t text_len;$/;"	m	struct:TextContext	typeref:typename:uint16_t	file:
text_list	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    PyObject* text_list;$/;"	m	struct:PySetTaskItem	typeref:typename:PyObject *	file:
text_mask	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^    uint64_t* text_mask;$/;"	m	struct:TextContext	typeref:typename:uint64_t *	file:
thing1	plugged/vista.vim/test/data/ctags_tree_view.py	/^        def thing1():$/;"	f	member:Foo.qux	file:
thing1	plugged/vista.vim/test/data/ctags_tree_view.py	/^        def thing1():$/;"	f	member:Foo.qux1	file:
thing2	plugged/vista.vim/test/data/ctags_tree_view.py	/^            def thing2():$/;"	f	member:Foo.qux	file:
thing2	plugged/vista.vim/test/data/ctags_tree_view.py	/^            def thing2():$/;"	f	member:Foo.qux1	file:
thing3	plugged/vista.vim/test/data/ctags_tree_view.py	/^            def thing3():$/;"	f	member:Foo.qux	file:
thing3	plugged/vista.vim/test/data/ctags_tree_view.py	/^            def thing3():$/;"	f	member:Foo.qux1	file:
thing4	plugged/vista.vim/test/data/ctags_tree_view.py	/^        def thing4():$/;"	f	member:Foo.qux	file:
thing4	plugged/vista.vim/test/data/ctags_tree_view.py	/^        def thing4():$/;"	f	member:Foo.qux1	file:
threads	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    HANDLE*         threads;$/;"	m	struct:FuzzyEngine	typeref:typename:HANDLE *	file:
threads	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    pthread_t*      threads;$/;"	m	struct:FuzzyEngine	typeref:typename:pthread_t *	file:
tmux theme	plugged/onedark.vim/README.md	/^### tmux theme$/;"	S
to_ultisnips	plugged/ncm2-ultisnips/ncm2-plugin/ncm2_ultisnips.py	/^    def to_ultisnips(ast):$/;"	f	function:wrap	file:
to_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
to_vim_cursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
toggleHelp	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def toggleHelp(self):$/;"	m	class:Manager
tokenize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
tokenize_snippet_text	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def tokenize_snippet_text($/;"	f
tox	plugged/ale/test/command_callback/python_paths/namespace_package_tox/tox.ini	/^[tox]$/;"	s
traits	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy)[ \\t]*)*(private[^ ]*|protected)?/;"	k	langdef:scala
traits,traits	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?trait[ \\t]+([a-zA-Z0-9_]+)\/\\2\/t,traits,traits\/$/;"	k	langdef:Rust
transform	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
transform_patterns	plugged/vim-polyglot/scripts/build	/^def transform_patterns(heuristics)$/;"	f
translate	plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:BaicizhanTranslator
translate	plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:BasicTranslator
translate	plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:BingTranslator
translate	plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:GoogleTranslator
translate	plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:HaiciTranslator
translate	plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:ICibaTranslator
translate	plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:SdcvShell
translate	plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:TranslateShell
translate	plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:YoudaoTranslator
translateRegex	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def translateRegex(self, regex, is_perl=False):$/;"	m	class:GtagsExplorer
translateRegex	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def translateRegex(self, regex, is_perl=False):$/;"	m	class:RgExplorer
translation	plugged/vim-translator/script/translator.py	/^    translation = {"engine": "", "phonetic": "", "paraphrase": "", "explain": []}$/;"	v	class:Translation
translator#action#echo	plugged/vim-translator/autoload/translator/action.vim	/^function! translator#action#echo(translations) abort$/;"	f
translator#action#replace	plugged/vim-translator/autoload/translator/action.vim	/^function! translator#action#replace(translations) abort$/;"	f
translator#action#window	plugged/vim-translator/autoload/translator/action.vim	/^function! translator#action#window(translations) abort$/;"	f
translator#buffer#create_border	plugged/vim-translator/autoload/translator/buffer.vim	/^function! translator#buffer#create_border(configs) abort$/;"	f
translator#buffer#create_scratch_buf	plugged/vim-translator/autoload/translator/buffer.vim	/^function! translator#buffer#create_scratch_buf(...) abort$/;"	f
translator#buffer#init	plugged/vim-translator/autoload/translator/buffer.vim	/^function! translator#buffer#init(bufnr) abort$/;"	f
translator#cmdline#complete	plugged/vim-translator/autoload/translator/cmdline.vim	/^function! translator#cmdline#complete(arg_lead, cmd_line, cursor_pos) abort$/;"	f
translator#cmdline#parse	plugged/vim-translator/autoload/translator/cmdline.vim	/^function! translator#cmdline#parse(bang, range, line1, line2, argstr) abort$/;"	f
translator#history#export	plugged/vim-translator/autoload/translator/history.vim	/^function! translator#history#export() abort$/;"	f
translator#history#save	plugged/vim-translator/autoload/translator/history.vim	/^function! translator#history#save(translations) abort$/;"	f
translator#job#jobstart	plugged/vim-translator/autoload/translator/job.vim	/^function! translator#job#jobstart(cmd, type) abort$/;"	f
translator#logger#init	plugged/vim-translator/autoload/translator/logger.vim	/^function! translator#logger#init() abort$/;"	f
translator#logger#log	plugged/vim-translator/autoload/translator/logger.vim	/^function! translator#logger#log(info) abort$/;"	f
translator#logger#open_log	plugged/vim-translator/autoload/translator/logger.vim	/^function! translator#logger#open_log() abort$/;"	f
translator#start	plugged/vim-translator/autoload/translator.vim	/^function! translator#start(displaymode, bang, range, line1, line2, argstr) abort$/;"	f
translator#translate	plugged/vim-translator/autoload/translator.vim	/^function! translator#translate(options, displaymode) abort$/;"	f
translator#util#echo	plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#echo(group, msg) abort$/;"	f
translator#util#echon	plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#echon(group, msg) abort$/;"	f
translator#util#fit_lines	plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#fit_lines(linelist, width) abort$/;"	f
translator#util#pad	plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#pad(text, width, char) abort$/;"	f
translator#util#safe_trim	plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#safe_trim(text) abort$/;"	f
translator#util#show_msg	plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#show_msg(message, ...) abort$/;"	f
translator#util#text_proc	plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#text_proc(text) abort$/;"	f
translator#util#visual_select	plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#visual_select(range, line1, line2) abort$/;"	f
translator#window#float#create	plugged/vim-translator/autoload/translator/window/float.vim	/^function! translator#window#float#create(linelist, configs) abort$/;"	f
translator#window#float#has_scroll	plugged/vim-translator/autoload/translator/window/float.vim	/^function! translator#window#float#has_scroll() abort$/;"	f
translator#window#float#scroll	plugged/vim-translator/autoload/translator/window/float.vim	/^function! translator#window#float#scroll(forward, ...) abort$/;"	f
translator#window#float#scroll_win	plugged/vim-translator/autoload/translator/window/float.vim	/^function! translator#window#float#scroll_win(winid, forward, amount) abort$/;"	f
translator#window#init	plugged/vim-translator/autoload/translator/window.vim	/^function! translator#window#init(winid) abort$/;"	f
translator#window#open	plugged/vim-translator/autoload/translator/window.vim	/^function! translator#window#open(content) abort$/;"	f
translator#window#popup#create	plugged/vim-translator/autoload/translator/window/popup.vim	/^function! translator#window#popup#create(linelist, configs) abort$/;"	f
translator#window#preview#create	plugged/vim-translator/autoload/translator/window/preview.vim	/^function! translator#window#preview#create(linelist, configs) abort$/;"	f
tries	plugged/ale/run-tests.bat	/^set tries=0$/;"	v
trigger	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
try_download	plugged/vista.vim/test/fetch_testdata.sh	/^try_download() {$/;"	f
type	plugged/onedark.vim/build/package.json	/^    "type": "git",$/;"	s	object:repository
type	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*type[[:space:]]*([A-Z][a-zA-Z0-9_:]*)[[:space:]]*=\/\\1\/t,type\/$/;"	k	langdef:puppet
type	plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	s	object:repository
type-check	plugged/onedark.vim/build/package-lock.json	/^        "type-check": "^0.4.0",$/;"	s	object:dependencies.optionator.requires
type-check	plugged/onedark.vim/build/package-lock.json	/^        "type-check": "~0.4.0"$/;"	s	object:dependencies.levn.requires
type-check	plugged/onedark.vim/build/package-lock.json	/^    "type-check": {$/;"	o	object:dependencies
type-fest	plugged/onedark.vim/build/package-lock.json	/^        "type-fest": "^0.8.1"$/;"	s	object:dependencies.globals.requires
type-fest	plugged/onedark.vim/build/package-lock.json	/^    "type-fest": {$/;"	o	object:dependencies
type_go	plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go = {}$/;"	v
type_go	plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.kind2scope = {$/;"	v
type_go	plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.kinds = {$/;"	v
type_go	plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.lang = 'go'$/;"	v
type_go	plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.scope2kind = {$/;"	v
type_go	plugged/vista.vim/autoload/vista/types/uctags/go.vim	/^let type_go.sro = '.'$/;"	v
typedarray	plugged/onedark.vim/build/package-lock.json	/^        "typedarray": "^0.0.6"$/;"	s	object:dependencies.concat-stream.requires
typedarray	plugged/onedark.vim/build/package-lock.json	/^    "typedarray": {$/;"	o	object:dependencies
types	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*type[ \\t]+([a-zA-Z0-9_]+)\/\\1\/T,types\/$/;"	k	langdef:scala
types	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*(export)?[ \\t]*type[ \\t]+([a-zA-Z0-9_]+)\/\\2\/t,types\/$/;"	k	langdef:typescript
types,type definitions	plugged/vim-polyglot/ctags/rust.ctags	/^--regex-Rust=\/^[ \\t]*(pub[ \\t]+)?type[ \\t]+([a-zA-Z0-9_]+)\/\\2\/T,types,type definitions\/$/;"	k	langdef:Rust
typescript	plugged/vim-polyglot/ctags/typescript.ctags	/^--langdef=typescript$/;"	l
typescript_props	plugged/vim-polyglot/syntax/yats.vim	/^let typescript_props = 1$/;"	v
uc_minlines	plugged/vim-polyglot/syntax/uc.vim	/^  let uc_minlines = 10$/;"	v
uint16_t	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/mystdint.h	/^typedef unsigned short     uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/mystdint.h	/^typedef unsigned int       uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/mystdint.h	/^typedef unsigned long long uint64_t;$/;"	t	typeref:typename:unsigned long long
uint8_t	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/mystdint.h	/^typedef unsigned char      uint8_t;$/;"	t	typeref:typename:unsigned char
ultisnips_placeholder	plugged/ncm2-ultisnips/ncm2-plugin/ncm2_ultisnips.py	/^    def ultisnips_placeholder(num, txt=''):$/;"	f	function:wrap	file:
ultisnips_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
ultisnips_text	plugged/ncm2-ultisnips/ncm2-plugin/ncm2_ultisnips.py	/^    def ultisnips_text(txt):$/;"	f	function:wrap	file:
undo	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^    def undo(self):$/;"	m	class:RgExplManager
unescape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
unfinished_tasks	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^    uint32_t        unfinished_tasks;$/;"	m	struct:FeCircularQueue	typeref:typename:uint32_t	file:
unique_name_temp	plugged/ultisnips/test/vim_interface.py	/^    def unique_name_temp(self, suffix="", prefix=""):$/;"	m	class:TempFileManager
unite#sources#ultisnips#define	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define() abort$/;"	f
unregister_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
unshift	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
updateGtags	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def updateGtags(self, filename, single_update, auto):$/;"	m	class:GtagsExplorer
updateGtags	plugged/LeaderF/autoload/leaderf/python/leaderf/gtagsExpl.py	/^    def updateGtags(self, filename, single_update, auto=True):$/;"	m	class:GtagsExplManager
update_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def update_extends(self, child_ft, parent_fts):$/;"	m	class:SnippetSource
update_rtp	plugged/ncm2/pythonx/ncm2.py	/^    def update_rtp(self, rtp):$/;"	m	class:Ncm2Base
update_textobjects	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def update_textobjects(self, buf):$/;"	m	class:SnippetInstance
uri-js	plugged/onedark.vim/build/package-lock.json	/^        "uri-js": "^4.2.2"$/;"	s	object:dependencies.ajv.requires
uri-js	plugged/onedark.vim/build/package-lock.json	/^    "uri-js": {$/;"	o	object:dependencies
url	plugged/onedark.vim/build/package.json	/^    "url": "http:\/\/joshdick.net"$/;"	s	object:author
url	plugged/onedark.vim/build/package.json	/^    "url": "https:\/\/github.com\/joshdick\/onedark.vim.git"$/;"	s	object:repository
url	plugged/vim-snippets/addon-info.json	/^  "repository" : {"type": "git", "url": "git:\/\/github.com\/honza\/snipmate-snippets.git"},$/;"	s	object:repository
url_quote	plugged/vim-translator/script/translator.py	/^    from urllib import quote_plus as url_quote$/;"	x
url_quote	plugged/vim-translator/script/translator.py	/^    from urllib.parse import quote_plus as url_quote$/;"	x
useLastReverseOrder	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def useLastReverseOrder(self):$/;"	m	class:LfInstance
use_mutt_sidebar	plugged/vim-polyglot/syntax/muttrc.vim	/^  let use_mutt_sidebar=0$/;"	v
use_proxy_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def use_proxy_buffer(snippets_stack, vstate):$/;"	f
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
util-deprecate	plugged/onedark.vim/build/package-lock.json	/^        "util-deprecate": "^1.0.1"$/;"	s	object:dependencies.readable-stream.requires
util-deprecate	plugged/onedark.vim/build/package-lock.json	/^    "util-deprecate": {$/;"	o	object:dependencies
v	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py b:Lf_AnyExplManager."accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "bufTagExplManager.accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "bufExplManager.accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "fileExplManager.accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "functionExplManager.accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "gtagsExplManager.accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "helpExplManager.accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "lineExplManager.accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "mruExplManager.accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "qfloclistExplManager.accept('v')"<CR/;"	m
v	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "rgExplManager.accept('v')"<CR>$/;"	m
v	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> v             :exec g:Lf_py "tagExplManager.accept('v')"<CR>$/;"	m
v	plugged/ale/ftplugin/ale-preview-selection.vim	/^noremap <buffer> v <NOP>$/;"	m
v	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
v1.00 (2013-12-29)	plugged/LeaderF/CHANGELOG.md	/^v1.00 (2013-12-29)$/;"	c
v1.01 (2016-12-16)	plugged/LeaderF/CHANGELOG.md	/^v1.01 (2016-12-16)$/;"	c
v1.10 (2017-6-16)	plugged/LeaderF/CHANGELOG.md	/^v1.10 (2017-6-16)$/;"	c
v1.11 (2017-7-6)	plugged/LeaderF/CHANGELOG.md	/^v1.11 (2017-7-6)$/;"	c
v1.12 (2017-11-11)	plugged/LeaderF/CHANGELOG.md	/^v1.12 (2017-11-11)$/;"	c
v1.13 (2018-5-17)	plugged/LeaderF/CHANGELOG.md	/^v1.13 (2018-5-17)$/;"	c
v1.14 (2018-6-19)	plugged/LeaderF/CHANGELOG.md	/^v1.14 (2018-6-19)$/;"	c
v1.15 (2018-7-13)	plugged/LeaderF/CHANGELOG.md	/^v1.15 (2018-7-13)$/;"	c
v1.16 (2018-9-20)	plugged/LeaderF/CHANGELOG.md	/^v1.16 (2018-9-20)$/;"	c
v1.17 (2018-10-3)	plugged/LeaderF/CHANGELOG.md	/^v1.17 (2018-10-3)$/;"	c
v1.18 (2018-10-7)	plugged/LeaderF/CHANGELOG.md	/^v1.18 (2018-10-7)$/;"	c
v1.19 (2018-12-7)	plugged/LeaderF/CHANGELOG.md	/^v1.19 (2018-12-7)$/;"	c
v1.20 (2019-5-8)	plugged/LeaderF/CHANGELOG.md	/^v1.20 (2019-5-8)$/;"	c
v1.21 (2019-10-15)	plugged/LeaderF/CHANGELOG.md	/^v1.21 (2019-10-15)$/;"	c
v8-compile-cache	plugged/onedark.vim/build/package-lock.json	/^        "v8-compile-cache": "^2.0.3"$/;"	s	object:dependencies.eslint.requires
v8-compile-cache	plugged/onedark.vim/build/package-lock.json	/^    "v8-compile-cache": {$/;"	o	object:dependencies
val	plugged/vim-polyglot/ftplugin/markdown.vim	/^        let val = matchstr(s:filetype, "[^=]*$")$/;"	v
valTable	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyMatch.c	/^static uint16_t valTable[64] =$/;"	v	typeref:typename:uint16_t[64]	file:
valid	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def valid(self):$/;"	m	class:FloatWindow
valid	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def valid(self):$/;"	m	class:PopupWindow
validate_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def validate_buffer(self):$/;"	m	class:VimBufferProxy
values	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*|protected)[ /;"	k	langdef:scala
var_pat1	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^var_pat1 = re.compile(r'^\\$([_a-zA-Z][_a-zA-Z0-9]*)')$/;"	v
var_pat2	plugged/ncm2-ultisnips/pythonx/ncm2_lsp_snippet/parser.py	/^var_pat2 = re.compile(r'^\\$\\{([_a-zA-Z][_a-zA-Z0-9]*)\\}')$/;"	v
variable	plugged/vim-polyglot/ctags/puppet.ctags	/^--regex-puppet=\/^[[:space:]]*([\\$][a-zA-Z0-9_:]+)[[:space:]]*=\/\\1\/v,variable\/$/;"	k	langdef:puppet
variables	plugged/vim-polyglot/ctags/scala.ctags	/^--regex-scala=\/^[ \\t]*((abstract|final|sealed|implicit|lazy|override|private[^ ]*|protected)[ /;"	k	langdef:scala
variables	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*export[ \\t]+(var|const|let)[ \\t]+([a-zA-Z0-9_]+)\/\\1\/v,variable/;"	k	langdef:typescript
varlambdas	plugged/vim-polyglot/ctags/typescript.ctags	/^--regex-typescript=\/^[ \\t]*var[ \\t]+([a-zA-Z0-9_]+)[ \\t]*=[ \\t]*function[ \\t]*\\(\\)\/\\1\//;"	k	langdef:typescript
vera_comment_strings	plugged/vim-polyglot/syntax/vera.vim	/^let vera_comment_strings = 1$/;"	v
verify	plugged/vim-polyglot/scripts/build	/^def verify(packages, heuristics)$/;"	f
version	plugged/gruvbox/package.json	/^  "version": "2.0.0",$/;"	s
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "1.1.4",$/;"	s	object:dependencies.chalk.dependencies.color-name
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "1.3.0",$/;"	s	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "1.3.0",$/;"	s	object:dependencies.espree.dependencies.eslint-visitor-keys
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.chalk.dependencies.color-convert
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "2.4.2",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "4.0.0",$/;"	s	object:dependencies.chalk.dependencies.has-flag
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "4.1.0",$/;"	s	object:dependencies.string-width.dependencies.ansi-regex
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "4.3.0",$/;"	s	object:dependencies.chalk.dependencies.ansi-styles
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.esquery.dependencies.estraverse
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.esrecurse.dependencies.estraverse
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.string-width.dependencies.strip-ansi
version	plugged/onedark.vim/build/package-lock.json	/^          "version": "7.2.0",$/;"	s	object:dependencies.chalk.dependencies.supports-color
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.0.1",$/;"	s	object:dependencies.concat-map
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.0.6",$/;"	s	object:dependencies.typedarray
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.1.3",$/;"	s	object:dependencies.deep-is
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.1.4",$/;"	s	object:dependencies.imurmurhash
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.2.0",$/;"	s	object:dependencies.text-table
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.2.1",$/;"	s	object:dependencies.@eslint/eslintrc
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.2.1",$/;"	s	object:dependencies.is-arrayish
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.4.0",$/;"	s	object:dependencies.type-check
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.4.1",$/;"	s	object:dependencies.json-schema-traverse
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.4.1",$/;"	s	object:dependencies.levn
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.5.5",$/;"	s	object:dependencies.mkdirp
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.7.2",$/;"	s	object:dependencies.termcolors
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.8.1",$/;"	s	object:dependencies.type-fest
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "0.9.1",$/;"	s	object:dependencies.optionator
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.astral-regex
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.balanced-match
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.fs.realpath
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.semver-compare
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.which-pm-runs
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.functional-red-black-tree
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.json-stable-stringify-without-jsonify
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.parent-module
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.path-is-absolute
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.10",$/;"	s	object:dependencies.argparse
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.util-deprecate
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.wrappy
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.sprintf-js
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.write
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.colr-convert
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.escape-string-regexp
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.0.6",$/;"	s	object:dependencies.inflight
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.buffer-from
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.1.11",$/;"	s	object:dependencies.brace-expansion
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.1.3",$/;"	s	object:dependencies.color-name
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.1.3",$/;"	s	object:dependencies.dot
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.1.6",$/;"	s	object:dependencies.lines-and-columns
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.10.0",$/;"	s	object:dependencies.yaml
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.prelude-ls
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.2.2",$/;"	s	object:dependencies.colr
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.2.3",$/;"	s	object:dependencies.word-wrap
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.2.5",$/;"	s	object:dependencies.minimist
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.3.0",$/;"	s	object:dependencies.string_decoder
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.3.1",$/;"	s	object:dependencies.esquery
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.3.2",$/;"	s	object:dependencies.error-ex
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.natural-compare
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.once
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "1.9.3",$/;"	s	object:dependencies.color-convert
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "12.4.0",$/;"	s	object:dependencies.globals
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.ci-info
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.concat-stream
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.eslint-visitor-keys
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.is-fullwidth-code-point
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.isexe
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.semver-regex
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.shebang-command
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.flat-cache
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.flatted
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.which
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.esutils
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.opencollective-postinstall
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.progress
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.4",$/;"	s	object:dependencies.inherits
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.0.6",$/;"	s	object:dependencies.fast-levenshtein
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.eslint-utils
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.fast-json-stable-stringify
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.slice-ansi
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.is-extglob
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.punycode
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.ms
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.p-try
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.v8-compile-cache
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.p-limit
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.3.1",$/;"	s	object:dependencies.json-parse-even-better-errors
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.3.6",$/;"	s	object:dependencies.enquirer
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "2.6.3",$/;"	s	object:dependencies.rimraf
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.doctrine
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.has-flag
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.shebang-regex
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.slash
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.0.4",$/;"	s	object:dependencies.minimatch
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.callsites
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.regexpp
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.string-width
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.path-key
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.strip-json-comments
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.1.3",$/;"	s	object:dependencies.fast-deep-equal
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.14.0",$/;"	s	object:dependencies.js-yaml
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.2.0",$/;"	s	object:dependencies.find-versions
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.2.0",$/;"	s	object:dependencies.please-upgrade-node
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.2.1",$/;"	s	object:dependencies.ansi-styles
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.2.2",$/;"	s	object:dependencies.import-fresh
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.6.0",$/;"	s	object:dependencies.compare-versions
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "3.6.0",$/;"	s	object:dependencies.readable-stream
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.@types/parse-json
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.js-tokens
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.path-exists
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.path-type
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.resolve-from
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.yallist
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.esprima
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.is-glob
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.0.6",$/;"	s	object:dependencies.ignore
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.chalk
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.find-up
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.p-locate
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.1.1",$/;"	s	object:dependencies.ansi-colors
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.1.1",$/;"	s	object:dependencies.commander
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.17.20",$/;"	s	object:dependencies.lodash
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.2.0",$/;"	s	object:dependencies.pkg-dir
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.3.0",$/;"	s	object:dependencies.esrecurse
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.3.0",$/;"	s	object:dependencies.estraverse
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.3.0",$/;"	s	object:dependencies.husky
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.3.1",$/;"	s	object:dependencies.debug
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "4.4.0",$/;"	s	object:dependencies.uri-js
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.ansi-regex
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.locate-path
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.0.1",$/;"	s	object:dependencies.file-entry-cache
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.1.0",$/;"	s	object:dependencies.parse-json
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.1.1",$/;"	s	object:dependencies.eslint-scope
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.1.1",$/;"	s	object:dependencies.glob-parent
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.2.1",$/;"	s	object:dependencies.safe-buffer
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.3.1",$/;"	s	object:dependencies.acorn-jsx
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.4.6",$/;"	s	object:dependencies.table
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "5.5.0",$/;"	s	object:dependencies.supports-color
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.lru-cache
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.strip-ansi
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "6.12.6",$/;"	s	object:dependencies.ajv
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.0.0",$/;"	s	object:dependencies.cosmiconfig
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.0.3",$/;"	s	object:dependencies.cross-spawn
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.0.3",$/;"	s	object:dependencies.emoji-regex
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.1.6",$/;"	s	object:dependencies.glob
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.10.4",$/;"	s	object:dependencies.@babel/code-frame
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.10.4",$/;"	s	object:dependencies.@babel/helper-validator-identifier
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.10.4",$/;"	s	object:dependencies.@babel/highlight
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.14.0",$/;"	s	object:dependencies.eslint
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.3.0",$/;"	s	object:dependencies.espree
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.3.4",$/;"	s	object:dependencies.semver
version	plugged/onedark.vim/build/package-lock.json	/^      "version": "7.4.1",$/;"	s	object:dependencies.acorn
version	plugged/onedark.vim/build/package-lock.json	/^  "version": "1.0.0",$/;"	s
version	plugged/onedark.vim/build/package.json	/^  "version": "1.0.0",$/;"	s
version	plugged/ultisnips/test/vim_test_case.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:VimTestCase
vim	plugged/gruvbox/package.json	/^  "vim": {$/;"	o
vim	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^	vim = {}$/;"	v
vim	plugged/vim-polyglot/ftplugin/terraform.vim	/^  augroup vim.terraform.fmt$/;"	a
vim	plugged/vim-polyglot/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim-airline Theme	plugged/onedark.vim/README.md	/^## vim-airline Theme$/;"	s
vim-airline [![Build Status](https://travis-ci.org/vim-airline/vim-airline.svg?branch=master)](https://travis-ci.org/vim-airline/vim-airline) [![Say Thanks!](https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg)](https://saythanks.io/to/cb%40256bit.org) [![reviewdog](https://github.com/vim-airline/vim-airline/workflows/reviewdog/badge.svg?branch=master&event=push)](https://github.com/vim-airline/vim-airline/actions?query=workflow%3Areviewdog+event%3Apush+branch%3Amaster)	plugged/vim-airline/README.md	/^# vim-airline [![Build Status](https:\/\/travis-ci.org\/vim-airline\/vim-airline.svg?branch=mast/;"	c
vim-startify	plugged/vim-devicons/DEVELOPER.md	/^##### vim-startify$/;"	T
vim-translator	plugged/vim-translator/README.md	/^# vim-translator$/;"	c
vim-which-key	plugged/vim-which-key/README.md	/^# vim-which-key$/;"	c
vim_executable	plugged/ultisnips/test/vim_interface.py	/^    def vim_executable(self):$/;"	m	class:VimInterface
vim_flavor	plugged/ultisnips/test/vim_test_case.py	/^    vim_flavor = None  # will be 'vim' or 'neovim'.$/;"	v	class:VimTestCase
vim_snippets#Filename	plugged/vim-snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vimfiler#columns#devicons#define	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! vimfiler#columns#devicons#define() abort$/;"	f
virtual_position	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def virtual_position(line, col):$/;"	f
vista#	plugged/vista.vim/autoload/vista.vim	/^function! vista#(bang, ...) abort$/;"	f
vista#AutoUpdateWithDelay	plugged/vista.vim/autoload/vista.vim	/^function! vista#AutoUpdateWithDelay(Fn, Args) abort$/;"	f
vista#Debug	plugged/vista.vim/autoload/vista.vim	/^function! vista#Debug(...) abort$/;"	f
vista#FindItemsUnderDirectory	plugged/vista.vim/autoload/vista.vim	/^function! vista#FindItemsUnderDirectory(dir) abort$/;"	f
vista#GetExplicitExecutive	plugged/vista.vim/autoload/vista.vim	/^function! vista#GetExplicitExecutive(filetype) abort$/;"	f
vista#GetExplicitExecutiveOrDefault	plugged/vista.vim/autoload/vista.vim	/^function! vista#GetExplicitExecutiveOrDefault() abort$/;"	f
vista#OnExecute	plugged/vista.vim/autoload/vista.vim	/^function! vista#OnExecute(provider, AUF) abort$/;"	f
vista#RunForNearestMethodOrFunction	plugged/vista.vim/autoload/vista.vim	/^function! vista#RunForNearestMethodOrFunction() abort$/;"	f
vista#SetProvider	plugged/vista.vim/autoload/vista.vim	/^function! vista#SetProvider(provider) abort$/;"	f
vista#ShouldIgnore	plugged/vista.vim/autoload/vista.vim	/^function! vista#ShouldIgnore(kind) abort$/;"	f
vista#ShouldSkip	plugged/vista.vim/autoload/vista.vim	/^function! vista#ShouldSkip() abort$/;"	f
vista#Sort	plugged/vista.vim/autoload/vista.vim	/^function! vista#Sort() abort$/;"	f
vista#autocmd#Init	plugged/vista.vim/autoload/vista/autocmd.vim	/^function! vista#autocmd#Init(group_name, AUF) abort$/;"	f
vista#autocmd#InitMOF	plugged/vista.vim/autoload/vista/autocmd.vim	/^function! vista#autocmd#InitMOF() abort$/;"	f
vista#cursor#FindNearestMethodOrFunction	plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#FindNearestMethodOrFunction() abort$/;"	f
vista#cursor#FoldOrJump	plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#FoldOrJump() abort$/;"	f
vista#cursor#NearestSymbol	plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#NearestSymbol() abort$/;"	f
vista#cursor#ShowDetail	plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowDetail(_timer) abort$/;"	f
vista#cursor#ShowDetailWithDelay	plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowDetailWithDelay() abort$/;"	f
vista#cursor#ShowTag	plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowTag() abort$/;"	f
vista#cursor#ShowTagFor	plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#ShowTagFor(lnum) abort$/;"	f
vista#cursor#TogglePreview	plugged/vista.vim/autoload/vista/cursor.vim	/^function! vista#cursor#TogglePreview() abort$/;"	f
vista#cursor#ctags#GetInfo	plugged/vista.vim/autoload/vista/cursor/ctags.vim	/^function! vista#cursor#ctags#GetInfo() abort$/;"	f
vista#cursor#lsp#GetInfo	plugged/vista.vim/autoload/vista/cursor/lsp.vim	/^function! vista#cursor#lsp#GetInfo() abort$/;"	f
vista#debugging#Info	plugged/vista.vim/autoload/vista/debugging.vim	/^function! vista#debugging#Info() abort$/;"	f
vista#debugging#InfoToClipboard	plugged/vista.vim/autoload/vista/debugging.vim	/^function! vista#debugging#InfoToClipboard() abort$/;"	f
vista#echo#EchoInCmdline	plugged/vista.vim/autoload/vista/echo.vim	/^function! vista#echo#EchoInCmdline(msg, tag) abort$/;"	f
vista#echo#EchoScopeInCmdlineIsOk	plugged/vista.vim/autoload/vista/echo.vim	/^function! vista#echo#EchoScopeInCmdlineIsOk() abort$/;"	f
vista#error#	plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#(msg) abort$/;"	f
vista#error#Expect	plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#Expect(expected) abort$/;"	f
vista#error#For	plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#For(cmd, filetype) abort$/;"	f
vista#error#InvalidExecutive	plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#InvalidExecutive(exe) abort$/;"	f
vista#error#InvalidFinderArgument	plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#InvalidFinderArgument() abort$/;"	f
vista#error#InvalidOption	plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#InvalidOption(opt, ...) abort$/;"	f
vista#error#Need	plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#Need(needed) abort$/;"	f
vista#error#Notify	plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#Notify(msg) abort$/;"	f
vista#error#RunCtags	plugged/vista.vim/autoload/vista/error.vim	/^function! vista#error#RunCtags(cmd) abort$/;"	f
vista#executive#ale#Cache	plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! vista#executive#ale#Cache() abort$/;"	f
vista#executive#ale#Execute	plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! vista#executive#ale#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#ale#Run	plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! vista#executive#ale#Run(fpath) abort$/;"	f
vista#executive#ale#RunAsync	plugged/vista.vim/autoload/vista/executive/ale.vim	/^function! vista#executive#ale#RunAsync() abort$/;"	f
vista#executive#coc#Cache	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#Cache() abort$/;"	f
vista#executive#coc#Execute	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#coc#Run	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#Run(fpath) abort$/;"	f
vista#executive#coc#RunAsync	plugged/vista.vim/autoload/vista/executive/coc.vim	/^function! vista#executive#coc#RunAsync() abort$/;"	f
vista#executive#ctags#AutoUpdate	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#AutoUpdate(fpath) abort$/;"	f
vista#executive#ctags#Cache	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#Cache() abort$/;"	f
vista#executive#ctags#Execute	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#ctags#ProjectRun	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#ProjectRun() abort$/;"	f
vista#executive#ctags#Run	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#Run(fpath) abort$/;"	f
vista#executive#ctags#RunAsync	plugged/vista.vim/autoload/vista/executive/ctags.vim	/^function! vista#executive#ctags#RunAsync(fpath) abort$/;"	f
vista#executive#lcn#Cache	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#Cache() abort$/;"	f
vista#executive#lcn#Execute	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#lcn#Run	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#Run(fpath) abort$/;"	f
vista#executive#lcn#RunAsync	plugged/vista.vim/autoload/vista/executive/lcn.vim	/^function! vista#executive#lcn#RunAsync() abort$/;"	f
vista#executive#nvim_lsp#Cache	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#Cache() abort$/;"	f
vista#executive#nvim_lsp#Execute	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#nvim_lsp#Run	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#Run(fpath) abort$/;"	f
vista#executive#nvim_lsp#RunAsync	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#RunAsync() abort$/;"	f
vista#executive#nvim_lsp#SetData	plugged/vista.vim/autoload/vista/executive/nvim_lsp.vim	/^function! vista#executive#nvim_lsp#SetData(data) abort$/;"	f
vista#executive#vim_lsc#Cache	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! vista#executive#vim_lsc#Cache() abort$/;"	f
vista#executive#vim_lsc#Execute	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! vista#executive#vim_lsc#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#vim_lsc#Run	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! vista#executive#vim_lsc#Run(fpath) abort$/;"	f
vista#executive#vim_lsc#RunAsync	plugged/vista.vim/autoload/vista/executive/vim_lsc.vim	/^function! vista#executive#vim_lsc#RunAsync() abort$/;"	f
vista#executive#vim_lsp#Cache	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#Cache() abort$/;"	f
vista#executive#vim_lsp#Execute	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#Execute(bang, should_display, ...) abort$/;"	f
vista#executive#vim_lsp#Run	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#Run(fpath) abort$/;"	f
vista#executive#vim_lsp#RunAsync	plugged/vista.vim/autoload/vista/executive/vim_lsp.vim	/^function! vista#executive#vim_lsp#RunAsync() abort$/;"	f
vista#extension#markdown#AutoUpdate	plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! vista#extension#markdown#AutoUpdate(fpath) abort$/;"	f
vista#extension#markdown#Execute	plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! vista#extension#markdown#Execute(_bang, should_display) abort$/;"	f
vista#extension#markdown#GetHeader	plugged/vista.vim/autoload/vista/extension/markdown.vim	/^function! vista#extension#markdown#GetHeader(lnum) abort$/;"	f
vista#extension#rst#AutoUpdate	plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! vista#extension#rst#AutoUpdate(fpath) abort$/;"	f
vista#extension#rst#Execute	plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! vista#extension#rst#Execute(_bang, should_display) abort$/;"	f
vista#extension#rst#GetHeader	plugged/vista.vim/autoload/vista/extension/rst.vim	/^function! vista#extension#rst#GetHeader(lnum) abort$/;"	f
vista#finder#Dispatch	plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#Dispatch(bang, finder, executive) abort$/;"	f
vista#finder#GetSymbols	plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#GetSymbols(...) abort$/;"	f
vista#finder#PrepareOpts	plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#PrepareOpts(source, prompt) abort$/;"	f
vista#finder#PrepareSource	plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#PrepareSource(raw_items) abort$/;"	f
vista#finder#RunFZFOrSkim	plugged/vista.vim/autoload/vista/finder.vim	/^function! vista#finder#RunFZFOrSkim(apply_run) abort$/;"	f
vista#finder#clap#Run	plugged/vista.vim/autoload/vista/finder/clap.vim	/^function! vista#finder#clap#Run(...) abort$/;"	f
vista#finder#fzf#Highlight	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#Highlight() abort$/;"	f
vista#finder#fzf#ProjectRun	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#ProjectRun(executive) abort$/;"	f
vista#finder#fzf#Run	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#Run(...) abort$/;"	f
vista#finder#fzf#extract	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#extract(line) abort$/;"	f
vista#finder#fzf#sink	plugged/vista.vim/autoload/vista/finder/fzf.vim	/^function! vista#finder#fzf#sink(line, ...) abort$/;"	f
vista#finder#skim#Run	plugged/vista.vim/autoload/vista/finder/skim.vim	/^function! vista#finder#skim#Run(...) abort$/;"	f
vista#floating#Close	plugged/vista.vim/autoload/vista/floating.vim	/^function! vista#floating#Close() abort$/;"	f
vista#floating#DisplayAt	plugged/vista.vim/autoload/vista/floating.vim	/^function! vista#floating#DisplayAt(lnum, tag) abort$/;"	f
vista#floating#DisplayRawAt	plugged/vista.vim/autoload/vista/floating.vim	/^function! vista#floating#DisplayRawAt(lnum, lines) abort$/;"	f
vista#fold#Expr	plugged/vista.vim/autoload/vista/fold.vim	/^function! vista#fold#Expr() abort$/;"	f
vista#fold#Text	plugged/vista.vim/autoload/vista/fold.vim	/^function! vista#fold#Text() abort$/;"	f
vista#ftplugin#Set	plugged/vista.vim/autoload/vista/ftplugin.vim	/^function! vista#ftplugin#Set() abort$/;"	f
vista#highlight#Add	plugged/vista.vim/autoload/vista/highlight.vim	/^function! vista#highlight#Add(lnum, ensure_visible, tag) abort$/;"	f
vista#init#Api	plugged/vista.vim/autoload/vista/init.vim	/^function! vista#init#Api() abort$/;"	f
vista#jump#NextTopLevel	plugged/vista.vim/autoload/vista/jump.vim	/^function! vista#jump#NextTopLevel() abort$/;"	f
vista#jump#PrevTopLevel	plugged/vista.vim/autoload/vista/jump.vim	/^function! vista#jump#PrevTopLevel() abort$/;"	f
vista#jump#TagLine	plugged/vista.vim/autoload/vista/jump.vim	/^function! vista#jump#TagLine(tag) abort$/;"	f
vista#parser#ctags#FromExtendedRaw	plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#FromExtendedRaw(line, container) abort$/;"	f
vista#parser#ctags#FromJSON	plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#FromJSON(line, container) abort$/;"	f
vista#parser#ctags#RecursiveFromJSON	plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#RecursiveFromJSON(line, container) abort$/;"	f
vista#parser#ctags#RecursiveFromXformat	plugged/vista.vim/autoload/vista/parser/ctags.vim	/^function! vista#parser#ctags#RecursiveFromXformat(line, container) abort$/;"	f
vista#parser#lsp#CocSymbols	plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! vista#parser#lsp#CocSymbols(symbol, container) abort$/;"	f
vista#parser#lsp#ExtractSymbol	plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! vista#parser#lsp#ExtractSymbol(symbol, container) abort$/;"	f
vista#parser#lsp#KindToSymbol	plugged/vista.vim/autoload/vista/parser/lsp.vim	/^function! vista#parser#lsp#KindToSymbol(line, container) abort$/;"	f
vista#popup#Close	plugged/vista.vim/autoload/vista/popup.vim	/^function! vista#popup#Close() abort$/;"	f
vista#popup#DisplayAt	plugged/vista.vim/autoload/vista/popup.vim	/^function! vista#popup#DisplayAt(lnum, tag) abort$/;"	f
vista#popup#DisplayRawAt	plugged/vista.vim/autoload/vista/popup.vim	/^function! vista#popup#DisplayRawAt(lnum, lines) abort$/;"	f
vista#preview#GetLines	plugged/vista.vim/autoload/vista/preview.vim	/^function! vista#preview#GetLines(lnum) abort$/;"	f
vista#renderer#Decorate	plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#Decorate(kind) abort$/;"	f
vista#renderer#IconFor	plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#IconFor(kind) abort$/;"	f
vista#renderer#LSPPreprocess	plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#LSPPreprocess(lsp_result) abort$/;"	f
vista#renderer#LSPProcess	plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#LSPProcess(processed_data, reload_only, should_display) abort$/;"	f
vista#renderer#Render	plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#Render(data) abort$/;"	f
vista#renderer#RenderAndDisplay	plugged/vista.vim/autoload/vista/renderer.vim	/^function! vista#renderer#RenderAndDisplay(data) abort$/;"	f
vista#renderer#hir#ctags#Render	plugged/vista.vim/autoload/vista/renderer/hir/ctags.vim	/^function! vista#renderer#hir#ctags#Render() abort$/;"	f
vista#renderer#hir#lsp#Coc	plugged/vista.vim/autoload/vista/renderer/hir/lsp.vim	/^function! vista#renderer#hir#lsp#Coc(data) abort$/;"	f
vista#renderer#kind#Render	plugged/vista.vim/autoload/vista/renderer/kind.vim	/^function! vista#renderer#kind#Render(data) abort$/;"	f
vista#renderer#line#Render	plugged/vista.vim/autoload/vista/renderer/line.vim	/^function! vista#renderer#line#Render() abort$/;"	f
vista#renderer#markdown_like#MD	plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! vista#renderer#markdown_like#MD(data) abort$/;"	f
vista#renderer#markdown_like#RST	plugged/vista.vim/autoload/vista/renderer/markdown_like.vim	/^function! vista#renderer#markdown_like#RST(data) abort$/;"	f
vista#sidebar#Close	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Close() abort$/;"	f
vista#sidebar#IsOpen	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#IsOpen() abort$/;"	f
vista#sidebar#Open	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Open() abort$/;"	f
vista#sidebar#OpenOrUpdate	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#OpenOrUpdate(rows) abort$/;"	f
vista#sidebar#Reload	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Reload(data) abort$/;"	f
vista#sidebar#Toggle	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#Toggle() abort$/;"	f
vista#sidebar#ToggleFocus	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#ToggleFocus() abort$/;"	f
vista#sidebar#WhichFileType	plugged/vista.vim/autoload/vista/sidebar.vim	/^function! vista#sidebar#WhichFileType() abort$/;"	f
vista#source#GotoWin	plugged/vista.vim/autoload/vista/source.vim	/^function! vista#source#GotoWin() abort$/;"	f
vista#source#PeekSymbol	plugged/vista.vim/autoload/vista/source.vim	/^  function! vista#source#PeekSymbol(lnum, tag) abort$/;"	f
vista#source#Update	plugged/vista.vim/autoload/vista/source.vim	/^function! vista#source#Update(bufnr, winnr, ...) abort$/;"	f
vista#statusline#	plugged/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#() abort$/;"	f
vista#statusline#Render	plugged/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#Render() abort$/;"	f
vista#statusline#RenderOnWinEvent	plugged/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#RenderOnWinEvent() abort$/;"	f
vista#statusline#ShouldDisable	plugged/vista.vim/autoload/vista/statusline.vim	/^function! vista#statusline#ShouldDisable() abort$/;"	f
vista#toc#IsSupported	plugged/vista.vim/autoload/vista/toc.vim	/^function! vista#toc#IsSupported(filetype) abort$/;"	f
vista#toc#Run	plugged/vista.vim/autoload/vista/toc.vim	/^function! vista#toc#Run() abort$/;"	f
vista#types#uctags#KindsFor	plugged/vista.vim/autoload/vista/types/uctags.vim	/^function! vista#types#uctags#KindsFor(filetype) abort$/;"	f
vista#util#BinarySearch	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#BinarySearch(array, target, cmp_key, ret_key) abort$/;"	f
vista#util#Blink	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Blink(times, delay, ...) abort$/;"	f
vista#util#CacheDirectory	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#CacheDirectory() abort$/;"	f
vista#util#Complete	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Complete(A, L, P) abort$/;"	f
vista#util#Cursor	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Cursor(...) abort$/;"	f
vista#util#JobStop	plugged/vista.vim/autoload/vista/util.vim	/^  function! vista#util#JobStop(jobid) abort$/;"	f
vista#util#Join	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Join(...) abort$/;"	f
vista#util#LowerIndentLineNr	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#LowerIndentLineNr() abort$/;"	f
vista#util#MaxLen	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#MaxLen() abort$/;"	f
vista#util#Retriving	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Retriving(executive) abort$/;"	f
vista#util#SetBufline	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#SetBufline(bufnr, lines) abort$/;"	f
vista#util#ToCamelCase	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#ToCamelCase(s) abort$/;"	f
vista#util#Trim	plugged/vista.vim/autoload/vista/util.vim	/^  function! vista#util#Trim(str) abort$/;"	f
vista#util#Truncate	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Truncate(msg) abort$/;"	f
vista#util#TryAdd	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#TryAdd(dict, key, value) abort$/;"	f
vista#util#Warning	plugged/vista.vim/autoload/vista/util.vim	/^function! vista#util#Warning(msg) abort$/;"	f
vista#win#CloseFloating	plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#CloseFloating() abort$/;"	f
vista#win#Execute	plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#Execute(winnr, Run, ...) abort$/;"	f
vista#win#FloatingDisplay	plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#FloatingDisplay(...) abort$/;"	f
vista#win#FloatingDisplayOrPeek	plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#FloatingDisplayOrPeek(lnum, tag) abort$/;"	f
vista#win#ShowFoldedDetailInFloatingIsOk	plugged/vista.vim/autoload/vista/win.vim	/^function! vista#win#ShowFoldedDetailInFloatingIsOk() abort$/;"	f
vista.get_tagline_under_cursor	plugged/vista.vim/autoload/vista/init.vim	/^  function! g:vista.get_tagline_under_cursor() abort$/;"	f
vista.winid	plugged/vista.vim/autoload/vista/init.vim	/^  function! g:vista.winid() abort$/;"	f
vista.winnr	plugged/vista.vim/autoload/vista/init.vim	/^  function! g:vista.winnr() abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
w	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> w             :call leaderf#Rg#ApplyChangesAndSave(0)<CR>$/;"	m
wait_until_file_exists	plugged/ultisnips/test/vim_interface.py	/^def wait_until_file_exists(file_path, times=None, interval=0.01):$/;"	f
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 0, "abc"), ("I", 0, 0, "def"))$/;"	v	class:TestNoSubstring
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "asomelongertextb"), ("I", 0, 1, "o"))$/;"	v	class:TestCommonCharacters
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "tdin.h"),)$/;"	v	class:MatchIsTooCheap
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 10, "Beginning"), ("I", 0, 10, "t"))$/;"	v	class:TestRealLife
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 11, "this is it"), ("I", 0, 11, "a"))$/;"	v	class:TestUltiSnipsProblem
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " "),)$/;"	v	class:TestGuessing_DeleteOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " hallo"),)$/;"	v	class:TestCheapDelete
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 6, " "),)$/;"	v	class:TestGuessing_BackspaceOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 1, 6, "kjsdhfjksdhfkjhsdfkh"), ("I", 1, 6, "b"))$/;"	v	class:TestCrash
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 11, " "),)$/;"	v	class:TestRealLife1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 6, " "),)$/;"	v	class:TestGuessing_InsertOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 7, " "),)$/;"	v	class:TestGuessing_InsertOneChar1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = " :latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "123 simple 123 expand 123 456"$/;"	v	class:Anon_Trigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abc simple expand"$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple 123 expand 123 456"$/;"	v	class:Anon_NoTrigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple expand"$/;"	v	class:Anon_NoTrigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Opts
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
wanted	plugged/ultisnips/test/test_Autocommands.py	/^    wanted = "[ [ bar ] ] done M1U1"$/;"	v	class:Autocommands
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "abc"$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered\\na"$/;"	v	class:Autotrigger_CanMatchContext
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "if var == nil: pass\\n="$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_BS
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_Jump
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:MultiLineDefault_Type
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_EndNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_EndStartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_JustNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """$/;"	v	class:TrailingNewline_TabStop_StartNL
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """Hello \\t \\nGoodbye"""$/;"	v	class:LeaveTrailingWhitespace
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """Hello\\nGoodbye"""$/;"	v	class:RemoveTrailingWhitespace
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """\\tnext line\\n\\n\\tshould be empty"""$/;"	v	class:TrimSpacesAtEndOfLines
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = """\\tnext line\\n\\t\\n\\tshould be empty"""$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "oouu success b"$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hello üü hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hüüll üü aaaaa"$/;"	v	class:Snippet_With_Umlauts_Python
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü more text üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü more textßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üüüüüßßßßmore text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "ööuu success b"$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1 is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.a|2.c"$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.red|2.gray"$/;"	v	class:Choices_WillBeExpandedToInlineSelection
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.Русский язык|2.中文|3.한국어|4.öääö"$/;"	v	class:Choices_CanTakeNonAsciiCharacters
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "a is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan is a color, mirror: cyan is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan, mirror: cyan"$/;"	v	class:Choices_With_Mirror
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "fun2(param1, param_end) result: fun2(param1, "$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray is color\\nline 2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray"$/;"	v	class:Choices_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah"$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer foo"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "||"$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = ($/;"	v	class:Completion_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "completion1 foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "foo completion1"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "(2, 1)"$/;"	v	class:ContextSnippets_CursorIsZeroBased
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "1 1"$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "Yes No"$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "b"$/;"	v	class:ContextSnippets_PriorityKeyword
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportError
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "{ < a > }"$/;"	v	class:ContextSnippets_UseContext
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = r"""$/;"	v	class:ContextSnippets_SnippetPriority
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = """\\$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = ""$/;"	v	class:Undo_CompletelyUndoSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_NotZero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_Zero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "a b c\\na\\nb\\nc\\n\\nshallnot"$/;"	v	class:JumpForward_DefSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "aaaaa()3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "end"$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "first line\\n\\n\\ntest\\n\\n\\nthird line"$/;"	v	class:Undo_RemoveWholeSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello upsi Hello\\naaa upsi bbb\\nWorld"$/;"	v	class:Undo_RemoveEditInTabstop
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello"$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nend"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nendworld"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if :\\n\\t"$/;"	v	class:Undo_ChangesInPlaceholder
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if a: test"$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\t"$/;"	v	class:Undo_RemoveOneSnippetByTime2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\ti"$/;"	v	class:Undo_RemoveOneSnippetByTime
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:DeleteSnippetInsertion1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "world"$/;"	v	class:DeleteSnippetInsertion0
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo We"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo Welt!"$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt\\n\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo \\n"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "SimpleText" + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt! gehts"$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehts gehts"$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "na du Hallo Welt!and blub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "  world hello;blub"$/;"	v	class:Bug1251994
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\nblah\\nhello world "$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\t\\t\\tpadding: 2px"$/;"	v	class:VirtualEdit
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\tfoo"$/;"	v	class:ShiftWidthZero
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "hello"$/;"	v	class:NonUnicodeDataInUnnamedRegister
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "yank HELLO world yank"$/;"	v	class:RetainsTheUnnamedRegister
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = """Hello {{{$/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v	class:FoldOverwrite_Simple_ECR
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v	class:Fold_DeleteMiddleLine_ECR
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "package c03;\\nsub junk {}\\n1;"$/;"	v	class:PerlSyntaxFold
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    for\\n        blahHui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    hui\\n    blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    huiblah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "   Blaahblah \\t\\t  "$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "   Something\\n        Hallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = """BeforeThis is a$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = """This is a longer$/;"	v	class:FOTextAfter_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = """This is a$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <cstdlib>"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <foo>"$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    hi 4 End"$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCodeOld_IndentedMultiline
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCode_MultilineIndented
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """        hi World End"""$/;"	v	class:PythonCode_IndentProblem
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """    hi$/;"	v	class:PythonCode_IndentEtSwOffset
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """   hi$/;"	v	class:PythonCode_IndentEtSw
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """   hi$/;"	v	class:PythonCode_IndentNoetSwTs
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendShift
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendShiftMethods
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_MultiAppendSimpleIndent
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_ResetIndent
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """$/;"	v	class:PythonCode_SimpleMkline
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """first second (placeholder: first second (placeholder: ))$/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """first second (placeholder: first)$/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi no End"""$/;"	v	class:PythonCode_OptNoExists
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi nothing test End"""$/;"	v	class:PythonCode_Locals
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = """hi yes End"""$/;"	v	class:PythonCode_OptExists
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "$hi"$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "5"$/;"	v	class:Python_SnipRvCanBeNonText
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now Hallo Welt endand more"$/;"	v	class:TabStop_Shell_ShebangPython
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now fromecho endand more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo overwrite endand more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "OKAYhokayoOKAY"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "bl-\\n\\tah, bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "blah"$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCode_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hVhello\\nnice\\nworld\\nb"$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hbabc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCodeOld_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCode_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2 End"$/;"	v	class:PythonCode_SimpleAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2\\nHallo3 End"$/;"	v	class:PythonCode_MultiAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi New End"$/;"	v	class:PythonCode_UseNewOverOld
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo you!and more"$/;"	v	class:TabStop_Shell_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo\\nWeiterand more"$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi höüäh you!and more"$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + 100 * "\\n" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hiEnd"$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hvblablubb"$/;"	v	class:PythonVisual_SelectOneWord
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ups egal hi hi"$/;"	v	class:PythonCode_TrickyReferences
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = " BLAAH"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "BLAAH"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo BLAAH"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo TEST ONE"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo qualleHi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "} BLAAH"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = """for(size_t a_variable = 0; a_variable < 100; a_variable *= 2)$/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo test Hinten\\nhallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo\\nhallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "a a a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blah hi hulla end hu hi hub hulla"$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub"$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub.h"$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha defa\\ndefa"$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha default value default value\\nanother: default value mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin do snap stdin.h do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin snip stdin.h snip"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdin.h stdin.c\\ntest stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdinend"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world world\\nanother: world mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world\\nworld"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hal\\nhal"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "halhups\\nhalhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Hinten\\nhallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo du hallo du hallo du hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch ahiuch_end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch auchih_end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch hinoauch_end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch noauchab_end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo welt\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo weltelt "$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nVorne hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nagain\\nhallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo Hinten"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "this is it this is it this is it"$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ups hallo hallo blah"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = ($/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend"$/;"	v	class:CursorMovement_BS_InEditMode
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab blub tab " + JF + "hallothis"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExiting_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo this"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab\\nblub this\\n" + JF + "testhallo"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello" + JF + "hallo tab blub this"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "text"$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "thhallo\\nweltis thhallo\\nweltis"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = ($/;"	v	class:CursorMovement_Multiline_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = JF + "hallo\\nhello tab\\nblub this"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case1"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test snippet!"$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is another test."$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is yet another test."$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "abc az test"$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "foo-bar test bar\\t\\nfoo-bar test"$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "re-test"$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "This is a test."$/;"	v	class:ParseSnippets_ClearOne
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x a bob b y\\nx a jon b y"$/;"	v	class:ParseSnippets_Global_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x first a bob b y"$/;"	v	class:ParseSnippets_Global_Local_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktrace
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
wanted	plugged/ultisnips/test/test_Plugin.py	/^    wanted = "longtextlongtext\\nlongtextlongtext\\nHello"$/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A AB B C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A C CD D DE E B again B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END -> hallo\\n" "M END -> end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    hallo M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\nM START\\n\\nM END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST  JSThi ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST JSThi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ Just some Texthi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] hallo ]ups world ]end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] sec ] hallo ]end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a hallo ]ups world ]end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a sec ] hallo ]world"$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  sec ]  world ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]  sec ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]ups  end ]"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three three two ] four ]end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three two ] four ]end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\n[ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\nhello again [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = ($/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = """for ($k = 0; $k < count; $k++) {$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = """for ($k = 0; $k < count; $k++) {$/;"	v	class:OldSelection_RealWorldCase_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:_SelectModeMappings
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:OldSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """<option value="some">not<\/option>ende"""$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """<option value="some">some<\/option>ende"""$/;"	v	class:snipMate_TestMirrorsInPlaceholders
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = """\/*$/;"	v	class:snipMate_Issue658
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a stand alone snippet\\nThis is two stand alone snippet\\nThree"$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet"$/;"	v	class:snipMate_SimpleSnippetSubDirectory
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet\\n# With a comment"$/;"	v	class:snipMate_SimpleSnippet
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blah"$/;"	v	class:snipMate_Extends
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blah"$/;"	v	class:snipMate_TestNoBraceTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blub, blah is blah"$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub\\n\\nblah\\n"$/;"	v	class:snipMate_EmptyLinesContinueSnippets
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "for (j; j < blub; blub++) {\\n\\thi\\n}"$/;"	v	class:snipMate_TestMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "h$${2:blub}$$hi"$/;"	v	class:snipMate_NoNestedTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hblablubb"$/;"	v	class:snipMate_Visual_Simple
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX + "\\nworked"$/;"	v	class:snipMate_OtherFiletype
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX$/;"	v	class:snipMate_Disabled
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "lac03lu"$/;"	v	class:snipMate_Interpolation
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "laöäülu"$/;"	v	class:snipMate_InterpolationWithSystem
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "two"$/;"	v	class:snipMate_MultiMatches
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "ultisnips"$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_CanModifyParentBody
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_EnsureIndent
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_MoveVisual
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """1 {$/;"	v	class:SnippetActions_UseCorrectJumpActions
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """1, 2"""$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """debug(test(some(complex(cond(a)))))$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if not blah: pass"""$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if some_check(1, 2, 3) or 4: 5"""$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if x:$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """if x:$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """import smthing$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """some context$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """some_wrapper(wrapme(2, 1)3): 4"""$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = """totally_different(2, 1)3"""$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "1: 1\\n2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "[(1)2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "\\nabc"$/;"	v	class:SnippetActions_PreActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "abc\\n"$/;"	v	class:SnippetActions_PostActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "def123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " self."$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = """\\t\\thi$/;"	v	class:No_Tab_Expand_RealWorld
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "$Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "-Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWordSnippet_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_WithSpace
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "[[Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_No_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a(Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "abc test Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "self."$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test No match"$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test fedcab"$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "ßßExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Hallo"$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Should only expand in p.\\ntest" + EX$/;"	v	class:SnippetPriorities_ClearedByChild
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite\\nNo overwrite"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "again"$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_ClearedByParent
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div allaway>\\n  Third Last\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div blah>\\n  Hallo\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="no">\\n  End\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="some_id">\\n  \\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div id="yes">\\n  Begin Hi\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<div>\\n  Hallo\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """<divSomethingElse>\\n  Nupl  Nox\\n<\/div>"""$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """halongertextblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """haoverwriteblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """haupsblEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """hoverwritelEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = """hupslEnd"""$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo haselnhipsut upsend"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo: Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: blub\\nTrailing texthello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: snippet start\\nNested tabstop: hello\\nsnippet end\\nTrailing text"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "This \\\\ is a backslash!"$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "[ HelloWorld ] Hello"$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "\\n${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "a${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "each_byte { |byte| Blah }"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "echo Hallo"$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah Lets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah mitteLets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Du Nase na"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Hi" + 2 * JF + "du Test"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test mitte BeginningHi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo na Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi  Nothing  Nothing world"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Blah Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing Nothing world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing world"$/;"	v	class:TabStop_Multiline_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second second"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip "$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip default"$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip i"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "nothing ship hups"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip $0 $hi end"$/;"	v	class:TabStop_EscapingCharsDollars
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip ` literal"$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "test run"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "tt\\nt{\\n\\tt\\n}"$/;"	v	class:TabStop_CROnlyOnSelectedNear
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "usage: `basename $0` [ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "world = require('WORLD')End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "world = require(WORLD)End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "* test\\n* test\\n* test"$/;"	v	class:Transformation_OptionMultiline_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "HALLO hallo"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "Hallo hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "SomE tExt SOME TEXT \\nsome text "$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "TEST blah"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a b  c d e f ghhh h oha a b  c d e f ghhh h..."$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some more text began with an a"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some yes"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice,   building a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice, building a-nice-building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes:no)"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "ab no\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "b some no"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "dead parrot this parrot is a bit dead"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "foo boo aoo foo bull aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo .\\nhallo- >\\nhallo-> "$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo HALLO"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo Hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo foo boy hallo batzl boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingb"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH ahiuchauch_end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH auchauchih_end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH hinoauchnoauch_end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH noauchnoauchab_end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  m2  hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip m1  hi "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip matched hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext defined sometext"$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\nhallo"$/;"	v	class:Transformation_CINewlines_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\thallo"$/;"	v	class:Transformation_CITabstop_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, halul test, ha(ul)"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEUR"$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieur"$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi1$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi1$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = """my snipped hi;$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "abc simple expand"$/;"	v	class:AddFunc_Simple
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "blumba" + EX + "\\n" + "this is a dynamic snippet" + "\\n" + "blumba" + EX$/;"	v	class:AddNewSnippetSource
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "simple expand"$/;"	v	class:AddFunc_Opt
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "test41123'êabc0"$/;"	v	class:VerifyVimDict1
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "\\tbhlablbub"$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone"$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "bhlablubb"$/;"	v	class:Visual_SelectOneWord_Inword
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "bla hblub\\n  hellobi"$/;"	v	class:Visual_CrossOneLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformation_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hHELLO\\n NICE\\n WORLDb"$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hWORLDbhi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "h\/\/ bodybhi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbabc"$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefHELLO\\n    NICE\\n    WORLDaftbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefhello\\n    nice\\n    worldaftbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeahello\\n\\tnice\\n\\tworldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablub\\nb"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:Visual_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb\\nhb"$/;"	v	class:Visual_ExpandTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbblabluba"$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbhello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhello\\n nice\\n worldb"$/;"	v	class:Visual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhellob"$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hnblablub\\nmmmbdone"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hupsbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hworldbhi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}"$/;"	v	class:Visual_LineSelect_DedentLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyybyxxx"$/;"	v	class:Visual_SelectOneWordExclusive
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyyybxxx"$/;"	v	class:Visual_SelectOneWordInclusive
wanted	plugged/ultisnips/test/vim_test_case.py	/^    wanted = ""$/;"	v	class:VimTestCase
warn_return_any	plugged/ultisnips/mypy.ini	/^warn_return_any = True$/;"	k	section:mypy
warn_unused_configs	plugged/ultisnips/mypy.ini	/^warn_unused_configs = True$/;"	k	section:mypy
webDevIconsBytesLen	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def webDevIconsBytesLen():$/;"	f
webDevIconsGetFileTypeSymbol	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def webDevIconsGetFileTypeSymbol(file, isdir=False):$/;"	f
webDevIconsStrLen	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def webDevIconsStrLen():$/;"	f
webDevIconsString	plugged/LeaderF/autoload/leaderf/python/leaderf/devicons.py	/^def webDevIconsString():$/;"	f
webdevicons	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons(pl, segment_info):$/;"	f
webdevicons#hardRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#hardRefresh()$/;"	f
webdevicons#pluginHome	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#pluginHome()$/;"	f
webdevicons#refresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#refresh()$/;"	f
webdevicons#softRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#softRefresh()$/;"	f
webdevicons#version	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#version()$/;"	f
webdevicons_conceal_nerdtree_brackets	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_conceal_nerdtree_brackets$/;"	a
webdevicons_cursor_hold	plugged/vim-devicons/plugin/webdevicons.vim	/^    augroup webdevicons_cursor_hold$/;"	a
webdevicons_file_format	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons_file_format(pl, segment_info):$/;"	f
webdevicons_flagship_filesymbol	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filesymbol$/;"	a
webdevicons_flagship_filetype	plugged/vim-devicons/autoload/devicons/plugins/flagship.vim	/^    augroup webdevicons_flagship_filetype$/;"	a
weight	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^        weight_t weight;$/;"	m	union:FeResult::__anon07ea32bd010a	typeref:typename:weight_t	file:
weight_t	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^typedef float weight_t;$/;"	t	typeref:typename:float	file:
weights	plugged/LeaderF/autoload/leaderf/fuzzyMatch_C/fuzzyEngine.c	/^        weight_t* weights;$/;"	m	union:PySetTaskItem::__anon07ea32bd020a	typeref:typename:weight_t *	file:
which	plugged/onedark.vim/build/package-lock.json	/^        "which": "^2.0.1"$/;"	s	object:dependencies.cross-spawn.requires
which	plugged/onedark.vim/build/package-lock.json	/^    "which": {$/;"	o	object:dependencies
which-pm-runs	plugged/onedark.vim/build/package-lock.json	/^        "which-pm-runs": "^1.0.0"$/;"	s	object:dependencies.husky.requires
which-pm-runs	plugged/onedark.vim/build/package-lock.json	/^    "which-pm-runs": {$/;"	o	object:dependencies
which_key#char_handler#is_exit_code	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#is_exit_code(raw_char) abort$/;"	f
which_key#char_handler#parse_raw	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#parse_raw(raw_char)$/;"	f
which_key#char_handler#timeout_for_next_char	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#timeout_for_next_char() abort$/;"	f
which_key#char_handler#wait_with_timeout	plugged/vim-which-key/autoload/which_key/char_handler.vim	/^function! which_key#char_handler#wait_with_timeout() abort$/;"	f
which_key#error#missing_mapping	plugged/vim-which-key/autoload/which_key/error.vim	/^function! which_key#error#missing_mapping() abort$/;"	f
which_key#error#report	plugged/vim-which-key/autoload/which_key/error.vim	/^function! which_key#error#report(err_msg) abort$/;"	f
which_key#error#undefined_key	plugged/vim-which-key/autoload/which_key/error.vim	/^function! which_key#error#undefined_key(key) abort$/;"	f
which_key#format	plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#format(mapping) abort$/;"	f
which_key#get_sep	plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#get_sep() abort$/;"	f
which_key#mappings#parse	plugged/vim-which-key/autoload/which_key/mappings.vim	/^function! which_key#mappings#parse(key, dict, visual) " {{{$/;"	f
which_key#parse_mappings	plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#parse_mappings() " {{{$/;"	f
which_key#register	plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#register(prefix, dict) abort$/;"	f
which_key#renderer#get_displaynames	plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! which_key#renderer#get_displaynames()$/;"	f
which_key#renderer#prepare	plugged/vim-which-key/autoload/which_key/renderer.vim	/^function! which_key#renderer#prepare(runtime) abort$/;"	f
which_key#start	plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#start(vis, bang, prefix) " {{{$/;"	f
which_key#statusline	plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#statusline() abort$/;"	f
which_key#trigger	plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#trigger() abort$/;"	f
which_key#wait_for_input	plugged/vim-which-key/autoload/which_key.vim	/^function! which_key#wait_for_input() " {{{$/;"	f
which_key#window#close	plugged/vim-which-key/autoload/which_key/window.vim	/^function! which_key#window#close() abort$/;"	f
which_key#window#name	plugged/vim-which-key/autoload/which_key/window.vim	/^function! which_key#window#name() abort$/;"	f
which_key#window#show	plugged/vim-which-key/autoload/which_key/window.vim	/^function! which_key#window#show(runtime) abort$/;"	f
which_key_cursor	plugged/vim-which-key/autoload/which_key/window.vim	/^  augroup which_key_cursor$/;"	a
which_key_leave	plugged/vim-which-key/autoload/which_key/window.vim	/^    augroup which_key_leave$/;"	a
whitespace	plugged/vim-airline/README.md	/^#### whitespace$/;"	t
widget_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_attributes = {$/;"	v
widget_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_role = [$/;"	v
widget_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'grid/;"	v
width	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def width(self):$/;"	m	class:FloatWindow
width	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def width(self):$/;"	m	class:PopupWindow
win	plugged/vim-quickui/test/test_nvim_popup.vim	/^let win = nvim_open_win(buf, 0, opts)$/;"	v
window	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def window(self):$/;"	m	class:FloatWindow
window	plugged/LeaderF/autoload/leaderf/python/leaderf/instance.py	/^    def window(self):$/;"	m	class:LfInstance
windowExplManager	plugged/LeaderF/autoload/leaderf/python/leaderf/windowExpl.py	/^windowExplManager = WindowExplManager()$/;"	v
winid	plugged/vim-quickui/autoload/quickui/textbox.vim	/^	let winid = quickui#textbox#open(lines, opts)$/;"	v
word-wrap	plugged/onedark.vim/build/package-lock.json	/^        "word-wrap": "^1.2.3"$/;"	s	object:dependencies.optionator.requires
word-wrap	plugged/onedark.vim/build/package-lock.json	/^    "word-wrap": {$/;"	o	object:dependencies
workingDirectory	plugged/LeaderF/autoload/leaderf/python/leaderf/rgExpl.py	/^def workingDirectory(func):$/;"	f
wrap	plugged/ncm2-ultisnips/ncm2-plugin/ncm2_ultisnips.py	/^def wrap():$/;"	f
wrap	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def wrap(func):$/;"	f
wrapper	plugged/LeaderF/autoload/leaderf/python/leaderf/manager.py	/^    def wrapper(func):$/;"	f	function:ignoreEvent	file:
wrapper	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:wrap	file:
wrappy	plugged/onedark.vim/build/package-lock.json	/^        "wrappy": "1"$/;"	s	object:dependencies.inflight.requires
wrappy	plugged/onedark.vim/build/package-lock.json	/^        "wrappy": "1"$/;"	s	object:dependencies.once.requires
wrappy	plugged/onedark.vim/build/package-lock.json	/^    "wrappy": {$/;"	o	object:dependencies
write	plugged/onedark.vim/build/package-lock.json	/^        "write": "1.0.3"$/;"	s	object:dependencies.flat-cache.requires
write	plugged/onedark.vim/build/package-lock.json	/^    "write": {$/;"	o	object:dependencies
writeHistory	plugged/LeaderF/autoload/leaderf/python/leaderf/cli.py	/^    def writeHistory(self, category):$/;"	m	class:LfCli
write_temp	plugged/ultisnips/test/vim_interface.py	/^    def write_temp(self, file_path, content):$/;"	m	class:TempFileManager
x	plugged/LeaderF/autoload/leaderf/Any.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py b:Lf_AnyExplManager."accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/BufTag.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "bufTagExplManager.accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/Buffer.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "bufExplManager.accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/File.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "fileExplManager.accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/Function.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "functionExplManager.accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/Gtags.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "gtagsExplManager.accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/Help.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "helpExplManager.accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/Line.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "lineExplManager.accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/Mru.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "mruExplManager.accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/QfLocList.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "qfloclistExplManager.accept('h')"<CR/;"	m
x	plugged/LeaderF/autoload/leaderf/Rg.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "rgExplManager.accept('h')"<CR>$/;"	m
x	plugged/LeaderF/autoload/leaderf/Tag.vim	/^    nnoremap <buffer> <silent> x             :exec g:Lf_py "tagExplManager.accept('h')"<CR>$/;"	m
x	plugged/vista.vim/test/data/123.cpp	/^	static const int x = 1;$/;"	v	namespace:foo::bar	typeref:typename:const int	file:
xml_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': /;"	v
xresources	plugged/onedark.vim/build/build.js	/^	const xresources = readFileSync(resolve(__dirname, '..\/term\/One Dark.Xresources'), 'utf8')$/;"	C
y	plugged/vista.vim/test/data/123.cpp	/^	static const int y = 2;$/;"	v	namespace:foo::bar	typeref:typename:const int	file:
yallist	plugged/onedark.vim/build/package-lock.json	/^        "yallist": "^4.0.0"$/;"	s	object:dependencies.lru-cache.requires
yallist	plugged/onedark.vim/build/package-lock.json	/^    "yallist": {$/;"	o	object:dependencies
yaml	plugged/onedark.vim/build/package-lock.json	/^        "yaml": "^1.10.0"$/;"	s	object:dependencies.cosmiconfig.requires
yaml	plugged/onedark.vim/build/package-lock.json	/^    "yaml": {$/;"	o	object:dependencies
yarp	plugged/nvim-yarp/autoload/yarp/core.vim	/^augroup yarp$/;"	a
yarp#core#_nop	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#_nop(...) dict$/;"	f
yarp#core#channel_started	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#channel_started(id, channel)$/;"	f
yarp#core#error	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#error(mod, msg)$/;"	f
yarp#core#jobstart	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#jobstart() dict$/;"	f
yarp#core#new	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#new(rp)$/;"	f
yarp#core#notify	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#notify(method, ...) dict$/;"	f
yarp#core#on_exit	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#on_exit(chan_id, data, event) dict$/;"	f
yarp#core#on_stderr	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#on_stderr(chan_id, data, event) dict$/;"	f
yarp#core#request	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#request(method, ...) dict$/;"	f
yarp#core#serveraddr	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#serveraddr()$/;"	f
yarp#core#try_notify	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#try_notify(method, ...) dict$/;"	f
yarp#core#wait_channel	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#wait_channel() dict$/;"	f
yarp#core#warn	plugged/nvim-yarp/autoload/yarp/core.vim	/^func! yarp#core#warn(mod, msg)$/;"	f
yarp#py	plugged/nvim-yarp/autoload/yarp.vim	/^func! yarp#py(module)$/;"	f
yarp#py3	plugged/nvim-yarp/autoload/yarp.vim	/^func! yarp#py3(module)$/;"	f
yarp#pyx#init	plugged/nvim-yarp/autoload/yarp/pyx.vim	/^func! yarp#pyx#init() dict$/;"	f
yarpid	plugged/nvim-yarp/pythonx/yarp.py	/^yarpid = int(sys.argv[2])$/;"	v
yats#IsInMultilineComment	plugged/vim-polyglot/autoload/yats.vim	/^function yats#IsInMultilineComment(lnum, col)$/;"	f
yats#IsLineComment	plugged/vim-polyglot/autoload/yats.vim	/^function yats#IsLineComment(lnum, col)$/;"	f
zig#config#Debug	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#Debug() abort$/;"	f
zig#config#FmtAutosave	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#FmtAutosave() abort$/;"	f
zig#config#FmtCommand	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#FmtCommand() abort$/;"	f
zig#config#FmtExperimental	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#FmtExperimental() abort$/;"	f
zig#config#FmtFailSilently	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#FmtFailSilently() abort$/;"	f
zig#config#ListAutoclose	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#ListAutoclose() abort$/;"	f
zig#config#ListHeight	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#ListHeight() abort$/;"	f
zig#config#ListType	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#ListType() abort$/;"	f
zig#config#ListTypeCommands	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#ListTypeCommands() abort$/;"	f
zig#config#SetFmtAutosave	plugged/vim-polyglot/autoload/zig/config.vim	/^function! zig#config#SetFmtAutosave(value) abort$/;"	f
zig#fmt#Format	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! zig#fmt#Format() abort$/;"	f
zig#fmt#ToggleFmtAutoSave	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! zig#fmt#ToggleFmtAutoSave() abort$/;"	f
zig#fmt#run	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! zig#fmt#run(bin_name, target)$/;"	f
zig#fmt#update_file	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! zig#fmt#update_file(target)$/;"	f
zig#list#Clean	plugged/vim-polyglot/autoload/zig/list.vim	/^function! zig#list#Clean(listtype) abort$/;"	f
zig#list#Close	plugged/vim-polyglot/autoload/zig/list.vim	/^function! zig#list#Close(listtype) abort$/;"	f
zig#list#Get	plugged/vim-polyglot/autoload/zig/list.vim	/^function! zig#list#Get(listtype) abort$/;"	f
zig#list#JumpToFirst	plugged/vim-polyglot/autoload/zig/list.vim	/^function! zig#list#JumpToFirst(listtype) abort$/;"	f
zig#list#Parse	plugged/vim-polyglot/autoload/zig/list.vim	/^function! zig#list#Parse(listtype, items, title) abort$/;"	f
zig#list#ParseFormat	plugged/vim-polyglot/autoload/zig/list.vim	/^function! zig#list#ParseFormat(listtype, errformat, items, title) abort$/;"	f
zig#list#Populate	plugged/vim-polyglot/autoload/zig/list.vim	/^function! zig#list#Populate(listtype, items, title) abort$/;"	f
zig#list#Type	plugged/vim-polyglot/autoload/zig/list.vim	/^function! zig#list#Type(for) abort$/;"	f
zig#list#Window	plugged/vim-polyglot/autoload/zig/list.vim	/^function! zig#list#Window(listtype, ...) abort$/;"	f
zig#util#EchoError	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#EchoError(msg)$/;"	f
zig#util#EchoInfo	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#EchoInfo(msg)$/;"	f
zig#util#EchoProgress	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#EchoProgress(msg)$/;"	f
zig#util#EchoSuccess	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#EchoSuccess(msg)$/;"	f
zig#util#EchoWarning	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#EchoWarning(msg)$/;"	f
zig#util#Exec	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#Exec(cmd, ...) abort$/;"	f
zig#util#GetLines	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#GetLines()$/;"	f
zig#util#HasDebug	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#HasDebug(flag)$/;"	f
zig#util#IsMac	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#IsMac() abort$/;"	f
zig#util#IsUsingCygwinShell	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#IsUsingCygwinShell()$/;"	f
zig#util#IsWin	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#IsWin() abort$/;"	f
zig#util#Join	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#Join(...) abort$/;"	f
zig#util#LineEnding	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#LineEnding() abort$/;"	f
zig#util#Offset	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#Offset(line, col) abort$/;"	f
zig#util#OffsetCursor	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#OffsetCursor() abort$/;"	f
zig#util#PathListSep	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#PathListSep() abort$/;"	f
zig#util#PathSep	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#PathSep() abort$/;"	f
zig#util#ShellError	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#ShellError() abort$/;"	f
zig#util#Shellescape	plugged/vim-polyglot/autoload/zig/util.vim	/^fu! zig#util#Shellescape(arg)$/;"	f
zig#util#Shelljoin	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#Shelljoin(arglist, ...) abort$/;"	f
zig#util#Shelllist	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#Shelllist(arglist, ...) abort$/;"	f
zig#util#StripPathSep	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#StripPathSep(path) abort$/;"	f
zig#util#StripTrailingSlash	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#StripTrailingSlash(paths) abort$/;"	f
zig#util#System	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#System(str, ...) abort$/;"	f
zig#util#Windo	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#Windo(command) abort$/;"	f
zig#util#camelcase	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#camelcase(word) abort$/;"	f
zig#util#env	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#env(key) abort$/;"	f
zig#util#has_job	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#has_job(...) abort$/;"	f
zig#util#pascalcase	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#pascalcase(word) abort$/;"	f
zig#util#snakecase	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#snakecase(word) abort$/;"	f
zig#util#snippetcase	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#snippetcase(word) abort$/;"	f
zig#util#tempdir	plugged/vim-polyglot/autoload/zig/util.vim	/^function! zig#util#tempdir(prefix) abort$/;"	f
{{	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{ {{}}<left><left>$/;"	m
{{!	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{! {{!}}<left><left>$/;"	m
{{#	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{# {{#}}<cr>{{\/}}<up><left><left>$/;"	m
{{<	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{< {{<}}<left><left>$/;"	m
{{>	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{> {{>}}<left><left>$/;"	m
{{if	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{if {{#if }}<cr>{{\/if}}<up><left>$/;"	m
{{ife	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{ife {{#if }}<cr>{{else}}<cr>{{\/if}}<up><up><left>$/;"	m
{{{	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{{ {{{}}}<left><left><left>$/;"	m
